{"aid": "40049203", "title": "cwASIO: Alterative ASIO SDK Implementation", "url": "https://github.com/s13n/cwASIO", "domain": "github.com/s13n", "votes": 1, "user": "chabad360", "posted_at": "2024-04-16 07:20:56", "comments": 0, "source_title": "GitHub - s13n/cwASIO: cwASIO SDK", "source_text": "GitHub - s13n/cwASIO: cwASIO SDK\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\ns13n / cwASIO Public\n\n  * Notifications\n  * Fork 0\n  * Star 1\n\ncwASIO SDK\n\n### License\n\nMIT license\n\n1 star 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# s13n/cwASIO\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\ns13nreplace nullptr with NULL7ee749d \u00b7\n\n## History\n\n20 Commits  \n  \n### src\n\n|\n\n### src\n\n| replace nullptr with NULL  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Add CMake build support  \n  \n### CMakeLists.txt\n\n|\n\n### CMakeLists.txt\n\n| Make compatible with CMake 3.20 (for VS2019 support)  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Documentation update  \n  \n### README.md\n\n|\n\n### README.md\n\n| Documentation update  \n  \n## Repository files navigation\n\n# cwASIO\n\nThe cwASIO SDK (\"compatible with ASIO\", pronounced kway-zee-oh) is an\nalternative implementation of an SDK for the ASIO driver API originally\ndefined by Steinberg^1. The cwASIO SDK is an independent implementation that\nis compatible with the driver API of ASIO, while supporting it on Linux, in\naddition to the native Windows implementation of ASIO. This allows building\nportable audio applications that work on both operating systems.\n\nBy using cwASIO, audio applications can be built that don't depend on the ASIO\nSDK from Steinberg, and therefore aren't bound to its license. Those\napplications can be made portable between Linux and Windows.\n\ncwASIO works with existing ASIO device drivers on Windows. It supports\nenumeration of ASIO devices registered in the Windows registry. On Linux, the\ndriver interface consists of a set of functions exported by a dynamically\nloaded shared object file, with a functionality that matches that on Windows.\n\nThe COM-based interface on Windows requires C++, whereas the Linux interface\nis C-based.\n\n## Using cwASIO\n\nFor building a host application, cwASIO can be used as a library to link to,\nor as a set of source files to integrate into the host application build\nprocess. Using CMake makes this easy, as cwASIO contains the necessary\nCMakeLists.txt files.\n\n### Linking to the cwASIO library\n\nTBC\n\n### Integrating the sources into the host build\n\nThis uses the FetchContent module of CMake to fetch the cwASIO sources, and\nmake them a part of the host application build.\n\n## Compatible API\n\nThe compatible API attempts to mimick the original ASIO API closely, so that\napplications that have been built with the original ASIO SDK can change to\ncwASIO with minimal effort. This applies to the core API, not the OS-specific\ndriver enumeration interface. This same API is also available on Linux.\n\nThe compatible API is declared in cwASIO.h. It holds hidden global state so\nthe application can only have one driver loaded at any time, a restriction\nthat it shares with the original ASIO SDK.\n\nThis API is a thin C wrapper around the native API on each platform.\n\n## Native API\n\nYou don't need to use the compatible API, there can be good reasons to use the\nnative API. The most immediate benefit is the possibility of loading and using\nseveral drivers simultaneously. The native API is specific to cwASIO and is\nnot meant to be a drop-in replacement for the original ASIO API.\n\nThe native API is similar, but different between Linux and Windows, because on\nWindows it is based on a COM interface, while on Linux it is based on the\nexported functions of a shared object file. The functionality is the same, so\nit should not be difficult to accommodate either in a portable application.\n\nThe Windows native API is declared in cwASIOifc.hpp. It is a C++ interface for\nuse with a Microsoft Visual Studio toolset (other compilers are untested at\npresent, but might work).\n\nThe Linux native API is declared in cwASIOifc.h. It is a C interface that can\nbe used in C++ when included inside an extern \"C\" { ... } bracket.\n\n## Enumerating devices\n\nEnumerating must be done with the native API, and is not compatible with ASIO.\nBoth native APIs have the same enumerating function, which is therefore\nportable. It consists of a single function cwASIOenumerate(), which accepts a\ncallback that is called for each driver that was found installed in the\nsystem.\n\nEnumerating works by scanning through the registration database (The registry\non Windows, or the /etc/cwASIO directory on Linux) and calling the callback\nonce for each entry found. Three strings are being passed to the callback per\nentry: The driver name, the driver loading id, and the driver description. On\nWindows, the loading id is a CLSID, which is a GUID that can be resolved to\nthe driver DLL to load. On Linux, the loading id is the path to the driver's\nshared object file.\n\nNote that you enumerate the installed drivers, not the audio devices that are\nactually connected and ready to be used! Whether an audio device is present\nand operable can only be determined once its driver is loaded.\n\n## Footnotes\n\n  1. ASIO is a trademark of Steinberg Media Technologies GmbH. \u21a9\n\n## About\n\ncwASIO SDK\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n1 star\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * C 67.9%\n  * C++ 27.9%\n  * CMake 4.2%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
