{"aid": "40062098", "title": "Gleam Version v1.1", "url": "https://gleam.run/news/gleam-v1.1/", "domain": "gleam.run", "votes": 3, "user": "sondr3", "posted_at": "2024-04-17 08:56:16", "comments": 0, "source_title": "Gleam version v1.1 \u2013 Gleam", "source_text": "Gleam version v1.1 \u2013 Gleam\n\n# Gleam version v1.1\n\nHot on the heels of v1\n\nPublished 16 Apr, 2024 by Louis Pilfold\n\nGleam is a type safe and scalable language for the Erlang virtual machine and\nJavaScript runtimes. Today Gleam v1.1.0 has been published, just a month after\nv1.0.0. There\u2019s loads of new stuff in this release, so take a look at some of\nwhat\u2019s new!\n\n## Language server improvements\n\nProductivity and developer experience is a first class concern to us, and in a\nmodern language good editor support is an important part of the puzzle. To\nhelp Gleam has a built-in language server which is developed and maintained by\nthe core team. The language server is relatively immature compared to the rest\nof the language\u2019s tooling, and it is one of the main focuses for core\ndevelopment at the moment.\n\nIt has been improved in these ways:\n\n### Compilation batching\n\nThe language server is driven by messages sent by your editor each time a file\nis opened, code is edited, autocompletions are needed, and so on. When\nmessages are received the language server runs the compiler (minus the codegen\nsections) to get information about the code.\n\nThe language server now batches theses messages intelligently, compiling when\nrequired rather than on every message. For example, if your editor rapidly\nsends several text edits and then a request for refactorings the language\nserver will now apply all the edits to its in-memory filesystem overlay before\ncompiling a single time. If you are using a faster computer you likely will\nsee no difference, but if you\u2019re using a slower computer or in a very large\nproject you\u2019ll no longer experience a delay before getting feedback from the\nlanguage server.\n\n### Autocomplete imports\n\nThe language server will now autocomplete module names when writing import\nstatements. Thank you Ameen Radwan for this improvement!\n\n### Global goto definition\n\nGleam\u2019s language server previously supported go-to definition for values\ndefined in the top-level package, but with this release it also works for\nvalues defined in dependency packages too. Thank you Ameen Radwan again!\n\n## Bun support\n\nGleam compiles to JavaScript as well as Erlang, and there are multiple popular\noptions for running JavaScript code on the command line. Gleam supports the\nNodeJS and Deno runtimes, and with v1.1.0 Bun support has been added too!\n\nTo use Bun either add javascript.runtime key to your gleam.toml, or add the\n--runtime=bun flag to your gleam run or gleam test command.\n\n    \n    \n    name = \"app\" version = \"1.0.0\" target = \"javascript\" [javascript] runtime = \"bun\"\n\nThank you gubsey for this feature.\n\n## Rebar support\n\nRebar3 is the standard Erlang build tool but some projects use the older build\ntool rebar (without the 3). Rebar3 has some amount of backwards compatibility\nwith rebar and can build a typical rebar project, so with this release Gleam\nwill now use rebar3 to build any rebar packages added as dependencies. This is\nenough to use all rebar packages we\u2019ve found on the package manager so far.\n\nThank you Isaac Harris-Holt for this feature!\n\n## Formatter improvements\n\nGiacomo Cavalieri the pretty-printing wizard has been hard at work improving\nthe formatter and fixing bugs. One highlight is that the formatter will now\nsort groups of imports into alphabetical order automatically.\n\nJuho Eerola also improved support for non-\\n newlines in the formatter,\ncausing them to be converted to \\n rather than discarding them, which\npreviously resulted in some empty lines being removed.\n\n## Clearer dependency requirements\n\nGleam uses the Hex package manager, and Hex specifies a syntax for version\nconstraints. The syntax ~> 1.0, which means >= 1.0.0 and < 2.0.0, and Gleam\nwould use this in your gleam.toml when adding a dependency with gleam add.\n\nThis syntax was very commonly misunderstood by people, and often would be\nconfused for the ~> 1.0.0 syntax, which looks very similar but does something\ndifferent and undesirable. To avoid this repeated confusion the longer and\neasier to understand syntax is now used instead.\n\n## JavaScript list optimisation\n\nJulian Schurhammer identified and implemented an optimisation for prepending\nto a list on the JavaScript target. List prepending is extremely common in\nGleam, so optimisations here have a big impact. Once applied running the\nstandard library test suite went from ~3.0 seconds to ~2.4 seconds. Thank you\nJulian!\n\n    \n    \n    # before 2.98s user 0.37s system 135% cpu 2.471 total 2.85s user 0.37s system 133% cpu 2.409 total 3.00s user 0.39s system 134% cpu 2.516 total # after 2.37s user 0.35s system 132% cpu 2.048 total 2.33s user 0.37s system 134% cpu 2.009 total 2.38s user 0.36s system 134% cpu 2.034 total\n\n## Internal types and values\n\nGleam has a concept of internal modules, which are modules that are only to be\nused from within the same package. With this release the @internal attribute\ncan be used to make a type or value internal in a module that is otherwise\nnot-internal. This may be helpful for exposing functionality so that it can be\ndirectly tested, while not making it part of the package\u2019s public API.\n\nThank you Giacomo Cavalieri for this feature!\n\n## Dead code elimination\n\nGleam packages can be cross-target and work on both Erlang and JavaScript.\nThese packages may have target specific dependencies which are only used on\none target or the other.\n\nThe compiler now performs more aggressive dead-code elimination and will\nremove any code that is unreachable for the target that is currently being\nused.\n\n## Better package validation\n\nSince v1.0.0 the number of Gleam packages has really taken off, new ones being\npublished every day.\n\nWe don\u2019t just want a healthy number of packages, we also want to ensure that\nGleam packages are as high quality as possible. With this release we have some\nmore things that we will be checking packages for before publishing, to catch\ncommon mistakes.\n\nThe gleam.toml project file includes the location of the source code\nrepository for the package. Sometimes folks would make typos or forget to make\nthe repository public, making the documentation\u2019s links there unusable. When\npublishing Gleam will now make a request to this URL to ensure it loads\nsuccessfully.\n\nThe Hex package manager has rules against name squatting, and empty packages\npublished to reserve a name may be removed. Gleam now checks to make sure that\nblank packages are not published, and warns the publisher this is against the\nHex terms of service.\n\n## Improved diagnostics\n\nGleam\u2019s warnings and errors try to be as helpful as possible, hopefully making\nit clear how your code can be improved. Several improved error messages and\nnew warnings have been added:\n\nA case expression in Gleam can pattern match on multiple subjects at once.\nFolks may not be aware of this and may instead wrap multiple values in a\nredundant tuple as would be required in some other languages. This now causes\na warning to be emitted:\n\nIn a future release the language server will have a code-action to remove this\nfor you.\n\nAnother new warning is this one that is emitted when a literal expression or a\nside-effect free expression is not used. This helps the programmer catch dead\ncode, and possibly also identify problems such as the missing <> in the\nexample here:\n\nAnd lastly, an example of an improved error. One mistake people unfamiliar\nwith immutable linked lists might make is to attempt to append to a list using\nthe list syntax. This syntax only works for prepending as prepending is fast,\nwhile appending is slow.\n\nThank you Giacomo Cavalieri for these improvements!\n\n## Improved tuple parsing\n\nTuples can be indexed into using the .0, .1, .2, etc syntax, but with previous\nversions of the parser indexing into nested tuples like tuple.0.2 would not\nparse successfully. Thank you to Nikita Sobolev for fixing this problem!\n\n## And the rest\n\nThat\u2019s enough for this post, but there\u2019s lots more. If you\u2019d like to see all\nthe changes for this release check out the changelog in the git repository.\n\n## Thanks\n\nGleam is made possible by the support of all the kind people and companies who\nhave very generously sponsored or contributed to the project. Thank you all!\n\nIf you like Gleam consider sponsoring or asking your employer to sponsor Gleam\ndevelopment. I work full time on Gleam and your kind sponsorship is how I pay\nmy bills!\n\nAlternatively consider using our referral link for CodeCrafters, who have\nrecently launched a course on implementing Redis in Gleam. Use your training\nbudget to learn and to support Gleam too!\n\n  * 0fie\n  * 0riginaln0\n  * Aaron Gunderson\n  * Abdulrhman Alkhodiry\n  * ad-ops\n  * Adam Brodzinski\n  * Adam Johnston\n  * Adi Iyengar\n  * Aiden Fox Ivey\n  * Airradda\n  * Ajit Krishna\n  * aldrin-ronco\n  * Alembic\n  * Alex Manning\n  * Alexander Koutmos\n  * Alexander Stensrud\n  * Alexandre Del Vecchio\n  * Alivy\n  * Ameen Radwan\n  * AndreHogberg\n  * Andrew Kachnic\n  * Andr\u00e9 Mazoni\n  * Andy Aylward\n  * Anthony Bullard\n  * Anthony Khong\n  * Anthony Scotti\n  * Arnaud Berthomier\n  * Arnav K\n  * Artem Solomatin\n  * Arthur Weagel\n  * Austin Miller\n  * Avraam \u201cMakis\u201d Marimpis\n  * Barry Moore\n  * Ben Marx\n  * Ben Myles\n  * Benjamin Peinhardt\n  * Benjamin Thomas\n  * Bill Nunney\n  * Brad Lewis\n  * Bram Vanbilsen\n  * Brett Cannon\n  * brettkolodny\n  * Brian Corbin\n  * Brian Dawn\n  * Brian Glusman\n  * Bruno Michel\n  * bucsi\n  * bwireman\n  * Carlo Munguia\n  * Carlos Saltos\n  * catapillie\n  * Chad Selph\n  * Charlie Govea\n  * Chaz Watkins\n  * Chen Tao\n  * Chew Choon Keat\n  * Chris Birster\n  * Chris Donnelly\n  * Chris King\n  * Chris Lloyd\n  * Chris Ohk\n  * Chris Rybicki\n  * Christopher Dieringer\n  * Christopher Keele\n  * clangley\n  * Clay\n  * Cleo\n  * CodeCrafters\n  * Coder\n  * Cole Lawrence\n  * Colin\n  * Comamoca\n  * Cristine Guadelupe\n  * Damir Vandic\n  * Dan Dresselhaus\n  * Daniel\n  * Danielle Maywood\n  * Danik Vitek\n  * Danny Arnold\n  * Danny Martini\n  * darenc\n  * Darshak Parikh\n  * Dave Lucia\n  * David Bernheisel\n  * David Flanagan\n  * David Legrand\n  * David Sancho\n  * Dennis Dang\n  * dennistruemper\n  * dependabot[bot]\n  * desk7\n  * Dezhi Wu\n  * Dhuds1\n  * Dillon Mulroy\n  * Dimitrii Dulgher\n  * Divya Jain\n  * Dmitry Poroh\n  * Dmytro Utkin\n  * domnantas\n  * ds2600\n  * Edon Gashi\n  * eli\n  * Elie Labeca\n  * Elliott Pogue\n  * Emma\n  * EMR Technical Solutions\n  * Endercheif\n  * Erik Lilja\n  * Erik Terpstra\n  * ErikML\n  * Ernesto Malave\n  * F. Schwalbe\n  * Felix Mayer\n  * Fernando Farias\n  * Filip Figiel\n  * Fionn Langhans\n  * fitv\n  * Florian Kraft\n  * fly.io\n  * Georg H. Ekeberg\n  * Giacomo Cavalieri\n  * Graeme Coupar\n  * grotto\n  * gubsey\n  * Guilherme de Maio\n  * Guillaume Hivert\n  * Hamir Mahal\n  * Hammad Javed\n  * Hampus Kraft\n  * Hannes Schnaitter\n  * Hayes Hundman\n  * Hayleigh Thompson\n  * Hazel Bachrach\n  * Henning Dahlheim\n  * Henry Firth\n  * Henry Warren\n  * Hex\n  * human154\n  * Humberto Piaia\n  * Ian Gonzalez\n  * Igor Rumiha\n  * Ikko Eltociear Ashimine\n  * inoas\n  * Isaac Adewumi\n  * Isaac Harris-Holt\n  * Ismael Abreu\n  * Ivar Vong\n  * Iztok Fister Jr\n  * J. Rinaldi\n  * Jacob Fenton\n  * Jacob Lamb\n  * James Birtles\n  * James MacAulay\n  * Jan Skriver S\u00f8rensen\n  * Jaxon Carelos\n  * Jean-Luc Geering\n  * Jean-Nicolas Veigel\n  * Jen Stehlik\n  * jiangplus\n  * JimpjorpsTM\n  * Jiri Luzny\n  * Joey Kilpatrick\n  * Johan Strand\n  * John Bj\u00f6rk\n  * John Pavlick\n  * Jonas Hedman Engstr\u00f6m\n  * Josef Richter\n  * Josh\n  * Josh Gillies\n  * Joshua Steele\n  * Juho Eerola\n  * Julian Schurhammer\n  * Kero van Gelder\n  * Kieran Gill\n  * kodumbeats\n  * Kramer Hampton\n  * Kry\u0161tof \u0158ez\u00e1\u010d\n  * Krzysztof G.\n  * Lars Wikman\n  * Larz Conwell\n  * Leandro Ostera\n  * Leon Qadirie\n  * lidashuang\n  * LighghtEeloo\n  * Lo\u00efc Tosser\n  * Lucian Petic\n  * L\u00e9opold Hubert\n  * Manuel Jes\u00fas de la Fuente\n  * Manuel Rubio\n  * Marc\u00f8s\n  * Mariano Uvalle\n  * Marius Kalv\u00f8\n  * Mark Holmes\n  * Mark Jaquith\n  * Mark Markaryan\n  * Marshall Bowers\n  * Martin Janiczek\n  * Martin Rechsteiner\n  * Matt Champagne\n  * Matt Savoia\n  * Matt Van Horn\n  * Matthias Benkort\n  * Max\n  * Max McDonnell\n  * max-tern\n  * Maxime Bouillot\n  * Michael Davis\n  * Michael Duffy\n  * Michael Jones\n  * Michael Kieran O\u2019Reilly\n  * Michael Kumm\n  * Mike Roach\n  * Moshe Goldberg\n  * MzRyuKa\n  * n8n - Workflow Automation\n  * Nashwan Azhari\n  * Natanael Sirqueira\n  * Nathaniel Knight\n  * Nayuki\n  * NFIBrokerage\n  * Nick Chapman\n  * Nick Reynolds\n  * Nicklas Sindlev Andersen\n  * Nikita Arkhipov\n  * Nikita Sobolev\n  * NineFX\n  * Nomio\n  * Ocean Armstrong Lewis\n  * OldhamMade\n  * Ole Michaelis\n  * optizio\n  * Patrick Wheeler\n  * Paul Gideon Dann\n  * Paul Guse\n  * Pawel Biernacki\n  * Pedro Pires\n  * Pete Jodo\n  * Peter\n  * Peter Rice\n  * Peter Saxton\n  * PgBiel\n  * Philip Giuliani\n  * Piotr Szlachciak\n  * Prashant Singh Pawar\n  * qingliangcn\n  * Race Williams\n  * racerole\n  * Rahim\n  * Rahul Butani\n  * Rasmus\n  * Ra\u00fal Chouza\n  * Redmar Kerkhoff\n  * Ricardo\n  * Ricardo Fern\u00e1ndez Serrata\n  * Richard Viney\n  * Rico Leuthold\n  * Robert Attard\n  * Robert Ellen\n  * Robert Malko\n  * Roberto Trevisan\n  * Robson Gian Perassoli\n  * Ross Bratton\n  * Ross Cousens\n  * Sam Aaron\n  * Sami Fouad\n  * Sammy Isseyegh\n  * Samu\n  * Samuel Burkhardt\n  * Santi Lertsumran\n  * sarna\n  * Satoshi Yoshikawa\n  * Sa\u0161a Juri\u0107\n  * Scott Patten\n  * Scott Trinh\n  * Scott Wey\n  * Sean Jensen-Grey\n  * Sebastian\n  * sekun\n  * Sergei Suvorov\n  * Seve Salazar\n  * Shane Handley\n  * Shaun McCarthy\n  * Shuqian Hon\n  * Sidney Millen\n  * Simon Curtis\n  * Simone Vittori\n  * Siraj\n  * Skenvy\n  * star-szr\n  * Szymon Wygna\u0144ski\n  * S\u0142awomir Ehlert\n  * Theo Harris\n  * Thomas\n  * Tim Heaney\n  * Tim Morgner\n  * Timm Friebe\n  * Timo Sulg\n  * Tomasz Kowal\n  * trag1c\n  * Tristan Cacqueray\n  * Tristan Sloughter\n  * veryyet\n  * Vic Valenzuela\n  * Victor Rodrigues\n  * victorybhg\n  * Viv Verner\n  * Vladimir Kidyaev\n  * Vladislav Botvin\n  * Volker Rabe\n  * Weizheng Liu\n  * Wesley Moore\n  * wgancar\n  * Willyboar\n  * Xavier Drdak\n  * Xavier Noria\n  * xhh\n  * Yamen Sader\n  * Yaroslav Lapin\n  * Yasuo Higano\n  * Yu Matsuzawa\n  * zahash\n  * Zsombor Gasparin\n  * \u0160\u00e1rka Slav\u011bt\u00ednsk\u00e1\n\nThanks for reading, and I hope you enjoy Gleam v1 \ud83d\udc9c\n\nTry Gleam\n\nGleam\n\n  * News\n  * Cheat sheets\n  * Discord\n  * Language tour\n  * Code\n  * Documentation\n  * Sponsor\n  * Packages\n\n  * \u00a9 2024 Louis Pilfold\n  * Code of conduct\n\n", "frontpage": false}
