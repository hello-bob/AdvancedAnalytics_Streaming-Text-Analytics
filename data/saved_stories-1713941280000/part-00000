{"aid": "40138579", "title": "American Flag Sort", "url": "https://xlinux.nist.gov/dads/HTML/americanFlagSort.html", "domain": "nist.gov", "votes": 16, "user": "zerojames", "posted_at": "2024-04-23 23:26:58", "comments": 0, "source_title": "American flag sort", "source_text": "American flag sort\n\n# American flag sort\n\n(algorithm)\n\nDefinition: An efficient, in-place variant of radix sort that distributes\nitems into hundreds of buckets. The first step counts the number of items in\neach bucket, and the second step computes where each bucket will start in the\narray. The last step cyclically permutes items to their proper bucket. Since\nthe buckets are in order in the array, there is no collection step. The name\ncomes by analogy with the Dutch national flag problem in the last step:\nefficiently partition the array into many \"stripes\". Using some efficiency\ntechniques, it is twice as fast as quicksort for large sets of strings.\n\nSee also histogram sort.\n\nNote: This works especially well when sorting a byte at a time, using 256\nbuckets.\n\nAuthor: PEB\n\n## Implementation\n\nIt is program C (C) in the McIlroy, Bostic, and McIlroy paper.\n\n## More information\n\nThe flag of the United States of America.\n\nPeter M. McIlroy, Keith Bostic, and M. Douglas McIlroy, Engineering Radix\nSort, Computing Systems, 6(1):5-27, 1993.\n\nGo to the Dictionary of Algorithms and Data Structures home page.\n\nIf you have suggestions, corrections, or comments, please get in touch with\nPaul Black.\n\nEntry modified 24 January 2023. HTML page formatted Tue Jan 24 09:34:32 2023.\n\nCite this as: Paul E. Black, \"American flag sort\", in Dictionary of Algorithms\nand Data Structures [online], Paul E. Black, ed. 24 January 2023. (accessed\nTODAY) Available from: https://www.nist.gov/dads/HTML/americanFlagSort.html\n\n", "frontpage": true}
