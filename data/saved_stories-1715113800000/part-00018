{"aid": "40285314", "title": "Securing Your Server in 2024", "url": "https://martinbaun.com/blog/posts/securing-your-server-in-2024/", "domain": "martinbaun.com", "votes": 2, "user": "martinbaun", "posted_at": "2024-05-07 13:39:16", "comments": 0, "source_title": "Securing Your Server in 2024", "source_text": "Securing Your Server in 2024\n\n# Securing Your Server in 2024\n\nJanuary 11, 2024 \u2022 4 Minute Read\n\nSecuring your server has never been easier. Here I'll show how I set up a\nfirewall and lockdown the whole server for anyone to access.\n\niptables will be the firewall for any incoming traffic, but what do you do\nwith the ports you might want to be open sometimes, for some people? You can\nuse knockd, where a special sequence will open the port for just that IP\naddress.\n\n## Firewall using iptables\ud83d\udd17\n\nFirst, make a file called iptables.sh and copy and paste the following\n\n    \n    \n    12345678910111213141516171819\n    \n    #!/bin/sh #*filter # :INPUT ACCEPT [0:0] # :FORWARD ACCEPT [0:0] # :OUTPUT ACCEPT [0:0] # INPUT iptables -F INPUT iptables -A INPUT -m state --state RELATED, ESTABLISHED -j ACCEPT iptables -A INPUT -i lo -j ACCEPT iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT iptables -A INPUT -p icmp -j ACCEPT iptables -A INPUT -j DROP # COMMIT iptables -L -n -v\n\nif your server has more things it does than just serving HTTP/HTTPS, you might\nwant to add those ports:\n\n    \n    \n    12\n    \n    iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport THEPORTHERE -j ACCEPT\n\nNotice, that port 22 (SSH) is not here. This means that this will be locked\ndown by running this. So, make a backup and keep your connection with ssh to\navoid losing contact with your server.\n\n## Installing Knockd on Ubuntu\ud83d\udd17\n\nAfter this, let's install Knockd. It depends on your OS, how to do this, and\nwhere the files are. I'll assume Ubuntu-based servers Fedora will look very\nsimilar as well. FreeBSD boys, you will have it in a completely different\nplace, but I guess you'll know!\n\n    \n    \n    12\n    \n    sudo apt install knockd\n\nThe default installation will make /etc/knockd.conf contains some random\nstuff. Let's remove that and insert the following instead.\n\n    \n    \n    1234567891011121314\n    \n    # Insert into /etc/knockd.conf [options] UseSyslog [openSSH] sequence = 5000,4000,6000,3000 seq_timeout = 200 command = /sbin/iptables -I INPUT 2 -s %IP% -p tcp --dport 22 -j ACCEPT && /sbin/iptables -I INPUT 2 -s %IP% -p tcp --dport 5901 -j ACCEPT cmd_timeout = 1800 stop_command = /sbin/iptables -D INPUT -s %IP% -p tcp --dport 22 -j ACCEPT && /sbin/iptables -D INPUT -s %IP% -p tcp --dport 5901 -j ACCEPT tcpflags = syn\n\nThis opens port 22 if you knock on the server by opening ports 5000, 4000,\n6000, and 3000 in that sequence. And only that sequence.\n\nAfter this, let's make sure it starts upon restart by calling.\n\n    \n    \n    1234\n    \n    systemctr enable knockd service knockd status reboot\n\nand see that it runs after this. If it doesn't run, do not continue. It must\nrun, as you won't be able to access the server without it.\n\n## Checking if knockd work\ud83d\udd17\n\nIf\n\n    \n    \n    12\n    \n    service knockd status\n\nshows it is enabled, it should be enabled. But to be super secure, let's try\nto enable iptables by running ./iptables.sh\n\nBUT KEEP your existing ssh connection, as this is your lifeline to the server.\n\nAfter this, let's try to connect using ssh from a different tab.\n\n    \n    \n    12\n    \n    ssh root@yourIP\n\nthis should fail.\n\nNow, let's run.\n\n    \n    \n    123\n    \n    knock -d 100 yourIP 5000 4000 6000 3000 ssh root@yourIP\n\nIf this works, it means we made a successful knock to the server, and it\nopened up for us.\n\n## Setting up iptables\ud83d\udd17\n\nThe last thing is to make iptables permanent, and we can do that by adding the\nfollowing to the crontab.\n\n    \n    \n    12\n    \n    @reboot ./iptables.sh\n\nThis is an inelegant way, but it works and is simple. The \"modern\" way to do\nthis is using permanent iptables, but I rather keep the system simple.\n\nCool Tips Useful Tools Software Development\n\n## Who am I?\n\nPassionate about building, business, and software!\n\nI am currently building the best project management tool - I might be biased \ud83d\ude01\n\nI have a decade of experience building software and managing teams. Contact me\nif you need help with software or management\n\n## Tags\n\nCool Tips Entrepreneurship Remote Marketing Engineering Innovation Design\nSoftware Development Career Productivity Startup Content Creation Branding\nBusiness Useful Tools Solopreneurship\n\n## Newsletter\n\n## You might also like\n\nExplore more similar articles below\n\n### Feedback with Asynchronous Video: Productivity with Screen Recording!\n\nIncrease productivity and effective communication in remote teams using\ncollaboration tools like screen recording and asynchronous video to give\nfeedback with video communication.\n\nCareer Cool Tips Entrepreneurship Productivity Remote Software Development\nUseful Tools\n\n### Enhancing Productivity with Video Feedback in 2024.\n\nImprove efficiency and productivity in your team using Video Feedback. Boost\nproductivity in 2024 and prioritize good collaboration to accomplish tasks\nfaster.\n\nCareer Cool Tips Entrepreneurship Productivity Remote Software Development\nUseful Tools\n\n### Goleko vs other project management tools [Listicles]\n\nComparing Goleko and its features to the better known Trello to show why\nGoleko is the better option for project management.\n\nBusiness Cool Tips Design Engineering Entrepreneurship Productivity Remote\nSoftware Development Useful Tools\n\nPowered By StaticViking Copyright @ 2023 StaticViking Website\n\n", "frontpage": false}
