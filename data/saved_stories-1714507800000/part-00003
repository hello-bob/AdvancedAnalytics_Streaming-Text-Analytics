{"aid": "40209284", "title": "How to ask questions the smart way (2014)", "url": "http://catb.org/~esr/faqs/smart-questions.html", "domain": "catb.org", "votes": 1, "user": "bnj", "posted_at": "2024-04-30 10:23:29", "comments": 0, "source_title": "How To Ask Questions The Smart Way", "source_text": "How To Ask Questions The Smart Way\n\n## How To Ask Questions The Smart Way\n\n### Eric Steven Raymond\n\nThyrsus Enterprises\n\n<esr@thyrsus.com>\n\n### Rick Moen\n\n<respond-auto@linuxmafia.com>\n\nCopyright \u00a9 2001,2006,2014 Eric S. Raymond, Rick Moen\n\nRevision History  \n---  \nRevision 3.10| 21 May 2014| esr  \nNew section on Stack Overflow.  \nRevision 3.9| 23 Apr 2013| esr  \nURL fixes.  \nRevision 3.8| 19 Jun 2012| esr  \nURL fix.  \nRevision 3.7| 06 Dec 2010| esr  \nHelpful hints for ESL speakers.  \nRevision 3.7| 02 Nov 2010| esr  \nSeveral translations have disappeared.  \nRevision 3.6| 19 Mar 2008| esr  \nMinor update and new links.  \nRevision 3.5| 2 Jan 2008| esr  \nTypo fix and some translation links.  \nRevision 3.4| 24 Mar 2007| esr  \nNew section, \"When asking about code\".  \nRevision 3.3| 29 Sep 2006| esr  \nFolded in a good suggestion from Kai Niggemann.  \nRevision 3.2| 10 Jan 2006| esr  \nFolded in edits from Rick Moen.  \nRevision 3.1| 28 Oct 2004| esr  \nDocument 'Google is your friend!'  \nRevision 3.0| 2 Feb 2004| esr  \nMajor addition of stuff about proper etiquette on Web forums.  \n  \nTable of Contents\n\nTranslations\n\nDisclaimer\n\nIntroduction\n\nBefore You Ask\n\nWhen You Ask\n\n    \n\nChoose your forum carefully\n\nStack Overflow\n\nWeb and IRC forums\n\nAs a second step, use project mailing lists\n\nUse meaningful, specific subject headers\n\nMake it easy to reply\n\nWrite in clear, grammatical, correctly-spelled language\n\nSend questions in accessible, standard formats\n\nBe precise and informative about your problem\n\nVolume is not precision\n\nDon't rush to claim that you have found a bug\n\nGrovelling is not a substitute for doing your homework\n\nDescribe the problem's symptoms, not your guesses\n\nDescribe your problem's symptoms in chronological order\n\nDescribe the goal, not the step\n\nDon't ask people to reply by private e-mail\n\nBe explicit about your question\n\nWhen asking about code\n\nDon't post homework questions\n\nPrune pointless queries\n\nDon't flag your question as \u201cUrgent\u201d, even if it is for you\n\nCourtesy never hurts, and sometimes helps\n\nFollow up with a brief note on the solution\n\nHow To Interpret Answers\n\n    \n\nRTFM and STFW: How To Tell You've Seriously Screwed Up\n\nIf you don't understand...\n\nDealing with rudeness\n\nOn Not Reacting Like A Loser\n\nQuestions Not To Ask\n\nGood and Bad Questions\n\nIf You Can't Get An Answer\n\nHow To Answer Questions in a Helpful Way\n\nRelated Resources\n\nAcknowledgements\n\n## Translations\n\nTranslations: Brazilo-Portuguese Chinese (Traditional) Czech Dutch Estonian\nFrench Georgian German Greek Hindi Hungarian Indonesion Japanese Lithuanian\nPolish Portuguese Russian Spanish Ukrainian Uzbek If you want to copy, mirror,\ntranslate, or excerpt this document, please see my copying policy.\n\n## Disclaimer\n\nMany project websites link to this document in their sections on how to get\nhelp. That's fine, it's the use we intended \u2014 but if you are a webmaster\ncreating such a link for your project page, please display prominently near\nthe link notice that we are not a help desk for your project!\n\nWe have learned the hard way that without such a notice, we will repeatedly be\npestered by idiots who think having published this document makes it our job\nto solve all the world's technical problems.\n\nIf you're reading this document because you need help, and you walk away with\nthe impression you can get it directly from the authors of this document, you\nare one of the idiots we are talking about. Don't ask us questions. We'll just\nignore you. We are here to show you how to get help from people who actually\nknow about the software or hardware you're dealing with, but 99.9% of the time\nthat will not be us. Unless you know for certain that one of the authors is an\nexpert on what you're dealing with, leave us alone and everybody will be\nhappier.\n\n## Introduction\n\nIn the world of hackers, the kind of answers you get to your technical\nquestions depends as much on the way you ask the questions as on the\ndifficulty of developing the answer. This guide will teach you how to ask\nquestions in a way more likely to get you a satisfactory answer.\n\nNow that use of open source has become widespread, you can often get as good\nanswers from other, more experienced users as from hackers. This is a Good\nThing; users tend to be just a little bit more tolerant of the kind of\nfailures newbies often have. Still, treating experienced users like hackers in\nthe ways we recommend here will generally be the most effective way to get\nuseful answers out of them, too.\n\nThe first thing to understand is that hackers actually like hard problems and\ngood, thought-provoking questions about them. If we didn't, we wouldn't be\nhere. If you give us an interesting question to chew on we'll be grateful to\nyou; good questions are a stimulus and a gift. Good questions help us develop\nour understanding, and often reveal problems we might not have noticed or\nthought about otherwise. Among hackers, \u201cGood question!\u201d is a strong and\nsincere compliment.\n\nDespite this, hackers have a reputation for meeting simple questions with what\nlooks like hostility or arrogance. It sometimes looks like we're reflexively\nrude to newbies and the ignorant. But this isn't really true.\n\nWhat we are, unapologetically, is hostile to people who seem to be unwilling\nto think or to do their own homework before asking questions. People like that\nare time sinks \u2014 they take without giving back, and they waste time we could\nhave spent on another question more interesting and another person more worthy\nof an answer. We call people like this \u201closers\u201d (and for historical reasons we\nsometimes spell it \u201clusers\u201d).\n\nWe realize that there are many people who just want to use the software we\nwrite, and who have no interest in learning technical details. For most\npeople, a computer is merely a tool, a means to an end; they have more\nimportant things to do and lives to live. We acknowledge that, and don't\nexpect everyone to take an interest in the technical matters that fascinate\nus. Nevertheless, our style of answering questions is tuned for people who do\ntake such an interest and are willing to be active participants in problem-\nsolving. That's not going to change. Nor should it; if it did, we would become\nless effective at the things we do best.\n\nWe're (largely) volunteers. We take time out of busy lives to answer\nquestions, and at times we're overwhelmed with them. So we filter ruthlessly.\nIn particular, we throw away questions from people who appear to be losers in\norder to spend our question-answering time more efficiently, on winners.\n\nIf you find this attitude obnoxious, condescending, or arrogant, check your\nassumptions. We're not asking you to genuflect to us \u2014 in fact, most of us\nwould love nothing more than to deal with you as an equal and welcome you into\nour culture, if you put in the effort required to make that possible. But it's\nsimply not efficient for us to try to help people who are not willing to help\nthemselves. It's OK to be ignorant; it's not OK to play stupid.\n\nSo, while it isn't necessary to already be technically competent to get\nattention from us, it is necessary to demonstrate the kind of attitude that\nleads to competence \u2014 alert, thoughtful, observant, willing to be an active\npartner in developing a solution. If you can't live with this sort of\ndiscrimination, we suggest you pay somebody for a commercial support contract\ninstead of asking hackers to personally donate help to you.\n\nIf you decide to come to us for help, you don't want to be one of the losers.\nYou don't want to seem like one, either. The best way to get a rapid and\nresponsive answer is to ask it like a person with smarts, confidence, and\nclues who just happens to need help on one particular problem.\n\n(Improvements to this guide are welcome. You can mail suggestions to\nesr@thyrsus.com or respond-auto@linuxmafia.com. Note however that this\ndocument is not intended to be a general guide to netiquette, and we will\ngenerally reject suggestions that are not specifically related to eliciting\nuseful answers in a technical forum.)\n\n## Before You Ask\n\nBefore asking a technical question by e-mail, or in a newsgroup, or on a\nwebsite chat board, do the following:\n\n  1. Try to find an answer by searching the archives of the forum or mailing list you plan to post to.\n\n  2. Try to find an answer by searching the Web.\n\n  3. Try to find an answer by reading the manual.\n\n  4. Try to find an answer by reading a FAQ.\n\n  5. Try to find an answer by inspection or experimentation.\n\n  6. Try to find an answer by asking a skilled friend.\n\n  7. If you're a programmer, try to find an answer by reading the source code.\n\nWhen you ask your question, display the fact that you have done these things\nfirst; this will help establish that you're not being a lazy sponge and\nwasting people's time. Better yet, display what you have learned from doing\nthese things. We like answering questions for people who have demonstrated\nthey can learn from the answers.\n\nUse tactics like doing a Google search on the text of whatever error message\nyou get (searching Google groups as well as Web pages). This might well take\nyou straight to fix documentation or a mailing list thread answering your\nquestion. Even if it doesn't, saying \u201cI googled on the following phrase but\ndidn't get anything that looked promising\u201d is a good thing to do in e-mail or\nnews postings requesting help, if only because it records what searches won't\nhelp. It will also help to direct other people with similar problems to your\nthread by linking the search terms to what will hopefully be your problem and\nresolution thread.\n\nTake your time. Do not expect to be able to solve a complicated problem with a\nfew seconds of Googling. Read and understand the FAQs, sit back, relax and\ngive the problem some thought before approaching experts. Trust us, they will\nbe able to tell from your questions how much reading and thinking you did, and\nwill be more willing to help if you come prepared. Don't instantly fire your\nwhole arsenal of questions just because your first search turned up no answers\n(or too many).\n\nPrepare your question. Think it through. Hasty-sounding questions get hasty\nanswers, or none at all. The more you do to demonstrate that having put\nthought and effort into solving your problem before seeking help, the more\nlikely you are to actually get help.\n\nBeware of asking the wrong question. If you ask one that is based on faulty\nassumptions, J. Random Hacker is quite likely to reply with a uselessly\nliteral answer while thinking \u201cStupid question...\u201d, and hoping the experience\nof getting what you asked for rather than what you needed will teach you a\nlesson.\n\nNever assume you are entitled to an answer. You are not; you aren't, after\nall, paying for the service. You will earn an answer, if you earn it, by\nasking a substantial, interesting, and thought-provoking question \u2014 one that\nimplicitly contributes to the experience of the community rather than merely\npassively demanding knowledge from others.\n\nOn the other hand, making it clear that you are able and willing to help in\nthe process of developing the solution is a very good start. \u201cWould someone\nprovide a pointer?\u201d, \u201cWhat is my example missing?\u201d, and \u201cWhat site should I\nhave checked?\u201d are more likely to get answered than \u201cPlease post the exact\nprocedure I should use.\u201d because you're making it clear that you're truly\nwilling to complete the process if someone can just point you in the right\ndirection.\n\n## When You Ask\n\n### Choose your forum carefully\n\nBe sensitive in choosing where you ask your question. You are likely to be\nignored, or written off as a loser, if you:\n\n  * post your question to a forum where it's off topic\n\n  * post a very elementary question to a forum where advanced technical questions are expected, or vice-versa\n\n  * cross-post to too many different newsgroups\n\n  * post a personal e-mail to somebody who is neither an acquaintance of yours nor personally responsible for solving your problem\n\nHackers blow off questions that are inappropriately targeted in order to try\nto protect their communications channels from being drowned in irrelevance.\nYou don't want this to happen to you.\n\nThe first step, therefore, is to find the right forum. Again, Google and other\nWeb-searching methods are your friend. Use them to find the project webpage\nmost closely associated with the hardware or software giving you difficulties.\nUsually it will have links to a FAQ (Frequently Asked Questions) list, and to\nproject mailing lists and their archives. These mailing lists are the final\nplaces to go for help, if your own efforts (including reading those FAQs you\nfound) do not find you a solution. The project page may also describe a bug-\nreporting procedure, or have a link to one; if so, follow it.\n\nShooting off an e-mail to a person or forum which you are not familiar with is\nrisky at best. For example, do not assume that the author of an informative\nwebpage wants to be your free consultant. Do not make optimistic guesses about\nwhether your question will be welcome \u2014 if you're unsure, send it elsewhere,\nor refrain from sending it at all.\n\nWhen selecting a Web forum, newsgroup or mailing list, don't trust the name by\nitself too far; look for a FAQ or charter to verify your question is on-topic.\nRead some of the back traffic before posting so you'll get a feel for how\nthings are done there. In fact, it's a very good idea to do a keyword search\nfor words relating to your problem on the newsgroup or mailing list archives\nbefore you post. It may find you an answer, and if not it will help you\nformulate a better question.\n\nDon't shotgun-blast all the available help channels at once, that's like\nyelling and irritates people. Step through them softly.\n\nKnow what your topic is! One of the classic mistakes is asking questions about\nthe Unix or Windows programming interface in a forum devoted to a language or\nlibrary or tool portable across both. If you don't understand why this is a\nblunder, you'd be best off not asking any questions at all until you get it.\n\nIn general, questions to a well-selected public forum are more likely to get\nuseful answers than equivalent questions to a private one. There are multiple\nreasons for this. One is simply the size of the pool of potential respondents.\nAnother is the size of the audience; hackers would rather answer questions\nthat educate many people than questions serving only a few.\n\nUnderstandably, skilled hackers and authors of popular software are already\nreceiving more than their fair share of mis-targeted messages. By adding to\nthe flood, you could in extreme cases even be the straw that breaks the\ncamel's back \u2014 quite a few times, contributors to popular projects have\nwithdrawn their support because collateral damage in the form of useless\ne-mail traffic to their personal accounts became unbearable.\n\n### Stack Overflow\n\nSearch, then ask on Stack Exchange\n\nIn recent years, the Stack Exchange community of sites has emerged as a major\nresource for answering technical and other questions and is even the preferred\nforum for many open-source projects.\n\nStart with a Google search before looking at Stack Exchange; Google indexes it\nin real time. There's a very good chance someone has already asked a similar\nquestion, and the Stack Exchange sites are often near the top of the search\nresults. If you didn't find anything through Google, search again on the\nspecific site most relevant to your question (see below). Searching with tags\ncan help narrow down the results.\n\nIf you still didn't find anything, post your question on the one site where\nit's most on-topic. Use the formatting tools, especially for code, and add\ntags that are related to the substance of your question (particularly the name\nof the programming language, operating system, or library you're having\ntrouble with). If a commenter asks you for more information, edit your main\npost to include it. If any answer is helpful, click the up arrow to upvote it;\nif an answer gives a solution to your problem, click the check under the\nvoting arrows to accept it as correct.\n\nStack Exchange has grown to over 100 sites, but here are the most likely\ncandidates:\n\n  * Super User is for questions about general-purpose computing. If your question isn't about code or programs that you talk to only over a network connection, it probably goes here.\n\n  * Stack Overflow is for questions about programming.\n\n  * Server Fault is for questions about server and network administration.\n\nSeveral projects have their own specific sites, including Android, Ubuntu,\nTeX/LaTeX, and SharePoint. Check the Stack Exchange site for an up-to-date\nlist.\n\n### Web and IRC forums\n\nYour local user group, or your Linux distribution, may advertise a Web forum\nor IRC channel where newbies can get help. (In non-English-speaking countries\nnewbie forums are still more likely to be mailing lists.) These are good first\nplaces to ask, especially if you think you may have tripped over a relatively\nsimple or common problem. An advertised IRC channel is an open invitation to\nask questions there and often get answers in real time.\n\nIn fact, if you got the program that is giving you problems from a Linux\ndistribution (as is common today), it may be better to ask in the distro's\nforum/list before trying the program's project forum/list. The project's\nhackers may just say, \u201cuse our build\u201d.\n\nBefore posting to any Web forum, check if it has a Search feature. If it does,\ntry a couple of keyword searches for something like your problem; it just\nmight help. If you did a general Web search before (as you should have),\nsearch the forum anyway; your Web-wide search engine might not have all of\nthis forum indexed recently.\n\nThere is an increasing tendency for projects to do user support over a Web\nforum or IRC channel, with e-mail reserved more for development traffic. So\nlook for those channels first when seeking project-specific help.\n\nIn IRC, it's probably best not to dump a long problem description on the\nchannel first thing; some people interpret this as channel-flooding. Best to\nutter a one-line problem description in a way pitched to start a conversation\non the channel.\n\n### As a second step, use project mailing lists\n\nWhen a project has a development mailing list, write to the mailing list, not\nto individual developers, even if you believe you know who can best answer\nyour question. Check the documentation of the project and its homepage for the\naddress of a project mailing list, and use it. There are several good reasons\nfor this policy:\n\n  * Any question good enough to be asked of one developer will also be of value to the whole group. Contrariwise, if you suspect your question is too dumb for a mailing list, it's not an excuse to harass individual developers.\n\n  * Asking questions on the list distributes load among developers. The individual developer (especially if he's the project leader) may be too busy to answer your questions.\n\n  * Most mailing lists are archived and the archives are indexed by search engines. If you ask your question on-list and it is answered, a future querent could find your question and the answer on the Web instead of asking it again.\n\n  * If certain questions are seen to be asked often, developers can use that information to improve the documentation or the software itself to be less confusing. But if those questions are asked in private, nobody has the complete picture of what questions are asked most often.\n\nIf a project has both a \u201cuser\u201d and a \u201cdeveloper\u201d (or \u201chacker\u201d) mailing list or\nWeb forum, and you are not hacking on the code, ask in the \u201cuser\u201d list/forum.\nDo not assume that you will be welcome on the developer list, where they're\nlikely to experience your question as noise disrupting their developer\ntraffic.\n\nHowever, if you are sure your question is non-trivial, and you get no answer\nin the \u201cuser\u201d list/forum for several days, try the \u201cdeveloper\u201d one. You would\nbe well advised to lurk there for a few daysor at least review the last few\ndays of archived messages, to learn the local folkways before posting\n(actually this is good advice on any private or semi-private list).\n\nIf you cannot find a project's mailing list address, but only see the address\nof the maintainer of the project, go ahead and write to the maintainer. But\neven in that case, don't assume that the mailing list doesn't exist. Mention\nin your e-mail that you tried and could not find the appropriate mailing list.\nAlso mention that you don't object to having your message forwarded to other\npeople. (Many people believe that private e-mail should remain private, even\nif there is nothing secret in it. By allowing your message to be forwarded you\ngive your correspondent a choice about how to handle your e-mail.)\n\n### Use meaningful, specific subject headers\n\nOn mailing lists, newsgroups or Web forums, the subject header is your golden\nopportunity to attract qualified experts' attention in around 50 characters or\nfewer. Don't waste it on babble like \u201cPlease help me\u201d (let alone \u201cPLEASE HELP\nME!!!!\u201d; messages with subjects like that get discarded by reflex). Don't try\nto impress us with the depth of your anguish; use the space for a super-\nconcise problem description instead.\n\nOne good convention for subject headers, used by many tech support\norganizations, is \u201cobject - deviation\u201d. The \u201cobject\u201d part specifies what thing\nor group of things is having a problem, and the \u201cdeviation\u201d part describes the\ndeviation from expected behavior.\n\nStupid:\n\n    \n\nHELP! Video doesn't work properly on my laptop!\n\nSmart:\n\n    \n\nX.org 6.8.1 misshapen mouse cursor, Fooware MV1005 vid. chipset\n\nSmarter:\n\n    \n\nX.org 6.8.1 mouse cursor on Fooware MV1005 vid. chipset - is misshapen\n\nThe process of writing an \u201cobject-deviation\u201d description will help you\norganize your thinking about the problem in more detail. What is affected?\nJust the mouse cursor or other graphics too? Is this specific to the X.org\nversion of X? To version 6.8.1? Is this specific to Fooware video chipsets? To\nmodel MV1005? A hacker who sees the result can immediately understand what it\nis that you are having a problem with and the problem you are having, at a\nglance.\n\nMore generally, imagine looking at the index of an archive of questions, with\njust the subject lines showing. Make your subject line reflect your question\nwell enough that the next person searching the archive with a question similar\nto yours will be able to follow the thread to an answer rather than posting\nthe question again.\n\nIf you ask a question in a reply, be sure to change the subject line to\nindicate that you're asking a question. A Subject line that looks like \u201cRe:\ntest\u201d or \u201cRe: new bug\u201d is less likely to attract useful amounts of attention.\nAlso, pare quotation of previous messages to the minimum consistent with\ncluing in new readers.\n\nDo not simply hit reply to a list message in order to start an entirely new\nthread. This will limit your audience. Some mail readers, like mutt, allow the\nuser to sort by thread and then hide messages in a thread by folding the\nthread. Folks who do that will never see your message.\n\nChanging the subject is not sufficient. Mutt, and probably other mail readers,\nlooks at other information in the e-mail's headers to assign it to a thread,\nnot the subject line. Instead start an entirely new e-mail.\n\nOn Web forums the rules of good practice are slightly different, because\nmessages are usually much more tightly bound to specific discussion threads\nand often invisible outside those threads. Changing the subject when asking a\nquestion in reply is not essential. Not all forums even allow separate subject\nlines on replies, and nearly nobody reads them when they do. However, asking a\nquestion in a reply is a dubious practice in itself, because it will only be\nseen by those who are watching this thread. So, unless you are sure you want\nto ask only the people currently active in the thread, start a new one.\n\n### Make it easy to reply\n\nFinishing your query with \u201cPlease send your reply to... \u201d makes it quite\nunlikely you will get an answer. If you can't be bothered to take even the few\nseconds required to set up a correct Reply-To header in your mail agent, we\ncan't be bothered to take even a few seconds to think about your problem. If\nyour mail program doesn't permit this, get a better mail program. If your\noperating system doesn't support any e-mail programs that permit this, get a\nbetter operating system.\n\nIn Web forums, asking for a reply by e-mail is outright rude, unless you\nbelieve the information may be sensitive (and somebody will, for some unknown\nreason, let you but not the whole forum know it). If you want an e-mail copy\nwhen somebody replies in the thread, request that the Web forum send it; this\nfeature is supported almost everywhere under options like \u201cwatch this thread\u201d,\n\u201csend e-mail on answers\u201d, etc.\n\n### Write in clear, grammatical, correctly-spelled language\n\nWe've found by experience that people who are careless and sloppy writers are\nusually also careless and sloppy at thinking and coding (often enough to bet\non, anyway). Answering questions for careless and sloppy thinkers is not\nrewarding; we'd rather spend our time elsewhere.\n\nSo expressing your question clearly and well is important. If you can't be\nbothered to do that, we can't be bothered to pay attention. Spend the extra\neffort to polish your language. It doesn't have to be stiff or formal \u2014 in\nfact, hacker culture values informal, slangy and humorous language used with\nprecision. But it has to be precise; there has to be some indication that\nyou're thinking and paying attention.\n\nSpell, punctuate, and capitalize correctly. Don't confuse \u201cits\u201d with \u201cit's\u201d,\n\u201cloose\u201d with \u201close\u201d, or \u201cdiscrete\u201d with \u201cdiscreet\u201d. Don't TYPE IN ALL CAPS;\nthis is read as shouting and considered rude. (All-smalls is only slightly\nless annoying, as it's difficult to read. Alan Cox can get away with it, but\nyou can't.)\n\nMore generally, if you write like a semi-literate boob you will very likely be\nignored. So don't use instant-messaging shortcuts. Spelling \"you\" as \"u\" makes\nyou look like a semi-literate boob to save two entire keystrokes. Worse:\nwriting like a l33t script kiddie hax0r is the absolute kiss of death and\nguarantees you will receive nothing but stony silence (or, at best, a heaping\nhelping of scorn and sarcasm) in return.\n\nIf you are asking questions in a forum that does not use your native language,\nyou will get a limited amount of slack for spelling and grammar errors \u2014 but\nno extra slack at all for laziness (and yes, we can usually spot that\ndifference). Also, unless you know what your respondent's languages are, write\nin English. Busy hackers tend to simply flush questions in languages they\ndon't understand, and English is the working language of the Internet. By\nwriting in English you minimize your chances that your question will be\ndiscarded unread.\n\nIf you are writing in English but it is a second language for you, it is good\nform to alert potential respondents to potential language difficulties and\noptions for getting around them. Examples:\n\n  * English is not my native language; please excuse typing errors.\n\n  * If you speak $LANGUAGE, please email/PM me; I may need assistance translating my question.\n\n  * I am familiar with the technical terms, but some slang expressions and idioms are difficult for me.\n\n  * I've posted my question in $LANGUAGE and English. I'll be glad to translate responses, if you only use one or the other.\n\n### Send questions in accessible, standard formats\n\nIf you make your question artificially hard to read, it is more likely to be\npassed over in favor of one that isn't. So:\n\n  * Send plain text mail, not HTML. (It's not hard to turn off HTML.)\n\n  * MIME attachments are usually OK, but only if they are real content (such as an attached source file or patch), and not merely boilerplate generated by your mail client (such as another copy of your message).\n\n  * Don't send e-mail in which entire paragraphs are single multiply-wrapped lines. (This makes it too difficult to reply to just part of the message.) Assume that your respondents will be reading mail on 80-character-wide text displays and set your line wrap accordingly, to something less than 80.\n\n  * However, do not wrap data (such as log file dumps or session transcripts) at any fixed column width. Data should be included as-is, so respondents can have confidence that they are seeing what you saw.\n\n  * Don't send MIME Quoted-Printable encoding to an English-language forum. This encoding can be necessary when you're posting in a language ASCII doesn't cover, but many e-mail agents don't support it. When they break, all those =20 glyphs scattered through the text are ugly and distracting \u2014 or may actively sabotage the semantics of your text.\n\n  * Never, ever expect hackers to be able to read closed proprietary document formats like Microsoft Word or Excel. Most hackers react to these about as well as you would to having a pile of steaming pig manure dumped on your doorstep. Even when they can cope, they resent having to do so.\n\n  * If you're sending e-mail from a Windows machine, turn off Microsoft's problematic \u201cSmart Quotes\u201d feature (From Tools > AutoCorrect Options, clear the smart quotes checkbox under AutoFormat As You Type.). This is so you'll avoid sprinkling garbage characters through your mail.\n\n  * In Web forums, do not abuse \u201csmiley\u201d and \u201cHTML\u201d features (when they are present). A smiley or two is usually OK, but colored fancy text tends to make people think you are lame. Seriously overusing smileys and color and fonts will make you come off like a giggly teenage girl, which is not generally a good idea unless you are more interested in sex than answers.\n\nIf you're using a graphical-user-interface mail client such as Netscape\nMessenger, MS Outlook, or their ilk, beware that it may violate these rules\nwhen used with its default settings. Most such clients have a menu-based \u201cView\nSource\u201d command. Use this on something in your sent-mail folder, verifying\nsending of plain text without unnecessary attached crud.\n\n### Be precise and informative about your problem\n\n  * Describe the symptoms of your problem or bug carefully and clearly.\n\n  * Describe the environment in which it occurs (machine, OS, application, whatever). Provide your vendor's distribution and release level (e.g.: \u201cFedora Core 7\u201d, \u201cSlackware 9.1\u201d, etc.).\n\n  * Describe the research you did to try and understand the problem before you asked the question.\n\n  * Describe the diagnostic steps you took to try and pin down the problem yourself before you asked the question.\n\n  * Describe any possibly relevant recent changes in your computer or software configuration.\n\n  * If at all possible, provide a way to reproduce the problem in a controlled environment.\n\nDo the best you can to anticipate the questions a hacker will ask, and answer\nthem in advance in your request for help.\n\nGiving hackers the ability to reproduce the problem in a controlled\nenvironment is especially important if you are reporting something you think\nis a bug in code. When you do this, your odds of getting a useful answer and\nthe speed with which you are likely to get that answer both improve\ntremendously.\n\nSimon Tatham has written an excellent essay entitled How to Report Bugs\nEffectively. I strongly recommend that you read it.\n\n### Volume is not precision\n\nYou need to be precise and informative. This end is not served by simply\ndumping huge volumes of code or data into a help request. If you have a large,\ncomplicated test case that is breaking a program, try to trim it and make it\nas small as possible.\n\nThis is useful for at least three reasons. One: being seen to invest effort in\nsimplifying the question makes it more likely you'll get an answer, Two:\nsimplifying the question makes it more likely you'll get a useful answer.\nThree: In the process of refining your bug report, you may develop a fix or\nworkaround yourself.\n\n### Don't rush to claim that you have found a bug\n\nWhen you are having problems with a piece of software, don't claim you have\nfound a bug unless you are very, very sure of your ground. Hint: unless you\ncan provide a source-code patch that fixes the problem, or a regression test\nagainst a previous version that demonstrates incorrect behavior, you are\nprobably not sure enough. This applies to webpages and documentation, too; if\nyou have found a documentation \u201cbug\u201d, you should supply replacement text and\nwhich pages it should go on.\n\nRemember, there are many other users that are not experiencing your problem.\nOtherwise you would have learned about it while reading the documentation and\nsearching the Web (you did do that before complaining, didn't you?). This\nmeans that very probably it is you who are doing something wrong, not the\nsoftware.\n\nThe people who wrote the software work very hard to make it work as well as\npossible. If you claim you have found a bug, you'll be impugning their\ncompetence, which may offend some of them even if you are correct. It's\nespecially undiplomatic to yell \u201cbug\u201d in the Subject line.\n\nWhen asking your question, it is best to write as though you assume you are\ndoing something wrong, even if you are privately pretty sure you have found an\nactual bug. If there really is a bug, you will hear about it in the answer.\nPlay it so the maintainers will want to apologize to you if the bug is real,\nrather than so that you will owe them an apology if you have messed up.\n\n### Grovelling is not a substitute for doing your homework\n\nSome people who get that they shouldn't behave rudely or arrogantly, demanding\nan answer, retreat to the opposite extreme of grovelling. \u201cI know I'm just a\npathetic newbie loser, but...\u201d. This is distracting and unhelpful. It's\nespecially annoying when it's coupled with vagueness about the actual problem.\n\nDon't waste your time, or ours, on crude primate politics. Instead, present\nthe background facts and your question as clearly as you can. That is a better\nway to position yourself than by grovelling.\n\nSometimes Web forums have separate places for newbie questions. If you feel\nyou do have a newbie question, just go there. But don't grovel there either.\n\n### Describe the problem's symptoms, not your guesses\n\nIt's not useful to tell hackers what you think is causing your problem. (If\nyour diagnostic theories were such hot stuff, would you be consulting others\nfor help?) So, make sure you're telling them the raw symptoms of what goes\nwrong, rather than your interpretations and theories. Let them do the\ninterpretation and diagnosis. If you feel it's important to state your guess,\nclearly label it as such and describe why that answer isn't working for you.\n\nStupid:\n\n    \n\nI'm getting back-to-back SIG11 errors on kernel compiles, and suspect a\nhairline crack on one of the motherboard traces. What's the best way to check\nfor those?\n\nSmart:\n\n    \n\nMy home-built K6/233 on an FIC-PA2007 motherboard (VIA Apollo VP2 chipset)\nwith 256MB Corsair PC133 SDRAM starts getting frequent SIG11 errors about 20\nminutes after power-on during the course of kernel compiles, but never in the\nfirst 20 minutes. Rebooting doesn't restart the clock, but powering down\novernight does. Swapping out all RAM didn't help. The relevant part of a\ntypical compile session log follows.\n\nSince the preceding point seems to be a tough one for many people to grasp,\nhere's a phrase to remind you: \"All diagnosticians are from Missouri.\" That US\nstate's official motto is \"Show me\" (earned in 1899, when Congressman Willard\nD. Vandiver said \"I come from a country that raises corn and cotton and\ncockleburs and Democrats, and frothy eloquence neither convinces nor satisfies\nme. I'm from Missouri. You've got to show me.\") In diagnosticians' case, it's\nnot a matter of skepticism, but rather a literal, functional need to see\nwhatever is as close as possible to the same raw evidence that you see, rather\nthan your surmises and summaries. Show us.\n\n### Describe your problem's symptoms in chronological order\n\nThe clues most useful in figuring out something that went wrong often lie in\nthe events immediately prior. So, your account should describe precisely what\nyou did, and what the machine and software did, leading up to the blowup. In\nthe case of command-line processes, having a session log (e.g., using the\nscript utility) and quoting the relevant twenty or so lines is very useful.\n\nIf the program that blew up on you has diagnostic options (such as -v for\nverbose), try to select options that will add useful debugging information to\nthe transcript. Remember that more is not necessarily better; try to choose a\ndebug level that will inform rather than drowning the reader in junk.\n\nIf your account ends up being long (more than about four paragraphs), it might\nbe useful to succinctly state the problem up top, then follow with the\nchronological tale. That way, hackers will know what to watch for in reading\nyour account.\n\n### Describe the goal, not the step\n\nIf you are trying to find out how to do something (as opposed to reporting a\nbug), begin by describing the goal. Only then describe the particular step\ntowards it that you are blocked on.\n\nOften, people who need technical help have a high-level goal in mind and get\nstuck on what they think is one particular path towards the goal. They come\nfor help with the step, but don't realize that the path is wrong. It can take\nsubstantial effort to get past this.\n\nStupid:\n\n    \n\nHow do I get the color-picker on the FooDraw program to take a hexadecimal RGB\nvalue?\n\nSmart:\n\n    \n\nI'm trying to replace the color table on an image with values of my choosing.\nRight now the only way I can see to do this is by editing each table slot, but\nI can't get FooDraw's color picker to take a hexadecimal RGB value.\n\nThe second version of the question is smart. It allows an answer that suggests\na tool better suited to the task.\n\n### Don't ask people to reply by private e-mail\n\nHackers believe solving problems should be a public, transparent process\nduring which a first try at an answer can and should be corrected if someone\nmore knowledgeable notices that it is incomplete or incorrect. Also, helpers\nget some of their reward for being respondents from being seen to be competent\nand knowledgeable by their peers.\n\nWhen you ask for a private reply, you are disrupting both the process and the\nreward. Don't do this. It's the respondent's choice whether to reply privately\n\u2014 and if he or she does, it's usually because he or she thinks the question is\ntoo ill-formed or obvious to be interesting to others.\n\nThere is one limited exception to this rule. If you think the question is such\nthat you are likely to get many answers that are all closely similar, then the\nmagic words are \u201ce-mail me and I'll summarize the answers for the group\u201d. It\nis courteous to try and save the mailing list or newsgroup a flood of\nsubstantially identical postings \u2014 but you have to keep the promise to\nsummarize.\n\n### Be explicit about your question\n\nOpen-ended questions tend to be perceived as open-ended time sinks. Those\npeople most likely to be able to give you a useful answer are also the busiest\npeople (if only because they take on the most work themselves). People like\nthat are allergic to open-ended time sinks, thus they tend to be allergic to\nopen-ended questions.\n\nYou are more likely to get a useful response if you are explicit about what\nyou want respondents to do (provide pointers, send code, check your patch,\nwhatever). This will focus their effort and implicitly put an upper bound on\nthe time and energy a respondent must allocate to helping you. This is good.\n\nTo understand the world the experts live in, think of expertise as an abundant\nresource and time to respond as a scarce one. The less of a time commitment\nyou implicitly ask for, the more likely you are to get an answer from someone\nreally good and really busy.\n\nSo it is useful to frame your question to minimize the time commitment\nrequired for an expert to field it \u2014 but this is often not the same thing as\nsimplifying the question. Thus, for example, \u201cWould you give me a pointer to a\ngood explanation of X?\u201d is usually a smarter question than \u201cWould you explain\nX, please?\u201d. If you have some malfunctioning code, it is usually smarter to\nask for someone to explain what's wrong with it than it is to ask someone to\nfix it.\n\n### When asking about code\n\nDon't ask others to debug your broken code without giving a hint what sort of\nproblem they should be searching for. Posting a few hundred lines of code,\nsaying \"it doesn't work\", will get you ignored. Posting a dozen lines of code,\nsaying \"after line 7 I was expecting to see <x>, but <y> occurred instead\" is\nmuch more likely to get you a response.\n\nThe most effective way to be precise about a code problem is to provide a\nminimal bug-demonstrating test case. What's a minimal test case? It's an\nillustration of the problem; just enough code to exhibit the undesirable\nbehavior and no more. How do you make a minimal test case? If you know what\nline or section of code is producing the problematic behavior, make a copy of\nit and add just enough supporting code to produce a complete example (i.e.\nenough that the source is acceptable to the compiler/interpreter/whatever\napplication processes it). If you can't narrow it down to a particular\nsection, make a copy of the source and start removing chunks that don't affect\nthe problematic behavior. The smaller your minimal test case is, the better\n(see the section called \u201cVolume is not precision\u201d).\n\nGenerating a really small minimal test case will not always be possible, but\ntrying to is good discipline. It may help you learn what you need to solve the\nproblem on your own \u2014 and even when it doesn't, hackers like to see that you\nhave tried. It will make them more cooperative.\n\nIf you simply want a code review, say as much up front, and be sure to mention\nwhat areas you think might particularly need review and why.\n\n### Don't post homework questions\n\nHackers are good at spotting homework questions; most of us have done them\nourselves. Those questions are for you to work out, so that you will learn\nfrom the experience. It is OK to ask for hints, but not for entire solutions.\n\nIf you suspect you have been passed a homework question, but can't solve it\nanyway, try asking in a user group forum or (as a last resort) in a \u201cuser\u201d\nlist/forum of a project. While the hackers will spot it, some of the advanced\nusers may at least give you a hint.\n\n### Prune pointless queries\n\nResist the temptation to close your request for help with semantically-null\nquestions like \u201cCan anyone help me?\u201d or \u201cIs there an answer?\u201d First: if you've\nwritten your problem description halfway competently, such tacked-on questions\nare at best superfluous. Second: because they are superfluous, hackers find\nthem annoying \u2014 and are likely to return logically impeccable but dismissive\nanswers like \u201cYes, you can be helped\u201d and \u201cNo, there is no help for you.\u201d\n\nIn general, asking yes-or-no questions is a good thing to avoid unless you\nwant a yes-or-no answer.\n\n### Don't flag your question as \u201cUrgent\u201d, even if it is for you\n\nThat's your problem, not ours. Claiming urgency is very likely to be counter-\nproductive: most hackers will simply delete such messages as rude and selfish\nattempts to elicit immediate and special attention. Furthermore, the word\n'Urgent' (and other similar attempts to grab attention in the subject line)\noften triggers spam filters - your intended recipients might never see it at\nall!\n\nThere is one semi-exception. It can be worth mentioning if you're using the\nprogram in some high-profile place, one that the hackers will get excited\nabout; in such a case, if you're under time pressure, and you say so politely,\npeople may get interested enough to answer faster.\n\nThis is a very risky thing to do, however, because the hackers' metric for\nwhat is exciting probably differs from yours. Posting from the International\nSpace Station would qualify, for example, but posting on behalf of a feel-good\ncharitable or political cause would almost certainly not. In fact, posting\n\u201cUrgent: Help me save the fuzzy baby seals!\u201d will reliably get you shunned or\nflamed even by hackers who think fuzzy baby seals are important.\n\nIf you find this mysterious, re-read the rest of this how-to repeatedly until\nyou understand it before posting anything at all.\n\n### Courtesy never hurts, and sometimes helps\n\nBe courteous. Use \u201cPlease\u201d and \u201cThanks for your attention\u201d or \u201cThanks for your\nconsideration\u201d. Make it clear you appreciate the time people spend helping you\nfor free.\n\nTo be honest, this isn't as important as (and cannot substitute for) being\ngrammatical, clear, precise and descriptive, avoiding proprietary formats\netc.; hackers in general would rather get somewhat brusque but technically\nsharp bug reports than polite vagueness. (If this puzzles you, remember that\nwe value a question by what it teaches us.)\n\nHowever, if you've got your technical ducks in a row, politeness does increase\nyour chances of getting a useful answer.\n\n(We must note that the only serious objection we've received from veteran\nhackers to this HOWTO is with respect to our previous recommendation to use\n\u201cThanks in advance\u201d. Some hackers feel this connotes an intention not to thank\nanybody afterwards. Our recommendation is to either say \u201cThanks in advance\u201d\nfirst and thank respondents afterwards, or express courtesy in a different\nway, such as by saying \u201cThanks for your attention\u201d or \u201cThanks for your\nconsideration\u201d.)\n\n### Follow up with a brief note on the solution\n\nSend a note after the problem has been solved to all who helped you; let them\nknow how it came out and thank them again for their help. If the problem\nattracted general interest in a mailing list or newsgroup, it's appropriate to\npost the followup there.\n\nOptimally, the reply should be to the thread started by the original question\nposting, and should have \u2018FIXED\u2019, \u2018RESOLVED\u2019 or an equally obvious tag in the\nsubject line. On mailing lists with fast turnaround, a potential respondent\nwho sees a thread about \u201cProblem X\u201d ending with \u201cProblem X - FIXED\u201d knows not\nto waste his/her time even reading the thread (unless (s)he personally finds\nProblem X interesting) and can therefore use that time solving a different\nproblem.\n\nYour followup doesn't have to be long and involved; a simple \u201cHowdy \u2014 it was a\nfailed network cable! Thanks, everyone. - Bill\u201d would be better than nothing.\nIn fact, a short and sweet summary is better than a long dissertation unless\nthe solution has real technical depth. Say what action solved the problem, but\nyou need not replay the whole troubleshooting sequence.\n\nFor problems with some depth, it is appropriate to post a summary of the\ntroubleshooting history. Describe your final problem statement. Describe what\nworked as a solution, and indicate avoidable blind alleys after that. The\nblind alleys should come after the correct solution and other summary\nmaterial, rather than turning the follow-up into a detective story. Name the\nnames of people who helped you; you'll make friends that way.\n\nBesides being courteous and informative, this sort of followup will help\nothers searching the archive of the mailing-list/newsgroup/forum to know\nexactly which solution helped you and thus may also help them.\n\nLast, and not least, this sort of followup helps everybody who assisted feel a\nsatisfying sense of closure about the problem. If you are not a techie or\nhacker yourself, trust us that this feeling is very important to the gurus and\nexperts you tapped for help. Problem narratives that trail off into unresolved\nnothingness are frustrating things; hackers itch to see them resolved. The\ngoodwill that scratching that itch earns you will be very, very helpful to you\nnext time you need to pose a question.\n\nConsider how you might be able to prevent others from having the same problem\nin the future. Ask yourself if a documentation or FAQ patch would help, and if\nthe answer is yes send that patch to the maintainer.\n\nAmong hackers, this sort of good followup behavior is actually more important\nthan conventional politeness. It's how you get a reputation for playing well\nwith others, which can be a very valuable asset.\n\n## How To Interpret Answers\n\n### RTFM and STFW: How To Tell You've Seriously Screwed Up\n\nThere is an ancient and hallowed tradition: if you get a reply that reads\n\u201cRTFM\u201d, the person who sent it thinks you should have Read The Fucking Manual.\nHe or she is almost certainly right. Go read it.\n\nRTFM has a younger relative. If you get a reply that reads \u201cSTFW\u201d, the person\nwho sent it thinks you should have Searched The Fucking Web. He or she is\nalmost certainly right. Go search it. (The milder version of this is when you\nare told \u201cGoogle is your friend!\u201d)\n\nIn Web forums, you may also be told to search the forum archives. In fact,\nsomeone may even be so kind as to provide a pointer to the previous thread\nwhere this problem was solved. But do not rely on this consideration; do your\narchive-searching before asking.\n\nOften, the person telling you to do a search has the manual or the web page\nwith the information you need open, and is looking at it as he or she types.\nThese replies mean that the responder thinks (a) the information you need is\neasy to find, and (b) you will learn more if you seek out the information than\nif you have it spoon-fed to you.\n\nYou shouldn't be offended by this; by hacker standards, your respondent is\nshowing you a rough kind of respect simply by not ignoring you. You should\ninstead be thankful for this grandmotherly kindness.\n\n### If you don't understand...\n\nIf you don't understand the answer, do not immediately bounce back a demand\nfor clarification. Use the same tools that you used to try and answer your\noriginal question (manuals, FAQs, the Web, skilled friends) to understand the\nanswer. Then, if you still need to ask for clarification, exhibit what you\nhave learned.\n\nFor example, suppose I tell you: \u201cIt sounds like you've got a stuck zentry;\nyou'll need to clear it.\u201d Then: here's a bad followup question: \u201cWhat's a\nzentry?\u201d Here's a good followup question: \u201cOK, I read the man page and\nzentries are only mentioned under the -z and -p switches. Neither of them says\nanything about clearing zentries. Is it one of these or am I missing something\nhere?\u201d\n\n### Dealing with rudeness\n\nMuch of what looks like rudeness in hacker circles is not intended to give\noffense. Rather, it's the product of the direct, cut-through-the-bullshit\ncommunications style that is natural to people who are more concerned about\nsolving problems than making others feel warm and fuzzy.\n\nWhen you perceive rudeness, try to react calmly. If someone is really acting\nout, it is very likely a senior person on the list or newsgroup or forum will\ncall him or her on it. If that doesn't happen and you lose your temper, it is\nlikely that the person you lose it at was behaving within the hacker\ncommunity's norms and you will be considered at fault. This will hurt your\nchances of getting the information or help you want.\n\nOn the other hand, you will occasionally run across rudeness and posturing\nthat is quite gratuitous. The flip-side of the above is that it is acceptable\nform to slam real offenders quite hard, dissecting their misbehavior with a\nsharp verbal scalpel. Be very, very sure of your ground before you try this,\nhowever. The line between correcting an incivility and starting a pointless\nflamewar is thin enough that hackers themselves not infrequently blunder\nacross it; if you are a newbie or an outsider, your chances of avoiding such a\nblunder are low. If you're after information rather than entertainment, it's\nbetter to keep your fingers off the keyboard than to risk this.\n\n(Some people assert that many hackers have a mild form of autism or Asperger's\nSyndrome, and are actually missing some of the brain circuitry that lubricates\n\u201cnormal\u201d human social interaction. This may or may not be true. If you are not\na hacker yourself, it may help you cope with our eccentricities if you think\nof us as being brain-damaged. Go right ahead. We won't care; we like being\nwhatever it is we are, and generally have a healthy skepticism about clinical\nlabels.)\n\nJeff Bigler's observations about tact filters are also relevant and worth\nreading.\n\nIn the next section, we'll talk about a different issue; the kind of\n\u201crudeness\u201d you'll see when you misbehave.\n\n## On Not Reacting Like A Loser\n\nOdds are you'll screw up a few times on hacker community forums \u2014 in ways\ndetailed in this article, or similar. And you'll be told exactly how you\nscrewed up, possibly with colourful asides. In public.\n\nWhen this happens, the worst thing you can do is whine about the experience,\nclaim to have been verbally assaulted, demand apologies, scream, hold your\nbreath, threaten lawsuits, complain to people's employers, leave the toilet\nseat up, etc. Instead, here's what you do:\n\nGet over it. It's normal. In fact, it's healthy and appropriate.\n\nCommunity standards do not maintain themselves: They're maintained by people\nactively applying them, visibly, in public. Don't whine that all criticism\nshould have been conveyed via private e-mail: That's not how it works. Nor is\nit useful to insist you've been personally insulted when someone comments that\none of your claims was wrong, or that his views differ. Those are loser\nattitudes.\n\nThere have been hacker forums where, out of some misguided sense of hyper-\ncourtesy, participants are banned from posting any fault-finding with\nanother's posts, and told \u201cDon't say anything if you're unwilling to help the\nuser.\u201d The resulting departure of clueful participants to elsewhere causes\nthem to descend into meaningless babble and become useless as technical\nforums.\n\nExaggeratedly \u201cfriendly\u201d (in that fashion) or useful: Pick one.\n\nRemember: When that hacker tells you that you've screwed up, and (no matter\nhow gruffly) tells you not to do it again, he's acting out of concern for (1)\nyou and (2) his community. It would be much easier for him to ignore you and\nfilter you out of his life. If you can't manage to be grateful, at least have\na little dignity, don't whine, and don't expect to be treated like a fragile\ndoll just because you're a newcomer with a theatrically hypersensitive soul\nand delusions of entitlement.\n\nSometimes people will attack you personally, flame without an apparent reason,\netc., even if you don't screw up (or have only screwed up in their\nimagination). In this case, complaining is the way to really screw up.\n\nThese flamers are either lamers who don't have a clue but believe themselves\nto be experts, or would-be psychologists testing whether you'll screw up. The\nother readers either ignore them, or find ways to deal with them on their own.\nThe flamers' behavior creates problems for themselves, which don't have to\nconcern you.\n\nDon't let yourself be drawn into a flamewar, either. Most flames are best\nignored \u2014 after you've checked whether they are really flames, not pointers to\nthe ways in which you have screwed up, and not cleverly ciphered answers to\nyour real question (this happens as well).\n\n## Questions Not To Ask\n\nHere are some classic stupid questions, and what hackers are thinking when\nthey don't answer them.\n\nQ: Where can I find program or resource X?\n\nQ: How can I use X to do Y?\n\nQ: How can I configure my shell prompt?\n\nQ: Can I convert an AcmeCorp document into a TeX file using the Bass-o-matic\nfile converter?\n\nQ: My {program, configuration, SQL statement} doesn't work\n\nQ: I'm having problems with my Windows machine. Can you help?\n\nQ: My program doesn't work. I think system facility X is broken.\n\nQ: I'm having problems installing Linux or X. Can you help?\n\nQ: How can I crack root/steal channel-ops privileges/read someone's e-mail?\n\nQ:| Where can I find program or resource X?  \n---|---  \nA:| The same place I'd find it, fool \u2014 at the other end of a web search. Ghod,\ndoesn't everybody know how to use Google yet?  \nQ:| How can I use X to do Y?  \nA:| If what you want is to do Y, you should ask that question without pre-\nsupposing the use of a method that may not be appropriate. Questions of this\nform often indicate a person who is not merely ignorant about X, but confused\nabout what problem Y they are solving and too fixated on the details of their\nparticular situation. It is generally best to ignore such people until they\ndefine their problem better.  \nQ:| How can I configure my shell prompt?  \nA:| If you're smart enough to ask this question, you're smart enough to RTFM\nand find out yourself.  \nQ:| Can I convert an AcmeCorp document into a TeX file using the Bass-o-matic\nfile converter?  \nA:| Try it and see. If you did that, you'd (a) learn the answer, and (b) stop\nwasting my time.  \nQ:| My {program, configuration, SQL statement} doesn't work  \nA:| This is not a question, and I'm not interested in playing Twenty Questions\nto pry your actual question out of you \u2014 I have better things to do. On seeing\nsomething like this, my reaction is normally of one of the following:\n\n  * do you have anything else to add to that?\n  * oh, that's too bad, I hope you get it fixed.\n  * and this has exactly what to do with me?\n\n  \nQ:| I'm having problems with my Windows machine. Can you help?  \nA:| Yes. Throw out that Microsoft trash and install an open-source operating\nsystem like Linux or BSD.Note: you can ask questions related to Windows\nmachines if they are about a program that does have an official Windows build,\nor interacts with Windows machines (i.e., Samba). Just don't be surprised by\nthe reply that the problem is with Windows and not the program, because\nWindows is so broken in general that this is very often the case.  \nQ:| My program doesn't work. I think system facility X is broken.  \nA:| While it is possible that you are the first person to notice an obvious\ndeficiency in system calls and libraries heavily used by hundreds or thousands\nof people, it is rather more likely that you are utterly clueless.\nExtraordinary claims require extraordinary evidence; when you make a claim\nlike this one, you must back it up with clear and exhaustive documentation of\nthe failure case.  \nQ:| I'm having problems installing Linux or X. Can you help?  \nA:| No. I'd need hands-on access to your machine to troubleshoot this. Go ask\nyour local Linux user group for hands-on help. (You can find a list of user\ngroups here.)Note: questions about installing Linux may be appropriate if\nyou're on a forum or mailing list about a particular distribution, and the\nproblem is with that distro; or on local user groups forums. In this case, be\nsure to describe the exact details of the failure. But do careful searching\nfirst, with \"linux\" and all suspicious pieces of hardware.  \nQ:| How can I crack root/steal channel-ops privileges/read someone's e-mail?  \nA:| You're a lowlife for wanting to do such things and a moron for asking a\nhacker to help you.  \n  \n## Good and Bad Questions\n\nFinally, I'm going to illustrate how to ask questions in a smart way by\nexample; pairs of questions about the same problem, one asked in a stupid way\nand one in a smart way.\n\nStupid: Where can I find out stuff about the Foonly Flurbamatic?\n\n    \n\nThis question just begs for \"STFW\" as a reply.\n\nSmart: I used Google to try to find \u201cFoonly Flurbamatic 2600\u201d on the Web, but\nI got no useful hits. Can I get a pointer to programming information on this\ndevice?\n\n    \n\nThis one has already STFWed, and sounds like there might be a real problem.\n\nStupid: I can't get the code from project foo to compile. Why is it broken?\n\n    \n\nThe querent assumes that somebody else screwed up. Arrogant git...\n\nSmart: The code from project foo doesn't compile under Nulix version 6.2. I've\nread the FAQ, but it doesn't have anything in it about Nulix-related problems.\nHere's a transcript of my compilation attempt; is it something I did?\n\n    \n\nThe querent has specified the environment, read the FAQ, is showing the error,\nand is not assuming his problems are someone else's fault. This one might be\nworth some attention.\n\nStupid: I'm having problems with my motherboard. Can anybody help?\n\n    \n\nJ. Random Hacker's response to this is likely to be \u201cRight. Do you need\nburping and diapering, too?\u201d followed by a punch of the delete key.\n\nSmart: I tried X, Y, and Z on the S2464 motherboard. When that didn't work, I\ntried A, B, and C. Note the curious symptom when I tried C. Obviously the\nflorbish is grommicking, but the results aren't what one might expect. What\nare the usual causes of grommicking on Athlon MP motherboards? Anybody got\nideas for more tests I can run to pin down the problem?\n\n    \n\nThis person, on the other hand, seems worthy of an answer. He/she has\nexhibited problem-solving intelligence rather than passively waiting for an\nanswer to drop from on high.\n\nIn the last question, notice the subtle but important difference between\ndemanding \u201cGive me an answer\u201d and \u201cPlease help me figure out what additional\ndiagnostics I can run to achieve enlightenment.\u201d\n\nIn fact, the form of that last question is closely based on a real incident\nthat happened in August 2001 on the linux-kernel mailing list (lkml). I (Eric)\nwas the one asking the question that time. I was seeing mysterious lockups on\na Tyan S2462 motherboard. The list members supplied the critical information I\nneeded to solve them.\n\nBy asking the question in the way I did, I gave people something to chew on; I\nmade it easy and attractive for them to get involved. I demonstrated respect\nfor my peers' ability and invited them to consult with me as a peer. I also\ndemonstrated respect for the value of their time by telling them the blind\nalleys I had already run down.\n\nAfterwards, when I thanked everyone and remarked how well the process had\nworked, an lkml member observed that he thought it had worked not because I'm\na \u201cname\u201d on that list, but because I asked the question in the proper form.\n\nHackers are in some ways a very ruthless meritocracy; I'm certain he was\nright, and that if I had behaved like a sponge I would have been flamed or\nignored no matter who I was. His suggestion that I write up the whole incident\nas instruction to others led directly to the composition of this guide.\n\n## If You Can't Get An Answer\n\nIf you can't get an answer, please don't take it personally that we don't feel\nwe can help you. Sometimes the members of the asked group may simply not know\nthe answer. No response is not the same as being ignored, though admittedly\nit's hard to spot the difference from outside.\n\nIn general, simply re-posting your question is a bad idea. This will be seen\nas pointlessly annoying. Have patience: the person with your answer may be in\na different time-zone and asleep. Or it may be that your question wasn't well-\nformed to begin with.\n\nThere are other sources of help you can go to, often sources better adapted to\na novice's needs.\n\nThere are many online and local user groups who are enthusiasts about the\nsoftware, even though they may never have written any software themselves.\nThese groups often form so that people can help each other and help new users.\n\nThere are also plenty of commercial companies you can contract with for help,\nboth large and small. Don't be dismayed at the idea of having to pay for a bit\nof help! After all, if your car engine blows a head gasket, chances are you\nwould take it to a repair shop and pay to get it fixed. Even if the software\ndidn't cost you anything, you can't expect that support to always come for\nfree.\n\nFor popular software like Linux, there are at least 10,000 users per\ndeveloper. It's just not possible for one person to handle the support calls\nfrom over 10,000 users. Remember that even if you have to pay for support, you\nare still paying much less than if you had to buy the software as well (and\nsupport for closed-source software is usually more expensive and less\ncompetent than support for open-source software).\n\n## How To Answer Questions in a Helpful Way\n\nBe gentle. Problem-related stress can make people seem rude or stupid even\nwhen they're not.\n\nReply to a first offender off-line. There is no need of public humiliation for\nsomeone who may have made an honest mistake. A real newbie may not know how to\nsearch archives or where the FAQ is stored or posted.\n\nIf you don't know for sure, say so! A wrong but authoritative-sounding answer\nis worse than none at all. Don't point anyone down a wrong path simply because\nit's fun to sound like an expert. Be humble and honest; set a good example for\nboth the querent and your peers.\n\nIf you can't help, don't hinder. Don't make jokes about procedures that could\ntrash the user's setup \u2014 the poor sap might interpret these as instructions.\n\nAsk probing questions to elicit more details. If you're good at this, the\nquerent will learn something \u2014 and so might you. Try to turn the bad question\ninto a good one; remember we were all newbies once.\n\nWhile muttering RTFM is sometimes justified when replying to someone who is\njust a lazy slob, a pointer to documentation (even if it's just a suggestion\nto google for a key phrase) is better.\n\nIf you're going to answer the question at all, give good value. Don't suggest\nkludgy workarounds when somebody is using the wrong tool or approach. Suggest\ngood tools. Reframe the question.\n\nAnswer the actual question! If the querent has been so thorough as to do his\nor her research and has included in the query that X, Y, Z, A, B, and C have\nalready been tried without good result, it is supremely unhelpful to respond\nwith \u201cTry A or B,\u201d or with a link to something that only says, \u201cTry X, Y, Z,\nA, B, or C.\u201d.\n\nHelp your community learn from the question. When you field a good question,\nask yourself \u201cHow would the relevant documentation or FAQ have to change so\nthat nobody has to answer this again?\u201d Then send a patch to the document\nmaintainer.\n\nIf you did research to answer the question, demonstrate your skills rather\nthan writing as though you pulled the answer out of your butt. Answering one\ngood question is like feeding a hungry person one meal, but teaching them\nresearch skills by example is showing them how to grow food for a lifetime.\n\n## Related Resources\n\nIf you need instruction in the basics of how personal computers, Unix, and the\nInternet work, see The Unix and Internet Fundamentals HOWTO.\n\nWhen you release software or write patches for software, try to follow the\nguidelines in the Software Release Practice HOWTO.\n\n## Acknowledgements\n\nEvelyn Mitchell contributed some example stupid questions and inspired the\n\u201cHow To Give A Good Answer\u201d section. Mikhail Ramendik contributed some\nparticularly valuable suggestions for improvements.\n\n", "frontpage": false}
