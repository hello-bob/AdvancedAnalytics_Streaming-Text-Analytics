{"aid": "40246291", "title": "Essential steps to take before making any technical decision", "url": "https://thetshaped.dev/p/4-essential-steps-before-technical-decision", "domain": "thetshaped.dev", "votes": 1, "user": "petar_ivanov", "posted_at": "2024-05-03 11:03:43", "comments": 0, "source_title": "4 essential steps to take before making any technical decision", "source_text": "4 essential steps to take before making any technical decision\n\n# The T-Shaped Dev\n\nShare this post\n\n#### 4 essential steps to take before making any technical decision\n\nthetshaped.dev\n\n#### Discover more from The T-Shaped Dev\n\nPractical tips helping level up your engineering skills. Career, Web, Software\nDesign, Architecture & Productivity.\n\nOver 5,000 subscribers\n\nContinue reading\n\nSign in\n\n# 4 essential steps to take before making any technical decision\n\n### And why discovery and preparation are key?\n\nPetar Ivanov\n\nApr 28, 2024\n\n24\n\nShare this post\n\n#### 4 essential steps to take before making any technical decision\n\nthetshaped.dev\n\n7\n\nShare\n\n#\n\nIntro\n\nMaking technical decisions or architectural improvements is not easy. It takes\neffort, preparation, conscious planning, thoughtful thinking, a strategic\napproach, and trade-offs. All this because there\u2019re no silver-bullets.\n\nMaking the right choices can significantly impact the efficiency and\nscalability of your project.\n\n> Discovery and Preparation are key.\n\nIn this article, I\u2019m sharing a 4-step approach to guide you before making any\ntechnical decision.\n\nThe T-Shaped Dev is a reader-supported publication. To receive new posts and\nsupport my work, consider becoming a free or paid subscriber.\n\n#\n\n1\\. Understand the Business Domain and How It Operates\n\nBefore diving into any technical specifics, it\u2019s crucial to have a solid\nunderstanding of the business domain for which the project is being developed.\nKnow the core processes, business operations, customers, and the everyday\nchallenges the business faces. This understanding ensures that the technical\nsolution aligns with the business objectives and addresses real needs.\n\n> Building software for a small business is not easy. => We must understand\n> the business and its domain.\n\nYou can also talk with the different stakeholders inside the business like\nfinance, ops, etc., and see their everyday tasks, challenges, and the domain\nlanguage they use daily. This will give you additional context and\nunderstanding of the business and how to design the new architecture or\nproject.\n\n##\n\nStrategic DDD and Event Storming\n\nIn my experience, I\u2019ve found Strategic DDD and Event Storming as great tools\nto start the business domain exploration.\n\nStrategic DDD is a subset of the Domain-Driven Design (DDD). Strategic DDD\nconsists of identifying two key things:\n\n  1. your Ubiquotous Langauge\n\n  2. your Bounded Contexts and the relation between them.\n\nEvent Storming is an interactive workshop technique that brings together\ndomain experts and development teams to explore complex business domains.\n\nNote: More about Strategic DDD and Event Storming in the upcoming articles.\n\n#\n\n2\\. Find out what are the Top Technical Challenges\n\nIdentify the major technical challenges and problems currently faced by the\norganization. This might include scalability issues, technical debt, security\nvulnerabilities, or integration challenges with other systems. Recognizing\nthese problems early will help in prioritizing which issues need immediate\nattention and which architectural improvements can resolve these challenges.\n\n> Prioritization is key to successfully mitigate critical technical problems.\n\nIf the technical decision we aim to make doesn\u2019t solve them then what\u2019s the\npoint in taking it in the first place? \ud83e\udd37\u2642\ufe0f\n\n##\n\nExample\n\nHere is an example from a discovery of a project I\u2019ve worked on in the past:\n\n  1. As a first step, we listed the different technical challenges we had at that moment:\n\n  2. As a second step, we prioritized what are the most critical ones we should focus on first:\n\nIt\u2019s important to mention that this step, requires, research, thoughtful\nthinking, discussions, and trade-offs.\n\n> We can\u2019t solve all challenges at once. Clear priorities and order are\n> crucial.\n\nNote: The \u201cWhy?\u201d behind the decision hides behind a lot of context. The main\nidea of the example is to showcase what this step looks like in practice.\n\n#\n\n3\\. Decide on your Architectural Quality Attributes\n\nArchitectural quality attributes define the non-functional requirements like\nperformance, scalability, maintainability, reliability, security, etc.\nDetermining what attributes are most critical to your business goals will\ninfluence the architectural decisions you make.\n\nFor example, if reliability is a crucial factor for your business, you\u2019ll\nprioritize solutions that enhance uptime and fault tolerance.\n\n##\n\nExample\n\nHere is an example from a discovery of a project I\u2019ve worked on in the past:\n\n  1. As a first step, we listed and prioritized the different architectural quality attributes based on their importance at that moment:\n\n  2. As a second step, we picked the attributes our technical decision must satisfy:\n\nNote: The \u201cWhy?\u201d behind the decision hides behind a lot of context. The main\nidea of the example is to showcase what this step looks like in practice.\n\n#\n\n4\\. Have Clear Goals\n\nSet clear and measurable goals for what the architectural improvements should\nachieve. Whether it\u2019s cutting down on maintenance costs, reducing server\nresponse times, or improving user experience, having specific targets will\nhelp you guide your decisions and make it easier to evaluate the success of\nthe implemented changes.\n\nThis step will be much easier and transparent if you already outlined the top\ntechnical challenges and problems as well as your architectural quality\nattributes.\n\n#\n\nConclusion\n\nTechnical decisions and architectural improvements require thoughtful\npreparation, strategic approach and trade-offs.\n\nBy following these steps:\n\n  1. understanding your business domain\n\n  2. identifying key technical challenges\n\n  3. deciding on critical quality attributes\n\n  4. setting clear goals\n\nyou can ensure that your decisions lead to successful outcomes.\n\nInclude these steps and considerations as part of your planning process and\nenhance your architectural designs and solutions.\n\n> We\u2019re modeling software to solve complex real-life business problems.\n\n#\n\n\ud83d\udce3 Articles worth reading:\n\n  * How Dropbox Scaled to 100 Thousand Users in a Year After Launch by System Design Newsletter,\n\nNeo Kim\n\n  * How I Setup my Terminal for Ultimate Productivity by Dev Design Digest,\n\nAshish Pratap Singh\n\n  * Practical Learning Strategies for Engineers by The Hybrid Hacker,\n\nNicola Ballotta\n\n  * 10 Must-Reads for Engineering Leaders by Leading Developers,\n\nAnton Zaides\n\n  * Lyft's Ride to 21M Users: A Tech Dive by Hungry Minds,\n\nAlexandre Zajac\n\n#\n\n\ud83d\uddde\ufe0f You may also like:\n\n#### 6 tools that made my life much easier as a Software Engineer\n\nPetar Ivanov\n\n\u00b7\n\nApr 21\n\nRead full story\n\n#### 3 software development principles I wish I knew earlier in my career\n\nPetar Ivanov\n\n\u00b7\n\nMar 24\n\nRead full story\n\n#### SOLID Principles: Writing Robust & Maintainable Code (with TypeScript\nexamples)\n\nPetar Ivanov\n\n\u00b7\n\nFeb 1\n\nRead full story\n\n### Subscribe to The T-Shaped Dev\n\nBy Petar Ivanov \u00b7 Launched 10 months ago\n\nPractical tips helping level up your engineering skills. Career, Web, Software\nDesign, Architecture & Productivity.\n\n24 Likes\n\n\u00b7\n\n2 Restacks\n\n24\n\nShare this post\n\n#### 4 essential steps to take before making any technical decision\n\nthetshaped.dev\n\n7\n\nShare\n\n7 Comments\n\nYordan IvanovData GibberishApr 29Liked by Petar IvanovGreat article, Petar. I\nreally like your approach.Expand full commentLike (1)ReplyShare  \n---  \n  \n1 reply by Petar Ivanov\n\nHemant PandeyThe Hustling EngineerApr 28Liked by Petar IvanovGreat Insights.\nLoved the way you used sticky notes lookExpand full commentLike (1)ReplyShare  \n---  \n  \n1 reply by Petar Ivanov\n\n5 more comments...\n\n3 software development principles I wish I knew earlier in my career\n\nAnd the power of YAGNI, KISS, and DRY\n\nMar 24 \u2022\n\nPetar Ivanov\n\n70\n\nShare this post\n\n#### 3 software development principles I wish I knew earlier in my career\n\nthetshaped.dev\n\n16\n\n6 tools that made my life much easier as a Software Engineer\n\nAnd how to make your environment, tools, and setup work for you, not against\nyou.\n\nApr 21 \u2022\n\nPetar Ivanov\n\n58\n\nShare this post\n\n#### 6 tools that made my life much easier as a Software Engineer\n\nthetshaped.dev\n\n9\n\nDemystifying the Shadow DOM\n\nA Web Developer's secret weapon\n\nApr 7 \u2022\n\nPetar Ivanov\n\n21\n\nShare this post\n\n#### Demystifying the Shadow DOM\n\nthetshaped.dev\n\n7\n\nReady for more?\n\n\u00a9 2024 Petar Ivanov\n\nPrivacy \u2219 Terms \u2219 Collection notice\n\nStart WritingGet the app\n\nSubstack is the home for great culture\n\nShare\n\n## Create your profile\n\n## Only paid subscribers can comment on this post\n\nAlready a paid subscriber? Sign in\n\n#### Check your email\n\nFor your security, we need to re-authenticate you.\n\nClick the link we sent to , or click here to sign in.\n\n", "frontpage": false}
