{"aid": "40093257", "title": "Show HN: Open-source SDK for creating custom code interpreters with any LLM", "url": "https://github.com/e2b-dev/code-interpreter", "domain": "github.com/e2b-dev", "votes": 4, "user": "mlejva", "posted_at": "2024-04-20 00:12:43", "comments": 0, "source_title": "GitHub - e2b-dev/code-interpreter: Python & JS SDK for building custom code interpreters. Built with E2B - Cloud Runtime for AI Agents.", "source_text": "GitHub - e2b-dev/code-interpreter: Python & JS SDK for building custom code\ninterpreters. Built with E2B - Cloud Runtime for AI Agents.\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\ne2b-dev / code-interpreter Public\n\n  * Notifications\n  * Fork 4\n  * Star 85\n\nPython & JS SDK for building custom code interpreters. Built with E2B - Cloud\nRuntime for AI Agents.\n\ne2b.dev\n\n### License\n\nApache-2.0 license\n\n85 stars 4 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# e2b-dev/code-interpreter\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n4 Branches\n\n6 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nmlejvaUpdate README.mdApr 12, 20249a2a01c \u00b7 Apr 12, 2024Apr 12, 2024\n\n## History\n\n99 Commits  \n  \n### .changeset\n\n|\n\n### .changeset\n\n| [skip ci] Release new versions| Apr 5, 2024  \n  \n### .github\n\n|\n\n### .github\n\n| Fix typo| Apr 5, 2024  \n  \n### js\n\n|\n\n### js\n\n| Clean up SDK readmes| Apr 5, 2024  \n  \n### python\n\n|\n\n### python\n\n| Clean up SDK readmes| Apr 5, 2024  \n  \n### template\n\n|\n\n### template\n\n| Update README.md| Apr 12, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Ignore vscode| Apr 3, 2024  \n  \n### .npmrc\n\n|\n\n### .npmrc\n\n| Add .npmrc| Apr 3, 2024  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Initial commit| Mar 11, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| Update README.md| Apr 12, 2024  \n  \n### package.json\n\n|\n\n### package.json\n\n| Move dev dependencies to 'devDependencies'| Apr 8, 2024  \n  \n### pnpm-lock.yaml\n\n|\n\n### pnpm-lock.yaml\n\n| Move dev dependencies to 'devDependencies'| Apr 8, 2024  \n  \n### pnpm-workspace.yaml\n\n|\n\n### pnpm-workspace.yaml\n\n| Add JS package| Mar 27, 2024  \n  \n## Repository files navigation\n\n# Code Interpreter SDK\n\nThis Code Interpreter SDK allows you to run AI-generated Python code and each\nrun share the context. That means that subsequent runs can reference to\nvariables, definitions, etc from past code execution runs. The code\ninterpreter runs inside the E2B Sandbox - an open-source secure micro VM made\nfor running untrusted AI-generated code and AI agents.\n\n  * \u2705 Works with any LLM and AI framework\n  * \u2705 Supports streaming content like charts and stdout, stderr\n  * \u2705 Python & JS SDK\n  * \u2705 Runs on serverless and edge functions\n  * \u2705 100% open source (including infrastructure)\n\nFollow E2B on X (Twitter)\n\n## Custom E2B sandbox with Code Interpreter SDK\n\nFollow this guide if you want to customize the Code Interprerter sandbox\n(e.g.: add a preinstalled package). The customization is done via custom E2B\nsandbox template.\n\n## Installation\n\n### Python\n\n    \n    \n    pip install e2b-code-interpreter\n\n### JavaScript\n\n    \n    \n    npm install @e2b/code-interpreter\n\n## Examples\n\n### Minimal example with the sharing context\n\n#### Python\n\n    \n    \n    from e2b_code_interpreter import CodeInterpreter with CodeInterpreter() as sandbox: sandbox.notebook.exec_cell(\"x = 1\") execution = sandbox.notebook.exec_cell(\"x+=1; x\") print(execution.text) # outputs 2\n\n#### JavaScript\n\n    \n    \n    import { CodeInterpreter } from '@e2b/code-interpreter' const sandbox = await CodeInterpreter.create() await sandbox.notebook.execCell('x = 1') const execution = await sandbox.notebook.execCell('x+=1; x') console.log(execution.text) // outputs 2 await sandbox.close()\n\n### Get charts and any display-able data\n\n#### Python\n\n    \n    \n    import base64 import io from matplotlib import image as mpimg, pyplot as plt from e2b_code_interpreter import CodeInterpreter code = \"\"\" import matplotlib.pyplot as plt import numpy as np x = np.linspace(0, 20, 100) y = np.sin(x) plt.plot(x, y) plt.show() \"\"\" with CodeInterpreter() as sandbox: # you can install dependencies in \"jupyter notebook style\" sandbox.notebook.exec_cell(\"!pip install matplotlib\") # plot random graph execution = sandbox.notebook.exec_cell(code) # there's your image image = execution.results[0].png # example how to show the image / prove it works i = base64.b64decode(image) i = io.BytesIO(i) i = mpimg.imread(i, format='PNG') plt.imshow(i, interpolation='nearest') plt.show()\n\n#### JavaScript\n\n    \n    \n    import { CodeInterpreter } from '@e2b/code-interpreter' const sandbox = await CodeInterpreter.create() const code = ` import matplotlib.pyplot as plt import numpy as np x = np.linspace(0, 20, 100) y = np.sin(x) plt.plot(x, y) plt.show() `; // you can install dependencies in \"jupyter notebook style\" await sandbox.notebook.execCell(\"!pip install matplotlib\") const execution = await sandbox.notebook.execCell(code) // this contains the image data, you can e.g. save it to file or send to frontend execution.results[0].png await sandbox.close()\n\n### Streaming code output\n\n#### Python\n\n    \n    \n    from e2b_code_interpreter import CodeInterpreter code = \"\"\" import time import pandas as pd print(\"hello\") time.sleep(3) data = pd.DataFrame(data=[[1, 2], [3, 4]], columns=[\"A\", \"B\"]) display(data.head(10)) time.sleep(3) print(\"world\") \"\"\" with CodeInterpreter() as sandbox: sandbox.notebook.exec_cell(code, on_stdout=print, on_stderr=print, on_result=(lambda result: print(result.text)))\n\n#### JavaScript\n\n    \n    \n    import { CodeInterpreter } from '@e2b/code-interpreter' const code = ` import time import pandas as pd print(\"hello\") time.sleep(3) data = pd.DataFrame(data=[[1, 2], [3, 4]], columns=[\"A\", \"B\"]) display(data.head(10)) time.sleep(3) print(\"world\") ` const sandbox = await CodeInterpreter.create() await sandbox.notebook.execCell(code, { onStdout: (out) => console.log(out), onStderr: (outErr) => console.error(outErr), onResult: (result) => console.log(result.text) }) await sandbox.close()\n\n## How the SDK works\n\nThe code generated by LLMs is often split into code blocks, where each\nsubsequent block references the previous one. This is a common pattern in\nJupyter notebooks, where each cell can reference the variables and definitions\nfrom the previous cells. In the classical sandbox each code execution is\nindependent and does not share the context with the previous executions.\n\nThis is suboptimal for a lot of Python use cases with LLMs. Especially GPT-3.5\nand 4 expects it runs in a Jupyter Notebook environment. Even when ones tries\nto convince it otherwise. In practice, LLMs will generate code blocks which\nhave references to previous code blocks. This becomes an issue if a user wants\nto execute each code block separately which often is the use case.\n\nThis new code interpreter template runs a Jupyter server inside the sandbox,\nwhich allows for sharing context between code executions. Additionally, this\nnew template also partly implements the Jupyter Kernel messaging protocol.\nThis means that, for example, support for plotting charts is now improved and\nwe don't need to do hack-ish solutions like in the current production version\nof our code interpreter.\n\n## Pre-installed Python packages inside the sandbox\n\nThe full and always up-to-date list can be found in the requirements.txt file.\n\n## About\n\nPython & JS SDK for building custom code interpreters. Built with E2B - Cloud\nRuntime for AI Agents.\n\ne2b.dev\n\n### Topics\n\nai jupyter jupyter-notebook openai gpt cohere llm code-interpreter anthropic\nai-data-analysis\n\n### Resources\n\nReadme\n\n### License\n\nApache-2.0 license\n\nActivity\n\nCustom properties\n\n### Stars\n\n85 stars\n\n### Watchers\n\n3 watching\n\n### Forks\n\n4 forks\n\nReport repository\n\n## Releases 6\n\n@e2b/code-interpreter-python@0.0.3 Latest\n\nApr 5, 2024\n\n\\+ 5 releases\n\n## Packages 0\n\nNo packages published\n\n## Contributors 5\n\n## Languages\n\n  * Python 70.1%\n  * TypeScript 26.7%\n  * JavaScript 1.6%\n  * Other 1.6%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": true}
