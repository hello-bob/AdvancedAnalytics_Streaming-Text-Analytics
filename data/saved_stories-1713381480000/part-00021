{"aid": "40061654", "title": "Is Platform Engineering Just API Governance?", "url": "https://thenewstack.io/is-platform-engineering-really-just-api-governance/", "domain": "thenewstack.io", "votes": 1, "user": "wseqyrku", "posted_at": "2024-04-17 07:45:48", "comments": 0, "source_title": "Is Platform Engineering Really Just API Governance?", "source_text": "Is Platform Engineering Really Just API Governance? - The New Stack\n\nTNS\n\nSUBSCRIBE\n\nJoin our community of software engineering leaders and aspirational\ndevelopers. Always stay in-the-know by getting the most important news and\nexclusive content delivered fresh to your inbox to learn more about at-scale\nsoftware development.\n\nREQUIRED\n\nIt seems that you've previously unsubscribed from our newsletter in the past.\nClick the button below to open the re-subscribe form in a new tab. When you're\ndone, simply close that tab and continue with this form to complete your\nsubscription.\n\nThe New Stack does not sell your information or share it with unaffiliated\nthird parties. By continuing, you agree to our Terms of Use and Privacy\nPolicy.\n\nWelcome and thank you for joining The New Stack community!\n\nPlease answer a few simple questions to help us deliver the news and resources\nyou are interested in.\n\nREQUIRED\n\nREQUIRED\n\nREQUIRED\n\nREQUIRED\n\nREQUIRED\n\nGreat to meet you!\n\nTell us a bit about your job so we can cover the topics you find most\nrelevant.\n\nREQUIRED\n\nREQUIRED\n\nREQUIRED\n\nREQUIRED\n\nREQUIRED\n\nREQUIRED\n\nWelcome!\n\nWe\u2019re so glad you\u2019re here. You can expect all the best TNS content to arrive\nMonday through Friday to keep you on top of the news and at the top of your\ngame.\n\nWhat\u2019s next?\n\nCheck your inbox for a confirmation email where you can adjust your\npreferences and even join additional groups.\n\nFollow TNS on your favorite social media networks.\n\nBecome a TNS follower on LinkedIn.\n\nCheck out the latest featured and trending stories while you wait for your\nfirst TNS newsletter.\n\nPREV\n\n1 of 2\n\nNEXT\n\nVOXPOP\n\nTech Conferences: Does Your Employer Pay?\n\nDoes your employer pay for you to attend tech conferences?\n\n\u2713\n\nYes, registration and travel are comped.\n\n0%\n\n\u2713\n\nYes, just registration but not travel expenses.\n\n0%\n\n\u2713\n\nYes, travel expenses but not registration.\n\n0%\n\n\u2713\n\nOnly virtual conferences.\n\n0%\n\n\u2713\n\nNo reimbursement.\n\n0%\n\nThanks for your opinion! Subscribe below to get the final results, published\nexclusively in our TNS Update newsletter:\n\nARCHITECTURE\n\nCloud Native Ecosystem Containers Edge Computing Microservices Networking\nServerless Storage\n\nENGINEERING\n\nAI Large Language Models Frontend Development Software Development API\nManagement Python JavaScript TypeScript WebAssembly Cloud Services Data\nSecurity\n\nOPERATIONS\n\nPlatform Engineering Operations CI/CD Tech Careers Tech Culture DevOps\nKubernetes Observability Service Mesh\n\nCHANNELS\n\nPodcasts Ebooks Events Newsletter TNS RSS Feeds\n\nTHE NEW STACK\n\nAbout / Contact Sponsors Sponsorship Contributions\n\nPODCASTS EBOOKS EVENTS NEWSLETTER\n\nARCHITECTURE ENGINEERING OPERATIONS\n\nCloud Native Ecosystem Containers Edge Computing Microservices Networking\nServerless Storage\n\nTetrate Enterprise Gateway for Envoy Graduates\n\nApr 10th 2024 9:00am, by Steven J. Vaughan-Nichols\n\nThe Open Source Market\u2019s in Flux. How Can IT Managers Cope?\n\nApr 8th 2024 10:57am, by Joe Fay\n\nUse Podman to Create and Work with Virtual Machines\n\nApr 6th 2024 6:00am, by Jack Wallen\n\nKubeCon EU Q&A: Red Hat Engineer Bethany Griggs on Backstage\n\nApr 5th 2024 1:00pm, by Raghavan Srinivas\n\nGolang Variables and Data Types: An Introduction\n\nApr 4th 2024 2:00pm, by Jack Wallen\n\nKubernetes vs. YARN for Resource Management: How to Choose\n\nApr 10th 2024 8:16am, by Jacob Simkovich\n\nUse Podman to Create and Work with Virtual Machines\n\nApr 6th 2024 6:00am, by Jack Wallen\n\nPodman 5 Arrives with Multiplatform Images, VM Support\n\nApr 4th 2024 5:00am, by Jack Wallen\n\nChainguard: Outdated Containers Accumulate Vulnerabilities\n\nMar 29th 2024 3:00am, by Joab Jackson\n\nEvolve Manual and Templated Dockerfiles with Automation\n\nMar 26th 2024 10:33am, by Rak Siva\n\nChipmakers Putting a Laser Focus on Edge AI\n\nApr 12th 2024 10:06am, by Jeffrey Burt\n\nThe Future of AI: Hybrid Edge Deployments Are Indispensable\n\nMar 22nd 2024 10:00am, by Luis Ceze\n\nHow RapidAI Uses Edge, Kubernetes and AI to Boost Stroke Care\n\nMar 15th 2024 10:30am, by Charles Humble\n\nTrusted Boot: What to Know About Securing Devices at the Edge\n\nMar 14th 2024 7:15am, by Ettore di Giacinto\n\nArchitecting for Industrial IoT Workloads: A Blueprint\n\nJan 31st 2024 7:34am, by Dunith Danushka\n\nAPI Design Is Pretty Bad \u2014 Here's How to Fix It\n\nApr 3rd 2024 6:01am, by Lebin Cheng\n\nWill Spotify Open Source its Microservices Framework?\n\nApr 2nd 2024 7:45am, by Loraine Lawson\n\nEnhancing Business Security and Compliance with Service Mesh\n\nApr 1st 2024 10:00am, by Ninad Desai\n\n10 Ways Kubernetes Observability Boosts Productivity, Cuts Costs\n\nMar 27th 2024 6:08am, by Eric Schabell\n\nEvolve Manual and Templated Dockerfiles with Automation\n\nMar 26th 2024 10:33am, by Rak Siva\n\nEnhancing Kubernetes Network Security with Microsegmentation\n\nApr 11th 2024 6:23am, by Dhiraj Sehgal\n\nTetrate Enterprise Gateway for Envoy Graduates\n\nApr 10th 2024 9:00am, by Steven J. Vaughan-Nichols\n\nZero Trust for Legacy Apps: Load Balancer Layer Can Be a Solution\n\nApr 10th 2024 7:22am, by Prabhat Dixit\n\nHow Observability Is Different for Web3 Apps\n\nMar 15th 2024 12:00pm, by Sarah Morgan\n\nSimplify Kubernetes Hosted Control Planes with K0smotron\n\nMar 11th 2024 10:00am, by Jussi Nummelin\n\nMeet DBOS: A Database Alternative to Kubernetes\n\nMar 12th 2024 4:00am, by Joab Jackson\n\nPulumi Templates for GenAI Stacks: Pinecone, LangChain First\n\nFeb 21st 2024 9:00am, by Joab Jackson\n\nCNCF CloudEvents: A Li'l Message Envelope That Travels Far\n\nJan 31st 2024 4:00am, by Joab Jackson\n\nBringing the AWS Serverless Strategy to Azure\n\nJan 19th 2024 6:00am, by Rak Siva\n\nServerless Computing In 2024: GenAI Influence, Security, 5G\n\nJan 4th 2024 5:00am, by Chris J. Preimesberger\n\nHow to Get Peak Performance without a Vast Amount of Memory\n\nApr 9th 2024 10:17am, by Behrad Babaee\n\nFrom Postgres to ScyllaDB NoSQL, with a 349x Speed Boost\n\nApr 1st 2024 11:27am, by Cynthia Dunlop\n\nThe Architect\u2019s Guide: A Modern Data Lake Reference Architecture\n\nMar 26th 2024 9:17am, by Keith Pijanowski\n\nCloud Data Migration or Cloud Data Tiering?\n\nMar 25th 2024 10:00am, by Kumar Goswami\n\nKubeCon24: MinIO Object Store Equipped with Enterprise Features\n\nMar 19th 2024 2:00pm, by Joab Jackson\n\nAI Large Language Models Frontend Development Software Development API\nManagement Python JavaScript TypeScript WebAssembly Cloud Services Data\nSecurity\n\nJavaScript, Python Neck and Neck in GitHub Developer Usage\n\nApr 15th 2024 9:45am, by Darryl K. Taft\n\nIT Pioneers Assess the Future Impact of AI\n\nApr 14th 2024 6:00am, by David Cassel\n\nA Developer's Guide to Getting Started with LlamaIndex\n\nApr 13th 2024 5:00am, by David Eastman\n\nDev News: AI Coding Agent, Nue Glows, and New Android Beta\n\nApr 13th 2024 4:00am, by Loraine Lawson\n\nChipmakers Putting a Laser Focus on Edge AI\n\nApr 12th 2024 10:06am, by Jeffrey Burt\n\nA Developer's Guide to Getting Started with LlamaIndex\n\nApr 13th 2024 5:00am, by David Eastman\n\nTool Fragmentation \u2014 Is There a Fix?\n\nApr 12th 2024 9:37am, by Burhan Drak Sibai\n\n3 Reasons Tech Execs Are Slowing Down GenAI Projects\n\nApr 12th 2024 6:04am, by Mandi Walls\n\nA Coder Perspective: What It's Like to Develop an AI App\n\nApr 11th 2024 9:47am, by Loraine Lawson\n\nAI, LLMs and Security: How to Deal with the New Threats\n\nApr 11th 2024 8:20am, by Chris Pirillo\n\nDev News: AI Coding Agent, Nue Glows, and New Android Beta\n\nApr 13th 2024 4:00am, by Loraine Lawson\n\nTool Fragmentation \u2014 Is There a Fix?\n\nApr 12th 2024 9:37am, by Burhan Drak Sibai\n\nA Coder Perspective: What It's Like to Develop an AI App\n\nApr 11th 2024 9:47am, by Loraine Lawson\n\nHow Generative AI Coding Assistants Increase Developer Velocity\n\nApr 9th 2024 7:56am, by Manish Kapur\n\nReact Server Components in a Nutshell\n\nApr 9th 2024 7:21am, by Paul Scanlon\n\nA Developer's Guide to Getting Started with LlamaIndex\n\nApr 13th 2024 5:00am, by David Eastman\n\nRust Gets Security, WASI 0.2 Support, Productivity Boost\n\nApr 11th 2024 1:38pm, by Darryl K. Taft\n\nHow (and When) to Use a Python While Loop\n\nApr 10th 2024 7:55am, by Jack Wallen\n\nWebAssembly Adoption: Is Slow and Steady Winning the Race?\n\nApr 10th 2024 5:00am, by Richard Gall\n\nHow to Get Peak Performance without a Vast Amount of Memory\n\nApr 9th 2024 10:17am, by Behrad Babaee\n\nIs Platform Engineering Really Just API Governance?\n\nApr 15th 2024 12:10pm, by Jennifer Riggins\n\nWhy You Should Have 100% Faith in Zero Trust\n\nApr 15th 2024 8:11am, by Kay James\n\nWhy Don\u2019t API Platform Efforts Deliver?\n\nApr 15th 2024 6:54am, by Sagar Batchu\n\nIngress: Kubernetes Example with ngrok\n\nApr 11th 2024 9:34am, by Eric Goebelbecker\n\nHasura Visualizes Data API Integration into a 'Supergraph'\n\nApr 4th 2024 3:00am, by Joab Jackson\n\nJavaScript, Python Neck and Neck in GitHub Developer Usage\n\nApr 15th 2024 9:45am, by Darryl K. Taft\n\nA Coder Perspective: What It's Like to Develop an AI App\n\nApr 11th 2024 9:47am, by Loraine Lawson\n\nHow (and When) to Use a Python While Loop\n\nApr 10th 2024 7:55am, by Jack Wallen\n\nDev News: React 19, Nuxt 3.11, a Python GUI, Tabnine LLMs\n\nApr 6th 2024 5:00am, by Loraine Lawson\n\nWhat Are Python Lambda Functions and How Do You Use Them?\n\nApr 1st 2024 5:00am, by Jack Wallen\n\nJavaScript, Python Neck and Neck in GitHub Developer Usage\n\nApr 15th 2024 9:45am, by Darryl K. Taft\n\nDev News: React 19, Nuxt 3.11, a Python GUI, Tabnine LLMs\n\nApr 6th 2024 5:00am, by Loraine Lawson\n\nDev News: Deno Supports Open Source Repository JSR and an Offline AI\n\nMar 30th 2024 4:00am, by Loraine Lawson\n\nDev News: WordPress 6.5, Angular Signals and .NET Components\n\nMar 23rd 2024 4:00am, by Loraine Lawson\n\nDev News: Android Apps on Rust, Astro DB, and Storybook 8\n\nMar 16th 2024 4:00am, by Loraine Lawson\n\nDev News: Deno Supports Open Source Repository JSR and an Offline AI\n\nMar 30th 2024 4:00am, by Loraine Lawson\n\nAdvanced OOP in TypeScript: Interfaces and Abstract Classes\n\nMar 22nd 2024 10:30am, by Bob Reselman\n\nHow to Get Advantages of TypeScript in JavaScript\n\nOct 27th 2023 10:51am, by Phil Nash\n\nDev News: Udemy's New Docker Program, Plus TypeScript Beta\n\nOct 7th 2023 5:01am, by Loraine Lawson\n\nThe Angular Renaissance: Why Frontend Devs Should Revisit It\n\nSep 26th 2023 8:15am, by Loraine Lawson\n\nWebAssembly Adoption: Is Slow and Steady Winning the Race?\n\nApr 10th 2024 5:00am, by Richard Gall\n\nWhy WASI Preview 2 Makes WebAssembly Production Ready\n\nApr 5th 2024 6:21am, by Oscar Spencer\n\nKubeCon Europe: WebAssembly, eBPF Are Huge for Cloud Native\n\nMar 29th 2024 8:24am, by B. Cameron Gain\n\nFermyon Says WebAssembly on Kubernetes Is Now Doable\n\nMar 28th 2024 6:19am, by B. Cameron Gain\n\nWhy Wasm Wins Where Java Applets Failed\n\nMar 12th 2024 10:22am, by Liam Crilly\n\nGoogle Vaunts New Gemini Code Assist Tool at Cloud Next 2024\n\nApr 10th 2024 9:05am, by Chris J. Preimesberger\n\nIf Dev and Ops Had a Baby \u2014 It Would Be Called Winglang\n\nApr 5th 2024 10:00am, by Elad Ben-Israel\n\nLack of Data Mobility Is a Root Cause of Cloud Native Ills\n\nApr 5th 2024 9:17am, by B. Cameron Gain\n\nIT and Climate Change: A Startup Builds for a Greener Future\n\nApr 1st 2024 10:06am, by Heather Joslyn\n\nOVHcloud Unveils Roadmap to Take on Hyperscalers from Europe\n\nMar 29th 2024 6:14am, by B. Cameron Gain\n\nHow to Get Peak Performance without a Vast Amount of Memory\n\nApr 9th 2024 10:17am, by Behrad Babaee\n\nUsing SQL-Powered RAG to Better Analyze Database Data with GenAI\n\nApr 9th 2024 9:08am, by Marty Gubar\n\n5 Key Considerations for Chatbot Design\n\nApr 5th 2024 12:00pm, by Asmitha Rathis\n\nLack of Data Mobility Is a Root Cause of Cloud Native Ills\n\nApr 5th 2024 9:17am, by B. Cameron Gain\n\nGolang Variables and Data Types: An Introduction\n\nApr 4th 2024 2:00pm, by Jack Wallen\n\nLessons Learned about Secrets Protection after the Sisense Breach\n\nApr 15th 2024 10:42am, by David Melamed\n\nWhy You Should Have 100% Faith in Zero Trust\n\nApr 15th 2024 8:11am, by Kay James\n\nAttack (or Penetrate Test) Cloud Native the Easy Way\n\nApr 15th 2024 7:21am, by B. Cameron Gain\n\nDeploy the LDAP Directory System to an Ubuntu Server\n\nApr 13th 2024 6:00am, by Jack Wallen\n\nRust Gets Security, WASI 0.2 Support, Productivity Boost\n\nApr 11th 2024 1:38pm, by Darryl K. Taft\n\nPlatform Engineering Operations CI/CD Tech Careers Tech Culture DevOps\nKubernetes Observability Service Mesh\n\nWhat Comes after Internal Developer Platforms?\n\nApr 15th 2024 12:56pm, by Valerie Slaughter\n\nIs Platform Engineering Really Just API Governance?\n\nApr 15th 2024 12:10pm, by Jennifer Riggins\n\nIntegrating AI to Make Platform Engineering Intelligent\n\nApr 12th 2024 8:40am, by Michel Murabito\n\nWant to Be a Tech Company? Try Platform Engineering!\n\nApr 10th 2024 10:26am, by Luca Galante\n\nPlatform Engineering and GenAI: \u2018Get Your House in Order\u2019\n\nApr 9th 2024 5:00am, by Loraine Lawson\n\nWant to Be a Tech Company? Try Platform Engineering!\n\nApr 10th 2024 10:26am, by Luca Galante\n\nZero Trust for Legacy Apps: Load Balancer Layer Can Be a Solution\n\nApr 10th 2024 7:22am, by Prabhat Dixit\n\nHighlight.io: Open Source Application Monitoring for Developers\n\nApr 9th 2024 10:00am, by Jay Khatri\n\n2 Ways AI Assistants Are Changing Kubernetes Troubleshooting\n\nApr 8th 2024 12:00pm, by Blair Rampling\n\nHow to Code First with Design-First Benefits\n\nApr 2nd 2024 7:16am, by Rak Siva\n\nWhat Comes after Internal Developer Platforms?\n\nApr 15th 2024 12:56pm, by Valerie Slaughter\n\nLessons Learned about Secrets Protection after the Sisense Breach\n\nApr 15th 2024 10:42am, by David Melamed\n\nWhy Don\u2019t API Platform Efforts Deliver?\n\nApr 15th 2024 6:54am, by Sagar Batchu\n\nGitOps Makes for Great DevEx, but Pragmatism Matters\n\nApr 9th 2024 6:30am, by Steve Fenton\n\nBeyond Git: A New Collaboration Model for AI/ML Development\n\nApr 2nd 2024 10:00am, by Gorkem Ercan\n\nWhy Military Vets Are the Drama-Free Problem Solvers You Need\n\nMar 28th 2024 9:20am, by Joe Fay\n\nUsing AI to Improve Bad Business Writing\n\nMar 26th 2024 5:00am, by Jon Udell\n\nDevelopers Share What Helped Them Land New Roles\n\nMar 25th 2024 6:45am, by Jeff James\n\nUS Tech Cannot Comprehend the Digital Nomad Way of Life\n\nMar 23rd 2024 3:00am, by Paul Scanlon\n\nTech Works: How to Identify and Address Burnout on Your Team\n\nMar 22nd 2024 5:00am, by Jennifer Riggins\n\nIT Pioneers Assess the Future Impact of AI\n\nApr 14th 2024 6:00am, by David Cassel\n\nC# Compiler Lead Jared Parsons on 20 Years at Microsoft\n\nApr 7th 2024 6:00am, by David Cassel\n\nCustomer-Obsessed? 4 Steps to Improve Your Culture\n\nApr 5th 2024 8:21am, by Bharani Manapragada\n\nDeveloper Joy is the Productivity Metric You\u2019re Missing\n\nApr 4th 2024 12:06pm, by Jennifer Riggins\n\n4 Steps for Getting Over a DevOps Plateau\n\nApr 4th 2024 5:57am, by Andy Corrigan\n\nGitOps Makes for Great DevEx, but Pragmatism Matters\n\nApr 9th 2024 6:30am, by Steve Fenton\n\nPlatform Engineering and GenAI: \u2018Get Your House in Order\u2019\n\nApr 9th 2024 5:00am, by Loraine Lawson\n\nHow Platform Engineering Takes on DevOps Challenges\n\nApr 8th 2024 6:49am, by Kenn Hussey\n\nWhy Flux Isn\u2019t Dying after Weaveworks\n\nApr 8th 2024 5:00am, by B. Cameron Gain\n\nKubeCon EU Q&A: Red Hat Engineer Bethany Griggs on Backstage\n\nApr 5th 2024 1:00pm, by Raghavan Srinivas\n\nAttack (or Penetrate Test) Cloud Native the Easy Way\n\nApr 15th 2024 7:21am, by B. Cameron Gain\n\nIngress: Kubernetes Example with ngrok\n\nApr 11th 2024 9:34am, by Eric Goebelbecker\n\nEnhancing Kubernetes Network Security with Microsegmentation\n\nApr 11th 2024 6:23am, by Dhiraj Sehgal\n\nTetrate Enterprise Gateway for Envoy Graduates\n\nApr 10th 2024 9:00am, by Steven J. Vaughan-Nichols\n\nKubernetes vs. YARN for Resource Management: How to Choose\n\nApr 10th 2024 8:16am, by Jacob Simkovich\n\nHighlight.io: Open Source Application Monitoring for Developers\n\nApr 9th 2024 10:00am, by Jay Khatri\n\nWhy Observability Can't Measure What Really Matters\n\nMar 29th 2024 9:16am, by Vicki Walker\n\nLarge Language Model Observability: The Breakdown\n\nMar 28th 2024 1:46pm, by Alex Williams\n\nWill the Real Test Observability Please Stand up?\n\nMar 27th 2024 7:27am, by Ken Hamric\n\n10 Ways Kubernetes Observability Boosts Productivity, Cuts Costs\n\nMar 27th 2024 6:08am, by Eric Schabell\n\nEnhancing Business Security and Compliance with Service Mesh\n\nApr 1st 2024 10:00am, by Ninad Desai\n\nSome Linkerd Users Must Pay: Fear and Anger Explained\n\nFeb 28th 2024 9:21am, by B. Cameron Gain\n\nBuoyant Revises Release Model for the Linkerd Service Mesh\n\nFeb 21st 2024 9:30am, by Joab Jackson\n\nIstio Advisor Plus GPT: Expert System Meets AI for Service Mesh\n\nDec 14th 2023 12:15pm, by Steven J. Vaughan-Nichols\n\nUsing JWTs to Authenticate Services Unravels API Gateways\n\nNov 8th 2023 6:53am, by Christian Posta and Peter Jausovec\n\n2024-04-15 12:10:08\n\nIs Platform Engineering Really Just API Governance?\n\nsponsor-andela,sponsored-topic,\n\nAPI Management / Platform Engineering\n\n# Is Platform Engineering Really Just API Governance?\n\nDoes it matter if you call it platform engineering or API governance? Map out\nand standardize your APIs so they can be easily accessed internally and\nreused.\n\nApr 15th, 2024 12:10pm by Jennifer Riggins\n\nMark Boyd at the API Conference in London, April 10. Image by Jennifer\nRiggins.\n\nVOXPOP\n\nTry our new 5 second poll. It's fast. And it's fun!\n\nTech Conferences: Does Your Employer Pay?\n\nDoes your employer pay for you to attend tech conferences?\n\nYes, registration and travel are comped.\n\nYes, just registration but not travel expenses.\n\nYes, travel expenses but not registration.\n\nOnly virtual conferences.\n\nNo reimbursement.\n\nWe'd love to hear what you think.\n\nLONDON \u2014 \u201cIf API governance and platform engineering had a Venn diagram,\nthey\u2019d be a circle,\u201d contended Mark Boyd, director of Platformable, during his\nkeynote at the API Conference April 10.\n\nHe doesn\u2019t distinguish between your API governance toolkit and your platform\nengineering strategy. And maybe you shouldn\u2019t either. After all, both\nprioritize the same ideal customer profile: your internal developer colleague.\n\nIndeed, APIs have emerged as the preferred way that developers want to access\nand build on top of any internal developer portals and golden paths to\nproduction. And a focus on API and data standardization and cross-\norganizational service reusability is at the foundation of any platform\nstrategy.\n\n\u201cThe API is the tail wagging the dog,\u201d Boyd argued, \u201cas so often APIs can\nfundamentally change the business.\u201d\n\nExternally available APIs create an ecosystem around the business, he said,\nopening up new routes to market. APIs become a cross-functional language that\nallows both technical and business stakeholders to communicate. And, he said,\nbuilding an API ecosystem with different business units allows for cross-\norganization collaboration \u2014 like via an internal developer platform \u2014 instead\nof fostering internal competition for time and teams.\n\nAndela provides the world\u2019s largest private marketplace for global remote tech\ntalent driven by an AI-powered platform to manage the complete contract hiring\nlifecycle. Andela helps companies scale teams & deliver projects faster via\nspecialized areas: App Engineering, AI, Cloud, Data & Analytics.\n\nLearn More\n\nThe latest from Andela\n\nNavigating the future of work with generative AI and stellar UX design | Future of Work | Andela\n\n15 April 2024\n\nHow to Build a RAG-Powered LLM Chat App with ChromaDB and Python | Tech Trends | Andela\n\n15 April 2024\n\nPlatform and Mobile App Engineering: How They Work Together | Future of Work | Andela\n\n15 April 2024\n\nThis is especially relevant today, at a time when everyone is trying to do\nmore with less, to increase developer productivity right when developer\nburnout is running high.\n\nSo what does a lightweight API governance strategy look like? How do you\novercome API complexity? asked the APICon audience. Here\u2019s how to streamline\nthat complexity now.\n\nTRENDING STORIES\n\n  1. Is Platform Engineering Really Just API Governance?\n  2. Why Don\u2019t API Platform Efforts Deliver?\n  3. API Design Is Pretty Bad \u2014 Here's How to Fix It\n  4. gRPC: A Deep Dive into the Communication Pattern\n  5. The Economics of API Attacks and How Developers Can Stop Them\n\n## The Challenge of API Sprawl\n\nHow does an API life cycle start? Usually in isolation. An API user, Boyd\nreflected, needs something and the solution architect looks to either extend\nan existing API or, more often, create a new API. A product manager may be\ninvolved but only at the beginning stages, for gathering requirements.\n\nThere\u2019s very little checking what\u2019s already out there \u2014 likely because there\nusually aren\u2019t simple ways to do that. And there\u2019s rarely standardization\naround APIs to boot.\n\nOnly about half the APICon audience raised their hands when asked if they use\nAPI specification formats like OpenAPI, AsyncAPI and AWS RAM. Use of these\nformats can cultivate uniformity across an organization and potentially save\ntime, as at least this activity means there\u2019s a definition of an API written\nout in an understandable and consistent format.\n\nIn addition, only a few members of the audience said they created or reused\ndata object schemas: meaning each API could potentially use a different data\nmodel to describe the same sorts of things.\n\nBoyd gave the example of a user account: each API may create a user account\ndata model slightly differently: some may use FirstName, LastName, title,\norganization, and email, others may make one field name for first and last\nname, and then just ask for an email address, while others may have even more\nfields.\n\n## Map Out the Ideal Developer Journey\n\nTo apply API governance when creating a new API, Boyd recommended you begin by\nmapping out the developer\u2019s journey. Ask: What are the pain points? What\nprogramming languages do they use? What architectural patterns do they rely\non?\n\nWrite down your use case description for the API at the start \u2014 not just the\nAPI name, he emphasized. This practice helps the API architect verbalize what\ntheir API is intended to achieve. This description can then be included at the\nstart of your documentation, which increases discoverability, which in turn\nincreases reusability. And, if you\u2019re planning to expose your API and\ndocumentation externally, it increases your human and machine-readable\nsearchability.\n\n\u201cThat sort of little user story templating helps stop developers [from]\nleaving their flow and thinking: OK, what model should I use?\u201d Boyd said.\n\nIt also helps with API discovery and reusability across the organization.\nEverything becomes more easily searchable through an internal developer portal\nor API catalog, so this API will be more likely found and reused, which is\nmuch cheaper than building from scratch.\n\nFinally, as we move into the generative AI developer productivity space, this\nquick exercise of jotting down what an API is intended for also makes it more\nmachine-readable, which increases the possibility for it to be suggested by a\nGenAI coding assistant. These steps help decrease interruptions to developer\nflow and eventually save time and money, as developers focus on new,\ndifferential work.\n\nTo help foster even more design thinking, Boyd also recommended writing a\npress release, even if it is likely never to be shared.\n\n\u201cImagine it\u2019s the end of the project. You\u2019re releasing that API, or the new\nfeatures of an API. And you\u2019re describing it externally, what\u2019s it going to\ndo? What value is it going to create for others? How will people use it?\u201d\n\nHe said this public relations practice \u201cwill help clarify your thinking about\nall of the things that you need in that API as well.\u201d\n\n## Where Platform Engineering Comes in\n\nPlatform engineering is a sociotechnical practice that looks to reduce the\ncomplexity and cognitive load that comes from disparate tooling, by creating a\nsingle pane of glass view of shared services to better serve the internal\ndeveloper. API governance via a platform or internal developer portal enables\nservice and API reusability, instead of teams building everything from\nscratch.\n\nA key pillar of platform engineering is the laying down of golden paths, which\nBoyd called \u201cagreed upon architecture.\u201d These are typically the simplest way\nto accomplish a repeated activity. By clarifying these paved routes,\norganizations typically see a reduction of complexity and developer cognitive\nload, which in turn speeds up the delivery of value to the end user.\n\nSince Conway\u2019s Law reigns supreme, communication structure and technology are\nintrinsically linked. Boyd offered up another platform favorite, Team\nTopologies, an engineering management system that can help organize teams\naround a new way of shared API governance.\n\nIntroducing a Team Topologies approach requires organizational restructuring\nand reallocation of resources from stream/line of business teams to a\ncentralized platform team, and giving them the authority to support line-of-\nbusiness teams to use common tooling across the organization.\n\n\u201cOften, APIs have gone out to lines-of-business where each line of business\nhas their own API teams building their own APIs independently,\u201d Boyd said.\n\nMuch of the tech industry is moving slowly toward a platform team that offers\ncentralized services to what Team Topologies refer to as stream-aligned teams.\nIt doesn\u2019t enforce API governance on these teams but rather a Platform as a\nProduct mindset compels these stream-aligned teams to adopt golden paths\nbecause it\u2019s just easier. You might have to persuade teams that this is indeed\nthe path of least resistance.\n\nTeams may push back, Boyd warned, claiming, \u201cOur line of business is very\nunique and very special.\u201d Not every team has to follow your golden paths, but\nthe platform team must persevere in its attempts to centralize resources\ncommon to the whole or the majority of business lines.\u201d\n\nThis can include the API catalog and an API management solution.\u201cEven the\ndeveloper personas could be owned by that sort of central team,\u201d Boyd said,\n\u201cbecause those developer personas might be matching for multiple lines of\nbusiness.\u201d\n\nJust remember to start small. He emphasized the importance of API\ndocumentation and cross-organizational API discoverability as the first steps\nto the thinnest viable platform. Because, judging by the reaction of the\nAPICon audience, very few platform teams have big budgets, so you\u2019ll have to\nwork with what you\u2019ve got.\n\nWe are constantly in a state of bundling and unbundling in the tech industry,\nBoyd said. The popularity of platform engineering and Team Topologies is just\nthat pendulum swinging back from the recent extremes of developer autonomy\ntoward re-bundling common services. In a time of trying to do more with less,\nthis is sensible, but also it helps address tool overload and cognitive load.\n\n## Design a Reusable Developer Experience\n\nOften In the API development stage, \u201cI see the product manager being released\nfrom their duties too early,\u201d Boyd said. And then they aren\u2019t often brought in\nuntil the API is ready for deployment.\n\n\u201cWe need more product managers in the room,\u201d he said to an audience of mostly\nAI architects and API engineers \u2014 and only one API product owner.\n\nThis is a mistake, he argued, especially when your API catalog and developer\nplatform need to be \u201csold\u201d to your internal customers. Plus, it\u2019s unnecessary\nto exclude them since, when using something like the OpenAPI specification,\nyou are able to communicate in a human-readable way that allows business and\ntech to communicate more easily.\n\n\u201cYou can walk through it and talk about what some of the functionalities\nyou\u2019re exposing are and just double-check that [it] matches those functional\nrequirements that they\u2019ve helped identify in the first place,\u201d Boyd advised.\n\nWhile the product doesn\u2019t stick around long enough, security often isn\u2019t\nbrought in until the end of API creation, which risks not just code security\nand stability, but all that work being for naught if security doesn\u2019t clear\nit. It\u2019s especially important to bring security in early, he said, if the API\nis going to expose any data or services externally, \u201cso that you don\u2019t have to\nremake those decisions.\u201d\n\nSecurity guidelines are an excellent way to address security early, he said.\nWhen his team at the data and tooling startup Platformable works with clients\nto write an OpenAPI specification, each item of data in a model that\u2019s being\nexposed is given a risk factor \u2014 low, medium or high \u2014 considering an\norganization\u2019s data sensitivity, compliance risk, and brand risk. The higher\nthe risk, the earlier in the API development life cycle you bring security in.\n\n## Use an API Style Guide and Data Standards\n\nAn API style guide contributes to that consistency that drives reusability,\nbut it isn\u2019t something you need to create from scratch. The API Stylebook is a\ncollection of guidelines and resources for API designers. Boyd touted\nZalando\u2019s RESTful API Guidelines and the Adidas API design guidelines as\nexemplary.\n\nSince APIs expose data, API governance is really about data governance too, he\ncontended. \u201cWhat I see in a lot of businesses is API governance and data\ngovernance are seen as completely different.\u201d\n\nSince APIs are usually scattered across organizations, API architects can make\nthe lives of the data teams easier by creating an agreed-upon taxonomy of\nfunctionalities. This can include setting field standards, like trying to\ninfluence whether to use \u201cuser\u201d or \u201caccount,\u201d and whether you use \u201cfirst,\nlast\u201d in a single field or in separate fields.\n\nWhen moving to an API governance model, you don\u2019t have to go back and update\nall your APIs, he said. But you can follow those outlined steps when designing\nnew APIs and when updating older ones.\n\nFollow API architecture influencer Mike Amundsen\u2019s advice on guide\nimplementations with the EASE rubric, Boyd said, which helps you assess\nwhether to go back and refactor existing legacy technologies to meet new\ngovernance guidelines. The EASE rubric considers four identifiable qualities:\n\n  * Effective. Does the API work as it\u2019s intended to?\n  * Available. Is it accessible in the format/s and language/s most users want it in?\n  * Scalable. Can the API meet its user needs at any time of day or at any traffic load?\n  * Efficient. Does it meet all the user needs without a lot of effort, time or complications?\n\n\u201cA key thing to keep in mind is that not all solutions need to excel at all\nfour qualities. If the API is only used internally by a single team, then it\nis likely that it will have only minimal scalability and efficiency,\u201d Amundsen\nwrote. \u201cAnd might only need a bit of extra work in order to meet availability\nneeds.\u201d\n\nBut if an API is to be exposed or have a cross-organizational functionality,\nit needs to score high on all four, which means it is more likely that the new\nAPI governance framework you are introducing (such as style guides) should be\nimposed.\n\n## The Power of an Internal Developer Portal\n\nAPI sprawl is something the industry has been grappling with for over a decade\nnow triggering a huge discoverability problem. For too long, siloed teams have\nbeen using APIs as a way to connect both internal and external services and\ndata with both internally and externally created APIs.\n\nNo organization really knows how many APIs are connecting which services and\nexposing what data. This makes both API standardization and security more\nchallenging.\n\nFortunately, Boyd argues that the industry\u2019s scaled adoption of internal\ndeveloper portals is really just another \u2014 perhaps more efficient \u2014 way of\napproaching API portfolio management. Specifically, since a great early win of\nany platform engineering initiative is service discoverability, anything that\ncan facilitate the creation of an internal API catalog is welcome.\n\n\u201cWith internal catalogs, at least all of the APIs could be listed in one place\nso people can see. You can actually have in an internal developer portal the\ndata models as well, so people can [also] reuse those.\u201d\n\nHis team is trying to cultivate a developer\u2019s reflex, he added, so that\n\u201cwhenever you have to build something new for your API, you should be\nthinking, \u2018Hang on a second. Let me check the internal catalog to see whether\nor not we\u2019ve already got one of those\u2019\u201d data models or APIs.\n\nBoyd mentioned four different internal developer portal tools:\n\n  * Backstage. Spotify\u2019s open source internal developer platform, which he commented, currently requires a product manager to help maintain the \u201chot mess\u201d documentation and overall product complexity, like the extra step of needing to add a line of code to each API description that matches Backstage\u2019s YAML implementation requirements.\n  * Mia Platform. A cloud native platform builder that helps you build and manage your IDP.\n  * ApiShare. An API governance tool that tracks producers and consumers of APIs within your ecosystem.\n  * Port. A proprietary internal developer portal that Boyd called \u201ca more user-friendly version of Backstage with a generous free tier.\u201d\n\nHe also suggested looking at Stoplight, recently acquired by SmartBear, as an\nAPI design tool. \u201cWhat I love about this is you can actually define your style\nguide in it,\u201d Boyd said. \u201cAnd then, as you\u2019re building your OpenAPI\nspecification, it\u2019s telling you whether or not you\u2019re out of bounds from your\nown style guide.\u201d\n\nIf you have an external API ecosystem, you can even publicly release your\nstyle guide. Stoplight also maintains Spectral, an open source linter, which\ncan check your API design against your style guide, industry standards or more\nwidely accepted API design best practices.\n\nHe also recommended running all your APIs through 42crunch, an API security\nplatform that can take an OpenAPI description and assess its robustness. He\nalso pointed to new open source tools that perform similar assessments, such\nas the recently released open source OWASP Ruleset.\n\nBut, as he said, the immense API Landscape is continuously expanding \u2014\nparticularly if you follow Boyd\u2019s overlap of API governance and platform\nengineering. To date, it features 2,159 API tools.\n\n## Measure API Governance Success\n\nNo matter what you choose \u2014 and whatever you call this strategy of service and\nAPI standardization and reusability \u2014 Boyd urges that you remember your\ninternal developers are your customers. You should be publishing your roadmap\nand sharing it with them to get feedback. This also enables inner sourcing\nwhere you can leverage the work of developers organization-wide, which is\nespecially important in these tighter times.\n\nAnd of course, measure the results of your program. Some metrics you could\ntrack include:\n\n  * Infrastructure savings. This includes licensing and operations expenditures.\n  * Quality. Measure this via the number of support calls and incidents. Also, Boyd added, check how often your documentation is being updated.\n  * Adoption and usage rates. This can be especially challenging when you can\u2019t always know where API calls are coming from, Boyd acknowledged. Sometimes subscription data can help. Also how often is your documentation being used?\n  * Net Promoter Score (NPS). How likely are your developers to recommend your tooling?\n  * The number of APIs cataloged. Due to API sprawl, this will be an ongoing process.\n  * Cost reduction. Include both customer acquisition costs and the decreased costs of reducing vulnerabilities.\n\n\u201cYour metrics may vary,\u201d Boyd emphasized, noting many of these ideas were\npresented by John Musser in his work on Ford\u2019s platform engineering program.\nOne key metric his team uses is developer days saved per project and overall,\ncalculated as a monetary value of dollars saved by the organization by\nintroducing standardized approaches.\n\n## Start Small, Track Developer Happiness\n\nKick-off any API governance or platform engineering initiative by asking your\ndevelopers what their pain points are, and craft your strategy from there. And\nkeep track of data like the four golden signals \u2014 latency, traffic, errors and\nsaturation.\n\nWhen in doubt, creating an ideal developer flow, Boyd said, should look to\ncontinuously answering three questions:\n\n  1. Are developers happy?\n  2. Are costs reduced?\n  3. Is time to market faster?\n\nJust remember, he said, as you face this complexity: \u201cYou\u2019ve got to start\nsmall and show the benefits to your team and to all decision makers involved.\u201d\n\nJennifer Riggins is a culture side of tech storyteller, journalist, writer,\nand event and podcast host, helping to share the stories where culture and\ntechnology collide and to translate the impact of the tech we are building.\nShe has been...\n\nRead more from Jennifer Riggins\n\nSHARE THIS STORY\n\nTRENDING STORIES\n\n  1. Is Platform Engineering Really Just API Governance?\n  2. Why Don\u2019t API Platform Efforts Deliver?\n  3. API Design Is Pretty Bad \u2014 Here's How to Fix It\n  4. gRPC: A Deep Dive into the Communication Pattern\n  5. The Economics of API Attacks and How Developers Can Stop Them\n\nAmazon Web Services, Mia Platform and Port are sponsors of The New Stack.\n\nSHARE THIS STORY\n\nTRENDING STORIES\n\n  1. Is Platform Engineering Really Just API Governance?\n  2. Why Don\u2019t API Platform Efforts Deliver?\n  3. API Design Is Pretty Bad \u2014 Here's How to Fix It\n  4. gRPC: A Deep Dive into the Communication Pattern\n  5. The Economics of API Attacks and How Developers Can Stop Them\n\nInsights From Our Sponsor\n\nAndela provides the world\u2019s largest private marketplace for global remote tech\ntalent driven by an AI-powered platform to manage the complete contract hiring\nlifecycle. Andela helps companies scale teams & deliver projects faster via\nspecialized areas: App Engineering, AI, Cloud, Data & Analytics.\n\nLearn More\n\nNavigating the future of work with generative AI and stellar UX design | Future of Work | Andela\n\n15 April 2024\n\nHow to Build a RAG-Powered LLM Chat App with ChromaDB and Python | Tech Trends | Andela\n\n15 April 2024\n\nPlatform and Mobile App Engineering: How They Work Together | Future of Work | Andela\n\n15 April 2024\n\n3 AI Tools to Boost Your Productivity 4x | Future of Work | Andela\n\n15 April 2024\n\nClosing the skills gap: My quest to master user research | Upskill / Reskill | Andela\n\n5 April 2024\n\nQualified and Learnosity Partnership: Bridging the Skills Gap with Developer Assessments | Partnerships | Andela\n\n3 April 2024\n\nTNS DAILY NEWSLETTER Receive a free roundup of the most recent TNS articles in\nyour inbox each day.\n\nThe New Stack does not sell your information or share it with unaffiliated\nthird parties. By continuing, you agree to our Terms of Use and Privacy\nPolicy.\n\nDownload the Andela guide and help lead your organization towards innovation\nand positive ROI.\n\nARCHITECTURE\n\nCloud Native Ecosystem Containers Edge Computing Microservices Networking\nServerless Storage\n\nENGINEERING\n\nAI Large Language Models Frontend Development Software Development API\nManagement Python JavaScript TypeScript WebAssembly Cloud Services Data\nSecurity\n\nOPERATIONS\n\nPlatform Engineering Operations CI/CD Tech Careers Tech Culture DevOps\nKubernetes Observability Service Mesh\n\nCHANNELS\n\nPodcasts Ebooks Events Newsletter TNS RSS Feeds\n\nTHE NEW STACK\n\nAbout / Contact Sponsors Sponsorship Contributions\n\nroadmap.sh\n\nCommunity created roadmaps, articles, resources and journeys for developers to\nhelp you choose your path and grow in your career.\n\nFrontend Developer Roadmap Backend Developer Roadmap Devops Roadmap\n\n\u00a9 The New Stack 2024\n\nDisclosures Terms of Use Advertising Terms & Conditions Privacy Policy Cookie\nPolicy\n\nFOLLOW TNS\n\nFOLLOW TNS\n\nTNS DAILY\n\nSome TNS posts require third-party cookies to view embedded content (video,\naudio, technical & interactive content).\n\nBy clicking \u201cAccept\u201d you agree to our use of these cookies in accordance with\nour Cookie Notice.\n\nCookie Policy\n\n## The New Stack's Cookies Usage\n\nWhen you visit, the website may store or retrieve information on your browser,\nmostly in the form of cookies. This information might be about you, your\npreferences or your device, but does not usually directly identify you. The\ninformation is mostly used to make the website display the embedded content\nyou expect to see and work the way you expect it to. Cookie Policy\n\n### Manage Consent Preferences\n\n#### Strictly Necessary Cookies\n\nAlways Active\n\nThese cookies are necessary for the website to function and cannot be switched\noff in our systems. They are usually only set in response to actions made by\nyou which amount to a request for services, such as setting your privacy\npreferences, logging in or filling in forms. You can set your browser to block\nor alert you about these cookies, but some parts of the site will not then\nwork. These cookies do not store any personally identifiable information.\n\n#### Functional Cookies\n\nThese cookies enable the website to provide enhanced functionality and\npersonalisation. They may be set by us or by third party providers whose\nservices we have added to our pages. If you do not allow these cookies then\nsome or all of these services may not function properly.\n\n#### Performance Cookies\n\nThese cookies allow us to count visits and traffic sources so we can measure\nand improve the performance of our site. They help us to know which pages are\nthe most and least popular and see how visitors move around the site. All\ninformation these cookies collect is aggregated and therefore anonymous. If\nyou do not allow these cookies we will not know when you have visited our\nsite, and will not be able to monitor its performance.\n\n#### Targeting Cookies\n\nThese cookies may be set through our site by our advertising partners. They\nmay be used by those companies to build a profile of your interests and show\nyou relevant adverts on other sites. If you do not allow these cookies, you\nwill experience less targeted advertising.\n\n### Vendors List\n\nlabel\n\nConsent Leg.Interest\n\nlabel\n\nlabel\n\nlabel\n\n", "frontpage": false}
