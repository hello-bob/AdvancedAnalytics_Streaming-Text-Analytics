{"aid": "40057170", "title": "Why you're overspending on Observability vendors, and what to do about it", "url": "https://www.datable.io/post/why-youre-overspending-on-observability", "domain": "datable.io", "votes": 1, "user": "jacobprall", "posted_at": "2024-04-16 21:02:18", "comments": 0, "source_title": "datable", "source_text": "datable\n\n# Why you\u2019re overspending on Observability vendors, and what to do about it\n\nApril 16, 2024\n\nObservability (the collection and analysis of logs, metrics, and traces) is a\nhard requirement to understand and maintain cloud native applications.\nObservability vendors like Splunk, Datadog and New Relic offer a wide range of\nobservability products that make monitoring system health possible and\n(fairly) painless.\n\nBut you don\u2019t have to look far to find stories of exorbitant and unexpected\nobservability vendor bills.\n\nToday, drawing on over a decade of experience at New Relic, I\u2019m going to break\ndown how traditional observability vendors can end up being so expensive, and\nwhat you can do about it.\n\n## The Devil\u2019s in the Details - Vendor Pricing Models\n\nIn general, observability vendor pricing is at best opaque, and at worst\nmisleading. The complexity surrounding different products and pricing models\nis one of the primary drivers of unexpected and excessive observability\nspending. To make matters worse, pricing models may seem similar across\ncompanies on the surface, but can be starkly different under the hood.\n\nHere are the most common pricing models at a high level, as well as some of\nthe gotchas you can look out for next time you speak with your sales rep.\n\n#### User-based Pricing\n\nProducts that charge on a per-seat or per-active-user basis are the easiest to\nunderstand and forecast. There isn\u2019t a lot you can do to reduce costs here,\nbesides freeing up seats.\n\n#### Host-based Pricing\n\nProducts and services that fall under this category are charged per host\nmonitored. Historically, this model mapped well to monitoring co-located\nhardware. You wanted to monitor your rack, so you paid by the CPU or host.\nThis pricing model doesn\u2019t make as much sense in a cloud-native world, where\nresources are dynamically allocated.\n\nBecause of overage costs, you\u2019re incentivized to over-provision resources (ie.\nspend a lot more). Ironically, this method can also discourage best practices\nfor high availability and redundancy, as the cost of monitoring additional\ninstances for these reasons can significantly increase your bill.\n\n#### Volume/Consumption-based Pricing\n\nThis is where things start to get murky. While it may seem straightforward on\nthe surface, volume-based pricing is often the most opaque and unpredictable\npricing model. These models need to encapsulate the cost of ingesting the data\ninto the vendor\u2019s platform, indexing that data, and compute used to query that\ndata.\n\nHow your data is treated and metered makes a huge difference in what you pay.\nUnfortunately, how your data is handled and measured is often obfuscated by\nproviders, or simply never shared.\n\nFor example, some providers will transform log strings into JSON objects -\nbefore metering occurs. That can easily multiply the number of bytes ingested\nby 100x. Another consideration is whether or not the provider wraps your data\nwith additional metadata before metering. This is data you don\u2019t have any\ncontrol over, but will pay for nonetheless.\n\n#### An Ode to Overages\n\nWhen you commit to a set level of resource consumption, you lock in more\naffordable rates. This makes sense - it works the same with your phone plan.\nBut unlike your phone plan, observability data is incredibly hard to forecast.\nThings out of your control - a spike in traffic, a DDoS attack, or an errant\nlog producer can push your usage above the committed threshold - and that\u2019s\nwhere costs really start to spiral out of control.\n\n#### Feature-based pricing\n\nDon\u2019t forget the add-ons! Enterprises are upsold SSO, \u201centerprise\u201d\nintegrations, longer retention periods, better support, audit logs, and other\nbells and whistles - each with their own pricing model.\n\n#### The Real Kicker - \u201cBut What if...?\u201d\n\nAll of this complexity makes reasoning about your actual needs way more\ndifficult than it needs to be. Vendors will often couple this complexity with\nan appeal to legitimate fears you might have about outages. The result? Over-\nprovisioning and wasteful consumption. Do you really need to keep that trace\ndata for 30 days?\n\nThere is clearly a lot of nuance involved in the pricing of observability\nproducts. Some of it is to be expected - logs, metrics and traces are all\ndifferent in nature, and you\u2019d expect their treatment to be different.\n\nBut when you look at a company like Datadog, you\u2019ll find they have dozens of\nproducts, sub-products, and add-ons, each with their own fineprint and pricing\nmodel. The excessive complexity means that turning their rules into a concrete\nframework to optimize spending is nearly impossible. That\u2019s how orgs end up in\nsituations where they are much more likely to under-/over-commit to usage, and\nwhere teams are more likely to inadvertently trigger massive fees based on\nminor changes.\n\nIt\u2019s a bit of a shakedown - you need observability, and the observability\nvendors know it. But not all hope is lost. There is a very good chance that\nyou can significantly lower your bill through negotiations.\n\n## Negotiating your way to a lower observability bill\n\nAs with most SaaS services, observability vendors charge a handsome premium\nand enjoy hefty margins. That leaves a lot of wiggle room. The key to\nsuccessfully negotiating a lower price with your observability vendors lies in\nbuilding leverage. Understanding how to effectively communicate and leverage\nyour position can lead to substantial savings and more favorable terms.\n\n##### Step 1: Just Ask\n\nIf you\u2019re talking to a sales rep, you can get a discount. Ask what they can do\nfor you - you might be surprised at how much the needle will move.\n\n##### Step 2: Abstract Your Observability Tooling\n\nThe foundation of any negotiation is leverage. One of the most effective\nstrategies to build leverage is to decouple your telemetry data generation and\ncollection from your observability vendor. Open-source tooling like\nOpenTelemetry (OTel) allows you to collect and send data to multiple\nobservability platforms simultaneously, giving you the flexibility to switch\nvendors or use multiple services as needed. This not only provides leverage in\nnegotiations, but also ensures that you're not locked into a single vendor,\nreducing the risk of vendor lock-in and increasing your bargaining power.\nShameless plug, but observability pipeline tools like Datable.io also make it\neasy to evaluate and churn between different vendors by applying routing and\nfiltering logic to your data in real-time.\n\nWhile moving from a vendor\u2019s tools to OTel can be a significant engineering\nlift, the threat of making that move (and sending less data) will be enough to\nunlock some discounts.\n\n##### Step 3: Play Vendors Off Each Other\n\nChurn is a four letter word. In a very similar vein to abstracting your\nobservability tooling, just invoking a competitor\u2019s name will instill fear in\nyour sales rep.\n\nThe observability market is competitive, and playing vendors against each\nother is a highly effective negotiation tactic. Let each vendor know that\nthey're in competition for your business. This can lead to more competitive\npricing and better service offerings as each vendor tries to win or retain\nyour business.\n\n##### Step 4: Time Your Negotiation\n\nTiming can significantly impact the outcome of your negotiations. Engaging\nwith your sales rep towards the end of a quarter or fiscal year can be\nshockingly successful, as sales teams are often under pressure to meet quotas\nand more likely to offer concessions to close deals. This is a well-known\nstrategy in sales negotiations and can be particularly effective in the SaaS\nindustry.\n\n##### Step 5: Just Ask Again\n\nIf you followed the above steps, congratulations, you\u2019re holding all the\ncards! At this point, you can get creative. I\u2019ve seen customers drop their\ndata volume by 10x as part of their negotiation strategy. All is fair in love\nand observability.\n\nFollowing these steps isn\u2019t a guarantee, but it\u2019s more than worth a try. After\ndropping INFO level logs, negotiating your bill is the fastest and most\neffective way to cut your cloud costs.\n\n## Wrapping up\n\nAt the end of the day, everyone needs Observability, and vendors know it.\nObservability vendors do provide a lot of value, but the cost of using these\ntools is unnecessarily opaque. With a little confidence and the right\nleverage, you can make a big impact on your cloud spend in a fairly short\namount of time.\n\nI hope you found today\u2019s article useful. In our next blog, we\u2019ll look at some\nof the technical and architectural decisions you can implement to reduce your\nobservability spend and increase your operational efficiency.\n\nAt Datable.io, we're in the business of saving users money and improving the\nusefulness of telemetry data. If you're interested in taking control of your\nobservability data, sign up for our private beta waitlist.\n\nStay tuned!\n\nTake control of your telemetry data\n\nJoin the waitlist\n\nhello@datable.io\n\n\u00a9 2024. Datable\n\n###### Product\n\nBlog\n\nDocsFeatures\n\n###### Solutions\n\nStartupsSaaSEnterprises\n\n###### Company\n\nAboutCareersBlog\n\n", "frontpage": false}
