{"aid": "40260910", "title": "Module Federation 2.0", "url": "https://module-federation.io/blog/announcement.html", "domain": "module-federation.io", "votes": 1, "user": "adamesque", "posted_at": "2024-05-04 22:43:39", "comments": 0, "source_title": "Module federation", "source_text": "Announcement of Release - Module federation\n\nModule federation\n\nGuide\n\nPractice\n\nConfiguration\n\nPlugins\n\nShowcase\n\nBlog\n\nModule Federation Examples\n\nPractical Module Federation\n\n\u7b80\u4f53\u4e2d\u6587\n\nEnglish\n\nGuide\n\nPractice\n\nConfiguration\n\nPlugins\n\nShowcase\n\nBlog\n\nModule Federation Examples\n\nPractical Module Federation\n\n\u7b80\u4f53\u4e2d\u6587\n\nEnglish\n\n# Announcement of Release#\n\n> April 26, 2024\n\nToday, we are excited to announce the official release of Module Federation\n2.0! This new version is a collaborative effort between the ByteDance Web\nInfra team, the author of Module Federation, Zack Jackson and several of our\ncommunity members. Special thanks to @ilteoood, @patricklafrance and\n@crutch12. Module Federation 2.0 addresses many issues from the previous\nversion, building upon ByteDance's internal practices and the existing\ncommunity ecosystem of Module Federation.\n\nReplay\n\nPlay\n\n00:00 / 00:00 Live\n\n00:00\n\nFullscreen\n\nCssfullscreen\n\n1x\n\n  * 2x\n  * 1.5x\n  * 1x\n  * 0.75x\n  * 0.5x\n\nClick and hold to drag\n\n## Why Use Module Federation 2.0?#\n\nIntroduced by Webpack 5, Module Federation has been a significant feature for\nover three years. As a module sharing solution, it has gained widespread\nadoption, especially in large web projects, enhancing the efficiency and\nsimplicity of developing large applications and facilitating team\ncollaboration. However, with its broader use, new challenges have emerged.\n\nVersion 2.0 addresses these challenges with several enhancements:\n\n  * Best Practices: A new independent documentation site here includes best practices and configurations that enhance its usage.\n  * Decoupling Runtime from Build Tools: This version decouples the Runtime from build tools, standardizing implementation across various platforms and increasing the flexibility of module loading.\n  * Type Safety: The updated build plugin now automatically generates and loads types for TypeScript projects, with development mode synchronizing types to ensure safety.\n  * Debugging Tools: Enhanced debugging is facilitated by a new Chome DevTools, making the process more convenient and efficient.\n  * Deployment Platforms: The addition of the mf-manifest.json file protocol simplifies integration with deployment platforms, allowing for better management of version resources and versions.\n\n## Introduction to Features of Module Federation 2.0#\n\n### New Documentation Site#\n\nThe new documentation provides a detailed introduction to the applicable\nscenarios and capabilities of the framework. It covers the entire process from\nstarting a project with Rspack to utilizing its features. Additionally, it\noffers an in-depth discussion and explanation of the configuration of its\nplugin.\n\n### Enhanced Module Loading Flexibility#\n\nThe updated version brings significant changes. The runtime capabilities that\nwere originally embedded in Webpack have been extracted to form a standalone\nSDK. This change allows for dynamic registration and loading of remote and\nshared modules without relying on any build tools. Moreover, the use of module\npreloading and runtime plugins has been enhanced, providing more powerful\ncontrol over the module loading process.\n\n    \n    \n    import { init, loadRemote } from '@module-federation/enhanced/runtime'; init({ name: '@demo/app-main', remotes: [ { name: \"@demo/app1\", entry: \"http://localhost:3005/mf-manifest.json\", alias: \"app1\" }, { name: \"@demo/app2\", entry: \"http://localhost:3006/remoteEntry.js\", alias: \"app2\" }, ], }); loadRemote(\"app2/util\").then((md)=>{ md.add(1,2,3); });\n\n### Decoupling Webpack and Supporting Cross-Tool Sharing of Modules#\n\nThe new version of the Module Federation plugin adopts a completely new\nRuntime architecture. This change means that the build tool is no longer\ntightly coupled with the Runtime. Developers can now freely introduce\nartifacts produced by different build tools into their projects and flexibly\nassemble them for operation.\n\nCurrently, multiple build tools are compatible with it, including Webpack and\nRspack. Other build tools can also implement Module Federation based on this\nstandard, which will maintain consistency and standardization in the runtime.\n\n### Type Hints#\n\nThe new version introduces a groundbreaking feature - dynamic module type\nhints! This feature effectively solves the problem of type loss when\nconverting local modules to dynamic remote modules in TypeScript projects.\nNow, using this plugin, you can not only automatically generate and use remote\ntypes but also achieve a real-time type update experience similar to npm link\nwhen all projects are running locally.\n\n### Chrome DevTools#\n\nThe Devtool is a debugging tool developed specifically for this framework. It\ncan clearly display the dependencies between modules, as well as the\nconfiguration of Expose and shared. Additionally, the tool supports proxying\nmodules from online pages to the local development environment and maintains\nhot update functionality to provide a smooth development experience.\n\n### Manifest Protocol#\n\nThe build plugin for Module Federation generates a Manifest file. This file\ncontains basic information about the system, such as remoteEntry, shared,\nexposes, remotes, chunks, and type. This information is a cornerstone for\nanalyzing dependencies between projects and helps us build and optimize the\nplatform. In this way, we can perform fine-grained version and gray release\nmanagement of modules on different deployment platforms. In addition, the\nbuild plugin and runtime can directly use the Manifest file protocol to\nimplement more advanced features. For example, the dynamic type hinting\nfeature was developed in the latest version based on the Manifest file\nprotocol.\n\n## Acknowledgments#\n\nThe development of the new version of Module Federation could not have been\npossible without the inspiration and support from many projects within the\ncommunity. Here, we express our deep respect and gratitude to these projects:\n\n  * Webpack Module Federation. The new version of Module Federation was forked from it, redesigned and implemented on this basis.\n  * The Module Federation Universe repository, where the original implementation of Universe is the foundation of the new Module Federation.\n  * The Rspack project. The Rspack team implemented Module Federation based on Module Federation Runtime, ensuring full compatibility of 2.0 with the Rspack ecosystem.\n\n## Future Plans#\n\n### Enhancing Developer Experience#\n\nAlthough the new version introduces dynamic type hints and Chrome Developer\nTools support, the current functionality of the Chrome Developer Tools is\nstill insufficient. We plan to enhance the debugging tools for Module\nFederation, such as adding visualization features for shared reuse.\n\n### Providing High-Performance Solutions#\n\nAs a solution for micro-frontend architecture, Module Federation also faces\nthe unique \"request waterfall problem\" inherent to micro-frontend\narchitectures. To address this issue, Module Federation plans to provide a\nseries of high-performance strategies, including Server-Side Rendering (SSR)\nand Data Prefetch.\n\n### Collaborating with Community Partners#\n\nThe new features of Module Federation 2.0 are currently only supported by\nWebpack and Rspack, two build tools. Module Federation provides a rich set of\nbasic SDKs, facilitating other build tools to extend and encapsulate on this\nbasis. Currently, Module Federation is mainly used as a module sharing\nsolution. Our plan is to combine it with upper-layer frameworks to provide a\nseries of micro-frontend architecture best practices based on Module\nFederation. This will help developers better meet the needs of large web\napplications in micro-frontend architecture development.\n\nEdit this page on GitHub\n\nON THIS PAGE\n\n", "frontpage": false}
