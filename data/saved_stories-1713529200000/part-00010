{"aid": "40083748", "title": "The PostgreSQL community debates ALTER SYSTEM", "url": "https://lwn.net/Articles/968300/", "domain": "lwn.net", "votes": 1, "user": "fforflo", "posted_at": "2024-04-19 05:39:36", "comments": 0, "source_title": "The PostgreSQL community debates ALTER SYSTEM [LWN.net]", "source_text": "The PostgreSQL community debates ALTER SYSTEM [LWN.net]\n\nLWN .net News from the source\n\n  * Content\n\n    * Weekly Edition\n    * Archives\n    * Search\n    * Kernel\n    * Security\n    * Events calendar\n    * Unread comments\n    * LWN FAQ\n    * Write for us\n  * Edition\n\n    * Return to the Front page\n\n| |\n\nSubscribe / Log in / New account\n\n# The PostgreSQL community debates ALTER SYSTEM\n\nBenefits for LWN subscribersThe primary benefit from subscribing to LWN is\nhelping to keep us publishing, but, beyond that, subscribers get immediate\naccess to all site content and access to a number of extra site features.\nPlease sign up today!  \n---  \n  \nBy Jonathan Corbet April 8, 2024\n\nSometimes the smallest patches create the biggest discussions. A case in point\nwould be the process by which the PostgreSQL community \u2014 not a group normally\nprone to extended, strongly worded megathreads \u2014 resolved the question of\nwhether to merge a brief patch adding a new configuration parameter.\nSometimes, a proposal that looks like a security patch is not, in fact,\nintended to be a security patch, but getting that point across can be\ndifficult.\n\nThe PostgreSQL server is a complex beast that can be extensively configured\nand tuned for the environment in which it runs. There are, naturally, many\nconfiguration parameters available for administrators to work with. There are\nalso two ways to set those parameters. In most deployments, perhaps,\nadministrators will edit the postgresql.conf file to configure the system as\nneeded. It is, however, also possible to adjust parameters within a running\ndatabase with the ALTER SYSTEM command. Any changes made that way will be\nsaved to a separate postgresql.auto.conf file, which is also read by the\nserver at startup; these changes are thus persistent.\n\n#### Disabling ALTER SYSTEM\n\nIn early September 2023, Gabriele Bartolini raised the idea of allowing\nadministrators to disable ALTER SYSTEM, either via a command-line parameter or\na configuration option in its own right (which, using PostgreSQL jargon, he\ncalls a \"GUC\", standing for \"grand unified configuration\" parameter).\n\n> The main reason is that this would help improve the \"security by default\"\n> posture of Postgres in a Kubernetes/Cloud Native environment - and, in\n> general, in any environment on VMs/bare metal behind a configuration\n> management system in which changes should only be made in a declarative way\n> and versioned like Ansible Tower, to cite one.\n\nPostgreSQL core contributor Tom Lane quickly expressed his disagreement with\nthis proposal: \"\"I don't think we need random kluges added to the permissions\nsystem. I especially don't believe in kluges to the effect of 'superuser\ndoesn't have all permissions anymore'.\"\" He suggested using event triggers to\nimplement such a restriction locally if it is really wanted.\n\nAlvaro Herrera pointed out that ALTER SYSTEM, as a system-wide command, does\nnot invoke event triggers. He also more thoroughly explained the use case that\nwas driving this request:\n\n> I've read that containers people consider services in a different light than\n> how we've historically seen them; they say \"cattle, not pets\". This affects\n> the way you think about these services. postgresql.conf (all the PG\n> configuration, really) is just a derived file from an overall system\n> description that lives outside the database server. You no longer feed your\n> PG servers one by one, but rather they behave as a herd, and the herder is\n> some container supervisor (whatever it's called).\n>\n> Ensuring that the configuration state cannot change from within is important\n> to maintain the integrity of the service. If the user wants to change\n> things, the tools to do that are operated from outside.\n\nLane, though, described the feature as \"\"false security\"\", and the discussion\nwound down for a while. But the fundamental disconnect had already become\napparent: the opposition to restricting ALTER SYSTEM was based on the idea\nthat it was intended as a security feature. As such, it would be a failure,\nsince there are many other ways for a PostgreSQL user with the ability to run\nALTER SYSTEM to take control of the server. But, as Bartolini said, this\nrestriction is meant as a usability feature, closing off a configuration\nmechanism that is not meant to be used in systems where declarative\nconfiguration systems are in charge.\n\n#### The new year\n\nRobert Haas restarted the conversation in January, acknowledging that the\nproposal is not meant as a security feature, but worrying that it would be\nseen that way anyway:\n\n> I have to admit that I'm a little afraid that people will mistake this for\n> an actual security feature and file bug reports or CVEs about the superuser\n> being able to circumvent these restrictions. If we add this, we had better\n> make sure that the documentation is extremely clear about what we are\n> guaranteeing, or more to the point about what we are not guaranteeing.\n\nEven then, he worried, about \"\"security researchers threatening to publish our\nevilness in the Register\"\". Lane then declared that the project \"\"should\nreject not only this proposal, but any future ones that intend to prevent\nsuperusers from doing things that superusers normally could do\"\". Haas\nresponded, though, that the original proposal might have merit, and should be\ntaken seriously.\n\nThe conversation continued inconclusively; two months later, Haas complained\nthat not much progress was being made. That notwithstanding, he said: \"\"As far\nas I can see from reading the thread, most people agree that it's reasonable\nto have some way to disable ALTER SYSTEM\"\". There were, though, six competing\nways in which that objective could be accomplished. These included the\ncommand-line option and configuration parameter originally proposed, along\nwith an event trigger, pushing it into an extension module, recognizing a\nsentinel file created by the administrator, or just changing the permissions\non postgresql.auto.conf. He suggested that the configuration option and the\nsentinel file were the most viable options.\n\nLane answered that any such restriction, implemented by any of the above\nmechanisms, could still be bypassed by a hostile administrator. Haas replied\nthat the proposal was not a security feature, but Lane dismissed it as \"\"a\nloaded foot-gun painted in kid-friendly colors\"\" that would lead to more bogus\nCVE numbers being filed against the project.\n\n#### A new patch\n\nOn March 15, Jelte Fennema-Nio posted a patch implementing the restriction as\na configuration parameter. It was, in the end, just an updated version of the\npatch posted by Bartolini in September with some documentation tweaks. Various\ncomments resulted in a number of newer versions; the sixth of which came out a\nfew days later. At this point, the patch consisted mostly of documentation,\nincluding this admonition:\n\n> Note that this setting cannot be regarded as a security feature. It only\n> disables the ALTER SYSTEM command. It does not prevent a superuser from\n> changing the configuration remotely using other means.\n\nHaas welcomed this version and asked whether there was a consensus on\nproceeding with it. Lane seemingly had changed his view somewhat at this\npoint, saying: \"\"I never objected to the idea of being able to disable ALTER\nSYSTEM\"\". Bruce Momjian, instead, worried that an administrator could enter an\nALTER SYSTEM command disabling ALTER SYSTEM, at which point recovery could be\ndifficult. In fact, as Fennema-Nio answered, that parameter cannot be set that\nway, so that particular trap does not exist.\n\nMomjian also took issue with the name of the parameter (which was\nexternally_managed_configuration), saying that it didn't really describe what\nwas being restricted. He suggested sql_alter_system_vars as an alternative.\nHaas agreed with the complaint, but thought that allow_alter_system made more\nsense. That is, in the end, the name that was chosen for this option.\n\nThe discussion was not over yet, though. Lane wanted the server to ensure that\npostgresql.conf and postgresql.auto.conf were not writable by the postgres\nuser if allow_alter_system is disabled. Otherwise, the database administrator\nwould still be able to modify the configuration simply by editing one of the\nfiles. Fennema-Nio disagreed, saying that disabling ALTER SYSTEM was\nsufficient for the intended use case, but Lane said that the configuration\nparameter on its own is \"\"a fig leaf that might fool incompetent auditors but\nno more\"\". Fennema-Nio reminded Lane that the point of allow_alter_system is\nnot security. Haas complained that: \"\"I don't understand why people who hate\nthe feature and hope it dies in a fire get to decide how it has to work.\"\" The\nfile-permission check was, in the end, not added.\n\nEven then, the discussion was not quite done; Momjian questioned merging this\nchange so late in the PostgreSQL development cycle. \"\"My point is that we are\ndesigning the user API in the last weeks of the commitfest, which usually ends\nbadly for us\"\". Fennema-Nio pointed out that the API was essentially unchanged\nfrom its initial, September form, and that months had been spent discussing\nalternatives. Haas said that such a small patch would not improve by being\nheld up for another release cycle: \"\"I think it has to be right to get this\ndone while we're all thinking about it and the issue is fresh in everybody's\nmind.\"\"\n\nOn March 28, Momjian agreed that the patch could be merged. One day later,\nHaas did exactly that. And, with that, one of the longest-running development\ndiscussions in recent PostgreSQL history came to an end. The success of this\neffort is a testament to the persistence of a small number of developers who\nsaw it through months of opposition and \"helpful\" implementation suggestions.\nHaving decided that difficult issue, the project can turn its attention to the\nsmall list of simple topics to be resolved during the upcoming July\ncommitfest.\n\n(Log in to post comments)\n\n### The PostgreSQL community debates ALTER SYSTEM\n\nPosted Apr 8, 2024 19:20 UTC (Mon) by fwiesweg (subscriber, #116364) [Link]\n\nThanks for the recent increase in database coverage, it's interesting to\nfollow!\n\nConcerning this feature, it's actually quite neat. I'd call it a safety\ninstead of a security feature, a bit like having a second button on an\nelectric drill, preventing you or your children from starting it accidentally\n(but not helping against malicious intent). ALTER SYSTEM always felt like a\nbit of a footgun to me, even when not running under config management, because\nthere is not actually that single place with all the true configuration, but\ntwo, which you need to mentally merge to figure out what's actually going to\nhappen.\n\n### The PostgreSQL community debates ALTER SYSTEM\n\nPosted Apr 13, 2024 15:04 UTC (Sat) by marcH (subscriber, #57642) [Link]\n\n> I'd call it a safety instead of a security feature, a bit like having a\n> second button on an electric drill, preventing you or your children from\n> starting it accidentally (but not helping against malicious intent).\n\nThat's an excellent way to describe it. It could have saved some of these\nlengthy debates?\n\nThe \"children\" analogy makes it even better: for obvious redundancy reasons,\nthere is almost always more than one admin for every critical system. But\nbecause that redundancy is expensive (time-consuming to train _everyone_), in\npractice some of the admins are just \"backup\" admins with limited knowledge of\nthe whole system. So options that disable undesired \"alternatives\" and other\nfootguns are really no-brainers.\n\n### CVE submitters as your marketing demographic\n\nPosted Apr 9, 2024 4:04 UTC (Tue) by buck (subscriber, #55985) [Link]\n\nSorry; this is opening up an old worm can[*]\n\nBut it's sad to read all the tell of concern about CVE reporters popping up,\nwhack-a-mole style.\n\nI guess it is, in a sense, effectively \"putting security first,\" by some\nmeasure[**] of security.\n\n(I.e., a measure that gives you a zero when the perfect and the good can't be\n100% allied.)\n\nAlso sorry if I'm ranting at the choir.\n\nThanks to our fearless editor, as always, for capturing the drift, the spirit,\nthe highs, and the lows of the debate, even if it ends up sticking in some of\nour craws.\n\n\\--buck\n\n[*] https://lwn.net/Articles/944209/\n\n[**] i.e.., one resulting from Goodhart's Law, as mentioned in\nhttps://lwn.net/Articles/961978/\n\n### The PostgreSQL community debates ALTER SYSTEM\n\nPosted Apr 9, 2024 4:57 UTC (Tue) by shironeko (subscriber, #159952) [Link]\n\nmaybe I missed this, but what's the problem with setting postgres.auto.conf to\nread-only?\n\n### The PostgreSQL community debates ALTER SYSTEM\n\nPosted Apr 9, 2024 6:44 UTC (Tue) by ringerc (subscriber, #3071) [Link]\n\nThe error message is crap and doesn't tell the user what's going on or why.\n\nPersonally I would've been fine with doing it by permission change and just\nproviding a better error for ENOPERM that tells the admin it might be\ndeliberately disabled.\n\n### The PostgreSQL community debates ALTER SYSTEM\n\nPosted Apr 9, 2024 5:25 UTC (Tue) by bugfood (subscriber, #124228) [Link]\n\nThis is an improvement for anywhere that uses configuration management,\nirrespective of whether containers are in use. I always make a best reasonable\neffort to ensure that daemons have no way to write to their own configuration.\nI don't want anybody on my team to get stuck with troubleshooting why a\nrecently-replaced server doesn't behave the same way as the pre-replacement\nserver. Changes made outside of configuration management tend to cause\nproblems long after the changes were made, when nobody can remember the\ndetails.\n\nBeing able to disable use of postgresql.auto.conf entirely would be even\nbetter.\n\n### The PostgreSQL community debates ALTER SYSTEM\n\nPosted Apr 11, 2024 11:49 UTC (Thu) by smitty_one_each (subscriber, #28989)\n[Link]\n\n\"Many miles away, A bikeshed smiles on the shore At the edge of a dark\nScottish lake\"--fragment of Synchronicity III\n\n### The PostgreSQL community debates ALTER SYSTEM\n\nPosted Apr 18, 2024 16:31 UTC (Thu) by kevincox (guest, #93938) [Link]\n\nIt seems like it would also be nice to have a flag or something to disable\nreading postgresql.auto.conf. Because someone enabling the flag to prevent\nwriting to this file would probably also want to prevent any settings that are\nalready there to no longer be used, instead all configuration coming from\ntheir specified postgresql.conf. Basically this would be disabling everything\nrelated to postgresql.auto.conf. No writing and no reading.\n\nCopyright \u00a9 2024, Eklektix, Inc. This article may be redistributed under the\nterms of the Creative Commons CC BY-SA 4.0 license Comments and public\npostings are copyrighted by their creators. Linux is a registered trademark of\nLinus Torvalds\n\n", "frontpage": false}
