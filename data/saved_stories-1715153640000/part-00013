{"aid": "40291917", "title": "Meilisearch 1.8", "url": "https://blog.meilisearch.com/meilisearch-1-8/", "domain": "meilisearch.com", "votes": 1, "user": "ashvardanian", "posted_at": "2024-05-07 21:48:02", "comments": 0, "source_title": "Meilisearch 1.8", "source_text": "Meilisearch 1.8\n\nRelease\n\n# Meilisearch 1.8\n\nMeilisearch 1.8 brings negative keyword search, improvements in search\nrobustness and AI search, including new embedders.\n\n  * ## Carolina Ferreira\n\nDeveloper Advocate @ Meilisearch\n\nMore posts by Carolina Ferreira.\n\n#### Carolina Ferreira\n\n7 May 2024 \u2022 3 min read\n\n\ud83d\ude80\n\nMeilisearch 1.8 is available on Meilisearch Cloud too\u2014upgrade now!\n\n## New: negative search\n\nMeilisearch 1.8 allows you to exclude specific terms from your search results\nusing the - operator.\n\nFor example, to find documents that contain the word \"room\" but not \"escape\",\nplace a - before \"escape\u201d:\n\n    \n    \n    curl \\ -X POST 'https://edge.meilisearch.com/indexes/places/search' \\ -H 'Content-Type: application/json' \\ --data-binary '{ \"q\": \"-escape room\" }'\n\n## Experimental: Improved hybrid search\n\n\ud83d\udcac\n\nAI search is an experimental feature. Give feedback in this GitHub discussion.\n\n### New Ollama embedder\n\nMeilisearch 1.8 introduces support for Ollama models. Configure the embedder\nin your index settings:\n\n    \n    \n    \"default\": { \"source\": \"ollama\", // \ud83d\udc48 Use the ollama source \"url\": \"http://localhost:11434/api/embeddings\", // \u261d\ufe0f optional, fetched from MEILI_OLLAMA_URL environment variable if missing \"apiKey\": \"<your-api-key>\", // \u261d\ufe0f optional \"model\": \"nomic-embed-text\", \"documentTemplate\": \"{{doc.field_name}}\" // like for openAI and huggingFace sources }\n\n### New REST Embedder\n\nStarting with Meilisearch 1.8, you can use any embedder accessible via a REST\nAPI. Here\u2019s how to configure an OpenAI embedder with the rest source:\n\n    \n    \n    { \"source\": \"rest\", \"apiKey\": \"<your-openai-api-key>\", \"dimensions\": 1536, \"url\": \"https://api.openai.com/v1/embeddings\", \"query\": { \"model\": \"text-embedding-ada-002\" }, \"inputField\": [\"input\"], \"inputType\": \"textArray\", \"pathToEmbeddings\": [\"data\"], \"embeddingObject\": [\"embedding\"] }\n\nFor more details on the API and available parameters, please consult the\ndocumentation on REST embedders.\n\n### New embedder setting: distribution shift\n\n\ud83d\udca1\n\nThis is an advanced API for custom models. OpenAI and Hugging Face models\ndon't require this setting.\n\nDepending on the embedding model, vector embeddings are not always uniformly\ndistributed within the vector space. When vectors are overly clustered,\nsemantic search scores can be very closely ranked. As a result of semantic\nscores being packed, hybrid results might have sub-optimal relevancy.\n\nTo address this issue, you can now shift the distribution of results with an\naffine transformation. This transformation normalizes semantic scores to\nprevent them from clustering too high or too tightly, making them more\ncomparable to the keyword scores.\n\n    \n    \n    \"default\": { \"source\": \"huggingFace\", \"model\": \"MODEL_NAME\", \"distribution\": { // describes the natural distribution of results \"mean\": 0.7, // mean value \"sigma\": 0.3 // standard deviation } }\n\n  * The mean value represents the central point around which you observe semantic search scores to be densely packed. In the provided code sample, the setting indicates that semantic scores from this model tend to cluster around a mean of 0.7.\n  * The sigma value determines the spread of ranking scores from the mean (standard deviation). The sigma provided in the code sample above means that before shifting the distribution, the results tend to have an average distance of 0.3 to the mean.\n\nThis allows for a more effective comparison of _rankingScore between semantic\nand keyword search results, leading to improved results ranking.\n\n### Breaking: trimmed API response\n\nTo speed up the search response and reduce bandwidth usage, Meilisearch v1.8\nno longer returns the following fields in the search responses:\n\n  * the vector field, which returned the query vector\n  * the value field included in the vectorSort object, which is returned when you add `\u201dshowRankingScoreDetails\u201d: true\u201d` to a search query\n  * the _semanticScore field; its value is the same as _rankingScore, which you should use instead. Set \u201dshowRankingScore\u201d: true\u201d in the search parameters\n\n## Search robustness improvements\n\n### New search cut-off setting\n\nTo enhance stability and performance, Meilisearch automatically terminates any\nsearch request that exceeds 1500 milliseconds.\n\nTo adjust this timeout threshold, you can customize the searchCutoffMs\nsetting:\n\n    \n    \n    curl \\ -X PATCH 'https://edge.meilisearch.com/indexes/movies/settings' \\ -H 'Content-Type: application/json' \\ --data-binary '{ \"searchCutoffMs\": 150 }'\n\n### Experimental: concurrent search requests limit\n\nThis release introduces a limit on concurrent search requests to prevent\nMeilisearch from using excessive amounts of RAM and crashing. The default\nqueue limit is set to 1000 requests.\n\nTo modify this limit, restart your self-hosted instance with the\n--experimental-search-queue-size option:\n\n    \n    \n    ./meilisearch --experimental-search-queue-size 100\n\n\ud83d\udc49 This limit does not impact the search performance. It only controls the\nnumber of search requests that can be queued simultaneously to enhance system\nsecurity.\n\n\ud83d\udcac\n\nGive feedback regarding concurrent search requests limit in this GitHub\ndiscussion.\n\n## Contributors shout-out\n\nWe are really grateful for all the community members who participated in this\nrelease. We would like to thank: @availhang, @hack3ric, @jakobklemm, @mohsen-\nalizadeh, @redistay, @rohankmr414, @shuangcui, @Toromyx, @6543 for their help\nwith Meilisearch, and @Gusted, @mosuka, @6543, for their work on Charabia.\n\nSpecial thanks to our SDKs maintainers, thanks to whom Meilisearch is\navailable across so many languages. \ud83e\udef6\n\nAnd that\u2019s a wrap for v1.8! This release post highlights the most significant\nupdates. For an exhaustive listing, read the changelog on Github.\n\nStay in the loop of everything Meilisearch by subscribing to our newsletter.\nTo learn more about Meilisearch's future and help shape it, take a look at our\nroadmap and come participate in our Product Discussions.\n\nFor anything else, join our developers community on Discord.\n\n### More in Release\n\n  * #### Meilisearch 1.7\n\n12 Mar 2024 \u2013 2 min read\n\n  * #### Introducing hybrid search: combining full-text and semantic search for optimal balance\n\n4 Mar 2024 \u2013 3 min read\n\n  * #### Cloud monitoring metrics have arrived!\n\n14 Feb 2024 \u2013 1 min read\n\nSee all 31 posts \u2192\n\nCompany news\n\n## Meilisearch March Updates\n\nYour monthly dose of Meilisearch updates. March 2024 edition.\n\n  * Carolina Ferreira\n\nCarolina Ferreira 18 Apr 2024 \u2022 2 min read\n\nMeilisearch Blog \u00a9 2024\n\n", "frontpage": false}
