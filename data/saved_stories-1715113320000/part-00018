{"aid": "40284291", "title": "Hackers discover how to reprogram NES Tetris from within the game", "url": "https://arstechnica.com/gaming/2024/05/hackers-discover-how-to-reprogram-nes-tetris-from-within-the-game/", "domain": "arstechnica.com", "votes": 3, "user": "LorenDB", "posted_at": "2024-05-07 11:24:08", "comments": 0, "source_title": "Hackers discover how to reprogram NES", "source_text": "Hackers discover how to reprogram NES Tetris from within the game | Ars Technica\n\nSkip to main content\n\nSubscribe\n\nClose\n\n### Navigate\n\n  * Store\n  * Subscribe\n  * Videos\n  * Features\n  * Reviews\n\n  * RSS Feeds\n  * Mobile Site\n\n  * About Ars\n  * Staff Directory\n  * Contact Us\n\n  * Advertise with Ars\n  * Reprints\n\n### Filter by topic\n\n  * Biz & IT\n  * Tech\n  * Science\n  * Policy\n  * Cars\n  * Gaming & Culture\n  * Store\n  * Forums\n\n### Settings\n\nFront page layout\n\nGrid\n\nList\n\nSite theme\n\nlight\n\ndark\n\nSign in\n\n#### Building a better Tetris \u2014\n\n# Hackers discover how to reprogram NES Tetris from within the game\n\n## New method could help high-score chasers trying to avoid game-ending\ncrashes.\n\nKyle Orland - 5/6/2024, 10:16 PM\n\nEnlarge / I can see the code that controls the Tetri-verse!\n\nAurich Lawson\n\n#### reader comments\n\n44\n\n### Further Reading\n\n34 years later, a 13-year-old hits the NES Tetris \u201ckill screen\u201d\n\nEarlier this year, we shared the story of how a classic NES Tetris player hit\nthe game's \"kill screen\" for the first time, activating a crash after an\nincredible 40-minute, 1,511-line performance. Now, some players are using that\nkill screen\u2014and some complicated memory manipulation it enables\u2014to code new\nbehaviors into versions of Tetris running on unmodified hardware and\ncartridges.\n\n### Further Reading\n\nThis amazing glitch puts Star Fox 64 ships in an unmodified Zelda cartridge\n\nWe've covered similar \"arbitrary code execution\" glitches in games like Super\nMario World, Paper Mario, and The Legend of Zelda: Ocarina of Time in the\npast. And the basic method for introducing outside code into NES Tetris has\nbeen publicly theorized since at least 2021 when players were investigating\nthe game's decompiled code (HydrantDude, who has gone deep on Tetris crashes\nin the past, also says the community has long had a privately known method for\nhow to take full control of Tetris' RAM).\n\nDisplaced Gamers explains how to reprogram NES Tetris within the game.\n\nBut a recent video from Displaced Gamers takes the idea from private theory to\npublic execution, going into painstaking detail on how to get NES Tetris to\nstart reading the game's high score tables as machine code instructions.\n\n## Fun with controller ports\n\nTaking over a copy of NES Tetris is possible mostly due to the specific way\nthe game crashes. Without going into too much detail, a crash in NES Tetris\nhappens when the game's score handler takes too long to calculate a new score\nbetween frames, which can happen after level 155. When this delay occurs, a\nportion of the control code gets interrupted by the new frame-writing routine,\ncausing it to jump to an unintended portion of the game's RAM to look for the\nnext instruction.\n\nAdvertisement\n\nUsually, this unexpected interrupt leads the code to jump to address the very\nbeginning of RAM, where garbage data gets read as code and often leads to a\nquick crash. But players can manipulate this jump thanks to a little-known\nvagary in how Tetris handles potential inputs when running on the Japanese\nversion of the console, the Famicom.\n\nEnlarge / The Famicom expansion port that is key to making this hack work.\n\nNintendo World Report\n\nUnlike the American Nintendo Entertainment System, the Japanese Famicom\nfeatured two controllers hard-wired to the unit. Players who wanted to use\nthird-party controllers could plug them in through an expansion port on the\nfront of the system. The Tetris game code reads the inputs from this \"extra\"\ncontroller port, which can include two additional standard NES controllers\nthrough the use of an adapter (this is true even though the Famicom got a\ncompletely different version of Tetris from Bullet-Proof Software).\n\nAs it happens, the area of RAM that Tetris uses to process this extra\ncontroller input is also used for the memory location of that jump routine we\ndiscussed earlier. Thus, when that jump routine gets interrupted by a crash,\nthat RAM will be holding data representing the buttons being pushed on those\ncontrollers. This gives players a potential way to control precisely where the\ngame code goes after the crash is triggered.\n\n## Coding in the high-score table\n\nFor Displaced Gamers' jump-control method, the player has to hold down \"up\" on\nthe third controller and right, left, and down on the fourth controller (that\nlatter combination requires some controller fiddling to allow for simultaneous\nleft and right directional input). Doing so sends the jump code to an area of\nRAM that holds the names and scores for the game's high score listing, giving\nan even larger surface of RAM that can be manipulated directly by the player.\n\nAdvertisement\n\nBy putting \"(G\" in the targeted portion of the B-Type high score table, we can\nforce the game to jump to another area of the high score table, where it will\nstart reading the names and scores sequentially as what Displaced Gamers calls\n\"bare metal\" code, with the letters and numbers representing opcodes for the\nNES CPU.\n\nEnlarge / This very specific name and score combination is actually read as\ncode in Displaced Gamers' proof of concept.\n\nDisplaced Gamers\n\nUnfortunately, there are only 43 possible symbols that can be used in the name\nentry area and 10 different digits that can be part of a high score. That\nmeans only a small portion of the NES's available opcode instructions can be\n\"coded\" into the high score table using the available attack surface.\n\nDespite these restrictions, Displaced Gamers was able to code a short proof-\nof-concept code snippet that can be translated into high-score table data (A\nname of '))\"-P)', and a second-place score of 8,575 in the A-Type game factors\nprominently, in case you're wondering). This simple routine puts two zeroes in\nthe top digits of the game's score, lowering the score processing time that\nwould otherwise cause a crash (though the score will eventually reach the\n\"danger zone\" for a crash again, with continued play).\n\nOf course, the lack of a battery-backed save system means hackers need to\nachieve these high scores manually (and enter these complicated names) every\ntime they power up Tetris on a stock NES. The limited space in the high score\ntable also doesn't leave much room for direct coding of complex programs on\ntop of Tetris' actual code. But there are ways around this limitation;\nHydrantDude writes of a specific set of high-score names and numbers that\n\"build[s] another bootstrapper which builds another bootstrapper that grants\nfull control over all of RAM.\"\n\nWith that kind of full control, a top-level player could theoretically recode\nNES Tetris to patch out the crash bugs altogether. That could be extremely\nhelpful for players who are struggling to make it past level 255, where the\ngame actually loops back to the tranquility of Level 0. In the meantime, I\nguess you could always just follow the lead of Super Mario World speedrunners\nand transform Tetris into Flappy Bird.\n\n### Ars Video\n\n#### reader comments\n\n44\n\nKyle Orland Kyle Orland has been the Senior Gaming Editor at Ars Technica\nsince 2012, writing primarily about the business, tech, and culture behind\nvideo games. He has journalism and computer science degrees from University of\nMaryland. He once wrote a whole book about Minesweeper.\n\nAdvertisement\n\n### Channel Ars Technica\n\n#### Unsolved Mysteries Of Quantum Leap With Donald P. Bellisario\n\nToday \"Quantum Leap\" series creator Donald P. Bellisario joins Ars Technica to\nanswer once and for all the lingering questions we have about his enduringly\npopular show. Was Dr. Sam Beckett really leaping between all those time\nperiods and people or did he simply imagine it all? What do people in the\nwaiting room do while Sam is in their bodies? What happens to Sam's loyal ally\nAl? 30 years following the series finale, answers to these mysteries and more\nawait.\n\n  * ##### Unsolved Mysteries Of Quantum Leap With Donald P. Bellisario\n\n  * ##### Unsolved Mysteries Of Warhammer 40K With Author Dan Abnett\n\n  * ##### Steve Burke of GamersNexus Reacts To Their Top 1000 Comments On YouTube\n\n  * ##### Modern Vintage Gamer Reacts To His Top 1000 Comments On YouTube\n\n  * ##### How The NES Conquered A Skeptical America In 1985\n\n  * ##### Scott Manley Reacts To His Top 1000 YouTube Comments\n\n  * ##### How Horror Works in Amnesia: Rebirth, Soma and Amnesia: The Dark Descent\n\n  * ##### LGR's Clint Basinger Reacts To His Top 1000 YouTube Comments\n\n  * ##### How One Gameplay Decision Changed Diablo Forever\n\n  * ##### How Forza's Racing AI Uses Neural Networks To Evolve\n\n  * ##### 30 People Play Mario Kart 8 From Newbies to Pros\n\n  * ##### Unsolved Mortal Kombat Mysteries With Dominic Cianciolo From NetherRealm Studios\n\n  * ##### How NBA JAM Became A Billion-Dollar Slam Dunk\n\n  * ##### Linus \"Tech Tips\" Sebastian Reacts to His Top 1000 YouTube Comments\n\n  * ##### How Alan Wake Was Rebuilt 3 Years Into Development\n\n  * ##### How Homeworld Almost Got Lost in 3D Space\n\n  * ##### 30 People Play Super Mario Bros. Level 1-1\n\n  * ##### How Prince of Persia Defeated Apple II's Memory Limitations\n\n  * ##### How Crash Bandicoot Hacked The Original Playstation\n\n  * ##### Myst: The challenges of CD-ROM | War Stories\n\n  * ##### Markiplier Reacts To His Top 1000 YouTube Comments\n\n  * ##### How Mind Control Saved Oddworld: Abe's Oddysee\n\n  * ##### Civilization: It's good to take turns | War Stories\n\n  * ##### Dead Cells: How to avoid falling to your death (and resurrection) | War Stories\n\n  * ##### Warframe's Rebecca Ford reviews your characters\n\n  * ##### Subnautica: A world without guns | War Stories\n\n  * ##### How Slay the Spire\u2019s Original Interface Almost Killed the Game | War Stories\n\n  * ##### Amnesia: The Dark Descent - The horror facade | War Stories\n\n  * ##### Command & Conquer: Tiberian Sun | War Stories\n\n  * ##### Blade Runner: Skinjobs, voxels, and future noir | War Stories\n\n  * ##### Dead Space: The Drag Tentacle | War Stories\n\n  * ##### Aliens versus Predator: The 11th hour decision | War Stories\n\n  * ##### Ultima Online: The Virtual Ecology | War Stories\n\n  * ##### Blizzard answers unsolved mysteries of the Hearthstone universe\n\n  * ##### Unsolved mysteries of Warframe\n\n  * ##### Unsolved mysteries of League of Legends\n\nMore videos\n\n\u2190 Previous story Next story \u2192\n\n### Related Stories\n\n### Today on Ars\n\nCNMN Collection WIRED Media Group \u00a9 2024 Cond\u00e9 Nast. All rights reserved. Use of and/or registration on any portion of this site constitutes acceptance of our User Agreement (updated 1/1/20) and Privacy Policy and Cookie Statement (updated 1/1/20) and Ars Technica Addendum (effective 8/21/2018). Ars may earn compensation on sales from links on this site. Read our affiliate link policy. Your California Privacy Rights | Manage Preferences The material on this site may not be reproduced, distributed, transmitted, cached or otherwise used, except with the prior written permission of Cond\u00e9 Nast. Ad Choices\n\n## We Care About Your Privacy\n\nWe and our 166 partners store and/or access information on a device, such as\nunique IDs in cookies to process personal data. You may accept or manage your\nchoices by clicking below or at any time in the privacy policy page. These\nchoices will be signaled to our partners and will not affect browsing\ndata.More information about your privacy\n\n### We and our partners process data to provide:\n\nUse precise geolocation data. Actively scan device characteristics for\nidentification. Store and/or access information on a device. Personalised\nadvertising and content, advertising and content measurement, audience\nresearch and services development.\n\n", "frontpage": true}
