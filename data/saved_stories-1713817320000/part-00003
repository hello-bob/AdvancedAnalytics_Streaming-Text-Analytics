{"aid": "40114475", "title": "Unanimous 2PC: Fault-Tolerant Distributed Transactions Can Be Fast and Simple", "url": "https://dl.acm.org/doi/10.1145/3642976.3653035", "domain": "acm.org", "votes": 1, "user": "g0xA52A2A", "posted_at": "2024-04-22 14:01:21", "comments": 0, "source_title": "Unanimous 2PC: Fault-tolerant Distributed Transactions Can be Fast and Simple | Proceedings of the 11th Workshop on Principles and Practice of Consistency for Distributed Data", "source_text": "Unanimous 2PC: Fault-tolerant Distributed Transactions Can be Fast and Simple | Proceedings of the 11th Workshop on Principles and Practice of Consistency for Distributed Data\n\n## This website uses cookies\n\nWe occasionally run membership recruitment campaigns on social media channels\nand use cookies to track post-clicks. We also share information about your use\nof our site with our social media, advertising and analytics partners who may\ncombine it with other information that you\u2019ve provided to them or that they\u2019ve\ncollected from your use of their services. Use the check boxes below to choose\nthe types of cookies you consent to have stored on your device.\n\nUse necessary cookies only Allow all cookies Show details\n\nOK\n\nUse necessary cookies only Allow selected cookies Allow all cookies\n\nShow details\n\nCookie declaration [#IABV2SETTINGS#] About\n\nNecessary (7) Preferences (5) Statistics (16) Marketing (24) Unclassified (0)\n\nNecessary cookies help make a website usable by enabling basic functions like\npage navigation and access to secure areas of the website. The website cannot\nfunction properly without these cookies. These cookies do not gather\ninformation about you that could be used for marketing purposes and do not\nremember where you have been on the internet.\n\nName| Provider| Purpose| Expiry| Type  \n---|---|---|---|---  \n__jid| c.disquscdn.com| Used to add comments to the website and remember the\nuser's Disqus login credentials across websites that use said service.|\nSession| HTTP  \ndisqusauth| c.disquscdn.com| Registers whether the user is logged in. This\nallows the website owner to make parts of the website inaccessible, based on\nthe user's log-in status.| Session| HTTP  \n__cf_bm| ACM| This cookie is used to distinguish between humans and bots. This\nis beneficial for the website, in order to make valid reports on the use of\ntheir website.| 1 day| HTTP  \n_cfuvid| ACM| This cookie is a part of the services provided by Cloudflare -\nIncluding load-balancing, deliverance of website content and serving DNS\nconnection for website operators.| Session| HTTP  \nCookieConsent| Cookiebot| Stores the user's cookie consent state for the\ncurrent domain| 1 year| HTTP  \n1.gif| Cookiebot| Used to count the number of sessions to the website,\nnecessary for optimizing CMP product delivery.| Session| Pixel  \nVISITOR_PRIVACY_METADATA| YouTube| Stores the user's cookie consent state for\nthe current domain| 180 days| HTTP  \n  \nPreference cookies enable a website to remember information that changes the\nway the website behaves or looks, like your preferred language or the region\nthat you are in.\n\nName| Provider| Purpose| Expiry| Type  \n---|---|---|---|---  \naet-dismiss| c.disquscdn.com| Necessary for the functionality of the website's\ncomment-system.| Persistent| HTML  \ndrafts.queue| c.disquscdn.com| Necessary for the functionality of the\nwebsite's comment-system.| Persistent| HTML  \nsubmitted_posts_cache| c.disquscdn.com| Necessary for the functionality of the\nwebsite's comment-system.| Persistent| HTML  \nmopDeploy| Mopinion| Pending| Session| HTML  \nMACHINE_LAST_SEEN| ACM| Pending| 300 days| HTTP  \n  \nStatistic cookies help website owners understand how visitors interact with\nwebsites by collecting and reporting information anonymously.\n\nName| Provider| Purpose| Expiry| Type  \n---|---|---|---|---  \n_ga| Google| Registers a unique ID that is used to generate statistical data\non how the visitor uses the website.| 2 years| HTTP  \n_ga_#| Google| Used by Google Analytics to collect data on the number of times\na user has visited the website as well as dates for the first and most recent\nvisit.| 2 years| HTTP  \n_gat| Google| Used by Google Analytics to throttle request rate| 1 day| HTTP  \n_gid| Google| Registers a unique ID that is used to generate statistical data\non how the visitor uses the website.| 1 day| HTTP  \n_hjSession_#| Hotjar| Collects statistics on the visitor's visits to the\nwebsite, such as the number of visits, average time spent on the website and\nwhat pages have been read.| 1 day| HTTP  \n_hjSessionUser_#| Hotjar| Collects statistics on the visitor's visits to the\nwebsite, such as the number of visits, average time spent on the website and\nwhat pages have been read.| 1 year| HTTP  \n_hjTLDTest| Hotjar| Registers statistical data on users' behaviour on the\nwebsite. Used for internal analytics by the website operator.| Session| HTTP  \n_hp2_#| Heap Analytics| Collects data on the user\u2019s navigation and behavior on\nthe website. This is used to compile statistical reports and heatmaps for the\nwebsite owner.| 1 day| HTTP  \n_hp2_hld#.#| Heap Analytics| Collects data on the user\u2019s navigation and\nbehavior on the website. This is used to compile statistical reports and\nheatmaps for the website owner.| 1 day| HTTP  \n_hp2_id.#| Heap Analytics| Collects data on the user\u2019s navigation and behavior\non the website. This is used to compile statistical reports and heatmaps for\nthe website owner.| 1 year| HTTP  \n_hp2_ses_props.#| Heap Analytics| Collects data on the user\u2019s navigation and\nbehavior on the website. This is used to compile statistical reports and\nheatmaps for the website owner.| 1 day| HTTP  \ndisqus_unique| c.disquscdn.com| Collects statistics related to the user's\nvisits to the website, such as number of visits, average time spent on the\nwebsite and loaded pages.| Session| HTTP  \ncollect| Google| Used to send data to Google Analytics about the visitor's\ndevice and behavior. Tracks the visitor across devices and marketing\nchannels.| Session| Pixel  \nhjActiveViewportIds| Hotjar| This cookie contains an ID string on the current\nsession. This contains non-personal information on what subpages the visitor\nenters \u2013 this information is used to optimize the visitor's experience.|\nPersistent| HTML  \nhjViewportId| Hotjar| Saves the user's screen size in order to adjust the size\nof images on the website.| Session| HTML  \ntd| Google| Registers statistical data on users' behaviour on the website.\nUsed for internal analytics by the website operator.| Session| Pixel  \n  \nMarketing cookies are used to track visitors across websites. The intention is\nto display ads that are relevant and engaging for the individual user and\nthereby more valuable for publishers and third party advertisers.\n\nName| Provider| Purpose| Expiry| Type  \n---|---|---|---|---  \nbadges-message| c.disquscdn.com| Collects data on the visitor\u2019s use of the\ncomment system on the website, and what blogs/articles the visitor has read.\nThis can be used for marketing purposes.| Persistent| HTML  \napi/telemetry| Heap Analytics| Collects data on user behaviour and interaction\nin order to optimize the website and make advertisement on the website more\nrelevant.| Session| Pixel  \nh| Heap Analytics| Collects data on user behaviour and interaction in order to\noptimize the website and make advertisement on the website more relevant.|\nSession| Pixel  \n#-#| YouTube| Pending| Session| HTML  \niU5q-!O9@$| YouTube| Registers a unique ID to keep statistics of what videos\nfrom YouTube the user has seen.| Session| HTML  \nLAST_RESULT_ENTRY_KEY| YouTube| Used to track user\u2019s interaction with embedded\ncontent.| Session| HTTP  \nLogsDatabaseV2:V#||LogsRequestsStore| YouTube| Pending| Persistent| IDB  \nnextId| YouTube| Used to track user\u2019s interaction with embedded content.|\nSession| HTTP  \nremote_sid| YouTube| Necessary for the implementation and functionality of\nYouTube video-content on the website.| Session| HTTP  \nrequests| YouTube| Used to track user\u2019s interaction with embedded content.|\nSession| HTTP  \nServiceWorkerLogsDatabase#SWHealthLog| YouTube| Necessary for the\nimplementation and functionality of YouTube video-content on the website.|\nPersistent| IDB  \nTESTCOOKIESENABLED| YouTube| Used to track user\u2019s interaction with embedded\ncontent.| 1 day| HTTP  \nVISITOR_INFO1_LIVE| YouTube| Pending| 180 days| HTTP  \nYSC| YouTube| Pending| Session| HTTP  \nyt.innertube::nextId| YouTube| Registers a unique ID to keep statistics of\nwhat videos from YouTube the user has seen.| Persistent| HTML  \nytidb::LAST_RESULT_ENTRY_KEY| YouTube| Used to track user\u2019s interaction with\nembedded content.| Persistent| HTML  \nYtIdbMeta#databases| YouTube| Used to track user\u2019s interaction with embedded\ncontent.| Persistent| IDB  \nyt-remote-cast-available| YouTube| Stores the user's video player preferences\nusing embedded YouTube video| Session| HTML  \nyt-remote-cast-installed| YouTube| Stores the user's video player preferences\nusing embedded YouTube video| Session| HTML  \nyt-remote-connected-devices| YouTube| Stores the user's video player\npreferences using embedded YouTube video| Persistent| HTML  \nyt-remote-device-id| YouTube| Stores the user's video player preferences using\nembedded YouTube video| Persistent| HTML  \nyt-remote-fast-check-period| YouTube| Stores the user's video player\npreferences using embedded YouTube video| Session| HTML  \nyt-remote-session-app| YouTube| Stores the user's video player preferences\nusing embedded YouTube video| Session| HTML  \nyt-remote-session-name| YouTube| Stores the user's video player preferences\nusing embedded YouTube video| Session| HTML  \n  \nUnclassified cookies are cookies that we are in the process of classifying,\ntogether with the providers of individual cookies.\n\nWe do not use cookies of this type.  \n---  \n  \n[#IABV2_LABEL_PURPOSES#] [#IABV2_LABEL_FEATURES#] [#IABV2_LABEL_PARTNERS#]\n\n[#IABV2_BODY_PURPOSES#]\n\n[#IABV2_BODY_FEATURES#]\n\n[#IABV2_BODY_PARTNERS#]\n\nCookies are small text files that can be used by websites to make a user's\nexperience more efficient. Other than those strictly necessary for the\noperation of the site, we need your permission to store any type of cookies on\nyour device. Learn more about ACM, how you can contact us, and how we process\npersonal data in our Privacy Policy. Also please consult our Cookie Notice.\n\nYou can change or withdraw your consent from the Cookie Declaration on our\nwebsite at any time by visiting the Cookie Declaration page. If contacting us\nregarding your consent, please state your consent ID and date from that page.\n\nYour consent applies to the following domains: dl.acm.org\n\nCookie declaration last updated on 3/31/24 by Cookiebot\n\nskip to main content\n\n  * Advanced Search\n  * Browse\n  * About\n  *     * Sign in\n    * Register\n\nAdvanced Search\n\n10.1145/3642976.3653035acmconferencesArticle/Chapter ViewAbstractPublication\nPageseurosysConference Proceedingsconference-collections\n\neurosys\n\nresearch-article\n\nOpen Access\n\nShare on\n\n# Unanimous 2PC: Fault-tolerant Distributed Transactions Can be Fast and\nSimple\n\n  * Authors:\n  * Chris Jensen\n\nUniversity of Cambridge, Cambridge, United Kingdom\n\nUniversity of Cambridge, Cambridge, United Kingdom\n\nhttps://orcid.org/0009-0003-5993-9725\n\nSearch about this author\n\n,\n\n  * Heidi Howard\n\nAzure Research, Microsoft, Cambridge, United Kingdom\n\nAzure Research, Microsoft, Cambridge, United Kingdom\n\nhttps://orcid.org/0000-0001-5256-7664\n\nSearch about this author\n\n,\n\n  * Antonios Katsarakis\n\nHuawei Research, Edinburgh, United Kingdom\n\nHuawei Research, Edinburgh, United Kingdom\n\nhttps://orcid.org/0000-0002-9879-435X\n\nSearch about this author\n\n,\n\n  * Richard Mortier\n\nUniversity of Cambridge, Cambridge, United Kingdom\n\nUniversity of Cambridge, Cambridge, United Kingdom\n\nhttps://orcid.org/0000-0001-5205-5992\n\nView Profile\n\nAuthors Info & Claims\n\nPaPoC '24: Proceedings of the 11th Workshop on Principles and Practice of\nConsistency for Distributed DataApril 2024Pages\n44\u201357https://doi.org/10.1145/3642976.3653035\n\nPublished:22 April 2024Publication History\n\n  * 0citation\n  * 0\n  * Downloads\n\nMetrics\n\nTotal Citations0\n\nTotal Downloads0\n\nLast 12 Months0\n\nLast 6 weeks0\n\n  * Get Citation Alerts\n\n## New Citation Alert added!\n\nThis alert has been successfully added and will be sent to:\n\nYou will be notified whenever a record that you have chosen has been cited.\n\nTo manage your alert preferences, click on the button below.\n\nManage my Alerts\n\n## New Citation Alert!\n\nPlease log in to your account\n\n  * Publisher Site\n\n  * eReader\n  * PDF\n\n## PaPoC '24: Proceedings of the 11th Workshop on Principles and Practice of\nConsistency for Distributed Data\n\nUnanimous 2PC: Fault-tolerant Distributed Transactions Can be Fast and Simple\n\nPages 44\u201357\n\nPreviousChapterNextChapter\n\n## ABSTRACT\n\nDistributed transactional datastores are pivotal in supporting the needs of\nmodern applications and services. Datastores rely on distributed transactional\nprotocols to tolerate faults while also aiming for strong consistency and high\nperformance. State-of-the-art transactional protocols, such as FaRM, provide a\nlock-free execution phase, thus improving performance and simplifying\nrecovery. However, these protocols often come with lengthy and complicated\ncommit phases, requiring multiple round-trips to commit a transaction (or\nadditional replicas). This completely contrasts with the simplicity and\nefficiency of the traditional two-phase commit (2PC) protocol, which can\ncommit a transaction after a single round-trip, albeit lacking fault\ntolerance.\n\nTo address the limitations of both approaches, we introduce U2PC, a novel 2PC\nvariant that combines simplicity, efficiency, and fault tolerance. U2PC\nfrugally replicates data (f + 1) times to tolerate up to f faults with strong\nconsistency. It offers a single round-trip commit after unanimous responses of\nall replicas of the involved shards and ensures safe recovery via an extra\n\"pre-abort\" round before aborting a transaction. Our verification in TLA+\nconfirms that U2PC achieves strict serializability and recovers safely. In\nshort, U2PC ensures fault tolerance, optimizes performance for common\nscenarios, and offers uniform transaction handling.\n\n## References\n\n  1. Marcos K Aguilera, Arif Merchant, Mehul Shah, Alistair Veitch, and Christos Karamanolis. Sinfonia: a new paradigm for building scalable distributed systems. ACM SIGOPS Operating Systems Review, 41(6):159--174, 2007.Google ScholarDigital Library\n  2. Manuel Bravo and Alexey Gotsman. Reconfigurable atomic transaction commit. In Proceedings of the 2019 ACM Symposium on Principles of Distributed Computing, pages 399--408, 2019.Google ScholarDigital Library\n  3. Gregory Chockler and Alexey Gotsman. Multi-shot distributed transaction commit. Distributed Computing, 34:301--318, 2021.Google ScholarDigital Library\n  4. Cockroachdb project homepage. https://www.cockroachlabs.com. Accessed : 2023-03-21.Google Scholar\n  5. James C Corbett, Jeffrey Dean, Michael Epstein, Andrew Fikes, Christopher Frost, Jeffrey John Furman, Sanjay Ghemawat, Andrey Gubarev, Christopher Heiser, Peter Hochschild, et al. Spanner: Google's globally distributed database. ACM Transactions on Computer Systems (TOCS), 31(3):1--22, 2013.Google Scholar\n  6. Aleksandar Dragojevi\u0107, Dushyanth Narayanan, Miguel Castro, and Orion Hodson. FaRM: fast remote memory. In 11th USENIX Symposium on Networked Systems Design and Implementation (NSDI 14), pages 401--414, 2014.Google ScholarDigital Library\n  7. Aleksandar Dragojevi\u0107, Dushyanth Narayanan, Edmund B Nightingale, Matthew Renzelmann, Alex Shamis, Anirudh Badam, and Miguel Castro. No compromises: distributed transactions with consistency, availability, and performance. In Proceedings of the 25th symposium on operating systems principles, pages 54--70, 2015.Google ScholarDigital Library\n  8. James N Gray. Notes on data base operating systems. Operating systems: An advanced course, pages 393--481, 2005.Google Scholar\n  9. Jim Gray and Leslie Lamport. Consensus on transaction commit. ACM Transactions on Database Systems (TODS), 31(1):133--160, 2006.Google Scholar\n  10. Suyash Gupta and Mohammad Sadoghi. Easycommit: A non-blocking two-phase commit protocol. In EDBT, pages 157--168, 2018.Google Scholar\n  11. Vassos Hadzilacos. On the relationship between the atomic commitment and consensus problems. In Proceedings of the Asilomar Workshop on Fault-Tolerant Distributed Computing, page 201--208, Berlin, Heidelberg, 1990. Springer-Verlag.Google ScholarDigital Library\n  12. Heidi Howard, Aleksey Charapko, and Richard Mortier. Fast flexible paxos: Relaxing quorum intersection for fast paxos. In Proceedings of the 22nd International Conference on Distributed Computing and Networking, ICDCN '21, page 186--190, New York, NY, USA, 2021. Association for Computing Machinery.Google ScholarDigital Library\n  13. Heidi Howard, Dahlia Malkhi, and Alexander Spiegelman. Flexible paxos: Quorum intersection revisited, 2016.Google Scholar\n  14. Anuj Kalia, Michael Kaminsky, and David G. Andersen. Fasst: fast, scalable and simple distributed transactions with two-sided (rdma) datagram rpcs. In Proceedings of the 12th USENIX Conference on Operating Systems Design and Implementation, OSDI'16, page 185--201, USA, 2016. USENIX Association.Google ScholarDigital Library\n  15. Antonios Katsarakis, Yijun Ma, Zhaowei Tan, Andrew Bainbridge, Matthew Balkwill, Aleksandar Dragojevic, Boris Grot, Bozidar Radunovic, and Yongguang Zhang. Zeus: locality-aware distributed transactions. In Proceedings of the Sixteenth European Conference on Computer Systems, EuroSys '21, page 145--161, New York, NY, USA, 2021. Association for Computing Machinery.Google ScholarDigital Library\n  16. Idit Keidar and Danny Dolev. Increasing the resilience of atomic commit, at no additional cost. In Proceedings of the fourteenth ACM SIGACT-SIGMOD-SIGART symposium on Principles of database systems, pages 245--254, 1995.Google ScholarDigital Library\n  17. Tim Kraska, Gene Pang, Michael J Franklin, Samuel Madden, and Alan Fekete. Mdcc: Multi-data center consistency. In Proceedings of the 8th ACM European Conference on Computer Systems, pages 113--126, 2013.Google ScholarDigital Library\n  18. Leslie Lamport, Dahlia Malkhi, and Lidong Zhou. Vertical paxos and primary-backup replication. In Proceedings of the 28th ACM symposium on Principles of distributed computing, pages 312--313, 2009.Google ScholarDigital Library\n  19. Barbara Liskov and James Cowling. Viewstamped replication revisited. 2012.Google Scholar\n  20. John DC Little. A proof for the queuing formula: L = \u03bb w. Operations research, 9(3):383--387, 1961.Google ScholarDigital Library\n  21. C Mohan, Bruce Lindsay, and Ron Obermarck. Transaction management in the r* distributed database management system. ACM Transactions on Database Systems (TODS), 11(4):378--396, 1986.Google Scholar\n  22. Brian M Oki and Barbara H Liskov. Viewstamped replication: A new primary copy method to support highly-available distributed systems. In Proceedings of the seventh annual ACM Symposium on Principles of distributed computing, pages 8--17, 1988.Google ScholarDigital Library\n  23. Ravi Sethi. Useless actions make a difference: Strict serializability of database updates. J. ACM, 29(2):394--403, apr 1982.Google ScholarDigital Library\n  24. Dale Skeen. Nonblocking commit protocols. In Proceedings of the 1981 ACM SIGMOD international conference on Management of data, pages 133--142, 1981.Google ScholarDigital Library\n  25. Adriana Szekeres, Michael Whittaker, Jialin Li, Naveen Kr Sharma, Arvind Krishnamurthy, Dan RK Ports, and Irene Zhang. Meerkat: multicore-scalable replicated transactions following the zero-coordination principle. In Proceedings of the Fifteenth European Conference on Computer Systems, pages 1--14, 2020.Google ScholarDigital Library\n  26. Xingda Wei, Jiaxin Shi, Yanzhe Chen, Rong Chen, and Haibo Chen. Fast in-memory transaction processing using rdma and htm. In Proceedings of the 25th Symposium on Operating Systems Principles, SOSP '15, page 87--104, New York, NY, USA, 2015. Association for Computing Machinery.Google ScholarDigital Library\n  27. Michael Whittaker, Neil Giridharan, Adriana Szekeres, Joseph M Hellerstein, Heidi Howard, Faisal Nawab, and Ion Stoica. Matchmaker paxos: A reconfigurable consensus protocol [technical report]. arXiv preprint arXiv:2007.09468, 2020.Google Scholar\n  28. Yuan Yu, Panagiotis Manolios, and Leslie Lamport. Model checking tla+ specifications. In Advanced research working conference on correct hardware design and verification methods, pages 54--66. Springer, 1999.Google ScholarDigital Library\n  29. Irene Zhang, Naveen Kr. Sharma, Adriana Szekeres, Arvind Krishnamurthy, and Dan R. K. Ports. Building consistent transactions with inconsistent replication. ACM Trans. Comput. Syst., 35(4), dec 2018.Google Scholar\n\n## Cited By\n\nView all\n\n## Index Terms\n\n  1. Unanimous 2PC: Fault-tolerant Distributed Transactions Can be Fast and Simple\n\n    1. Computer systems organization\n\n      1. Architectures\n\n        1. Distributed architectures\n\n          1. Cloud computing\n\n    2. Theory of computation\n\n      1. Design and analysis of algorithms\n\n        1. Distributed algorithms\n\n## Recommendations\n\n  * ##### Fast General Distributed Transactions with Opacity\n\nSIGMOD '19: Proceedings of the 2019 International Conference on Management of\nData\n\nTransactions can simplify distributed applications by hiding data\ndistribution, concurrency, and failures from the application developer.\nIdeally the developer would see the abstraction of a single large machine that\nruns transactions sequentially and ...\n\nRead More\n\n  * ##### Byzantine Fault Tolerant Coordination for Web Services Atomic Transactions\n\nICSOC '07: Proceedings of the 5th international conference on Service-Oriented\nComputing\n\nIn this paper, we present the mechanisms needed for Byzantine fault tolerant\ncoordination of Web services atomic transactions. The mechanisms have been\nincorporated into an open-source framework implementing the standard Web\nservices atomic transactions ...\n\nRead More\n\n  * ##### Fast software transactions\n\nRead More\n\n## Comments\n\n0 Comments\n\n### Login options\n\nCheck if you have access through your login credentials or your institution to\nget full access on this article.\n\nSign in\n\n### Full Access\n\nGet this Publication\n\n  * Information\n  * Contributors\n\n  * ### Published in\n\nPaPoC '24: Proceedings of the 11th Workshop on Principles and Practice of\nConsistency for Distributed Data\n\nApril 2024\n\n69 pages\n\nISBN:9798400705441\n\nDOI:10.1145/3642976\n\nThis work is licensed under a Creative Commons Attribution-NonCommercial-\nShareAlike International 4.0 License.\n\n### Sponsors\n\n### In-Cooperation\n\n### Publisher\n\nAssociation for Computing Machinery\n\nNew York, NY, United States\n\n### Publication History\n\n    * Published: 22 April 2024\n\n### Check for updates\n\n### Author Tags\n\n    * distributed transactions\n    * 2PC\n    * FastPaxos\n\n### Qualifiers\n\n    * research-article\n\n### Conference\n\n## Acceptance Rates\n\nOverall Acceptance Rate34of47submissions,72%\n\n### Funding Sources\n\n  * ### Other Metrics\n\nView Article Metrics\n\n  * Bibliometrics\n  * Citations0\n\n  * ### Article Metrics\n\n    * 0\n\nTotal Citations\n\nView Citations\n\n    * 0\n\nTotal Downloads\n\n    * Downloads (Last 12 months)0\n    * Downloads (Last 6 weeks)0\n\n### Other Metrics\n\nView Author Metrics\n\n  * ### Cited By\n\nThis publication has not been cited yet\n\n### PDF Format\n\nView or Download as a PDF file.\n\nPDF\n\n### eReader\n\nView online with eReader.\n\neReader\n\n### Digital Edition\n\nView this article in digital edition.\n\nView Digital Edition\n\n  * Figures\n  * Other\n\n### Share this Publication link\n\n### Share on Social Media\n\nShare on\n\nClose Figure Viewer\n\nBrowse AllReturn\n\n### Caption\n\nView Table of Contents\n\n## Export Citations\n\n## Footer\n\n### Categories\n\n  * Journals\n  * Magazines\n  * Books\n  * Proceedings\n  * SIGs\n  * Conferences\n  * Collections\n  * People\n\n### About\n\n  * About ACM Digital Library\n  * ACM Digital Library Board\n  * Subscription Information\n  * Author Guidelines\n  * Using ACM Digital Library\n  * All Holdings within the ACM Digital Library\n  * ACM Computing Classification System\n  * Digital Library Accessibility\n\n### Join\n\n  * Join ACM\n  * Join SIGs\n  * Subscribe to Publications\n  * Institutions and Libraries\n\n### Connect\n\n  * Contact\n  * Facebook\n  * X\n  * Linkedin\n  * Feedback\n  * Bug Report\n\nThe ACM Digital Library is published by the Association for Computing\nMachinery. Copyright \u00a9 2024 ACM, Inc.\n\n  * Terms of Usage\n  * Privacy Policy\n  * Code of Ethics\n\nYour Search Results Download Request\n\nWe are preparing your search results for download ...\n\nWe will inform you here when the file is ready.\n\nDownload now!\n\nYour Search Results Download Request\n\nYour file of search results citations is now ready.\n\nDownload now!\n\nYour Search Results Download Request\n\nYour search export query has expired. Please try again.\n\n", "frontpage": false}
