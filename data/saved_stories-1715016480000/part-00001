{"aid": "40271427", "title": "Show HN: Rustubble \u2013 Beautifull CLI components for your terminal", "url": "https://github.com/warpy-ai/rustubble", "domain": "github.com/warpy-ai", "votes": 1, "user": "jucasoliveira", "posted_at": "2024-05-06 05:33:58", "comments": 0, "source_title": "GitHub - warpy-ai/rustubble: Beautifull components for your terminal.", "source_text": "GitHub - warpy-ai/rustubble: Beautifull components for your terminal.\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nwarpy-ai / rustubble Public\n\n  * Notifications\n  * Fork 0\n  * Star 6\n\nBeautifull components for your terminal.\n\ncrates.io/crates/rustubble\n\n### License\n\nApache-2.0 license\n\n6 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# warpy-ai/rustubble\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n2 Branches\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\njucasoliveiraMerge pull request #25 from warpy-ai/jucasoliveira-patch-1Apr 30,\n202432601a4 \u00b7 Apr 30, 2024Apr 30, 2024\n\n## History\n\n51 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| Create rust.yml| Apr 16, 2024  \n  \n### assets\n\n|\n\n### assets\n\n| Created timer using ratatui| Apr 30, 2024  \n  \n### examples\n\n|\n\n### examples\n\n| Created timer using ratatui| Apr 30, 2024  \n  \n### src\n\n|\n\n### src\n\n| Created timer using ratatui| Apr 30, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Initial commit| Apr 15, 2024  \n  \n### Cargo.toml\n\n|\n\n### Cargo.toml\n\n| up version| Apr 30, 2024  \n  \n### LICENSE.md\n\n|\n\n### LICENSE.md\n\n| add changes on readme| Apr 16, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| Update README.md| Apr 30, 2024  \n  \n### SECURITY.md\n\n|\n\n### SECURITY.md\n\n| add sec| Apr 16, 2024  \n  \n## Repository files navigation\n\n# rustubble\n\nBeautifull components for your terminal.\n\n# Motive\n\nThis project aims to provide a set of components that can be used in your\nterminal applications.\n\n# Components\n\n  * TextInput Component\n  * TextArea Component\n  * Spinner Component\n  * Table Component\n  * Progress bar Component\n  * Timer Component\n  * Stopwatch Component\n\n# TextInput Component\n\nThe TextInput component is a versatile and customizable input field designed\nfor terminal-based applications using Rust. It supports Unicode, dynamic input\nhandling, and comes with a variety of customization options to enhance user\ninteraction.\n\n## Features\n\n  * Unicode Support: Handles Unicode input seamlessly.\n  * Dynamic Input Handling: Supports real-time input processing including pasting and deletion.\n  * Customization: Allows setting up padding, placeholder, initial text, and helper text.\n  * Cursor Management: Manages cursor positioning and ensures it is always placed correctly based on user interaction.\n\n## Usage\n\n  * Example Code\n\n# TextArea Component\n\nA text area field, akin to an <textarea /> in HTML. Allows for input that\nspans multiple lines. Supports unicode, pasting, vertical scrolling when the\nvalue exceeds the width and height of the element, and many customization\noptions.\n\n## Usage\n\n  * Example Code\n\n# Spinner Component\n\nThe Spinner Component provides an easy-to-use and customizable loading\nanimation for CLI applications written in Rust, utilizing the Crossterm\nlibrary to handle terminal output. This component allows for a dynamic visual\ndisplay during long-running operations.\n\n## Features\n\n  * Multiple Spinner Styles: Choose from a variety of predefined spinner styles including dots, lines, and more complex patterns.\n  * Customizable Speed: Control the speed of the spinner animation.\n  * Customizable Messages: Attach messages alongside the spinner to provide real-time feedback to users.\n  * Easy Integration: Simple API for starting, updating, and stopping the spinner.\n\n## Usage\n\n  * Example Code\n\n### Customizing the Spinner\n\nYou can customize the spinner style and message at initialization. Here's how\nyou can specify a different spinner style:\n\n    \n    \n    let spinner = Spinner::new(\"Dots2\", \"Loading resources...\");\n\nAvailable styles include Dots, Dots2, Dots3, etc. Refer to the spinner_data.rs\nfile for a complete list of available styles and their configurations.\n\n## Spinner Styles\n\nThe spinner styles are predefined in a lazy_static block within the\nspinner_data.rs file. Each style is represented by a unique key and includes\nan array of frames and an interval timing in milliseconds.\n\nHere\u2019s an excerpt from the spinner styles definition:\n\n    \n    \n    lazy_static! { static ref SPINNERS: HashMap<String, SpinnerData> = { hashmap! { \"Dots\".into() => SpinnerData { frames: vec![\"\u280b\", \"\u2819\", \"\u2839\", \"\u2838\", \"\u283c\", \"\u2834\", \"\u2826\", \"\u2827\", \"\u2807\", \"\u280f\"], interval: 80 }, // Additional spinner styles... } }; }\n\n# Table Component\n\nThe Table component allows you to create a table in your terminal application\nusing Rust. The component provides a flexible and customizable way to display\ndata in a table format.\n\n## Usage\n\n  * Example Code\n\n### Customizing the Table\n\nYou can set the padding, the number of visible lines and the scroll offset of\nthe table. Here's an example of how you can customize the table:\n\n    \n    \n    let mut table = Table::new(headers, data, 0, 3, 7);\n\nYou can set the position of the table on the view when rendering:\n\n    \n    \n    let (x, y) = (5, 5); handle_table(&mut table, x, y);\n\n# Progress bar Component\n\nThe ProgressBar component is a versatile and customizable loading animation\nfor CLI applications written in Rust. This component allows for a dynamic\nvisual display during long-running operations.\n\n## Usage\n\n  * Example Code\n\n# ViewPort Component\n\nThe ViewPort component allows you to create a viewport in your terminal\napplication. The component provides a flexible and customizable way to display\ndata in a String view format\n\n## Usage\n\n  * Example Code\n\n# StopWatch Component\n\nA simple component for counting down.\n\n## Usage\n\n  * Example Code\n\n# Timer Component\n\nA simple component for counting up.\n\n## Usage\n\n  * Example Code\n\n## Contribution\n\nContributions are welcome! If you have suggestions for improving the spinner\nor adding new styles, please open an issue or pull request on our GitHub\nrepository.\n\n## License\n\nThis project is licensed under the Apache License - see the LICENSE file for\ndetails.\n\n## About\n\nBeautifull components for your terminal.\n\ncrates.io/crates/rustubble\n\n### Topics\n\nrust cli terminal-ui\n\n### Resources\n\nReadme\n\n### License\n\nApache-2.0 license\n\n### Security policy\n\nSecurity policy\n\nActivity\n\nCustom properties\n\n### Stars\n\n6 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * Rust 100.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
