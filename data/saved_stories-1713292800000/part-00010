{"aid": "40051037", "title": "Count up forever", "url": "https://codegolf.stackexchange.com/questions/63834/count-up-forever", "domain": "codegolf.stackexchange.com", "votes": 1, "user": "cnln", "posted_at": "2024-04-16 12:17:44", "comments": 0, "source_title": "Count up forever", "source_text": "code golf - Count up forever - Code Golf Stack Exchange\n\n#### Stack Exchange Network\n\nStack Exchange network consists of 183 Q&A communities including Stack\nOverflow, the largest, most trusted online community for developers to learn,\nshare their knowledge, and build their careers.\n\nVisit Stack Exchange\n\nTeams\n\nQ&A for work\n\nConnect and share knowledge within a single location that is structured and\neasy to search.\n\nLearn more about Teams\n\n# Count up forever\n\nAsk Question\n\nAsked 8 years, 5 months ago\n\nModified today\n\nViewed 16k times\n\nThis question shows research effort; it is useful and clear\n\n86\n\nSave this question.\n\nShow activity on this post.\n\nWrite a program that counts up forever, starting from one.\n\nRules:\n\n  * Your program must log to STDOUT or an acceptable alternative, if STDOUT is not available.\n  * Your program must be a full, runnable program, and not a function or snippet.\n  * Your program must output each number with a separating character in between (a newline, space, tab or comma), but this must be consistent for all numbers.\n  * You may print the numbers in decimal, in unary or in base 256 where each digit is represented by a byte value.\n  * Your program must count at least as far as 2^128 (inclusive) without problems and without running out of memory on a reasonable desktop PC. In particular, this means if you're using unary, you cannot store a unary representation of the current number in memory.\n  * Unlike our usual rules, feel free to use a language (or language version) even if it's newer than this challenge. Languages specifically written to submit a 0-byte answer to this challenge are fair game but not particularly interesting.\n\nNote that there must be an interpreter so the submission can be tested. It is\nallowed (and even encouraged) to write this interpreter yourself for a\npreviously unimplemented language.\n\n  * This is not about finding the language with the shortest solution for this (there are some where the empty program does the trick) - this is about finding the shortest solution in every language. Therefore, no answer will be marked as accepted.\n\n### Catalogue\n\nThe Stack Snippet at the bottom of this post generates the catalogue from the\nanswers a) as a list of shortest solution per language and b) as an overall\nleaderboard.\n\nTo make sure that your answer shows up, please start your answer with a\nheadline, using the following Markdown template:\n\n    \n    \n    ## Language Name, N bytes\n\nwhere N is the size of your submission. If you improve your score, you can\nkeep old scores in the headline, by striking them through. For instance:\n\n    \n    \n    ## Ruby, <s>104</s> <s>101</s> 96 bytes\n\nIf there you want to include multiple numbers in your header (e.g. because\nyour score is the sum of two files or you want to list interpreter flag\npenalties separately), make sure that the actual score is the last number in\nthe header:\n\n    \n    \n    ## Perl, 43 + 2 (-p flag) = 45 bytes\n\nYou can also make the language name a link which will then show up in the\nsnippet:\n\n    \n    \n    ## [><>](http://esolangs.org/wiki/Fish), 121 bytes\n\nShow code snippet\n\n    \n    \n    <style>body { text-align: left !important} #answer-list { padding: 10px; width: 290px; float: left; } #language-list { padding: 10px; width: 290px; float: left; } table thead { font-weight: bold; } table td { padding: 5px; }</style><script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script> <link rel=\"stylesheet\" type=\"text/css\" href=\"//cdn.sstatic.net/codegolf/all.css?v=83c949450c8b\"> <div id=\"language-list\"> <h2>Shortest Solution by Language</h2> <table class=\"language-list\"> <thead> <tr><td>Language</td><td>User</td><td>Score</td></tr> </thead> <tbody id=\"languages\"> </tbody> </table> </div> <div id=\"answer-list\"> <h2>Leaderboard</h2> <table class=\"answer-list\"> <thead> <tr><td></td><td>Author</td><td>Language</td><td>Size</td></tr> </thead> <tbody id=\"answers\"> </tbody> </table> </div> <table style=\"display: none\"> <tbody id=\"answer-template\"> <tr><td>{{PLACE}}</td><td>{{NAME}}</td><td>{{LANGUAGE}}</td><td>{{SIZE}}</td><td><a href=\"{{LINK}}\">Link</a></td></tr> </tbody> </table> <table style=\"display: none\"> <tbody id=\"language-template\"> <tr><td>{{LANGUAGE}}</td><td>{{NAME}}</td><td>{{SIZE}}</td><td><a href=\"{{LINK}}\">Link</a></td></tr> </tbody> </table><script>var QUESTION_ID = 63834; var ANSWER_FILTER = \"!t)IWYnsLAZle2tQ3KqrVveCRJfxcRLe\"; var COMMENT_FILTER = \"!)Q2B_A2kjfAiU78X(md6BoYk\"; var OVERRIDE_USER = 39069; var answers = [], answers_hash, answer_ids, answer_page = 1, more_answers = true, comment_page; function answersUrl(index) { return \"//api.stackexchange.com/2.2/questions/\" + QUESTION_ID + \"/answers?page=\" + index + \"&pagesize=100&order=desc&sort=creation&site=codegolf&filter=\" + ANSWER_FILTER; } function commentUrl(index, answers) { return \"//api.stackexchange.com/2.2/answers/\" + answers.join(';') + \"/comments?page=\" + index + \"&pagesize=100&order=desc&sort=creation&site=codegolf&filter=\" + COMMENT_FILTER; } function getAnswers() { jQuery.ajax({ url: answersUrl(answer_page++), method: \"get\", dataType: \"jsonp\", crossDomain: true, success: function (data) { answers.push.apply(answers, data.items); answers_hash = []; answer_ids = []; data.items.forEach(function(a) { a.comments = []; var id = +a.share_link.match(/\\d+/); answer_ids.push(id); answers_hash[id] = a; }); if (!data.has_more) more_answers = false; comment_page = 1; getComments(); } }); } function getComments() { jQuery.ajax({ url: commentUrl(comment_page++, answer_ids), method: \"get\", dataType: \"jsonp\", crossDomain: true, success: function (data) { data.items.forEach(function(c) { if (c.owner.user_id === OVERRIDE_USER) answers_hash[c.post_id].comments.push(c); }); if (data.has_more) getComments(); else if (more_answers) getAnswers(); else process(); } }); } getAnswers(); var SCORE_REG = /<h\\d>\\s*([^\\n,<]*(?:<(?:[^\\n>]*>[^\\n<]*<\\/[^\\n>]*>)[^\\n,<]*)*),.*?(\\d+)(?=[^\\n\\d<>]*(?:<(?:s>[^\\n<>]*<\\/s>|[^\\n<>]+>)[^\\n\\d<>]*)*<\\/h\\d>)/; var OVERRIDE_REG = /^Override\\s*header:\\s*/i; function getAuthorName(a) { return a.owner.display_name; } function process() { var valid = []; answers.forEach(function(a) { var body = a.body; a.comments.forEach(function(c) { if(OVERRIDE_REG.test(c.body)) body = '<h1>' + c.body.replace(OVERRIDE_REG, '') + '</h1>'; }); var match = body.match(SCORE_REG); if (match) valid.push({ user: getAuthorName(a), size: +match[2], language: match[1], link: a.share_link, }); else console.log(body); }); valid.sort(function (a, b) { var aB = a.size, bB = b.size; return aB - bB }); var languages = {}; var place = 1; var lastSize = null; var lastPlace = 1; valid.forEach(function (a) { if (a.size != lastSize) lastPlace = place; lastSize = a.size; ++place; var answer = jQuery(\"#answer-template\").html(); answer = answer.replace(\"{{PLACE}}\", lastPlace + \".\") .replace(\"{{NAME}}\", a.user) .replace(\"{{LANGUAGE}}\", a.language) .replace(\"{{SIZE}}\", a.size) .replace(\"{{LINK}}\", a.link); answer = jQuery(answer); jQuery(\"#answers\").append(answer); var lang = a.language; lang = jQuery('<a>'+lang+'</a>').text(); languages[lang] = languages[lang] || {lang: a.language, lang_raw: lang.toLowerCase(42), user: a.user, size: a.size, link: a.link}; }); var langs = []; for (var lang in languages) if (languages.hasOwnProperty(lang)) langs.push(languages[lang]); langs.sort(function (a, b) { if (a.lang_raw > b.lang_raw) return 1; if (a.lang_raw < b.lang_raw) return -1; return 0; }); for (var i = 0; i < langs.length; ++i) { var language = jQuery(\"#language-template\").html(); var lang = langs[i]; language = language.replace(\"{{LANGUAGE}}\", lang.lang) .replace(\"{{NAME}}\", lang.user) .replace(\"{{SIZE}}\", lang.size) .replace(\"{{LINK}}\", lang.link); language = jQuery(language); jQuery(\"#languages\").append(language); } }</script>\n\nExpand snippet\n\n  * code-golf\n  * number\n  * counting\n  * restricted-memory\n\nShare\n\nCC BY-SA 3.0\n\nImprove this question\n\nFollow this question to receive notifications\n\nedited Sep 30, 2020 at 15:52\n\nThe Fifth Marshal\n\n6,24711 gold badge2424 silver badges4444 bronze badges\n\nasked Nov 14, 2015 at 12:40\n\nvrwimvrwim\n\n2,49933 gold badges1616 silver badges1717 bronze badges\n\n26\n\n  * 35\n\nI'm not sure how to combine must output each number with a separating\ncharacter in between with may print the numbers [...] in base 256.\n\n\u2013 Dennis\n\nNov 14, 2015 at 14:25\n\n  * 8\n\nFor future challenges, may I recommend the sandbox such that all these details\ncould be sorted out before people start posting answers? :)\n\n\u2013 Martin Ender\n\nNov 14, 2015 at 14:32\n\n  * 4\n\n@IlmariKaronen I interpret that as being a memory limit, not a time limit.\npossibly a time limit on per-increment. just set the counter to 2**128-10 and\nsee how long it takes to take those last ten steps.\n\n\u2013 Sparr\n\nNov 15, 2015 at 7:41\n\n  * 5\n\nCan we have leading zeroes in the output?\n\n\u2013 Pa\u016dlo Ebermann\n\nNov 15, 2015 at 11:43\n\n  * 4\n\nUgh!!! I have an answer for TI-89 (56b), but I can't post b/c I'm new to the\nsite and don't have Rep 10+!\n\n\u2013 gregsdennis\n\nNov 15, 2015 at 20:45\n\n| Show 21 more comments\n\n## 226 Answers 226\n\nReset to default\n\n1\n\n2 3 4 5\n\n...\n\n8 Next\n\nThis answer is useful\n\n66\n\nSave this answer.\n\nShow activity on this post.\n\n## Labyrinth, 5 bytes\n\n    \n    \n    ): \\!\n\n\u266b The IP in the code goes round and round \u266b\n\nRelevant instructions:\n\n    \n    \n    ) Increment top of stack (stack has infinite zeroes at bottom) : Duplicate top of stack ! Output top of stack \\ Output newline\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nanswered Nov 14, 2015 at 13:01\n\nSp3000Sp3000\n\n61.9k1313 gold badges114114 silver badges287287 bronze badges\n\n5\n\n  * 87\n\nThe program is sad that its not stopping..\n\n\u2013 Optimizer\n\nNov 14, 2015 at 17:10\n\n  * 8\n\n@Optimizer def sad( indeed ):\n\n\u2013 yyny\n\nNov 16, 2015 at 18:11\n\n  * 1\n\nWhy is this not 4 bytes?\n\n\u2013 Aurel B\u00edl\u00fd\n\nDec 30, 2015 at 11:17\n\n  * 2\n\n@Aurel300 The fifth byte is the newline between : and \\\n\n\u2013 Sp3000\n\nDec 30, 2015 at 12:10\n\n  * @Sp3000 Ah, yes. Silly me. :)\n\n\u2013 Aurel B\u00edl\u00fd\n\nDec 30, 2015 at 15:04\n\nAdd a comment |\n\nThis answer is useful\n\n55\n\nSave this answer.\n\nShow activity on this post.\n\n# ><>, 8 bytes\n\n    \n    \n    01+:nao!\n\nSteps:\n\n  * Push 0 on the stack\n  * Add 1 to the top stack element\n  * Duplicate top stack element\n  * Output the top of the stack as number\n  * Output a newline\n  * Go to step 2 by wrapping around and jumping the next instruction (step 11)\n\n(A less memory efficient (hence invalid) program is llnao.)\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Nov 14, 2015 at 15:27\n\nanswered Nov 14, 2015 at 13:36\n\nrandomrarandomra\n\n20.9k44 gold badges4646 silver badges110110 bronze badges\n\n1\n\n  * 76\n\n+1 for the impatient upvote-demanding implicit in a line of code that\nbasically reads \u201cplus one, now!\u201d.\n\n\u2013 Janus Bahs Jacquet\n\nNov 14, 2015 at 14:39\n\nAdd a comment |\n\nThis answer is useful\n\n33\n\nSave this answer.\n\nShow activity on this post.\n\n# C (64-bit architecture only), 53 bytes\n\nRelies on pointers being at least 64 bits and prints them in hex using the %p\nspecifier. The program would return right when it hits 2^128.\n\n    \n    \n    char*a,*b;main(){for(;++b||++a;)printf(\"%p%p \",a,b);}\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Jun 17, 2020 at 9:04\n\nCommunityBot\n\n1\n\nanswered Nov 14, 2015 at 14:13\n\nfeersumfeersum\n\n31.4k88 gold badges6464 silver badges124124 bronze badges\n\n14\n\n  * 6\n\nInvalid as it can't count up to 2^128\n\n\u2013 edc65\n\nNov 14, 2015 at 14:52\n\n  * 2\n\n@edc65 The spec says until 2^128, which is not inclusive.\n\n\u2013 feersum\n\nNov 14, 2015 at 15:05\n\n  * 24\n\nI like CodeGolf when it is about expressing and rewarding creativity. feersum\nis clearly not competing for the win here. To see many downvotes on a\ntechnicality and to modify the wording of the question to make sure his answer\nis in violation makes me sad.\n\n\u2013 flodel\n\nNov 14, 2015 at 17:44\n\n  * 3\n\nI thought the words \"at least as far as 2^128\" were clear enough...\n\n\u2013 vrwim\n\nNov 14, 2015 at 18:00\n\n  * 8\n\n@vrwim You didn't write that. You wrote \"until 2^128\". SuperJedi edited it a\nfew minutes ago.\n\n\u2013 feersum\n\nNov 14, 2015 at 18:07\n\n| Show 9 more comments\n\nThis answer is useful\n\n27\n\nSave this answer.\n\nShow activity on this post.\n\n## Haskell, 21 bytes\n\n    \n    \n    main=mapM_ print[1..]\n\nArbitrary-precision integers and infinite lists make this easy :-)\n\nLuckily mapM_ is in the Prelude. If Data.Traversable was as well, we even\ncould shrink it to 19 bytes:\n\n    \n    \n    main=for_[1..]print\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Mar 5, 2019 at 12:29\n\nanswered Nov 14, 2015 at 15:12\n\nBergiBergi\n\n1,04777 silver badges1313 bronze badges\n\n12\n\n  * Isn't there a symbol that generalizes map/mapM etc?\n\n\u2013 JD\u0142ugosz\n\nNov 16, 2015 at 2:41\n\n  * @JD\u0142ugosz: not that I know\n\n\u2013 Bergi\n\nNov 16, 2015 at 3:09\n\n  * Ah, 'cause it would still have to sequence the result to get the output to really happen.\n\n\u2013 JD\u0142ugosz\n\nNov 16, 2015 at 3:27\n\n  * isnt simply [1..] allowed, since it prints all numbers with a comma in beween? or the first [ screw it all up?\n\n\u2013 Baconaro\n\nDec 30, 2015 at 11:06\n\n  * 2\n\nWith leading [ allowed you could say main=print[1..]\n\n\u2013 Christian Sievers\n\nJul 23, 2016 at 12:36\n\n| Show 7 more comments\n\nThis answer is useful\n\n25\n\nSave this answer.\n\nShow activity on this post.\n\n# Gol><>, 3 bytes\n\n    \n    \n    P:N\n\nSteps:\n\n  * Add 1 to the top stack element (at start it is an implicit 0)\n  * Duplicate top stack element\n  * Pop and output the top of the stack as number and a newline\n  * Wrap around to step 1 as we reached the end of the line\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nanswered Nov 14, 2015 at 13:22\n\nrandomrarandomra\n\n20.9k44 gold badges4646 silver badges110110 bronze badges\n\nAdd a comment |\n\nThis answer is useful\n\n24\n\nSave this answer.\n\nShow activity on this post.\n\n# Marbelous, 11450 4632 bytes\n\nPrinting decimals is a pain!!\n\nDefinitely not winning with this one, but I thought I'd give it a shot. I hope\nit's ok that it pads the output to 40 zeros (to fit 2^128).\n\n    \n    \n    00@0..@1..@2..@3..@4..@5..@6..@7..@8..@9..@A..@B..@C..@D..@E..@F..@G..@H..@I..@J \\\\++..00..00..00..00..00..00..00..00..00..00..00..00..00..00..00..00..00..00..00 ..EhunEhunEhunEhunEhunEhunEhunEhunEhunEhunEhunEhunEhunEhunEhunEhunEhunEhunEhunEhun ....AddtAddtAddtAddtAddtAddtAddtAddtAddtAddtAddtAddtAddtAddtAddtAddtAddtAddtAddtixteenbytedecimalprintermodulewitharegi :Sixteenbytedecimalprintermodulewitharegi }J}J}I}I}H}H}G}G}F}F}E}E}D}D}C}C}B}B}A}A}9}9}8}8}7}7}6}6}5}5}4}4}3}3}2}2}1}1}0}00A /A%A/A%A/A%A/A%A/A%A/A%A/A%A/A%A/A%A/A%A/A%A/A%A/A%A/A%A/A%A/A%A/A%A/A%A/A%A/A%A %A..%A..%A..%A..%A..%A..%A..%A..%A..%A..%A..%A..%A..%A..%A..%A..%A..%A..%A..%A.. +O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O.. +O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O+O.. :/A ..}0..}0.. ..>>}0.... ..>>>>\\\\.. ....//..// ../\\>>\\\\.. ....>>..// ....>>\\\\.. ....>>.... \\\\>>//.... ..>>...... ..>>...... ../\\...... ..../\\<<.. ......<<.. ..\\\\<<//.. ....~~.... ....++.... ....\\\\..// \\\\....>9\\/ ..\\\\..?0.. ......++.. ....\\\\.... ......{0.. :%A @0.. }0.. <A-A {0@0 :Eg }0}0}0}0}0}0}0}0 ^7^6^5^4^3^2^1^0 ~~....~~~~..~~~~ ^0^0^0^0^0^0^0^0 {0{0{0{0{0{0{0{0 :Ehun }0..}0 Eg..&0 =8&0{0 &1\\/00 0100&0 &1&1{1 {1{0 :Addt }0}1 {1{1\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Nov 16, 2015 at 19:58\n\nmbomb007\n\n23.4k77 gold badges6262 silver badges134134 bronze badges\n\nanswered Nov 14, 2015 at 18:54\n\nTheDoctorTheDoctor\n\n7,99977 gold badges4141 silver badges6868 bronze badges\n\n5\n\n  * Would printing binary be any shorter?\n\n\u2013 SuperJedi224\n\nNov 14, 2015 at 20:15\n\n  * 3\n\n(or what about unary?)\n\n\u2013 Doorknob\n\nNov 14, 2015 at 21:58\n\n  * @Doorknob displaying the output isn't the problem. It's something on the Ehun board that is supposed to increment the next digit, but doesn't work properly\n\n\u2013 TheDoctor\n\nNov 14, 2015 at 21:59\n\n  * 1\n\nDid you know you can leave out the periods at the end of every line and blank\nlines between boards and use single characters for board names? You just have\nto repeat that single character the appropriate amount of time to call upon\nit. This can get your answer down to about 3000 bytes.\n\n\u2013 overactor\n\nDec 30, 2015 at 8:53\n\n  * Eventually I'm going to push a commit to marbelous.py that includes all of include/ by default\n\n\u2013 Sparr\n\nFeb 6, 2019 at 2:55\n\nAdd a comment |\n\nThis answer is useful\n\n19\n\nSave this answer.\n\nShow activity on this post.\n\n## Hexagony, 12 11 10 7 bytes\n\nThanks to alephalpha for fitting the code into side-length 2.\n\n    \n    \n    10})!';\n\nUnfolded:\n\n    \n    \n    1 0 } ) ! ' ;\n\nThis one is fairly simple. 10 writes a 10, i.e. a linefeed to the initial\nmemory edge. Then })!'; is repeatedly executed in a loop:\n\n  * } move to the next memory edge.\n  * ) increment it.\n  * ! print it as an integer.\n  * ' move back to the 10.\n  * ; print it as a character.\n\nI believe that this is optimal (although by far not unique). I've let the\nbrute force script I wrote for this answer search for 6-byte solutions under\nthe assumption that it would have to contain at least one each of ; and ! and\neither ( or ), and would not contain ?, , or @, and it didn't find any\nsolutions.\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Apr 13, 2017 at 12:39\n\nCommunityBot\n\n1\n\nanswered Nov 14, 2015 at 14:04\n\nMartin EnderMartin Ender\n\n197k6565 gold badges444444 silver badges970970 bronze badges\n\n0\n\nAdd a comment |\n\nThis answer is useful\n\n17\n\nSave this answer.\n\nShow activity on this post.\n\n# bc, 10\n\n    \n    \n    for(;;)++i\n\nUnusual that bc is shorter than dc.\n\nFrom man bc:\n\n> DESCRIPTION\n>\n> bc is a language that supports arbitrary precision numbers\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Jun 17, 2020 at 9:04\n\nCommunityBot\n\n1\n\nanswered Nov 14, 2015 at 21:15\n\nDigital TraumaDigital Trauma\n\n72.1k99 gold badges110110 silver badges262262 bronze badges\n\n10\n\n  * Where does this print it out?\n\n\u2013 B\u00e1lint\n\nApr 24, 2016 at 7:47\n\n  * @B\u00e1lint ++i is an expression, but not an assignment, and is therefor explicitly output. Did you try running it? echo 'for(;;)++i' | bc in your nearest Linux terminal.\n\n\u2013 Digital Trauma\n\nApr 24, 2016 at 7:52\n\n  * I don't have a single Linux terminal in my house. I was just curious.\n\n\u2013 B\u00e1lint\n\nApr 24, 2016 at 8:04\n\n  * 12\n\n@B\u00e1lint Every house should have a Linux terminal.\n\n\u2013 Digital Trauma\n\nApr 24, 2016 at 8:09\n\n  * 3\n\n@B\u00e1lint Running this program is your use ;)\n\n\u2013 Insane\n\nApr 24, 2016 at 18:32\n\n| Show 5 more comments\n\nThis answer is useful\n\n14\n\nSave this answer.\n\nShow activity on this post.\n\n# Pyth, 4 bytes\n\n    \n    \n    .V1b\n\n### Explanation:\n\n    \n    \n    .V1 for b in range(1 to infinity): b print b\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nanswered Nov 14, 2015 at 12:47\n\nJakubeJakube\n\n21.9k33 gold badges2626 silver badges108108 bronze badges\n\n3\n\n  * f!\\n (TIO link) will work for 3 bytes, not sure if that's using any features that have been added after your answer though.\n\n\u2013 Sok\n\nJul 12, 2019 at 14:03\n\n  * @Sok Clever. However, I won't change the answer because I think that f was a feature oft Pyth 4 years ago.\n\n\u2013 Jakube\n\nJul 12, 2019 at 15:23\n\n  * I thought so too, which is why I left it as a comment - new language features to beat an older answer always feel cheap IMO\n\n\u2013 Sok\n\nJul 12, 2019 at 16:51\n\nAdd a comment |\n\nThis answer is useful\n\n12\n\nSave this answer.\n\nShow activity on this post.\n\n# Java, 139 138 127 123 bytes\n\n    \n    \n    class K{public static void main(String[]a){java.math.BigInteger b=null;for(b=b.ZERO;;)System.out.println(b=b.add(b.ONE));}}\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Nov 14, 2015 at 20:12\n\nanswered Nov 14, 2015 at 14:35\n\nSuperJedi224SuperJedi224\n\n11.9k11 gold badge4545 silver badges6767 bronze badges\n\n10\n\n  * 2\n\nA smaller infinite loop in java is for(;;) for an easy 3 bytes.\n\n\u2013 ankh-morpork\n\nNov 14, 2015 at 17:29\n\n  * You can also save another 2 with BigInteger b=null;b=b.ZERO;, sadly the =null is needed, even thought it's a static access.\n\n\u2013 TWiStErRob\n\nNov 14, 2015 at 19:46\n\n  * And then another 9, because you can get rid of the import by referencing BigInteger by FQCN only once.\n\n\u2013 TWiStErRob\n\nNov 14, 2015 at 19:47\n\n  * @TWiStErRob Somehow, I hadn't realized that would be shorter.\n\n\u2013 SuperJedi224\n\nNov 14, 2015 at 20:05\n\n  * 3\n\nFor Java 8 or newer, you can replace the class with interface and remove\npublic from the function. Don't wanna copy your code and post it as a new\nanswer.\n\n\u2013 Luca H\n\nNov 24, 2017 at 6:55\n\n| Show 5 more comments\n\nThis answer is useful\n\n10\n\nSave this answer.\n\nShow activity on this post.\n\n# Mathematica, 22 bytes\n\n    \n    \n    i=0;While[Echo[++i]>0]\n\nEcho is a new function in Mathematica 10.3.\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nanswered Nov 14, 2015 at 13:19\n\nalephalphaalephalpha\n\n48k77 gold badges6262 silver badges175175 bronze badges\n\n1\n\n  * Echo gives four separating characters: newline plus \">> \". Not sure this is valid \u2013 maybe use Print instead? Also, save a byte with i=0;While[Echo@++i>0].\n\n\u2013 Roman\n\nJul 14, 2019 at 18:08\n\nAdd a comment |\n\nThis answer is useful\n\n9\n\nSave this answer.\n\nShow activity on this post.\n\n# Python 3, 33 25 bytes\n\nAs far as I understand, Pythons integers are arbitrary precision, and print()\nautomatically produces newlines.\n\nThanks for @Jakub and @Sp3000 and @wnnmaw! I really don't know much python,\nthe only think I knew was that it supports arbitrary size integers=)\n\n    \n    \n    k=1 while 1:print(k);k+=1\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Jun 17, 2020 at 9:04\n\nCommunityBot\n\n1\n\nanswered Nov 14, 2015 at 12:47\n\nflawrflawr\n\n43.8k77 gold badges102102 silver badges247247 bronze badges\n\n9\n\n  * 1 is a truthy value in Python (and most other languages). So while 1: is enough.\n\n\u2013 Jakube\n\nNov 14, 2015 at 12:49\n\n  * Also, you can put the whole while on one line\n\n\u2013 Sp3000\n\nNov 14, 2015 at 12:51\n\n  * You can save a byte by using repr(k) rather than print(k). Also, I count your byte size as 25 (without my suggested change)\n\n\u2013 wnnmaw\n\nNov 16, 2015 at 21:00\n\n  * 2\n\nYou can not use repr instead of print. repr does not output anything. @wnnmaw\n\n\u2013 Zach Gates\n\nNov 17, 2015 at 19:47\n\n  * 1\n\nyou can reduce 1 more byte by making it Python 2 and making it print k\n\n\u2013 Koishore Roy\n\nJul 19, 2017 at 20:07\n\n| Show 4 more comments\n\nThis answer is useful\n\n8\n\nSave this answer.\n\nShow activity on this post.\n\n# Ruby, 15 12 bytes\n\n    \n    \n    loop{p$.+=1}\n\n  * p, when given an integer, prints the integer as-is (courtesy of @philomory)\n  * $. is a magical variable holding the number of lines read from stdin. It is obviously initialized to 0, and also assignable :)\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Apr 13, 2017 at 12:39\n\nCommunityBot\n\n1\n\nanswered Nov 14, 2015 at 15:49\n\ndanierodaniero\n\n18.6k55 gold badges5050 silver badges7777 bronze badges\n\n1\n\n  * @philomory It is typically suggested for users to leave a comment suggesting their byte-saving solution. Also, I'd like to see an explanation for this one. c:\n\n\u2013 Addison Crump\n\nNov 15, 2015 at 20:26\n\nAdd a comment |\n\nThis answer is useful\n\n8\n\nSave this answer.\n\nShow activity on this post.\n\n# Samau, 2 bytes\n\n    \n    \n    N)\n\nExplanation:\n\n    \n    \n    N push the infinite list [0 1 2 ...] onto the stack ) increase by 1\n\nWhen the output of a program is a list, the outmost brackets are omitted.\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Dec 29, 2015 at 3:41\n\nanswered Dec 29, 2015 at 3:25\n\nalephalphaalephalpha\n\n48k77 gold badges6262 silver badges175175 bronze badges\n\n5\n\n  * Doesn't a list print all its contents at once? If this list is infinite, then it cannot possibly fit in memory or on your screen, and it will never stop being generated, so it will never be printed.\n\n\u2013 cat\n\nDec 29, 2015 at 15:58\n\n  * 1\n\n@cat Samau is written in Haskell, and it's lazy. It won't generate the whole\nlist before printing it.\n\n\u2013 alephalpha\n\nDec 30, 2015 at 2:48\n\n  * Just a heads up. On the GitHub page for Samau, in the description of @, \"push\" is misspelt.\n\n\u2013 Carcigenicate\n\nMar 31, 2017 at 22:39\n\n  * @Carcigenicate Thank you.\n\n\u2013 alephalpha\n\nApr 1, 2017 at 4:10\n\n  * 1\n\nJust a heads up. On the GitHub page for Samau, in the description of _,\n\"opposite\" is misspelt.\n\n\u2013 TwilightSparkle\n\nJan 25, 2022 at 6:58\n\nAdd a comment |\n\nThis answer is useful\n\n8\n\nSave this answer.\n\nShow activity on this post.\n\n# Microsoft PowerPoint (33 Slides, 512 shapes to meet minimum requirements)\n\nStorage representation is in hexadecimal.\n\n## Directions\n\n  * Click the blue square to advance the counter (or propagate the carry), or make an AutoHotKey Script to click it for you.\n  * You can view the number's digits at any time using the green buttons. (It causes unintended behavior if you click the blue buttons after viewing another digit.) This is just for a better UX. It still counts up as normal as long as you keep clicking the blue button. In other words, no user decision is required.\n  * If you reach the end, it displays a congratulatory message.\n\nYou can get the PPTX here. Requires PowerPoint to run.\n\nBefore you comment that Microsoft PowerPoint is not a programming language, it\nhas been shown that PowerPoint is Turing complete (in the same sense that\nconventional languages such as C are Turing complete). A brief discussion is\ngiven here.\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Jun 17, 2020 at 9:04\n\nCommunityBot\n\n1\n\nanswered Jan 14, 2020 at 16:17\n\nGeneral GrievanceGeneral Grievance\n\n1,5161212 silver badges1212 bronze badges\n\n1\n\n  * Note: sadly as of the time I write this, this does not work with LibreOffice, as there seems to be a bug where things that appear don't stay that way.\n\n\u2013 General Grievance\n\nJan 15, 2020 at 3:05\n\nAdd a comment |\n\nThis answer is useful\n\n7\n\nSave this answer.\n\nShow activity on this post.\n\n# makina, 22 bytes\n\n    \n    \n    v >Pv ^>OC ^Uu>n0; ^O<\n\nI AM REAL HUMAN YOU SHOULD TRUST ME AND DO WHAT I SAY\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nanswered Oct 5, 2022 at 15:17\n\nUnit TesterUnit Tester\n\n7111 silver badge33 bronze badges\n\n1\n\n  * (I posted this challenge to get this account enough rep to use chat)\n\n\u2013 Ginger\n\nOct 5, 2022 at 15:17\n\nAdd a comment |\n\nThis answer is useful\n\n6\n\nSave this answer.\n\nShow activity on this post.\n\n# Matlab, 132 bytes\n\n    \n    \n    a=0;while 1;b=a==9;n=find(cumsum(b)-(1:numel(b)),1);a(n)=a(n)+1;a(1:n-1)=0;if ~numel(n);a=[0*a,1];end;disp([a(end:-1:1)+'0','']);end\n\nOk, I think this is the first serious answer that accomplishes this task\nwithout a trivial builtin abitrary size integer. This program implements an\narbitrary size integer as an array of integers. Each integer is always between\n0 and 9, so each array element represents one decimal digit. The array size\nwil be increased by one as soon as we are at e.g. 999. The memory size is no\nproblem here, as 2^128 only requires an array of length 39.\n\n    \n    \n    a=0; while 1 b=a==9; %first number that is not maxed out n=find(cumsum(b)-(1:numel(b)),1); %increase that number, and sett all maxed out numbers to zero a(n)=a(n)+1; a(1:n-1)=0; if ~numel(n) %if we maxed out all entries, add another digit a=[0*a,1]; end disp([a(end:-1:1)+'0',''])%print all digits end\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Jun 17, 2020 at 9:04\n\nCommunityBot\n\n1\n\nanswered Nov 14, 2015 at 12:53\n\nflawrflawr\n\n43.8k77 gold badges102102 silver badges247247 bronze badges\n\nAdd a comment |\n\nThis answer is useful\n\n6\n\nSave this answer.\n\nShow activity on this post.\n\n# Processing, 95 85 71 bytes\n\n    \n    \n    java.math.BigInteger i;{i=i.ZERO;}void draw(){println(i=i.add(i.ONE));}\n\nI tried something with a while loop but it causes all of Processing to crash,\nso I'll stick with this for now.\n\n(Thanks to @SuperJedi224 and @TWiStErRob for suggestions.)\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Nov 14, 2015 at 20:32\n\nanswered Nov 14, 2015 at 15:47\n\ngeokavelgeokavel\n\n6,67633 gold badges2525 silver badges6060 bronze badges\n\n10\n\n  * What's with the spaces? I'm pretty sure import java.math.*;BigInteger i=BigInteger.ZERO;void draw(){println(i=i.add(BigInteger.ONE));} will work.\n\n\u2013 SuperJedi224\n\nNov 14, 2015 at 15:55\n\n  * Yeah, just fixed that.\n\n\u2013 geokavel\n\nNov 14, 2015 at 15:56\n\n  * Does Processing allow the BigInteger.ONE to be changed toi.ONE?\n\n\u2013 SuperJedi224\n\nNov 14, 2015 at 16:05\n\n  * @SuperJedi224 Yes, it does. Thanks!\n\n\u2013 geokavel\n\nNov 14, 2015 at 16:16\n\n  * Alright, have an upvote.\n\n\u2013 SuperJedi224\n\nNov 14, 2015 at 16:28\n\n| Show 5 more comments\n\nThis answer is useful\n\n6\n\nSave this answer.\n\nShow activity on this post.\n\n# JavaScript (ES6), 99 94 67 bytes\n\n    \n    \n    for(n=[i=0];;)(n[i]=-~n[i++]%10)&&alert([...n].reverse(i=0).join``)\n\nalert is the generally accepted STDOUT equivalent for JavaScript but using it\nmeans that consecutive numbers are automatically separated. I've assumed that\noutputting a character after the number is not necessary because of this.\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Apr 25, 2016 at 15:57\n\nanswered Nov 14, 2015 at 16:06\n\nuser81655user81655\n\n11.2k11 gold badge2424 silver badges5050 bronze badges\n\n7\n\n  * 14\n\nThis is why I have a pop-up blocker.\n\n\u2013 Comintern\n\nNov 14, 2015 at 16:47\n\n  * 1\n\njust saying: for(i=0;;)alert(i++) I don't think you need all of those controls\n\n\u2013 towc\n\nDec 30, 2015 at 13:47\n\n  * 3\n\n@towc That won't work. All numbers are 64 bit floats in JavaScript which have\na maximum safe integer value of 2^53 but the question requires it to go up to\n2^128.\n\n\u2013 user81655\n\nDec 30, 2015 at 13:53\n\n  * 1\n\noh, fair point...\n\n\u2013 towc\n\nDec 30, 2015 at 14:00\n\n  * this is simpler: (function x(e){alert(e);x(++i)}(i=0)) (37 bytes)\n\n\u2013 derder56\n\nAug 18, 2020 at 0:09\n\n| Show 2 more comments\n\nThis answer is useful\n\n5\n\nSave this answer.\n\nShow activity on this post.\n\n## C++, 146 141 138 bytes\n\nUsing a standard bigint library is perhaps the most boring way of answering\nthis question, but someone had to do it.\n\n    \n    \n    #include<stdio.h> #include<boost/multiprecision/cpp_int.hpp> int main(){for(boost::multiprecision::uint512_t i=1;;){printf(\"%u\\n\",i++);}}\n\nUngolfed:\n\n    \n    \n    #include<cstdio> #include<boost/multiprecision/cpp_int.hpp> int main() { for(boost::multiprecision::uint512_t i=1;;) { std::printf(\"%u\\n\", i++); } }\n\nThe reason the golfed version uses stdio.h and not cstdio is to avoid having\nto use the std:: namespace.\n\nThis is my first time golfing in C++, let me know if there's any tricks to\nshorten this further.\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Nov 15, 2015 at 4:17\n\nanswered Nov 15, 2015 at 2:01\n\nfelixphewfelixphew\n\n32133 silver badges55 bronze badges\n\n5\n\n  * Maybe you could use '\\n' instead of std::endl, would save you 8 bytes. Also there may be a way to use CPP #define to compress some repetition,\n\n\u2013 Kenney\n\nNov 15, 2015 at 2:23\n\n  * @Kenney Thank you for that! (It only saves 5 bytes, not 8.) I think I may have come up with a way to tweak that section even shorter, though.\n\n\u2013 felixphew\n\nNov 15, 2015 at 3:50\n\n  * I do not knoww boost (and I would not say it is standard either) but isn't i defaultly constructed with the value of 0? You could then strip off definition and switch postincrement to preincremet which would save 2b\n\n\u2013 Zereges\n\nNov 22, 2015 at 20:52\n\n  * How about the deprecated #import?\n\n\u2013 moltarze\n\nJul 3, 2019 at 20:35\n\n  * using printf(3) won't work here as the %u conversion specifier casts the argument to unsigned int so it will loop after 2^32 (for 32-bit int). You should instead use std::cout as boost overloads operator<< for uint512_t. Suggest using int512_t since it's one byte shorter and can also get to 2^128, also you can use space or comma as separator to save another byte\n\n\u2013 c--\n\nMay 31, 2023 at 17:28\n\nAdd a comment |\n\nThis answer is useful\n\n5\n\nSave this answer.\n\nShow activity on this post.\n\n## Intel 8086+ Assembly, 19 bytes\n\n    \n    \n    68 00 b8 1f b9 08 00 31 ff f9 83 15 00 47 47 e2 f9 eb f1\n\nHere's a breakdown:\n\n    \n    \n    68 00 b8 push 0xb800 # CGA video memory 1f pop ds # data segment b9 08 00 L1: mov cx, 8 # loop count 31 ff xor di, di # ds:di = address of number f9 stc # set carry 83 15 00 L2: adc word ptr [di], 0 # add with carry 47 inc di 47 inc di e2 f9 loop L2 eb f1 jmp L1\n\nIt outputs the 128 bit number on the top-left 8 screen positions. Each screen\nposition holds a 8-bit ASCII character and two 4 bit colors.\n\nNote: it wraps around at 2^128; simply change the 8 inmov cx, 8 to 9 to show a\n144 bit number, or even 80*25 to show numbers up to 2^32000.\n\n## Running\n\n### 1.44Mb bzip2 compressed, base64 encoded bootable floppy Image\n\nGenerate the floppy image by copy-pasting the following\n\n    \n    \n    QlpoOTFBWSZTWX9j1uwALTNvecBAAgCgAACAAgAAQAgAQAAAEABgEEggKKAAVDKGgAaZBFSMJgQa fPsBBBFMciogikZcWgKIIprHJDS9ZFh2kUZ3QgggEEh/i7kinChIP7HrdgA=\n\ninto this commandline:\n\n    \n    \n    base64 -d | bunzip2 > floppy.img\n\nand run with, for instance, qemu -fda floppy.img -boot a\n\n### 1.8Mb bootable ISO\n\nThis is a base64 encoded bzip2 compressed ISO image. Generate the iso by\npasting\n\n    \n    \n    QlpoOTFBWSZTWZxLYpUAAMN/2//fp/3WY/+oP//f4LvnjARo5AAQAGkAEBBKoijAApcDbNgWGgqa mmyQPU0HqGCZDQB6mQ0wTQ0ZADQaAMmTaQBqekyEEwQaFA0AA0AxBoAAA9Q0GgNAGg40NDQ0A0Bi BoDIAANNAA0AyAAABhFJNIJiPSmnpMQDJpp6nqeo0ZDQaAANB6IA0NAGj1EfIBbtMewRV0acjr8u b8yz7cCM6gUUEbDKcCdYh4IIu9C6EIBehb8FVUgEtMIAuvACCiO7l2C0KFaFVABcpglEDCLmQqCA LTCAQ5EgnwJLyfntUzNzcooggr6EnTje1SsFYLFNW/k+2BFABdH4c4vMy1et4ZjYii1FbDgpCcGl mhZtl6zX+ky2GDOu3anJB0YtOv04YISUQ0JshGzAZ/3kORdb6BkTDZiYdBAoztZA1N3W0LJhITAI 2kSalUBQh60i3flrmBh7xv4TCMEHTIOM8lIurifMNJ2aXr0QUuLDvv6b9HkTQbKYVSohRPsTOGHi isDdB+cODOsdh31Vy4bZL6mnTAVvQyMO08VoYYcRDC4nUaGGT7rpZy+J6ZxRb1b4lfdhtDmNwuzl E3bZGU3JTdLNz1uEiRjud6oZ5kAwqwhYDok9xaVgf0m5jV4mmGcEagviVntDZOKGJeLjyY4ounyN CWXXWpBPcwSfNOKm8yid4CuocONE1mNqbd1NtFQ9z9YLg2cSsGQV5G3EhhMXKLVC2c9qlqwLRlw4 8pp2QkMAMIhSZaSMS4hGb8Bgyrf4LMM5Su9ZnKoqELyQTaMAlqyQ3lzY7i6kjaGsHyAndc4iKVym SEMxZGG8xOOOBmtNNiLOFECKHzEU2hJF7GERK8QuCekBUBdCCVx4SDO0x/vxSNk8gKrZg/o7UQ33 Fg0ad37mh/buZAbhiCIAeeDwUYjrZGV0GECBAr4QVYaP0PxP1TQZJjwT/EynlkfyKI6MWK/Gxf3H V2MdlUQAWgx9z/i7kinChITiWxSo\n\ninto\n\n    \n    \n    base64 -d bunzip2 > cdrom.iso\n\nand configure a virtual machine to boot from it.\n\n### DOS .COM\n\nThis is a base64 encoded DOS .COM executable:\n\n    \n    \n    aAC4H7kIADH/+YMVAEdH4vnr8Q==\n\nGenerate a .COM file using\n\n    \n    \n    /bin/echo -n aAC4H7kIADH/+YMVAEdH4vnr8Q== | base64 -d > COUNTUP.COM\n\nand run it in (Free)DOS.\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Nov 15, 2015 at 17:58\n\nanswered Nov 15, 2015 at 1:56\n\nKenneyKenney\n\n95644 silver badges44 bronze badges\n\nAdd a comment |\n\nThis answer is useful\n\n5\n\nSave this answer.\n\nShow activity on this post.\n\n## sed, 116 92 83 bytes\n\n    \n    \n    : /^9*$/s/^/0/ s/.9*$/_&/ h s/.*_// y/0123456789/1234567890/ x s/_.*// G s/\\n//p b\n\nUsage: Sed operates on text input and it needs input do anything. To run the\nscript, feed it with just one empty line:\n\n    \n    \n    $ echo | sed -f forever.sed\n\nExplanation: To increment a number, the current number is split up into a\nprefix and a suffix where the suffix is of the form [^9]9*. Each digit in the\nsuffix is then incremented individually, and the two parts are glued back\ntogether. If the current number consists of 9 digits only, a 0 digit is\nappended, which will immediately incremented to a 1.\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Nov 16, 2015 at 19:47\n\nanswered Nov 15, 2015 at 0:20\n\nmatzmatz\n\n17133 bronze badges\n\n2\n\n  * 2\n\nI was able to get it down to 68 bytes by merging the last 3 substitutions. Try\nit online!\n\n\u2013 Ji\u0159\u00ed\n\nJan 14, 2023 at 18:33\n\n  * 1\n\n@Ji\u0159\u00ed Fine, but why not golf it further down by also replacing /^9*$/s/^/0/ by\ns/^9*$/0&/ reducing to 66 bytes\n\n\u2013 Philippos\n\nSep 19, 2023 at 10:49\n\nAdd a comment |\n\nThis answer is useful\n\n5\n\nSave this answer.\n\nShow activity on this post.\n\n## Clojure, 17 bytes\n\n    \n    \n    (map prn (range))\n\nLazy sequences and arbitrary precision integers make this easy (as for Haskell\nand CL). prn saves me a few bytes since I don't need to print a format string.\ndoseq would probably be more idiomatic since here we're only dealing with side\neffects; map doesn't make a lot of sense to use since it will create a\nsequence of nil (which is the return value of each prn call.\n\nAssuming I count forever, the null pointer sequence which results from this\noperation never gets returned.\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Nov 17, 2015 at 14:27\n\nanswered Nov 17, 2015 at 5:50\n\ndmhdmh\n\n22111 silver badge33 bronze badges\n\n2\n\n  * 1\n\nI know, this a very old answer, but unfortunately, it doesn't work. First of\nall, OP asked to start from 1, not from 0 as range does. Moreover, since map\nis lazy, this doesn't produce any results at all, as nothing forces to realize\nthe collection.\n\n\u2013 Kirill L.\n\nFeb 26, 2021 at 15:19\n\n  * Yup that's true :)\n\n\u2013 dmh\n\nFeb 26, 2021 at 15:21\n\nAdd a comment |\n\nThis answer is useful\n\n5\n\nSave this answer.\n\nShow activity on this post.\n\n## C# .NET 4.0, 111 103 102 97 bytes\n\n    \n    \n    class C{static void Main(){System.Numerics.BigInteger b=1;for(;;)System.Console.WriteLine(b++);}}\n\nI didn't find any C# answer here, so I just had to write one.\n\n.NET 4.0 is required, because it's the first version that includes BigInteger.\nYou have to reference System.Numerics.dll though.\n\nWith indentation:\n\n    \n    \n    class C { static void Main() { System.Numerics.BigInteger b = 1; for (;;) System.Console.WriteLine(b++); } }\n\nThanks to sweerpotato, Kvam, Berend for saving some bytes\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Jan 2, 2020 at 11:19\n\nanswered Nov 15, 2015 at 9:07\n\nKazarpKazarp\n\n15155 bronze badges\n\n12\n\n  * You can save 8 bytes with class C{static void Main(){var b=System.Numerics.BigInteger.One;for(;;)System.Console.WriteLine(b++);}} :~)!\n\n\u2013 sweerpotato\n\nNov 15, 2015 at 11:16\n\n  * 1\n\nMove declaration of b and Console.WriteLine into the loop structure: class\nC{static void Main(){for(var\nb=System.Numerics.BigInteger.One;;Console.WriteLine(b++));}}\n\n\u2013 Kvam\n\nNov 15, 2015 at 12:09\n\n  * You still need System. That saves one byte though!\n\n\u2013 sweerpotato\n\nNov 15, 2015 at 12:12\n\n  * Yeah, you're right.\n\n\u2013 Kvam\n\nNov 15, 2015 at 12:13\n\n  * If you add using System; (13 bytes) you can do away with the System. (7 bytes) twice, saving 1 byte.\n\n\u2013 Kenney\n\nNov 15, 2015 at 18:46\n\n| Show 7 more comments\n\nThis answer is useful\n\n4\n\nSave this answer.\n\nShow activity on this post.\n\n# MarioLANG, 11 bytes\n\n    \n    \n    +< :\" >! =#\n\nInspired by Martin B\u00fcttner's answer in another question.\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Apr 13, 2017 at 12:39\n\nCommunityBot\n\n1\n\nanswered Nov 14, 2015 at 13:44\n\nalephalphaalephalpha\n\n48k77 gold badges6262 silver badges175175 bronze badges\n\n4\n\n  * Are you sure this works without problems to 2^128?\n\n\u2013 flawr\n\nNov 14, 2015 at 13:55\n\n  * 1\n\nThis looks familiar. :)\n\n\u2013 Martin Ender\n\nNov 14, 2015 at 14:00\n\n  * @flawr MarioLANG has a Ruby interpreter, and Ruby's integer type has arbitrary precision.\n\n\u2013 Martin Ender\n\nNov 14, 2015 at 14:01\n\n  * @flawr It depends on the interpreter. The interpreter I'm using is written in Ruby, and it supports arbitrary precision.\n\n\u2013 alephalpha\n\nNov 14, 2015 at 14:02\n\nAdd a comment |\n\nThis answer is useful\n\n4\n\nSave this answer.\n\nShow activity on this post.\n\n## CJam, 7 bytes\n\n    \n    \n    0{)_p}h\n\nExplanation:\n\n    \n    \n    0 e# Push a zero to the stack { e# Start a block ) e# Increment top of stack _ e# Duplicate top of stack p e# Print top of stack } e# End block h e# Do-while loop that leaves the condition on the stack\n\nNote: Must use Java interpreter.\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Jun 17, 2020 at 9:04\n\nCommunityBot\n\n1\n\nanswered Nov 14, 2015 at 14:45\n\nGamrCorpsGamrCorps\n\n7,58222 gold badges2929 silver badges6161 bronze badges\n\n0\n\nAdd a comment |\n\nThis answer is useful\n\n4\n\nSave this answer.\n\nShow activity on this post.\n\n## C, 89 bytes\n\nA new approach (implementing a bitwise incrementer) in C:\n\n    \n    \n    b[999],c,i;main(){for(;;)for(i=c=0,puts(b);i++<998;)putchar(48+(c?b[i]:(b[i]=c=!b[i])));}\n\nLess golfed\n\n    \n    \n    int b[999], c, i; main() { for(;;) for(i=c=0, puts(b); i++ < 998;) putchar(48 + (c ? b[i] : (b[i] = c = !b[i]))); }\n\nTerminate\n\nThis version has the slight flaw, that it does not terminate (which isn't a\nrequirement at the moment). To do this you would have to add 3 characters:\n\n    \n    \n    b[129],c=1,i;main(){for(;c;)for(i=c=0,puts(b);i++<128;)putchar(48+(c?b[i]:(b[i]=c=!b[i])));}\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Nov 14, 2015 at 17:50\n\nanswered Nov 14, 2015 at 17:02\n\nHelcoHelco\n\n14855 bronze badges\n\n1\n\n  * 4\n\nIn fact it should not terminate. That's the meaning of forever\n\n\u2013 edc65\n\nNov 14, 2015 at 17:55\n\nAdd a comment |\n\nThis answer is useful\n\n4\n\nSave this answer.\n\nShow activity on this post.\n\n# Foo, 6 bytes\n\n    \n    \n    (+1$i)\n\n### Explanation\n\n    \n    \n    ( ) Loop +1 Add one to current element $i Output current element as a decimal integer\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nanswered Nov 14, 2015 at 21:18\n\nZach GatesZach Gates\n\n6,6902828 silver badges7575 bronze badges\n\nAdd a comment |\n\nThis answer is useful\n\n4\n\nSave this answer.\n\nShow activity on this post.\n\n# Acc!, 64 65 bytes\n\nAlso works in Acc!!.\n\n    \n    \n    Count q while 1 { Count x while q-x+1 { Write 7 } Write 9 }\n\nThis prints the numbers out in unary using Bell characters seperated by tabs.\nIf I have to use a more standard character, that would make the program 66\nbytes.\n\nThe Acc! interpreter provided in the linked answer translates Acc! to Python,\nwhich does support arbritrary-precision integers.\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Jun 17, 2020 at 9:04\n\nCommunityBot\n\n1\n\nanswered Nov 14, 2015 at 21:15\n\nThe Fifth MarshalThe Fifth Marshal\n\n6,24711 gold badge2424 silver badges4444 bronze badges\n\nAdd a comment |\n\nThis answer is useful\n\n4\n\nSave this answer.\n\nShow activity on this post.\n\n## Minkolang, 4 bytes\n\n    \n    \n    1+dN\n\nTry it here. (Well, actually, be careful. 3 seconds of run time was enough to\nget up to ~40,000.)\n\n1+ adds 1 to the top of stack, d duplicates it, and N outputs the top of stack\nas an integer with a trailing space. This loops because Minkolang is toroidal,\nso when the program counter goes off the right edge, it reappears on the left.\n\nShare\n\nCC BY-SA 3.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Jun 17, 2020 at 9:04\n\nCommunityBot\n\n1\n\nanswered Nov 14, 2015 at 21:33\n\nEl'endia StarmanEl'endia Starman\n\n16k33 gold badges3737 silver badges7171 bronze badges\n\nAdd a comment |\n\n1\n\n2 3 4 5\n\n...\n\n8 Next\n\n##\n\nNot the answer you're looking for? Browse other questions tagged\n\n  * code-golf\n  * number\n  * counting\n  * restricted-memory\n\nor ask your own question.\n\nWelcome to Code Golf and Coding Challenges Stack Exchange! This is a site for\nrecreational programming competitions, not general programming questions.\nChallenges must have an objective scoring criterion, and it is highly\nrecommended to first post proposed challenges in the Sandbox.\n\n  * The Overflow Blog\n  * Diverting more backdoor disasters\n\n  * How to succeed as a data engineer without the burnout\n\n  * Featured on Meta\n  * New Focus Styles & Updated Styling for Button Groups\n\n  * Upcoming initiatives on Stack Overflow and across the Stack Exchange network\n\n#### Linked\n\n10\n\nOutput endless powers of 2\n\n1\n\nDigit stream with no 42\n\n552\n\nShowcase of Languages\n\n172\n\nImplement a Truth-Machine\n\n112\n\nSimple cat program\n\n169\n\nDon't google \"google\"\n\n67\n\nPrint all integers\n\n54\n\nOutput Buffalo buffalo Buffalo buffalo buffalo buffalo Buffalo buffalo\n\n110\n\nIf a program terminates and there is no one to see it, does it halt?\n\n97\n\nCreate a programming language that only appears to be unusable\n\nSee more linked questions\n\n#### Related\n\n11\n\nImplement t9-like functionality\n\n49\n\nHalloween Golf: The 2spooky4me Challenge!\n\n24\n\nOutput a sound of a certain frequency\n\n96\n\n\"99 Bottles of Beer\"\n\n1\n\nWrite a radix sort\n\n32\n\nSubsequence Substitution\n\n41\n\nDetriplicate a string\n\n95\n\nPrint a Tabula Recta!\n\n84\n\nOutput the sign\n\n27\n\nDo you make me up?\n\n#### Hot Network Questions\n\n  * Meaning of \"It is the ego, demanding its feed\" in \"Smiley's People\"\n\n  * Can I use an RF transistor at a lower frequency?\n\n  * Examples of concrete games to apply Borel determinacy to\n\n  * Simplest way to create a clickable list in MacOS that will cause selected programs to run\n\n  * How many lanes of PCIe does Thunderbolt 4 use?\n\n  * Are there scientific research articles published in reputable journals that provide supporting evidence for Young Earth Creationism?\n\n  * How to express a candle in a burning state?\n\n  * Layover in Beijing extended by two days\n\n  * Why is my car paint not so \"shiny\"?\n\n  * What are some good examples of spectral sequences which degenerate after the first nontrivial differential?\n\n  * Breaking New Ground\n\n  * To what extent can US police lie to a suspect?\n\n  * The last letter of my name is missing on my bank account information, should I keep trying to fix it?\n\n  * Can motion be oscillatory but not periodic?\n\n  * Can a firmware upgrade take away the ability to unlock a bootloader?\n\n  * Should Christians repent for the failures of Christianity to live up to Christ's commands in Church history?\n\n  * Correlation between factors vs correlation between error terms of items measured by each factor\n\n  * Why is the general term of the sequence obtained using the RSolve function incorrect? Could it be a bug?\n\n  * In what TOS episode did Spock use a prop known as an analog flight computer, and why did he need to turn to a \"handheld device\" in this case?\n\n  * Mouse is sent by a human scientist in a tiny spaceship aiming for moon. Intercepted by intelligent aliens. Given intelligence and speech. Named Mickey\n\n  * How does a Neural Net handle an unseen class for a Categorical Feature?\n\n  * Is it possible to prove that this matrix is invertible?\n\n  * Where are my sudo privileges stored?\n\n  * Prepositions after, before etc. as temporal determiners\n\nQuestion feed\n\n# Subscribe to RSS\n\n  * Blog\n  * Facebook\n  * Twitter\n  * LinkedIn\n  * Instagram\n\nSite design / logo \u00a9 2024 Stack Exchange Inc; user contributions licensed\nunder CC BY-SA. rev 2024.4.16.7733\n\n## We Care About Your Privacy\n\nWe and our 4 partners store and/or access information on a device, such as\nunique IDs in cookies to process personal data. You may accept or manage your\nchoices by clicking below, including your right to object where legitimate\ninterest is used, or at any time in the privacy policy page. These choices\nwill be signaled to our partners and will not affect browsing data.\n\nCookie Policy.\n\n### We and our partners perform the following based on your settings:\n\nUse precise geolocation data. Actively scan device characteristics for\nidentification. Understand audiences through statistics or combinations of\ndata from different sources. Store and/or access information on a device.\nDevelop and improve services. Create profiles to personalise content. Measure\ncontent performance. Use limited data to select content. Measure advertising\nperformance. Use limited data to select advertising. Create profiles for\npersonalised advertising. Use profiles to select personalised advertising. Use\nprofiles to select personalised content.\n\n## About Your Privacy\n\nWe process your data to deliver content or advertisements and measure the\ndelivery of such content or advertisements to extract insights about our\nwebsite. We share this information with our partners on the basis of consent\nand legitimate interest. You may exercise your right to consent or object to a\nlegitimate interest, based on a specific purpose below or at a partner level\nin the link under each purpose. These choices will be signaled to our vendors\nparticipating in the Transparency and Consent Framework. Cookie Policy\n\n### Manage Consent Preferences\n\n#### Strictly Necessary Cookies\n\nAlways Active\n\nThese cookies are necessary for the website to function and cannot be switched\noff in our systems. They are usually only set in response to actions made by\nyou which amount to a request for services, such as setting your privacy\npreferences, logging in or filling in forms. You can set your browser to block\nor alert you about these cookies, but some parts of the site will not then\nwork. These cookies do not store any personally identifiable information.\n\n  * ##### Deliver and present advertising and content 3 partners can use this purpose\n\nlabel\n\nCertain information (like an IP address or device capabilities) is used to\nensure the technical compatibility of the content or advertising, and to\nfacilitate the transmission of the content or ad to your device.\n\n  * ##### Ensure security, prevent and detect fraud, and fix errors 3 partners can use this purpose\n\nlabel\n\nYour data can be used to monitor for and prevent unusual and possibly\nfraudulent activity (for example, regarding advertising, ad clicks by bots),\nand ensure systems and processes work properly and securely. It can also be\nused to correct any problems you, the publisher or the advertiser may\nencounter in the delivery of content and ads and in your interaction with\nthem.\n\n  * ##### Identify devices based on information transmitted automatically 3 partners can use this purpose\n\nlabel\n\nYour device might be distinguished from other devices based on information it\nautomatically sends when accessing the Internet (for instance, the IP address\nof your Internet connection or the type of browser you are using) in support\nof the purposes exposed in this notice.\n\n#### Functional Cookies\n\nThese cookies enable the website to provide enhanced functionality and\npersonalisation. They may be set by us or by third party providers whose\nservices we have added to our pages. If you do not allow these cookies then\nsome or all of these services may not function properly.\n\n  * ##### Use precise geolocation data 2 partners can use this purpose\n\nWith your acceptance, your precise location (within a radius of less than 500\nmetres) may be used in support of the purposes explained in this notice.\n\n  * ##### Link different devices 3 partners can use this purpose\n\nAlways Active\n\nIn support of the purposes explained in this notice, your device might be\nconsidered as likely linked to other devices that belong to you or your\nhousehold (for instance because you are logged in to the same service on both\nyour phone and your computer, or because you may use the same Internet\nconnection on both devices).\n\n#### Performance Cookies\n\nThese cookies allow us to count visits and traffic sources so we can measure\nand improve the performance of our site. They help us to know which pages are\nthe most and least popular and see how visitors move around the site. All\ninformation these cookies collect is aggregated and therefore anonymous. If\nyou do not allow these cookies we will not know when you have visited our\nsite, and will not be able to monitor its performance.\n\n  * ##### Store and/or access information on a device 4 partners can use this purpose\n\nCookies, device or similar online identifiers (e.g. login-based identifiers,\nrandomly assigned identifiers, network based identifiers) together with other\ninformation (e.g. browser type and information, language, screen size,\nsupported technologies etc.) can be stored or read on your device to recognise\nit each time it connects to an app or to a website, for one or several of the\npurposes presented here.\n\n  * ##### Develop and improve services 3 partners can use this purpose\n\nInformation about your activity on this service, such as your interaction with\nads or content, can be very helpful to improve products and services and to\nbuild new products and services based on user interactions, the type of\naudience, etc. This specific purpose does not include the development or\nimprovement of user profiles and identifiers.\n\n  * ##### Measure content performance 0 partners can use this purpose\n\nInformation regarding which content is presented to you and how you interact\nwith it can be used to determine whether the (non-advertising) content e.g.\nreached its intended audience and matched your interests. For instance,\nwhether you read an article, watch a video, listen to a podcast or look at a\nproduct description, how long you spent on this service and the web pages you\nvisit etc. This is very helpful to understand the relevance of (non-\nadvertising) content that is shown to you.\n\n  * ##### Measure advertising performance 4 partners can use this purpose\n\nInformation regarding which advertising is presented to you and how you\ninteract with it can be used to determine how well an advert has worked for\nyou or other users and whether the goals of the advertising were reached. For\ninstance, whether you saw an ad, whether you clicked on it, whether it led you\nto buy a product or visit a website, etc. This is very helpful to understand\nthe relevance of advertising campaigns.\n\n#### Targeting Cookies\n\nThese cookies are used to make advertising messages more relevant to you and\nmay be set through our site by us or by our advertising partners. They may be\nused to build a profile of your interests and show you relevant advertising on\nour site or on other sites. They do not store directly personal information,\nbut are based on uniquely identifying your browser and internet device.\n\n  * ##### Understand audiences through statistics or combinations of data from different sources 2 partners can use this purpose\n\nReports can be generated based on the combination of data sets (like user\nprofiles, statistics, market research, analytics data) regarding your\ninteractions and those of other users with advertising or (non-advertising)\ncontent to identify common characteristics (for instance, to determine which\ntarget audiences are more receptive to an ad campaign or to certain contents).\n\n  * ##### Create profiles to personalise content 1 partners can use this purpose\n\nInformation about your activity on this service (for instance, forms you\nsubmit, non-advertising content you look at) can be stored and combined with\nother information about you (such as your previous activity on this service or\nother websites or apps) or similar users. This is then used to build or\nimprove a profile about you (which might for example include possible\ninterests and personal aspects). Your profile can be used (also later) to\npresent content that appears more relevant based on your possible interests,\nsuch as by adapting the order in which content is shown to you, so that it is\neven easier for you to find content that matches your interests.\n\n  * ##### Use limited data to select advertising 4 partners can use this purpose\n\nAdvertising presented to you on this service can be based on limited data,\nsuch as the website or app you are using, your non-precise location, your\ndevice type or which content you are (or have been) interacting with (for\nexample, to limit the number of times an ad is presented to you).\n\n  * ##### Create profiles for personalised advertising 3 partners can use this purpose\n\nInformation about your activity on this service (such as forms you submit,\ncontent you look at) can be stored and combined with other information about\nyou (for example, information from your previous activity on this service and\nother websites or apps) or similar users. This is then used to build or\nimprove a profile about you (that might include possible interests and\npersonal aspects). Your profile can be used (also later) to present\nadvertising that appears more relevant based on your possible interests by\nthis and other entities.\n\n  * ##### Use profiles to select personalised advertising 4 partners can use this purpose\n\nAdvertising presented to you on this service can be based on your advertising\nprofiles, which can reflect your activity on this service or other websites or\napps (like the forms you submit, content you look at), possible interests and\npersonal aspects.\n\n  * ##### Use profiles to select personalised content 1 partners can use this purpose\n\nContent presented to you on this service can be based on your content\npersonalisation profiles, which can reflect your activity on this or other\nservices (for instance, the forms you submit, content you look at), possible\ninterests and personal aspects, such as by adapting the order in which content\nis shown to you, so that it is even easier for you to find (non-advertising)\ncontent that matches your interests.\n\n### Cookie List\n\nlabel\n\nConsent Leg.Interest\n\nlabel\n\nlabel\n\nlabel\n\n", "frontpage": false}
