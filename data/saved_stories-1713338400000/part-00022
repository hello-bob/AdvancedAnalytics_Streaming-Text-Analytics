{"aid": "40058197", "title": "AutoCodeRover: Autonomous Program Improvement", "url": "https://arxiv.org/abs/2404.05427", "domain": "arxiv.org", "votes": 1, "user": "mfiguiere", "posted_at": "2024-04-16 22:41:59", "comments": 0, "source_title": "AutoCodeRover: Autonomous Program Improvement", "source_text": "[2404.05427] AutoCodeRover: Autonomous Program Improvement\n\nSkip to main content\n\nWe gratefully acknowledge support from the Simons Foundation, member\ninstitutions, and all contributors. Donate\n\n> cs > arXiv:2404.05427\n\n# Computer Science > Software Engineering\n\narXiv:2404.05427 (cs)\n\n[Submitted on 8 Apr 2024 (v1), last revised 15 Apr 2024 (this version, v2)]\n\n# Title:AutoCodeRover: Autonomous Program Improvement\n\nAuthors:Yuntong Zhang, Haifeng Ruan, Zhiyu Fan, Abhik Roychoudhury\n\nView a PDF of the paper titled AutoCodeRover: Autonomous Program Improvement,\nby Yuntong Zhang and 3 other authors\n\nView PDF HTML (experimental)\n\n> Abstract:Researchers have made significant progress in automating the\n> software development process in the past decades. Recent progress in Large\n> Language Models (LLMs) has significantly impacted the development process,\n> where developers can use LLM-based programming assistants to achieve\n> automated coding. Nevertheless software engineering involves the process of\n> program improvement apart from coding, specifically to enable software\n> maintenance (e.g. bug fixing) and software evolution (e.g. feature\n> additions). In this paper, we propose an automated approach for solving\n> GitHub issues to autonomously achieve program improvement. In our approach\n> called AutoCodeRover, LLMs are combined with sophisticated code search\n> capabilities, ultimately leading to a program modification or patch. In\n> contrast to recent LLM agent approaches from AI researchers and\n> practitioners, our outlook is more software engineering oriented. We work on\n> a program representation (abstract syntax tree) as opposed to viewing a\n> software project as a mere collection of files. Our code search exploits the\n> program structure in the form of classes/methods to enhance LLM's\n> understanding of the issue's root cause, and effectively retrieve a context\n> via iterative search. The use of spectrum based fault localization using\n> tests, further sharpens the context, as long as a test-suite is available.\n> Experiments on SWE-bench-lite which consists of 300 real-life GitHub issues\n> show increased efficacy in solving GitHub issues (22-23% on SWE-bench-lite).\n> On the full SWE-bench consisting of 2294 GitHub issues, AutoCodeRover solved\n> around 16% of issues, which is higher than the efficacy of the recently\n> reported AI software engineer Devin from Cognition Labs, while taking time\n> comparable to Devin. We posit that our workflow enables autonomous software\n> engineering, where, in future, auto-generated code from LLMs can be\n> autonomously improved.\n\nSubjects:| Software Engineering (cs.SE); Artificial Intelligence (cs.AI)  \n---|---  \nCite as:| arXiv:2404.05427 [cs.SE]  \n(or arXiv:2404.05427v2 [cs.SE] for this version)  \nhttps://doi.org/10.48550/arXiv.2404.05427arXiv-issued DOI via DataCite  \n  \n## Submission history\n\nFrom: Yuntong Zhang [view email] [v1] Mon, 8 Apr 2024 11:55:09 UTC (1,152 KB)\n[v2] Mon, 15 Apr 2024 03:58:04 UTC (1,257 KB)\n\nFull-text links:\n\n## Access Paper:\n\nView a PDF of the paper titled AutoCodeRover: Autonomous Program Improvement,\nby Yuntong Zhang and 3 other authors\n\n  * View PDF\n  * HTML (experimental)\n  * TeX Source\n  * Other Formats\n\nview license\n\nCurrent browse context:\n\ncs.SE\n\n< prev | next >\n\nnew | recent | 2024-04\n\nChange to browse by:\n\ncs cs.AI\n\n### References & Citations\n\n  * NASA ADS\n  * Google Scholar\n  * Semantic Scholar\n\na export BibTeX citation Loading...\n\n## BibTeX formatted citation\n\n\u00d7\n\nData provided by:\n\n### Bookmark\n\n# Bibliographic and Citation Tools\n\nBibliographic Explorer (What is the Explorer?)\n\nLitmaps (What is Litmaps?)\n\nscite Smart Citations (What are Smart Citations?)\n\n# Code, Data and Media Associated with this Article\n\nCatalyzeX Code Finder for Papers (What is CatalyzeX?)\n\nDagsHub (What is DagsHub?)\n\nGotit.pub (What is GotitPub?)\n\nPapers with Code (What is Papers with Code?)\n\nScienceCast (What is ScienceCast?)\n\n# Demos\n\nReplicate (What is Replicate?)\n\nHugging Face Spaces (What is Spaces?)\n\nTXYZ.AI (What is TXYZ.AI?)\n\n# Recommenders and Search Tools\n\nInfluence Flower (What are Influence Flowers?)\n\nConnected Papers (What is Connected Papers?)\n\nCORE Recommender (What is CORE?)\n\n  * Author\n  * Venue\n  * Institution\n  * Topic\n\n# arXivLabs: experimental projects with community collaborators\n\narXivLabs is a framework that allows collaborators to develop and share new\narXiv features directly on our website.\n\nBoth individuals and organizations that work with arXivLabs have embraced and\naccepted our values of openness, community, excellence, and user data privacy.\narXiv is committed to these values and only works with partners that adhere to\nthem.\n\nHave an idea for a project that will add value for arXiv's community? Learn\nmore about arXivLabs.\n\nWhich authors of this paper are endorsers? | Disable MathJax (What is MathJax?)\n\n  * About\n  * Help\n\n  * Contact\n  * Subscribe\n\n  * Copyright\n  * Privacy Policy\n\n  * Web Accessibility Assistance\n  * arXiv Operational Status Get status notifications via email or slack\n\n", "frontpage": false}
