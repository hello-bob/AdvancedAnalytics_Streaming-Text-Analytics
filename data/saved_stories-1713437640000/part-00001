{"aid": "40073078", "title": "Stay Saasy \u2013 Platform Support", "url": "https://staysaasy.com/startups/2024/04/17/platform-support.html", "domain": "staysaasy.com", "votes": 1, "user": "RyeCombinator", "posted_at": "2024-04-18 04:52:57", "comments": 0, "source_title": "Platform Support", "source_text": "Platform Support | Stay SaaSy\n\nStay SaaSy\n\nA guide to scaling product & engineering teams from $0 to past $100M ARR.\n\n\u00a9 2024. Stay SaaSy.\n\n# Platform Support\n\n17 Apr 2024 \u2022 startups\n\nI work for a big tech on a smaller product that is part of a rather large\nportfolio. This product has front-ends in multiple platforms (web, desktop,\nmobile and so on). Unfortunately, my team handles the smallest platform and\nwe\u2019ve been suffering deep cuts in funding. We now handle an entire platform\nwith a minimal team.\n\nDo you have any recommendations on how to grow on this type of context? How do\nI grow to a post-senior position if my team can barely keep up with the\nessentials?\n\nThis question came in through our SaaSy question portal.\n\nFirst, you want to have Consistent Caliber Teams. Platform support is an\ninteresting question, because it can make it hard to naturally create teams\nwith equivalent opportunities to others.\n\nThe example above is common - one shared backend supporting mobile, web,\ndesktop. Often the client platforms are considered lower value work than the\nuniversal backend work - sometimes that\u2019s true and sometimes people make silly\nassumptions like backend being harder than mobile clients.\n\nWhile platform client work can be undervalued, if it\u2019s broken, it\u2019s a huge\nproblem. High risk, (perceived) low complexity work can be quite challenging.\nCan you retain high-skilled workers for this kind of work? Can you afford to\nnot hire high-skilled workers given the risks?\n\nIt gets worse - sometimes one of the platforms is slowly dying - maybe the\ndesktop version of your product is declining in users, but some of your\nhighest value customers use it. Now you have to find high-skilled workers to\nsupport a platform that you know is not the future of your product. Good luck.\n\nOk, now that we know the problem space, let\u2019s get to some productive answers.\n\n## Heuristic one: be decisive\n\nThe number one failure in this scenario is not making decisions. People just\nhope it\u2019ll kind of all work out. Then, slowly over time you realize you can\u2019t\nsupport the portfolio of platform support, e.g. that one guy who was\nsupporting the desktop platform quit, and you have to scramble.\n\nSo, rule one - analyze the situation and decide:\n\n  * Deprecate, shut down, or open source platforms you can\u2019t support\n  * Set a clear strategy for the quality of talent you\u2019ll have supporting these platforms\n\nRepeat this process yearly as your platform client portfolio changes.\n\n## Heuristic two: make lots of small problem into one hard problem\n\nPeople\u2019s natural tendency is to make platform support teams mediocre. This is\nbecause leaders see several smaller problems (platforms) instead of one big\nproblem (how to support the portfolio).\n\nHiring B talent is a mistake - you\u2019ll forever be on a treadmill of engineers\nwho are second class citizens, or who leave the team (internally or\nexternally) after getting fully up to speed.\n\nAnd remember - these platforms can fail terribly. The errors that just-ok\nengineers make in these platforms will hurt just as badly for your customers.\nSo you\u2019ll constantly be frustrated by things like bugs in the iOS app you have\none junior engineer supporting.\n\nYou should hire great people and challenge them to support these platforms in\nhigh-leverage ways. Maybe that\u2019s switching to a build-once-deploy-everywhere\nplatform like React Native. Maybe that\u2019s building a core set of libraries that\nare portable to all platforms. Whatever it is, if you think about supporting\nmultiple platforms as one hard problem - how do we support n platforms without\nhaving highly repetitive work - it\u2019s much more scalable than thinking of it as\nseveral pesky, small problems.\n\nAnother version of this is approach to hire great people that can do platform\nsupport really fast. Then, you can challenge them to take on other tasks as\nwell - side projects, open source contributions,etc. 30% of an A player\u2019s time\ndoing platform support often yields much better outcomes than 100% of a B\nplayer\u2019s time.\n\n## Backup plan: solve with people\n\nMaybe you can\u2019t for some reason just have a handful of A players tackle these\nproblems for you. You can - and many do - tackle this problem by adding\npeople.\n\nMost people staff these teams with a bunch of junior or mid-level employees.\nYou want to make sure two things are true:\n\n  * You need to have at least one really really talented person oversee of this platform support team(s).\n  * You need to have a growth pathing strategy for the team members.\n\nOn the first point - it\u2019s imperative that at least one member of your platform\nsupport group is really talented, tenured, and capable. Having this kind of\nperson in the system means that your more junior resources can be directed\nproductively. The difference between junior staff directed by an A player and\njunior staff directed by a B player is monumental - it\u2019s the difference\nbetween a team that works and a team that doesn\u2019t.\n\nOn the second point - the junior and mid-level staff working on platform\nsupport will never become a bunch of Staff engineers if the problem space\nisn\u2019t deep enough. That\u2019s OK, you just need to have a plan, which means in\nmany cases having a path for people out of the team.\n\nCompanies often have teams that require leaving the team to pursue more senior\nIC roles. Tech support is often a place where there is a ceiling on the\nseniority of technical depth you can achieve. In both of these cases, and in\nany case like this, the key is to be clear about expectations.\n\n## Bringing It Back\n\nBack to the original question - you\u2019re on the smallest platform of the\nportfolio and you\u2019ve seen deep cuts in funding, what do you do?\n\nThere\u2019s a few of possible options here -\n\nFirst, say you and your team are really good, just running a skeleton crew\nright now.\n\nThe thing you must do is drive decisions, like:\n\n  * You can stop supporting your platform. You can combine your team with another platform team, make a deprecation plan, and have more success in the bigger group.\n  * You can advocate for a build-once-deploy-everywhere solution like React Native. There are pros and cons, but if you can\u2019t sustain a team on this native platform, that kind of centralized building can be the right tradeoff.\n  * You can challenge your team to find high leverage solutions even if it means slowing other development. Use this moment to write automation, make your team more high leverage, and get more done with fewer people.\n\nOn the other hand, if you and your team are not great - i.e. finding a new job\nwould be quite difficult, or doing a bunch of heroic automation would be\nchallenging - you might just be hitting the wall of reality. In the ZIRP days,\neveryone had an ambitious growth path. In current conditions, some people are\ngetting more clear feedback that their performance isn\u2019t justifying more\nresponsibility. The answer in this case is to really work on improving your\nskills.\n\nThis last bit of feedback might sound a bit harsh, but again, the most\nimportant thing to do is to be clear about what\u2019s happening, where it\u2019s going,\nand what decisions you need to make. Ignoring realities - both for things like\nplatform support and personal growth - will only delay outcomes, so I\u2019d\nsuggest taking a sober look at what\u2019s going on, understanding where it\u2019s\nleading, and making the best decisions possible given that information.\n\nShare to Twitter , Hacker News , LinkedIn\n\nstartups engineering scaling careers\n\n## Recent Posts\n\n  * ### Consistent Traits of the Best Startup Scalers 11 Apr 2024\n\n  * ### Have Concerns And Commit 04 Apr 2024\n\n  * ### Advice That I Can't Get Out of My Head 24 Mar 2024\n\nFor new content, follow us at @staysaasy or subscribe via email.\n\n", "frontpage": false}
