{"aid": "40210410", "title": "RAGCache: Efficient Knowledge Caching for Retrieval-Augmented Generation", "url": "https://arxiv.org/abs/2404.12457", "domain": "arxiv.org", "votes": 27, "user": "PaulHoule", "posted_at": "2024-04-30 12:41:56", "comments": 2, "source_title": "RAGCache: Efficient Knowledge Caching for Retrieval-Augmented Generation", "source_text": "[2404.12457] RAGCache: Efficient Knowledge Caching for Retrieval-Augmented\nGeneration\n\nSkip to main content\n\nWe gratefully acknowledge support from the Simons Foundation, member\ninstitutions, and all contributors. Donate\n\n> cs > arXiv:2404.12457\n\n# Computer Science > Distributed, Parallel, and Cluster Computing\n\narXiv:2404.12457 (cs)\n\n[Submitted on 18 Apr 2024 (v1), last revised 25 Apr 2024 (this version, v2)]\n\n# Title:RAGCache: Efficient Knowledge Caching for Retrieval-Augmented\nGeneration\n\nAuthors:Chao Jin, Zili Zhang, Xuanlin Jiang, Fangyue Liu, Xin Liu, Xuanzhe\nLiu, Xin Jin\n\nView a PDF of the paper titled RAGCache: Efficient Knowledge Caching for\nRetrieval-Augmented Generation, by Chao Jin and 6 other authors\n\nView PDF\n\n> Abstract:Retrieval-Augmented Generation (RAG) has shown significant\n> improvements in various natural language processing tasks by integrating the\n> strengths of large language models (LLMs) and external knowledge databases.\n> However, RAG introduces long sequence generation and leads to high\n> computation and memory costs. We propose RAGCache, a novel multilevel\n> dynamic caching system tailored for RAG. Our analysis benchmarks current RAG\n> systems, pinpointing the performance bottleneck (i.e., long sequence due to\n> knowledge injection) and optimization opportunities (i.e., caching\n> knowledge's intermediate states). Based on these insights, we design\n> RAGCache, which organizes the intermediate states of retrieved knowledge in\n> a knowledge tree and caches them in the GPU and host memory hierarchy.\n> RAGCache proposes a replacement policy that is aware of LLM inference\n> characteristics and RAG retrieval patterns. It also dynamically overlaps the\n> retrieval and inference steps to minimize the end-to-end latency. We\n> implement RAGCache and evaluate it on vLLM, a state-of-the-art LLM inference\n> system and Faiss, a state-of-the-art vector database. The experimental\n> results show that RAGCache reduces the time to first token (TTFT) by up to\n> 4x and improves the throughput by up to 2.1x compared to vLLM integrated\n> with Faiss.\n\nSubjects:| Distributed, Parallel, and Cluster Computing (cs.DC); Computation\nand Language (cs.CL); Machine Learning (cs.LG)  \n---|---  \nCite as:| arXiv:2404.12457 [cs.DC]  \n(or arXiv:2404.12457v2 [cs.DC] for this version)  \nhttps://doi.org/10.48550/arXiv.2404.12457arXiv-issued DOI via DataCite  \n  \n## Submission history\n\nFrom: Chao Jin [view email] [v1] Thu, 18 Apr 2024 18:32:30 UTC (759 KB) [v2]\nThu, 25 Apr 2024 06:47:57 UTC (759 KB)\n\nFull-text links:\n\n## Access Paper:\n\nView a PDF of the paper titled RAGCache: Efficient Knowledge Caching for\nRetrieval-Augmented Generation, by Chao Jin and 6 other authors\n\n  * View PDF\n  * TeX Source\n  * Other Formats\n\nview license\n\nCurrent browse context:\n\ncs.DC\n\n< prev | next >\n\nnew | recent | 2404\n\nChange to browse by:\n\ncs cs.CL cs.LG\n\n### References & Citations\n\n  * NASA ADS\n  * Google Scholar\n  * Semantic Scholar\n\na export BibTeX citation Loading...\n\n## BibTeX formatted citation\n\n\u00d7\n\nData provided by:\n\n### Bookmark\n\n# Bibliographic and Citation Tools\n\nBibliographic Explorer (What is the Explorer?)\n\nLitmaps (What is Litmaps?)\n\nscite Smart Citations (What are Smart Citations?)\n\n# Code, Data and Media Associated with this Article\n\nCatalyzeX Code Finder for Papers (What is CatalyzeX?)\n\nDagsHub (What is DagsHub?)\n\nGotit.pub (What is GotitPub?)\n\nPapers with Code (What is Papers with Code?)\n\nScienceCast (What is ScienceCast?)\n\n# Demos\n\nReplicate (What is Replicate?)\n\nHugging Face Spaces (What is Spaces?)\n\nTXYZ.AI (What is TXYZ.AI?)\n\n# Recommenders and Search Tools\n\nInfluence Flower (What are Influence Flowers?)\n\nConnected Papers (What is Connected Papers?)\n\nCORE Recommender (What is CORE?)\n\n  * Author\n  * Venue\n  * Institution\n  * Topic\n\n# arXivLabs: experimental projects with community collaborators\n\narXivLabs is a framework that allows collaborators to develop and share new\narXiv features directly on our website.\n\nBoth individuals and organizations that work with arXivLabs have embraced and\naccepted our values of openness, community, excellence, and user data privacy.\narXiv is committed to these values and only works with partners that adhere to\nthem.\n\nHave an idea for a project that will add value for arXiv's community? Learn\nmore about arXivLabs.\n\nWhich authors of this paper are endorsers? | Disable MathJax (What is MathJax?)\n\n  * About\n  * Help\n\n  * Contact\n  * Subscribe\n\n  * Copyright\n  * Privacy Policy\n\n  * Web Accessibility Assistance\n  * arXiv Operational Status Get status notifications via email or slack\n\n", "frontpage": true}
