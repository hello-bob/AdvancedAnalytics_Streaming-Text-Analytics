{"aid": "40080425", "title": "Cronometro: Simple benchmarking suite powered by HDR histograms", "url": "https://github.com/ShogunPanda/cronometro", "domain": "github.com/shogunpanda", "votes": 1, "user": "todsacerdoti", "posted_at": "2024-04-18 20:33:20", "comments": 0, "source_title": "GitHub - ShogunPanda/cronometro: Simple benchmarking suite powered by HDR histograms.", "source_text": "GitHub - ShogunPanda/cronometro: Simple benchmarking suite powered by HDR\nhistograms.\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nShogunPanda / cronometro Public\n\n  * Notifications\n  * Fork 0\n  * Star 65\n\nSimple benchmarking suite powered by HDR histograms.\n\nsw.cowtech.it/cronometro\n\n### License\n\nISC license\n\n65 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# ShogunPanda/cronometro\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n32 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nShogunPandafix: Remove leftover.Apr 12, 2024f6a1442 \u00b7 Apr 12, 2024Apr 12, 2024\n\n## History\n\n124 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| chore: Updated dependencies and toolchain.| Oct 23, 2023  \n  \n### src\n\n|\n\n### src\n\n| feat!: Replaced ts-node with @swc-node/register.| Feb 7, 2024  \n  \n### test\n\n|\n\n### test\n\n| feat!: Replaced ts-node with @swc-node/register.| Feb 7, 2024  \n  \n### .eslintrc.json\n\n|\n\n### .eslintrc.json\n\n| feat: Use worker_threads for execution. Tested everything.| Apr 21, 2020  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| feat: Only export as ESM.| Aug 14, 2021  \n  \n### .swcrc\n\n|\n\n### .swcrc\n\n| chore: Fixed compilation.| Aug 31, 2023  \n  \n### CHANGELOG.md\n\n|\n\n### CHANGELOG.md\n\n| chore: Updated CHANGELOG.md.| Apr 12, 2024  \n  \n### LICENSE.md\n\n|\n\n### LICENSE.md\n\n| chore: Initial version.| Jan 29, 2020  \n  \n### README.md\n\n|\n\n### README.md\n\n| feat!: Replaced ts-node with @swc-node/register.| Feb 7, 2024  \n  \n### package.json\n\n|\n\n### package.json\n\n| chore: Version 3.0.2.| Apr 12, 2024  \n  \n### prettier.config.js\n\n|\n\n### prettier.config.js\n\n| chore: Updated dependencies.| Apr 12, 2024  \n  \n### tsconfig.json\n\n|\n\n### tsconfig.json\n\n| chore: Updated TypeScript configuration.| Jan 24, 2024  \n  \n### tsconfig.test.json\n\n|\n\n### tsconfig.test.json\n\n| feat: Only export as ESM.| Aug 14, 2021  \n  \n## Repository files navigation\n\n# cronometro\n\nSimple benchmarking suite powered by HDR histograms.\n\nhttp://sw.cowtech.it/cronometro\n\n## Requirements\n\nCronometro uses worker_threads to run tests in a isolated V8 enviroments to\noffer the most accurate benchmark. This imposes the restrictions described in\nthe subsections below.\n\n### Supported Node versions\n\nOnly Node 12.x and above are supported.\n\nThis package only supports to be directly imported in a ESM context.\n\nFor informations on how to use it in a CommonJS context, please check this\npage.\n\n### Script invocation\n\nThe main script which invokes cronometro must be executable without command\nline arguments, as it is how it will be called within a Worker Thread.\n\nIf you need to configure the script at runtime, use environment variables and\noptionally configuration files.\n\n### TypeScript\n\ncronometro can run on TypeScript files. Type deletion happens on the fly with\nno additional configuration required.\n\nUse the TS_NODE_PROJECT environment variable to provide a TypeScript\nconfiguration.\n\n### API use\n\nIf you use cronometro as an API and manipulate its return value, consider that\nthe exact same code its executed in both the main thread and in worker\nthreads.\n\nInside worker threads, the cronometro function invocation will return no value\nand no callbacks are invoked.\n\nYou can use isMainThread from Worker Threads API to check in which environment\nthe script is running.\n\nIf your main module returns a function, cronometro will execute it before\nrunning tests. The function can also return a promise and that will be\nawaited.\n\n## Usage\n\nTo run a benchmark, simply call the cronometro function with the set of tests\nyou want to run, then optionally provide a options object and a Node's style\ncallback.\n\nThe return value of the cronometro function is a promise which will be\nresolved with a results object (see below).\n\nIf the callback is provided, it will also be called with an error or the\nresults object.\n\nThe set of tests must a be a object whose property names are tests names, and\nproperty values are tests definitions.\n\nA test can be defined as a function containing the test to run or an object\ncontaining ore or more of the following properties:\n\n  * test: The function containing the test to run. If omitted, the test will be a no-op.\n  * before: A setup function to execute before starting test iteration.\n  * after: A cleanup function to execute after all test iteration have been run.\n\nEach of the test functions above can be either a function, a function\naccepting a Node style callback or a function returning a promise (hence also\nasync functions).\n\nEach of the before or after functions above can be either a function accepting\na Node style callback or a function returning a promise (hence also async\nfunctions).\n\n## Options\n\nThe supported options are the following:\n\n  * iterations: The number of iterations to run for each test. Must be a positive number. The default is 10000.\n  * errorThreshold: If active, it stops the test run before the desider number of iterations if the standard error is below the provided value and at least 10% of the iterations have been run. Must be a number between 0 (which disables this option) and 100. The default is 1.\n  * warmup: Run the suite twice, the first time without collecting results. The default is true.\n  * print: If print results on the console in a pretty tabular way. The default is true. It can be a boolean or a printing options object. The supported printing options are:\n\n    * colors: If use colors. Default is true.\n    * compare: If compare tests in the output. Default is false.\n    * compareMode: When comparing is enabled, this can be set to base in order to always compare a test to the slowest one. The default is to compare a test to the immediate slower one.\n  * onTestStart: Callback invoked every time a test is started.\n  * onTestEnd: Callback invoked every time a test has finished.\n  * onTestError: Callback invoked every time a test could not be loaded. If the test function throws an error or rejects, onTestEnd will be invoked instead.\n\n## Results structure\n\nThe results object will a object whose property names are the tests names.\n\nEach property value is a object with the following properties:\n\n  * success: A boolean indicating if the test was successful. If the test is not successful, only the property error will be present.\n  * error: The first error, if any, thrown by a test iteration.\n  * size: The number of iterations records.\n  * min: The minimum execution time.\n  * max: The maximum execution time.\n  * mean: The average execution time.\n  * stddev: The execution times standard deviation.\n  * standardError: The execution times statistic standard error.\n  * percentiles: The percentiles of the execution times.\n\n## Example (tabular output)\n\n    \n    \n    import cronometro from 'cronometro' const results = cronometro({ await test1: function () { // Do something }, await test2: function () { // Do something else } })\n\nOutput:\n\n    \n    \n    \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2551 Test \u2502 Result \u2502 Tolerance \u2551 \u255f\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2562 \u2551 test1 \u2502 161297.99 op/sec \u2502 \u00b1 0.65 % \u2551 \u255f\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2562 \u2551 Fastest test \u2502 Result \u2502 Tolerance \u2551 \u255f\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2562 \u2551 test2 \u2502 270642.97 op/sec \u2502 \u00b1 4.42 % \u2551 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\n\n## Example (results structure)\n\n    \n    \n    import cronometro from 'cronometro' const pattern = /[123]/g const replacements = { 1: 'a', 2: 'b', 3: 'c' } const subject = '123123123123123123123123123123123123123123123123' const results = cronometro( { single() { subject.replace(pattern, m => replacements[m]) }, multiple() { subject.replace(/1/g, 'a').replace(/2/g, 'b').replace(/3/g, 'c') } }, { setup: { single(cb) { cb() } }, print: { compare: true } }, (err, results) => { if (err) { throw err } console.log(JSON.stringify(results, null, 2)) } )\n\nOutput:\n\n    \n    \n    { \"single\": { \"success\": true, \"size\": 5, \"min\": 29785, \"max\": 41506, \"mean\": 32894.2, \"stddev\": 4407.019555209621, \"percentiles\": { \"1\": 29785, \"10\": 29785, \"25\": 29861, \"50\": 30942, \"75\": 32377, \"90\": 41506, \"99\": 41506, \"0.001\": 29785, \"0.01\": 29785, \"0.1\": 29785, \"2.5\": 29785, \"97.5\": 41506, \"99.9\": 41506, \"99.99\": 41506, \"99.999\": 41506 }, \"standardError\": 1970.87906072392 }, \"multiple\": { \"success\": true, \"size\": 5, \"min\": 21881, \"max\": 33368, \"mean\": 27646.4, \"stddev\": 4826.189494829228, \"percentiles\": { \"1\": 21881, \"10\": 21881, \"25\": 23142, \"50\": 26770, \"75\": 33071, \"90\": 33368, \"99\": 33368, \"0.001\": 21881, \"0.01\": 21881, \"0.1\": 21881, \"2.5\": 21881, \"97.5\": 33368, \"99.9\": 33368, \"99.99\": 33368, \"99.999\": 33368 }, \"standardError\": 2158.337556546705 } }\n\n## Contributing to cronometro\n\n  * Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet.\n  * Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it.\n  * Fork the project.\n  * Start a feature/bugfix branch.\n  * Commit and push until you are happy with your contribution.\n  * Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.\n\n## Copyright\n\nCopyright (C) 2020 and above Shogun (shogun@cowtech.it).\n\nLicensed under the ISC license, which can be found at\nhttps://choosealicense.com/licenses/isc.\n\n## About\n\nSimple benchmarking suite powered by HDR histograms.\n\nsw.cowtech.it/cronometro\n\n### Resources\n\nReadme\n\n### License\n\nISC license\n\nActivity\n\n### Stars\n\n65 stars\n\n### Watchers\n\n3 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases 31\n\n3.0.2 Latest\n\nApr 12, 2024\n\n\\+ 30 releases\n\n## Packages 0\n\nNo packages published\n\n## Used by 122\n\n\\+ 114\n\n## Languages\n\n  * TypeScript 99.7%\n  * JavaScript 0.3%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
