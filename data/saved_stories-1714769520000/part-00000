{"aid": "40248338", "title": "Things engineers should know about talking to users", "url": "https://newsletter.posthog.com/p/talk-to-users", "domain": "posthog.com", "votes": 2, "user": "acossta", "posted_at": "2024-05-03 14:50:54", "comments": 0, "source_title": "7 things engineers should know about talking to users", "source_text": "7 things engineers should know about talking to users\n\n# Product for Engineers\n\nShare this post\n\n#### An engineer\u2019s guide to talking to users\n\nnewsletter.posthog.com\n\n#### Discover more from Product for Engineers\n\nHelping engineers and founders flex their product muscles\n\nOver 12,000 subscribers\n\nContinue reading\n\nSign in\n\n# An engineer\u2019s guide to talking to users\n\n### 7 things engineers need to know from our experience at PostHog\n\nIan Vanagas\n\nApr 25, 2024\n\n21\n\nShare this post\n\n#### An engineer\u2019s guide to talking to users\n\nnewsletter.posthog.com\n\n2\n\nShare\n\nWelcome to Product for Engineers, a newsletter created by PostHog for\nengineers and founders who want to build successful startups.\n\n##\n\n1\\. You have an information bottleneck\n\nWe have a simple theory about building successful products: the people\nbuilding them should be as close to people using them as possible.\n\nYou might think you already know what users want. Someone spoke to users,\nturned those insights into tickets, and it's on you to build them. That\u2019s all\nyou need.\n\nThe process probably looks something like this:\n\nEngineers in this scenario get a sanitized version of the truth. They miss out\non the context and depth users can provide, and they\u2019re subject to the\npreferences and biases of the person doing the talking.\n\nWorse still, often that person won\u2019t understand the options and constraints as\nwell as you do. Sometimes, only an engineer can understand the full context of\na problem and ask the right questions to find a good solution.\n\nNot convinced? Think of user interviews like automated tests. Like automated\ntests, talking to users is a short-term investment in your long-term\nproductivity. They both enable you to iterate faster by providing rapid\nfeedback on whether what you've built is working, even if you\u2019re not shipping\ncode.\n\n##\n\n2\\. How to prepare for a user interview\n\nA good user interview starts with researching:\n\n  1. Who your users are. Read about how we defined our ICP if you don't know the answer to this. A hypothesis is better than nothing at all.\n\n  2. How they\u2019re using your product. Watch session replays and use analytics to see what they value. Analyze competitors to understand gaps in your product.\n\n  3. What you want to build next. Understand the significant problems you could work on and create a potential roadmap, but be open to completely changing it.\n\nYou don\u2019t need a dossier \u2013 a few notes and educated assumptions are enough to\nget your started.\n\nBeyond research, save time by automating as much as possible. This could\ninclude using PostHog's user interview survey, Calendly for scheduling, and an\nAI notetaker like Superpowered so you don\u2019t miss anything.\n\n##\n\n3\\. How to find the right users to talk to\n\nA handful of interviews can be all you need to clarify where to focus your\ntime. You don\u2019t need a statistically significant sample\n\nYou also don't need to send cold emails to find users to speak with. Once you\nhave product-market fit, your current users work perfectly.\n\nFrom our experience, these are the best ways to find participants:\n\n  * Use your analytics to find power users of related features.\n\n  * Ask your sales or customer success teams for potentially interested customers.\n\n  * Check support to find who\u2019s asking questions or requesting features.\n\nYour users could also be your co-workers. Our infrastructure team, for\nexample, talks to our product teams to understand their upcoming requirements.\nAnd product teams will often talk to the marketing or growth teams about how\nthey use PostHog.\n\nIf you struggle to find people, try adding an incentive, like a merch code or\ngift card.\n\n##\n\n4\\. What to ask during user interviews\n\nOur experience of talking to users has revealed two main discussion areas.\n\nThe first is problem exploration. This guides future product decisions, like\nwhat to build next. Focus on concrete situations by asking questions like:\n\n  * What is your workflow for solving this problem? Can you talk me through it?\n\n  * How are you solving your problem right now?\n\n  * How often do you do this?\n\n  * Why is it important?\n\n  * What's challenging about it?\n\nThe second is solution validation. This works best when someone is already\nusing your feature or you have a demo to show them. Focus on impressions and\nproblem areas by asking questions like:\n\n  * Have you tried using X? If not, why not?\n\n  * How are you using X now? What are your touch points with X?\n\n  * What is confusing?\n\n  * Can you show me how you are using X?\n\nFollow-up questions are critical to get the depth needed to build a good\nsolution, too. Remember, this is an opportunity to solve your information\nbottleneck. Do this by asking questions like:\n\n  * What do you mean by that?\n\n  * Why is that important to you?\n\n  * Can you tell me more?\n\nAsk one question at a time. Focus on listening. Get more specific as the\ninterview goes on.\n\nJoin 11,000+ people who enjoy Product for Engineers. It\u2019s free and always will\nbe!\n\n##\n\n5\\. Avoid these common mistakes\n\nThe less you talk the better, so prioritizing listening. Also avoid:\n\n  1. Explaining yourself or your product. If they are users, they probably know what your product is and what it does.\n\n  2. Explaining your solution or idea. Explaining your thinking will bias their answers. Focus on their problems instead. Asking \"Would you use this?\" leads to failure.\n\n  3. Focusing on their solutions or ideas. It\u2019s their job to tell you about the problem, it\u2019s your job to come up with a solution. Their ideas often don\u2019t solve their underlying problems, so reframe them to dig deeper into the underlying causes.\n\n  4. Macroanalysis. Focus on an individual\u2019s specific use case rather than a company or industry one. Outside research can fill this knowledge gap if necessary.\n\n##\n\n6\\. What to do after an interview\n\nThe first thing you should do after the interview is clean up and share the\nnotes with your team. This helps you get more from the work you've done.\n\nWe keep all of our user interview notes in a single Google Doc, which is\ncurrently 378 pages long.\n\nThe second thing to do after the interview is to take action. The great part\nabout being an engineer is that you can just ship small changes yourself.\nThere\u2019s no better way to delight a user than fixing a small problem right\nafter they told you about it.\n\nFor larger product decisions, you can combine qualitative feedback with\nanalytics, experience, product principles, and personal opinions to make\ndecisions about what to build next. The experiences of users are one of the\nmost powerful pieces of information for deciding this.\n\n##\n\n7\\. Talking to users doesn't stop at user interviews\n\nYour users are still your users after you talk to them. This means you should\nstill try to build valuable things and get feedback from them after your\nconversation.\n\nAt PostHog, we work closely with customers to build features and get feedback\nvia Slack. After user interviews, we build solutions, ask customers about\nthem, roll them out via feature flags, and iterate. These customers become\nreferences for us and their usage represents broader usage.\n\nBy getting more feedback from users, we are better able to ship features they\nactually want. In the long run, this is a repeatable method to build the best\npossible product.\n\nShare this on X, Hacker News, or LinkedIn.\n\n##\n\nGood reads for product engineers \ud83d\udcd6\n\nStripe's payments APIs: The first 10 years \u2013 Michelle Bu A success story in\niteration and feedback. It takes a lot of work to handle an increasing number\nof payment methods while keeping an API simple.\n\nAn engineer's guide to behavioral analytics \u2013 Ian Vanagas Another source of\ninsights to grow your knowledge is how users are actually using your app.\nBehavioral analytics help you discover this.\n\nHow to talk to users \u2013 Gustaf Alstr\u00f6mer YC Group Partner shares some useful\ntips on choosing who to talk to, how to run interviews, and how to interrupt\ntheir feedback.\n\nWords by Ian Vanagas, who does impromptu user interviews whenever he meets a\nPostHog user IRL.\n\n### Subscribe to Product for Engineers\n\nLaunched a year ago\n\nHelping engineers and founders flex their product muscles\n\n21 Likes\n\n\u00b7\n\n2 Restacks\n\n21\n\nShare this post\n\n#### An engineer\u2019s guide to talking to users\n\nnewsletter.posthog.com\n\n2\n\nShare\n\n2 Comments\n\nAnton ZaidesLeading DevelopersApr 26Liked by Andy Vandervell, Ian VanagasGreat\narticle! I highly recommend reading \u201cThe Mom Test\u201d, a short book that\ncompletely changed the way I think about customer conversations :)Expand full\ncommentLike (2)ReplyShare  \n---  \n  \n1 reply\n\n1 more comment...\n\nDefining our ICP is the most important thing we ever did\n\nYou'll never find product-market fit without it\n\nJan 25 \u2022\n\nAndy Vandervell\n\n17\n\nShare this post\n\n#### Defining our ICP is the most important thing we ever did\n\nnewsletter.posthog.com\n\n1\n\nBeyond the 10x engineer\n\nThe traits we look for in (product) engineers at PostHog\n\nFeb 8 \u2022\n\nIan Vanagas\n\n36\n\nShare this post\n\n#### Beyond the 10x engineer\n\nnewsletter.posthog.com\n\n11\n\nHow first-time founders fail\n\nLessons from the founders of Supabase, Mailgun, and Teleport\n\nApr 18 \u2022\n\nAndy Vandervell\n\n24\n\nShare this post\n\n#### How first-time founders fail\n\nnewsletter.posthog.com\n\n5\n\nReady for more?\n\n\u00a9 2024 PostHog\n\nPrivacy \u2219 Terms \u2219 Collection notice\n\nStart WritingGet the app\n\nSubstack is the home for great culture\n\nShare\n\n## Create your profile\n\n## Only paid subscribers can comment on this post\n\nAlready a paid subscriber? Sign in\n\n#### Check your email\n\nFor your security, we need to re-authenticate you.\n\nClick the link we sent to , or click here to sign in.\n\n", "frontpage": false}
