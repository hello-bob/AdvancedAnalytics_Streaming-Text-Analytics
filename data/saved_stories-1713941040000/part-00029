{"aid": "40138290", "title": "Despite what Microsoft says, ntttcp is no better than iperf3", "url": "https://www.cnx-software.com/2024/04/22/testing-ntttcp-iperf3-alternative-windows-11-linux/", "domain": "cnx-software.com", "votes": 1, "user": "anonymousiam", "posted_at": "2024-04-23 22:54:39", "comments": 0, "source_title": "Testing ntttcp as an iperf3 alternative in Windows 11 (and Linux)", "source_text": "Testing ntttcp as an iperf3 alternative in Windows 11 (and Linux) - CNX\nSoftware\n\nSkip to content\n\nCNX Software \u2013 Embedded Systems News\n\nReviews, tutorials and the latest news about embedded systems, IoT, open-\nsource hardware, SBC's, microcontrollers, processors, and more\n\nPosted on April 22, 2024April 22, 2024 by Jean-Luc Aufranc (CNXSoft) - 4\nComments on Testing ntttcp as an iperf3 alternative in Windows 11 (and Linux)\n\n# Testing ntttcp as an iperf3 alternative in Windows 11 (and Linux)\n\nntttcp (Windows NT Test TCP) is a network benchmarking utility similar to\niperf3 that works in both Windows and Linux written and recommended by\nMicrosoft over iperf3, so we\u2019ll test the alternative in this mini review.\n\niperf3 is a utility of choice for our reviews of single board computers and\nmini PCs running either Windows or Linux, but we\u2019ve noticed that while\nEthernet (up to 2.5GbE) usually performs just as well in Windows and Linux,\nWiFi is generally much faster in Ubuntu 22.04 than in Windows 11. So when XDA\ndevelopers noticed a post by Microsoft saying iperf3 should not be used on\nWindows 11, it caught my attention.\n\nMicrosoft explains iperf3 should not be used in Windows for three main\nreasons:\n\n  1. The maintainer of iperf \u2013 ESnet (Energy Sciences Network) \u2013 says \u201ciperf3 is not officially supported on Windows, but iperf2 is. We recommend you use iperf2. Some people are using Cygwin to run iperf3 in Windows, but not all options will work\u201d\n  2. iPerf3 is Emulated on Windows \u2013 iPerf3 does not make Windows native API calls as it only knows how to make Linux/POSIX calls, and this may impact performance.\n  3. I usually download iperf3 3.1.3 for Windows released in 2016, and Microsoft notes the one offered by ESnet (version 3.16) is more recent but still 15 versions behind, so users are not running the latest version of the utilities.\n\nSo what\u2019s the alternative for iperf3? Microsoft maintains two:\n\n  * ntttcp (Windows NT Test TCP) open-source utility for Windows and Linux with a command line similar to iperf3 according to Microsoft in the sense it aims to isolate network stack throughput.\n  * ctsTraffic for Windows-to-Windows testing only, also open-source and maintained on Github. ctsTraffic focuses on end-to-end goodput scenarios.\n\nWe can disqualify ctsTraffic immediately here at CNX Software since our tests\ntypically involve a mix of Linux and Windows machines. Microsoft compared\niperf3 to ntttcp utilities with high-speed network interfaces (10 GbE+), and\nthe latter reports much higher performance. I only have hardware with 2.5GbE\nand WiFi 6, but I still wanted to test it, especially to check WiFi. So I\ndecided to give ntttcp a try following the instructions on Microsoft Learn. It\nended up being a challenge as those would not work on my system, and it took\nme a while to find the right parameters...\n\nMy testbed is comprised of four main components:\n\n  * Khadas Mind Premium mini PC and Khadas Dock with 2.5GbE and a WiFi 6 running Windows 11 Pro\n  * UP Xtreme i11 Edge mini PC with 2.5GbE acting as a server running Ubuntu 20.04\n  * A 2.5GbE TP-Link switch\n  * Xiaomi Mi AX6000 WiFi 6 router (not shown in the photo above)\n\nThe Khadas Mind Premium was selected as it\u2019s the only spare Windows system\nwith 2.5GbE and WiFi 6 that I own and have already reviewed. You\u2019ll notice the\nnetwork tests in Windows 11 and Ubuntu 22.04 using iperf3 reveal much lower\nperformance in the Microsoft OS as summarized in the table below.\n\nWiFi 6 Tx| WiFi 6 Rx| 2.5GbE Tx| 2.5GbE Rx  \n---|---|---|---  \n  \nWiFi 6 Tx| WiFi 6 Rx| 2.5GbE Tx| 2.5GbE Rx  \n---|---|---|---  \nWIndows 11 Home| 712 Mbps| 590 Mbps| 700 Mbps| 2.30 Gbps  \nUbuntu 22.04| 1.40 Gbps| 991 Mbps| 2.35 Gbps| 2.35 Gbps  \n  \nThe Khadas mini PC is an outlier when it comes to 2.5GbE upload performance,\nbut WiFi is faster in Linux in all mini PC reviews we\u2019ve done. Since the Mind\nPremium review was done a while ago (August 2023), I updated Windows to the\nlatest version and drivers and tested networking performance again with iperf3\nand ntttcp in Windows 11 Home using the same command line as in the Microsoft\nblog post.\n\nThe first step was to install ntttcp (Linux) on UP Xtreme i11 mini PC running\nUbuntu 20.04:\n\n1234| git clone https://github.com/microsoft/ntttcp-for-linuxcd ntttcp-for-\nlinux/srcmakesudo make install  \n---|---  \n  \nWe can run the receiver command as follows.\n\n12345678910111213141516171819202122232425262728293031323334|\ndevkit@UPX-i11:~/ntttcp-for-linux$ ntttcp -r -m 1,*,192.168.31.12 -t 60\n-VNTTTCP for Linux\n1.4.0\\---------------------------------------------------------*** receiver\nroleports: 1cpu affinity: *server address: 192.168.31.12domain: IPv4protocol:\nTCPserver port starting at: 5001receiver socket buffer (bytes): 65536test\nwarm-up (sec): notest duration (sec): 60test cool-down (sec): noshow system\ntcp retransmit: noquiet mode: disabledverbose mode:\nenabled\\---------------------------------------------------------12:25:30 DBG\n: user limits for maximum number of open files: soft: 1024; hard:\n104857612:25:30 DBG : Interface:[lo] Address: 127.0.0.112:25:30 DBG :\nInterface:[enp44s0] Address: 192.168.31.1212:25:30 DBG : Interface:[docker0]\nAddress: 172.17.0.112:25:30 DBG : Interface:[flannel.1] Address:\n10.42.0.012:25:30 DBG : Interface:[cni0] Address: 10.42.0.112:25:30 INFO: 2\nthreads created12:25:30 DBG : ntttcp server is listening on\n192.168.31.12:500112:25:30 DBG : ntttcp server is listening on\n192.168.31.12:500012:25:47 DBG : New connection: 192.168.31.69:50666 -->\nlocal:10000 [socket 6]socket read error: 10412:26:11 DBG : socket closed:\n612:26:32 DBG : New connection: 192.168.31.69:50675 --> local:10000 [socket\n6]socket read error: 10412:26:37 DBG : socket closed: 612:26:49 DBG : New\nconnection: 192.168.31.69:50683 --> local:10000 [socket 6]  \n---|---  \n  \nOnly one core is used to emulate iperf3 and the V (verbose) options help a lot\nto troubleshoot issues. After downloading the ntttcp.exe binary to Windows we\ncan run it immediately as a sender in a command prompt:\n\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556|\nC:\\Users\\jaufr\\Downloads>ntttcp.exe -s -m 1,*,192.168.31.12 -l 128K -t 60\n-VCopyright Version 5.39buffers_length: 131072num_buffers_to_send:\n9223372036854775807send_socket_buff: -1recv_socket_buff: -1port:\n5001sync_port: 0no_sync: 0wait_timeout_milliseconds: 600000async_flag:\n0verbose_flag: 1wsa_flag: 0use_ipv6_flag: 0send_flag: 1udp_flag:\n0udp_unconnected_flag: 0verify_data_flag: 0wait_all_flag: 0run_time:\n60000warmup_time: 0cooldown_time: 0dash_n_timeout: 10800000bind_sender_flag:\n0sender_name:max_active_threads: 1no_delay: 0node_affinity: -1udp_uso_size:\n0udp_receive_coalescing: 0tp_flag: 0use_hvsocket_flag: 0no_stdio_buffer:\n0throughput_Bpms: 0cpu_burn: 0latency_measurement: 0use_io_compl_ports:\n0cpu_from_idle_flag: 0get_estats: 0qos_flag: 0packet_period:\n0jitter_measurement: 0mapping[0]: 14/21/2024 10:10:45 proc_speed: 2611\nMHz4/21/2024 10:10:45 SetupThreads4/21/2024 10:10:45 Threads: 1 Processor: -1\nHost: 192.168.31.124/21/2024 10:10:45 created thread 0 port 50014/21/2024\n10:10:45 StartSenderReceiver start thread 0 port 50014/21/2024 10:10:45\nSetupNet port 50014/21/2024 10:10:45 connected to port 50014/21/2024 10:10:45\nSetupNet complete on port 50014/21/2024 10:10:45 All threads ready!4/21/2024\n10:10:45 SetupNet port 60014/21/2024 10:10:47 ERROR: SetupNet failed: Connect\nattempt failed, GetLastError: 10061 - No connection could be made because the\ntarget machine actively refused it.4/21/2024 10:10:47 PORT#: 60014/21/2024\n10:10:49 ERROR: SetupNet failed: Connect attempt failed, GetLastError: 10061 -\nNo connection could be made because the target machine actively refused it.  \n---|---  \n  \nBut as you can see from the log above, it did not quite work as expected. It\nturns out that for Windows to Linux tests, we need to use the \u201cns\u201d (No Sync)\nparameter. It\u2019s mentioned in the Microsoft\u2019s blog post\n\n> There is a known interoperability limitation when testing between Windows\n> and Linux. Details can be found in this ntttcp for Linux wiki article on\n> GitHub.\n\nIt took me a couple of hours to find out, but once I did that, I could\ncomplete the WiFi 6 Tx (upload) test:\n\n12345678910111213141516171819202122232425262728293031|\nC:\\Users\\jaufr\\Downloads>ntttcp.exe -s -m 1,*,192.168.31.12 -l 128K -t 60\n-nsCopyright Version 5.39Network activity progressing...Thread Time(s)\nThroughput(KB/s) Avg B / Compl====== ======= ================ =============0\n60.011 100476.513 131072.000##### Totals: #####Bytes(MEG) realtime(s) Avg\nFrame Size Throughput(MB/s)================ =========== ==============\n================5888.375000 60.009 1459.307 98.125Throughput(Buffers/s)\nCycles/Byte Buffers===================== =========== =============785.001\n4.024 47107.000DPCs(count/s) Pkts(num/DPC) Intr(count/s)\nPkts(num/intr)============= ============= ===============\n==============906.366 4.807 3218.159 1.354Packets Sent Packets Received\nRetransmits Errors Avg. CPU %============ ================ =========== ======\n==========4231054 261456 5 0 0.991  \n---|---  \n  \n98.125 MB/s or about 785 Mbps, slightly better than with iperf3, but still far\nfrom the performance in Linux.\n\nI then connected an Ethernet cable to test 2.5GbE upload:\n\n12345678910111213141516171819202122232425262728293031|\nC:\\Users\\jaufr\\Downloads>ntttcp.exe -s -m 1,*,192.168.31.12 -l 128K -t 60\n-nsCopyright Version 5.39Network activity progressing...Thread Time(s)\nThroughput(KB/s) Avg B / Compl====== ======= ================ =============0\n60.015 90110.806 131072.000##### Totals: #####Bytes(MEG) realtime(s) Avg Frame\nSize Throughput(MB/s)================ =========== ==============\n================5281.250000 60.014 1458.979 88.000Throughput(Buffers/s)\nCycles/Byte Buffers===================== =========== =============703.998\n3.927 42250.000DPCs(count/s) Pkts(num/DPC) Intr(count/s)\nPkts(num/intr)============= ============= ===============\n==============11814.824 0.449 31926.446 0.166Packets Sent Packets Received\nRetransmits Errors Avg. CPU %============ ================ =========== ======\n==========3795663 318708 1 0 0.867  \n---|---  \n  \n88 MB/s or 704 Mbps, so it\u2019s basically the same as with iperf3 even after\nhaving updated the drivers.\n\niperf3 has a reverse transfer option, but I could not see any such option on\nntttcp. So I had to type the commands to run ntttcp.exe in receiver mode on\nWindows and ntttcp in sender mode on Linux. We\u2019ll need to run CMD as\nadministrator, open the firewall, and the networking benchmark tool with other\nparameters:\n\n12| netsh advfirewall firewall add rule\nprogram=C:\\Users\\jaufr\\Downloads\\ntttcp.exe name=\"ntttcp\" protocol=any dir=in\naction=allow enable=yes profile=ANYC:\\Users\\jaufr\\Downloads>ntttcp.exe -r -m\n1,*,192.168.31.141 -ns -t 60 -V  \n---|---  \n  \nThe Linux command for the Ubuntu sender is quite different than the same\ncommand for the Windows sender as parameters are different:\n\n123456789101112131415161718192021222324252627282930313233343536373839404142434445|\ndevkit@UPX-i11:~/ntttcp-for-linux$ ntttcp -s -m 1,*,192.168.31.141 -b 128K -N\n-t 60 -VNTTTCP for Linux\n1.4.0\\---------------------------------------------------------*** sender\nrole*** no sender/receiver synchconnections: 1 X 1 X 1cpu affinity: *server\naddress: 192.168.31.141domain: IPv4protocol: TCPserver port starting at:\n5001sender socket buffer (bytes): 131072test warm-up (sec): notest duration\n(sec): 60test cool-down (sec): noshow system tcp retransmit: noquiet mode:\ndisabledverbose mode:\nenabled\\---------------------------------------------------------14:45:55 DBG\n: user limits for maximum number of open files: soft: 4096; hard: 409614:45:55\nINFO: Starting sender activity (no sync) ...14:45:55 INFO: 1 threads\ncreated14:45:55 DBG : New connection: local:42880 [socket:3] -->\n192.168.31.141:500114:45:55 INFO: 1 connections created in 1708\nmicroseconds14:46:55 INFO: Test run completed.14:46:55 INFO: Test cycle\nfinished.14:46:55 INFO: Thread Time(s) Throughput14:46:55 INFO: ====== =======\n==========14:46:55 INFO: 0 60.00 2.28Gbps14:46:55 INFO: 1 connections\ntested14:46:55 INFO: ##### Totals: #####14:46:55 INFO: test duration :60.00\nseconds14:46:55 INFO: total bytes :1706819584014:46:55 INFO: throughput\n:2.28Gbps14:46:55 INFO: retrans segs :5499814:46:55 INFO: cpu cores :814:46:55\nINFO: cpu speed :2000.462MHz14:46:55 INFO: user :0.46%14:46:55 INFO: system\n:0.78%14:46:55 INFO: idle :97.94%14:46:55 INFO: iowait :0.00%14:46:55 INFO:\nsoftirq :0.82%14:46:55 INFO: cycles/byte :1.1614:46:55 INFO: cpu busy (all)\n:5.16%14:46:55 INFO: tcpi rtt :397 us  \n---|---  \n  \nBut I still managed it. Needless to say, I did have an overly positive view of\nntttcp utility so far. The only benefit I see is that we have some extra data\nsuch as CPU usage during the transfer. 2.28 Gbps is about what we would expect\nfor a 2.5GbE connection.\n\nI usually disconnect the Ethernet cable to test WiFi 6 with iperf3 and run the\nsame command. But here we also need to change the IP address on both the\nserver and client side to test it again:\n\n1234567891011121314151617181920212223| devkit@UPX-i11:~/ntttcp-for-linux$\nntttcp -s -m 1,*,192.168.31.69 -b 128K -N -t 60NTTTCP for Linux\n1.4.0\\---------------------------------------------------------14:54:58 INFO:\nStarting sender activity (no sync) ...14:54:58 INFO: 1 threads created14:54:58\nINFO: 1 connections created in 6716 microseconds14:55:58 INFO: Test run\ncompleted.14:55:58 INFO: Test cycle finished.14:55:58 INFO: 1 connections\ntested14:55:58 INFO: ##### Totals: #####14:55:58 INFO: test duration :60.00\nseconds14:55:58 INFO: total bytes :453011046414:55:58 INFO: throughput\n:604.01Mbps14:55:58 INFO: retrans segs :014:55:58 INFO: cpu cores :814:55:58\nINFO: cpu speed :2800.000MHz14:55:58 INFO: user :0.53%14:55:58 INFO: system\n:0.41%14:55:58 INFO: idle :99.01%14:55:58 INFO: iowait :0.00%14:55:58 INFO:\nsoftirq :0.04%14:55:58 INFO: cycles/byte :2.9314:55:58 INFO: cpu busy (all)\n:1.98%  \n---|---  \n  \n604 Mbps so there\u2019s no improvement here.\n\nWiFi 6 Tx| WiFi 6 Rx| 2.5GbE Tx| 2.5GbE Rx  \n---|---|---|---  \n  \nWiFi 6 Tx| WiFi 6 Rx| 2.5GbE Tx| 2.5GbE Rx  \n---|---|---|---  \niperf3| 551 Mbps| 608 Mbps| 736 Mbps| 2.30 Gbps  \nntttcp| 785 Mbps| 604 Mbps| 704 Mbps| 2.28 Gbps  \n  \nThe table above summarizes the results after I ran iperf3 again. While ntttcp\nis faster for WiFi 6 upload, the results are not conclusive as the other\nresults are more or less unchanged. I suppose it only matters for high-speed\nnetworking with 10GbE or greater connections.\n\nThe tests above were done to compare ntttcp to iperf3 with similar parameters,\nbut Microsoft says multithread and larger buffer sizes should be used to test\nbandwidth. Let\u2019s try again with WiFi 6 download using 8 threads and 1024KB\nbuffer size:\n\n123456789101112131415161718192021222324| devkit@UPX-i11:~/ntttcp-for-linux$\nntttcp -s -m 8,*,192.168.31.69 -b 1024K -N -t 60NTTTCP for Linux\n1.4.0\\---------------------------------------------------------15:00:06 INFO:\nStarting sender activity (no sync) ...15:00:06 INFO: 8 threads created15:00:06\nINFO: 8 connections created in 5242 microseconds15:01:06 INFO: Test run\ncompleted.15:01:06 INFO: Test cycle finished.15:01:06 INFO: 8 connections\ntested15:01:06 INFO: ##### Totals: #####15:01:06 INFO: test duration :60.00\nseconds15:01:06 INFO: total bytes :423414988815:01:06 INFO: throughput\n:564.55Mbps15:01:06 INFO: retrans segs :57315:01:06 INFO: cpu cores :815:01:06\nINFO: cpu speed :2800.000MHz15:01:06 INFO: user :0.52%15:01:06 INFO: system\n:0.54%15:01:06 INFO: idle :98.62%15:01:06 INFO: iowait :0.00%15:01:06 INFO:\nsoftirq :0.32%15:01:06 INFO: cycles/byte :4.3915:01:06 INFO: cpu busy (all)\n:2.90%\\---------------------------------------------------------  \n---|---  \n  \n564 Mbps is slower than with only one thread and a 128KB buffer, although I\nreckon WiFi results can be fairly volatile.\n\nBased on the tests done above there\u2019s very little difference between iperf3\nand ntttcp results, ntttcp Linux has not been updated for over three years, so\nI\u2019m not convinced, and we\u2019ll keep using iperf3 for the networking tests in\nreviews of Windows mini PCs...\n\nJean-Luc Aufranc (CNXSoft)\n\nJean-Luc started CNX Software in 2010 as a part-time endeavor, before quitting\nhis job as a software engineering manager, and starting to write daily news,\nand reviews full time later in 2011.\n\nShare this:\n\nFacebookTwitterHacker\nNewsSlashdotRedditLinkedInPinterestFlipboardMeWeLineEmailShare\n\nSupport CNX Software! Donate via cryptocurrencies, become a Patron on Patreon,\nor purchase goods on Amazon or Aliexpress\n\nTags2.5GbE, benchmarks, how-to, Linux, mini pc, networking, Reviews, router,\ntutorials, ubuntu, wifi 6, windows 11\n\nRelated posts:\n\n  1. Beelink EQ12 Review \u2013 An Intel Processor N100 mini PC tested with Windows 11, TrueNAS, pfSense, Ubuntu, and more\n  2. Morefine M600 6900HX review \u2013 A Ryzen 9 6900HX mini PC tested with Windows 11 and Ubuntu 23.04\n  3. Beelink GTR5 Review \u2013 An AMD Ryzen 9 mini PC tested with Windows 11, Ubuntu 20.04\n  4. Beelink SER4 Review \u2013 Windows 11, Ubuntu 20.04, and \u201coverclocking\u201d AMD Ryzen 7 4800U SoC\n  5. Morefine S500+ Review \u2013 An AMD Ryzen 7 5700U mini PC tested with Windows 11, Ubuntu 20.04\n\nSubscribe\n\nLogin\n\n4 Comments\n\noldest\n\nnewest\n\nWilly\n\n1 day ago\n\nWhat matters in any case is not to get *the* most accurate tool but a\ncollection of different tools so that discrepancies can be spotted and\ninvestigated. Among the regular issues not tested by such tools by default is\nsmall packets (which happen with visioconfs for example), where it\u2019s visible\nthat all NICs are not equal at all.\n\nReply\n\nTLS\n\n1 day ago\n\nHave you tried using iPerf with -w 4M or alternatively -P xx ? It allows you\nto change the window size or run parallel streams once you have more bandwidth\navailable than the default settings are suitable for.\n\nReply\n\nAuthor\n\nJean-Luc Aufranc (CNXSoft)\n\n16 hours ago\n\nTLS\n\nI haven\u2019t tried, but considering there\u2019s no issue with 2.5GbE (on most\nplatforms), I\u2019m not sure how increasing the buffer size may help with the\nslower WiFi on Windows vs Linux.\n\nReply\n\nNik\n\n16 hours ago\n\nEmbrace Extend Extinquish (EEE)\n\nReply\n\n## Trending Posts - Last 7 Days\n\n  * Louder Raspberry Pi is an open-source home media center that is powered by Raspberry Pi Zero and a TI TAS5805M DAC 7.8k views | 1 comment\n  * unPhone \u2013 An ESP32-S3 IoT development platform with LoRaWAN, touchscreen, open-source ecosystem 7.1k views | 6 comments\n  * Unexpected Maker NANOS3 might be the world\u2019s tiniest ESP32-S3 module, yet fully-featured 5.4k views | 12 comments\n  * The first OpenWrt One WiFi 6 router board samples are ready, some will be auctioned at OpenWrt Summit on May 18-19 4.5k views | 13 comments\n  * Intel Processor U300/U300E penta-core Raptor Lake CPU find its way into mini PCs and network appliances 3.7k views | 4 comments\n\nSubscribe to Comments RSS Feed\n\n## SPONSORS\n\n## Recent Comments\n\n## Latest Reviews\n\nChange Ad Consent Do not sell my data\n\nCopyright 2010-2024 - CNX Software Limited\n\nPrivacy Policy\n\nThis website uses cookies to improve your experience. We'll assume you're ok\nwith this, but if you don't like these, you can remove them Accept\n\nPrivacy & Cookies Policy\n\n#### Privacy Overview\n\nThis website uses cookies to improve your experience while you navigate\nthrough the website. Out of these, the cookies that are categorized as\nnecessary are stored on your browser as they are essential for the working of\nbasic functionalities of the ...\n\nNecessary\n\nAlways Enabled\n\nNecessary cookies are absolutely essential for the website to function\nproperly. This category only includes cookies that ensures basic\nfunctionalities and security features of the website. These cookies do not\nstore any personal information.\n\nNon-necessary\n\nAny cookies that may not be particularly necessary for the website to function\nand is used specifically to collect user personal data via analytics, ads,\nother embedded contents are termed as non-necessary cookies. It is mandatory\nto procure user consent prior to running these cookies on your website.\n\nSAVE & ACCEPT\n\nwpDiscuz\n\n\u2713\n\nThanks for sharing!\n\nAddToAny\n\nMore...\n\n", "frontpage": false}
