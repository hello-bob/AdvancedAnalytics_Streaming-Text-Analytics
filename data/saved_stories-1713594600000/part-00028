{"aid": "40093174", "title": "PyNQ: Python LINQ for the Masochistic and Deranged", "url": "https://github.com/IAmStoxe/PyNQ", "domain": "github.com/iamstoxe", "votes": 2, "user": "byteknight", "posted_at": "2024-04-19 23:57:59", "comments": 0, "source_title": "GitHub - IAmStoxe/PyNQ", "source_text": "GitHub - IAmStoxe/PyNQ\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nIAmStoxe / PyNQ Public\n\n  * Notifications\n  * Fork 0\n  * Star 0\n\n0 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# IAmStoxe/PyNQ\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\ndstokesBPMUpdate README.md with revised Get Started sectionApr 19, 202411a1260\n\u00b7 Apr 19, 2024Apr 19, 2024\n\n## History\n\n7 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| Update python-app.yml| Apr 19, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| Update README.md with revised Get Started section| Apr 19, 2024  \n  \n### pynq.py\n\n|\n\n### pynq.py\n\n| Add PyNQ library with examples and tests| Apr 19, 2024  \n  \n### pynq_tests.py\n\n|\n\n### pynq_tests.py\n\n| Refactor pynq_tests.py to use pytest framework| Apr 19, 2024  \n  \n## Repository files navigation\n\n# PyNQ: Python LINQ for the Masochistic and Deranged\n\nAttention all code junkies and complexity addicts! Are you tired of writing\ncode that's readable, maintainable, and easy to understand? Do you crave the\nadrenaline rush of staring at a screen full of cryptic symbols and wondering\nwhat the hell you were thinking? Well, buckle up, buttercup, because PyNQ is\nhere to satisfy all your wildest coding fantasies! \ud83c\udfa2\n\n## Features\n\n  * \ud83e\uddd9\u2642\ufe0f Unleash your inner wizard with PyNQ's group_join method! It's like a regular join, but with a sprinkle of dark magic and a dash of chaos. Watch in awe as your data morphs into a tangled web of mystery!\n\n    \n    \n    result = self.queryable \\ .group_join( Queryable(orders), lambda c: c[\"id\"], lambda o: o[\"customer_id\"], lambda c, os: (c[\"name\"], os.select(lambda o: o[\"total\"]).sum()) ) \\ .to_list()\n\nGood luck trying to explain this to your rubber duck! \ud83e\udd86\n\n  * \ud83d\ude80 Blast off into the stratosphere of abstraction with PyNQ's zip method! It's like a zip line, but instead of a thrilling ride, you get a one-way ticket to confusion town.\n\n    \n    \n    result = self.queryable \\ .zip( Queryable(ages), lambda c, a: (c[\"name\"], a) ) \\ .to_list()\n\nWho needs clarity when you can have obscurity? \ud83d\ude0e\n\n  * \ud83c\udf00 Get lost in the vortex of nested lambdas with PyNQ's aggregate method! It's like a black hole of code, sucking in all your sanity and spitting out pure chaos.\n\n    \n    \n    result = self.queryable \\ .select(lambda x: x[\"age\"]) \\ .aggregate(0, lambda acc, x: acc + x)\n\nI hope you brought a map, because you're gonna need it! \ud83d\uddfa\ufe0f\n\n  * \ud83e\udde9 Put your skills to the test with PyNQ's mind-bending group_by and having methods! It's like a Rubik's cube, but instead of colors, you have data, and instead of solving it, you just make it worse.\n\n    \n    \n    result = self.queryable \\ .group_by(lambda x: x[\"city\"]) \\ .where(lambda g: g.count() > 1) \\ .select(lambda g: (g.key, g.count())) \\ .to_list()\n\nIf you can decipher this, you're either a genius or a masochist. Or both. \ud83e\udd13\n\nOh, and if you thought the code was mind-bending, just wait until you see the\nunit tests! We've got tests for days, covering every nook and cranny of PyNQ's\nintricate web of chaos. It's like a treasure hunt, but instead of treasure,\nyou find more questions than answers. \ud83d\udc8e\n\n    \n    \n    def test_zip(self): ages = [25, 30, 35, 40, 45] result = self.queryable \\ .zip( Queryable(ages), lambda c, a: (c[\"name\"], a) ) \\ .to_list() self.assertEqual(result, [ (\"Alice\", 25), (\"Bob\", 30), (\"Charlie\", 35), (\"David\", 40), (\"Eve\", 45) ])\n\nWith tests like these, who needs documentation? \ud83d\udcda\n\nSo what are you waiting for? Dive headfirst into the rabbit hole of PyNQ and\ndiscover a world of coding possibilities you never knew existed! Just don't\nblame us if you start speaking in lambdas and dreaming in LINQ. \ud83d\ude34\n\nHappy querying, you magnificent mad hatter! And remember, if the code doesn't\nmake you question your sanity, you're not doing it right. \ud83d\ude1c\n\nDisclaimer: PyNQ is not responsible for any brain damage, existential crises,\nor spontaneous fits of maniacal laughter that may occur while using this\nlibrary. Proceed at your own risk, and may the lambdas be ever in your favor!\n\ud83d\ude4f\n\nIt's a joke... Laugh a little. \u2764\ufe0f\n\n## About\n\nNo description, website, or topics provided.\n\n### Resources\n\nReadme\n\nActivity\n\n### Stars\n\n0 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Contributors 2\n\n  * dstokesBPM\n  * IAmStoxe stoXe\n\n## Languages\n\n  * Python 100.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
