{"aid": "40285818", "title": "Django-harlequin, a launcher for Terminal-based SQL IDE Harlequin", "url": "https://adamj.eu/tech/2024/05/07/django-harlequin/", "domain": "adamj.eu", "votes": 1, "user": "unripe_syntax", "posted_at": "2024-05-07 14:22:08", "comments": 0, "source_title": "Django: Introducing django-harlequin, a launcher for Terminal-based SQL IDE Harlequin - Adam Johnson", "source_text": "Django: Introducing django-harlequin, a launcher for Terminal-based SQL IDE\nHarlequin - Adam Johnson\n\n# Django: Introducing django-harlequin, a launcher for Terminal-based SQL IDE\nHarlequin\n\n2024-05-07\n\nHarlequin is a Terminal-based SQL IDE by Ted Conbeer. It is pretty popular,\nwith over 2,500 GitHub Stars and counting. It looks like this:\n\nHarlequin is built with Textual to give a very interactive experience on the\nterminal. You can click around its UI and use keyboard shortcuts.\n\nI love having this kind of power in a terminal app. It\u2019s easy to run Harlequin\nover SSH or in other situations where exposing a database to a GUI application\nis tricky.\n\nOver the weekend, I created django-harlequin. This package provides a Django\nmanagement command to launch Harlequin for your Django-defined databases,\nsimilar to Django\u2019s built-in dbshell command. This way, you won\u2019t need to\ncopy-paste any connection settings to Harlequin.\n\nUse the command like so:\n\n    \n    \n    $ ./manage.py harlequin\n\nOr, select a different database:\n\n    \n    \n    $ ./manage.py harlequin --database replica\n\nFor more information, see the package README.\n\nI\u2019m still trying out Harlequin, so there may be things I have missed adding -\nif so, let me know. (I deliberately skipped Oracle support but created an\nissue, if you\u2019re interested.)\n\n## Fin\n\nMay your database design be less foolish than a harlequin,\n\n\u2014Adam\n\nRead my book Boost Your Git DX to Git better.\n\nOne summary email a week, no spam, I pinky promise.\n\nRelated posts:\n\n  * Django: An admin extension to prevent state leaking between requests\n  * Django: Pinpoint upstream changes with Git\n  * Django: Write-up on optimizing the system check framework\n\nTags: django\n\n\u00a9 2024 All rights reserved. Code samples are public domain unless otherwise\nnoted.\n\n", "frontpage": false}
