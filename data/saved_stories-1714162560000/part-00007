{"aid": "40169263", "title": "TASTe: The AST Editor (structural editing in vscode)", "url": "https://github.com/simonacca/tASTe", "domain": "github.com/simonacca", "votes": 1, "user": "simon_acca", "posted_at": "2024-04-26 13:40:21", "comments": 0, "source_title": "GitHub - simonacca/tASTe", "source_text": "GitHub - simonacca/tASTe\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nsimonacca / tASTe Public\n\n  * Notifications\n  * Fork 0\n  * Star 0\n\nmarketplace.visualstudio.com/items?itemname=simonacca.taste\n\n### License\n\nMIT license\n\n0 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# simonacca/tASTe\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n4 Branches\n\n13 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nsimonaccaBumpApr 25, 202491a1d97 \u00b7 Apr 25, 2024Apr 25, 2024\n\n## History\n\n86 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| add CI (#1)| Apr 23, 2024  \n  \n### .vscode\n\n|\n\n### .vscode\n\n| change max line len| Apr 21, 2024  \n  \n### media\n\n|\n\n### media\n\n| add gifs| Apr 23, 2024  \n  \n### src\n\n|\n\n### src\n\n| Jump to grandparent when necessary in expansion| Apr 25, 2024  \n  \n### .dockerignore\n\n|\n\n### .dockerignore\n\n| rename parser build script| Apr 23, 2024  \n  \n### .envrc\n\n|\n\n### .envrc\n\n| add flake| Apr 23, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| add flake| Apr 23, 2024  \n  \n### .vscodeignore\n\n|\n\n### .vscodeignore\n\n| Initial implementation| Apr 19, 2024  \n  \n### CHANGELOG.md\n\n|\n\n### CHANGELOG.md\n\n| Autoformat| Apr 20, 2024  \n  \n### Dockerfile\n\n|\n\n### Dockerfile\n\n| add CI (#1)| Apr 23, 2024  \n  \n### LICENSE.md\n\n|\n\n### LICENSE.md\n\n| Autoformat| Apr 20, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| add gifs| Apr 23, 2024  \n  \n### build-parsers.sh\n\n|\n\n### build-parsers.sh\n\n| cleanup| Apr 25, 2024  \n  \n### flake.lock\n\n|\n\n### flake.lock\n\n| add flake| Apr 23, 2024  \n  \n### flake.nix\n\n|\n\n### flake.nix\n\n| more flexible parser builds| Apr 24, 2024  \n  \n### jest.config.js\n\n|\n\n### jest.config.js\n\n| WIP: implement unit tests (cannot load parsers atm)| Apr 22, 2024  \n  \n### package-lock.json\n\n|\n\n### package-lock.json\n\n| Support php| Apr 25, 2024  \n  \n### package.json\n\n|\n\n### package.json\n\n| Bump| Apr 25, 2024  \n  \n### tsconfig.json\n\n|\n\n### tsconfig.json\n\n| WIP: implement unit tests (cannot load parsers atm)| Apr 22, 2024  \n  \n## Repository files navigation\n\n# tASTe: The AST Editor\n\nEditing code often involves dealing with low-level textual representations,\nwhich can be tedious and error-prone.\n\ntASTe is a vscode extension to edit code based on its structure, allowing you\nto interact more directly with the elements that make up your language.\n\nFor example, when your cursor is inside a for loop, you can invoke a command\nto select the whole loop at once.\n\nOr, if you have a list of elements, tASTe gives you a command to jump from one\nelement to the next, or expand the current selection from one element to te\nnext. This works equally well with strings in a list as it does with other\nsyntactic elements of many languages; you can for instance jump between code\nblocks (to jump from one function to the next for example), or select markdown\nparagraphs one after the other.\n\nThe theme of this plugin is to do away with some of the tediousness of editing\ncode by raising the level of abstraction, so as to end up a little closer to\nmanipulating the concepts inherent to your programming language instead of\ncharacters. Hopefully resulting in less errors and more fun :)\n\n## Commands\n\n### Expand and Contract Selection\n\n  * taste.ExpandSelection\n  * taste.ContractSelection\n\n### Grow and Shrink Selection\n\n  * taste.SelectForward\n  * taste.SelectBackward\n\n### Move Cursor\n\n  * taste.MoveCursorBackward\n  * taste.MoveCursorForward\n\n### Select Top Level\n\n  * taste.selectTopLevel\n\n### Raise\n\n  * taste.Raise\n\n### Swap\n\n  * taste.SwapForward\n  * taste.SwapBackward\n\n## Install instructions\n\n  1. Install from here\n  2. Add the keyboard shortcuts you are interested in to your editor config from the Command Palette (\u21e7\u2318P) with the \"Preferences: Open Keyboard Shortcuts (JSON) command.\" (docs)\n\nHere's some suggested ones:\n\n    \n    \n    { \"key\": \"cmd+e\", \"command\": \"taste.ExpandSelection\" }, { \"key\": \"cmd+shift+e\", \"command\": \"taste.ContractSelection\" }, { \"key\": \"shift+cmd+left\", \"command\": \"taste.SelectBackward\" }, { \"key\": \"shift+cmd+right\", \"command\": \"taste.SelectForward\" }, { \"key\": \"cmd+right\", \"command\": \"taste.MoveCursorForward\" }, { \"key\": \"cmd+left\", \"command\": \"taste.MoveCursorBackward\" }\n\n## Supported languages\n\n  * Bash\n  * C\n  * C++\n  * C Sharp\n  * Common Lisp\n  * Cap'n Proto\n  * Cobol\n  * CSS\n  * Cuda\n  * Dart\n  * DOT\n  * Elixir\n  * Erlang\n  * Fish\n  * Go\n  * Go mod\n  * Graphql\n  * Hack\n  * Haskell\n  * HCL (Terraform)\n  * HTML\n  * Java\n  * Javascript\n  * JQ\n  * JSON\n  * Julia\n  * Kotlin\n  * Lua\n  * Markdown\n  * Matlab\n  * Nix\n  * Protobuf\n  * Python\n  * QML\n  * R\n  * Racket\n  * Rust\n  * Ruby\n  * Scala\n  * SCSS\n  * Scheme\n  * SQL\n  * Swift\n  * Toml\n  * Typescript\n  * Zig\n\n## Troubleshooting\n\n### Unrecognized language\n\nIf you get the message \"The language ... is not yet supported by tASTe\" but\nthe language of my file listed as supported in this readme, it could be that\nvscode cannot auto-detect the language in question. You can verify this by\nchecking that the language is shown correctly in the bottom-right corner of\nvscode.\n\nIn case it's not shown correctly, you might need to install an extension that\nenables support for your language.\n\nIf the language is already recognized correctly and you still get the\n\"language not supported\" error, the problem is probably that the languageId\nassigned by vscode to your language does not coincide with the one used by\ntree-sitter. Please open an issue!\n\n## Credits\n\nCredit for this idea goes to the long lineage of lisp structured editors, with\na special shoutout to Emac's paredit and vscode's Calva. A special thank you\nalso to the developers of Tree-sitter and its many parsers, without which this\nwouldn't be possible.\n\n## Dev HOWTOs\n\n### Bringup development environment\n\n  1. Make sure you have installed the following:\n\n  * emscripten compiler\n  * nodejs\n  * docker (optional)\n  * gnu parallel (optional)\n\n  2. npm install\n  3. npm build-parsers\n  4. npm run build-watch\n  5. In the \"Run and Debug\" menu of vscode, Start debugging the \"Run Extension\" target\n\n### Publish\n\n  1. npm run check\n  2. Bump version number in package.json\n  3. git commit -m 'Bump'\n  4. npm run tag-n-push\n  5. npm run clean\n  6. npm run build-parsers\n  7. npm run publish\n\n#### Get Personal access token\n\nThis only applies if you are the extension publisher (simonacca).\n\nInstructions, PAT tab.\n\n### Rebuild parsers\n\n  1. npm build-parsers\n\n### Configure a new language\n\n  1. Install the parser npm i tree-sitter-mylanguage\n  2. Add a line to the build_wasm.sh script to generate the grammar\n  3. List the language in languageID2ParserName\n  4. Add an entry to excludeNodeTypes corresponding to the language\n\n### A language is installed and built but not recognized\n\nAdd an entry in src/languages.ts -> languageIDTranslation mapping the vscode\nlanguageID to the wasm name (see build-parsers.sh -> build_parser\n<node_module_name> <wasm_name>).\n\n## About\n\nmarketplace.visualstudio.com/items?itemName=simonacca.taste\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n0 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\n13 tags\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * TypeScript 83.0%\n  * Shell 12.2%\n  * Dockerfile 1.8%\n  * Nix 1.8%\n  * JavaScript 1.2%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
