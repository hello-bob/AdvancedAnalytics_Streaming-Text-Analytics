{"aid": "40197495", "title": "My ALS Journey: 9/n with Hector", "url": "https://www.modernescpp.com/index.php/my-als-journey-9-n-with-hector/", "domain": "modernescpp.com", "votes": 1, "user": "ibobev", "posted_at": "2024-04-29 12:37:02", "comments": 0, "source_title": "My ALS Journey: 9/n with Hector", "source_text": "My ALS Journey: 9/n with Hector \u2013 MC++ BLOG\n\nManage Cookie Consent\n\nTo provide the best experiences, we use technologies like cookies to store\nand/or access device information. Consenting to these technologies will allow\nus to process data such as browsing behavior or unique IDs on this site. Not\nconsenting or withdrawing consent, may adversely affect certain features and\nfunctions.\n\nManage options Manage services Manage {vendor_count} vendors Read more about\nthese purposes\n\nView preferences\n\nCookie Policy Privacy Statement Imprint\n\nBlog - Latest News\n\nYou are here: Home1 / ALS2 / My ALS Journey: 9/n with Hector\n\n# My ALS Journey: 9/n with Hector\n\nApril 29, 2024/in ALS/by Rainer Grimm\n\nI initially thought that this status report was not particularly exciting. I\nwas very wrong, but read it for yourself.\n\n>> My ALS Journey so far <<\n\n## How I Work\n\nI have had a suitable wheelchair for a few days now. It is an excellent help\nto me in my daily work. Now, I can sit relaxed in my chair and do a full-day\ncourse. The chair can be tilted and has brakes. Unfortunately, the long\nwaited-for arm orthosis is not a great help. I, therefore, write slowly on my\nkeyboard or enter long texts by voice. This works relatively well.\n\n## Steps and a Heavy Accident\n\nI\u2019ve landed on the stairs several times in the last few weeks. Now I have a\nstudy room that I can go to without stairs. In 6 weeks, we will move from a\nhouse to an apartment. This apartment has no stairs and is completely barrier-\nfree. The apartment is almost ready. It\u2019s just not clear which internet\nprovider will supply the new building. That could be fun. It\u2019s unbelievable.\nAn apartment is considered finished if there is no internet connection yet.\nWelcome to the digital age.\n\nUpdate: last Sunday, I had a massive fall on the stairs. First, I fell with my\nleft eye on the railing and broke my glasses. Then I crashed into the\nbookshelf and smashed through a panel with my head. Thanks to the bookshelf, I\nlanded on the floor, having slowed down. Luckily, nothing happened to me. They\njust stitched up the cut on my eye in the emergency room.\n\nNow, I don\u2019t go up or down stairs anymore.\n\n## The Last Fundraising\n\nUnfortunately, our last fundraising campaign was not as successful as\nexpected. We raised just under 2000 euros for ALS research. Many thanks to\nAndreas Fertig, Bart\u0142omiej Filipek, Jason Turner, and Dmitry Vostokov.\n\nNow, I must think of something new and need your help. What ideas do you have?\nPlease email me at rainer.grimm@ModernesCpp.de. I look forward to your ideas.\n\n## My Bell Hector\n\nHector is a great help to me. His sound can be heard throughout the house. If\nyou don\u2019t know Hector, there\u2019s no way around the Breaking Bad and Better Call\nSaul series.\n\nPost Views: 177\n\nThanks a lot to my Patreon Supporters: Matt Braun, Roman Postanciuc, Tobias\nZindl, G Prvulovic, Reinhold Dr\u00f6ge, Abernitzke, Frank Grimm, Sakib, Broeserl,\nAnt\u00f3nio Pina, Sergey Agafyin, \u0410\u043d\u0434\u0440\u0435\u0439 \u0411\u0443\u0440\u043c\u0438\u0441\u0442\u0440\u043e\u0432, Jake, GS, Lawton Shoemake,\nJozo Leko, John Breland, Venkat Nandam, Jose Francisco, Douglas Tinkham,\nKuchlong Kuchlong, Robert Blanch, Truels Wissneth, Kris Kafka, Mario Luoni,\nFriedrich Huber, lennonli, Pramod Tikare Muralidhara, Peter Ware, Daniel\nHufschl\u00e4ger, Alessandro Pezzato, Bob Perry, Satish Vangipuram, Andi Ireland,\nRichard Ohnemus, Michael Dunsky, Leo Goodstadt, John Wiederhirn, Yacob Cohen-\nArazi, Florian Tischler, Robin Furness, Michael Young, Holger Detering, Bernd\nM\u00fchlhaus, Stephen Kelley, Kyle Dean, Tusar Palauri, Juan Dent, George Liao,\nDaniel Ceperley, Jon T Hess, Stephen Totten, Wolfgang F\u00fctterer, Matthias Gr\u00fcn,\nPhillip Diekmann, Ben Atakora, Ann Shatoff, Rob North, Bhavith C Achar, Marco\nParri Empoli, moon, Philipp Lenk, Hobsbawm, Charles-Jianye Chen, and Keith\nJeffery.\n\n## Modernes C++ Mentoring\n\nBe part of my mentoring programs:\n\n* \"Fundamentals for C++ Professionals\" (open)\n* \"Design Patterns and Architectural Patterns with C++\" (open)\n* \"C++20: Get the Details\" (open)\n* \"Concurrency with Modern C++\" (starts March 2024)\n\nDo you want to stay informed: Subscribe.\n\nThanks, in particular, to Jon Hess, Lakshman, Christian Wittenhorst, Sherhy\nPyton, Dendi Suhubdy, Sudhakar Belagurusamy, Richard Sargeant, Rusty Fleming,\nJohn Nebel, Mipko, Alicja Kaminska, Slavko Radman, and David Poole.\n\nMy special thanks to Embarcadero  \n---  \nMy special thanks to PVS-Studio  \nMy special thanks to Tipi.build  \nMy special thanks to Take Up Code  \nMy special thanks to SHAVEDYAKS  \n  \n## Seminars\n\nI\u2019m happy to give online seminars or face-to-face seminars worldwide. Please\ncall me if you have any questions.\n\n### Standard Seminars (English/German)\n\nHere is a compilation of my standard seminars. These seminars are only meant\nto give you a first orientation.\n\n  * C++ \u2013 The Core Language\n  * C++ \u2013 The Standard Library\n  * C++ \u2013 Compact\n  * C++11 and C++14\n  * Concurrency with Modern C++\n  * Design Pattern and Architectural Pattern with C++\n  * Embedded Programming with Modern C++\n  * Generic Programming (Templates) with C++\n  * Clean Code with Modern C++\n  * C++20\n\n### Online Seminars (German)\n\n  * Clean Code: Best Practices f\u00fcr modernes C++ (21. Mai 2024 bis 23. Mai 2024)\n  * Embedded Programmierung mit modernem C++ (2. Jul 2024 bis 4. Jul 2024)\n\n### Contact Me\n\n  * Phone: +49 7472 917441\n  * Mobil:: +49 176 5506 5086\n  * Mail: schulung@ModernesCpp.de\n  * German Seminar Page: www.ModernesCpp.de\n  * Mentoring Page: www.ModernesCpp.org\n\nModernes C++ Mentoring,\n\n##### Share this entry\n\n  * Share on Facebook\n  * Share on Twitter\n  * Share on Pinterest\n  * Share on LinkedIn\n  * Share on Tumblr\n  * Share on Vk\n  * Share on Reddit\n  * Share by Mail\n\nhttps://www.modernescpp.com/wp-content/uploads/2024/04/face-1.jpg 2048 2048\nRainer Grimm https://www.modernescpp.com/wp-content/uploads/2023/02/logo_mcpp-\nblog-news2_287x52.png Rainer Grimm2024-04-29 09:20:272024-04-29 09:20:28My ALS\nJourney: 9/n with Hector\n\n### Start Here\n\n### Tag Cloud\n\nacquire-release semantic (10) ADL (1) Allocator (5) Anti-Patterns (1)\nArithmetic (1) Associative Containers (10) async (2) Atomics (29)\natomic_thread_fence (2) auto (6) barriers (2) Bit Manipulation (1) C (1)\nchrono (17) Classes (14) Class Hierarchies (4) Concepts (28) condition\nvariables (6) consteval (2) constexpr (12) constexpr if (2) constinit (2)\nContracts (1) Control Structures (2) Conversions (2) Coroutines (22) CppMem\n(9) CRTP (3) Data Races (1) Declarations (3) decltype (2) Dependency Injection\n(1) Dependent Names (1) Dining Philosophers (2) enum (3) Error Handling (6)\nExceptions (3) Executors (2) Expressions (2) Expression Templates (2) final\n(1) finally (1) Fold Expressions (3) format (7) friend (1) Functions (3) GSL\n(3) Haskell (9) History (1) if (1) In/Output (4) Initialization (5) inline (1)\nInterfaces (3) iterator (2) jthread (2) Lambdas (9) latches (2) lock (11)\nlock-free (3) Memory (26) memory_order_consume (2) Mixins (1) Modules (12)\nMonads (1) Monostate (1) move (6) Multiple Inheritance (1) mutex (7) Myths (3)\nNaming (1) new/delete (8) nullptr (1) Ongoing Optimization (7) Outdated (11)\nOverloading (2) override (1) Ownership (1) Parallel STL (2) Performance (13)\nPimpl (1) POD (1) Pointers (2) Policy (5) Polymorphism (2) Python (6) Race\nConditions (2) RAII (1) Ranges (16) Regular (2) Regular Expressions (3)\nRelaxed Semantics (7) Requires Expressions (1) Rule of Zero/Six (3) Safety (5)\nsemaphores (3) Sequential Consistency (12) shared_ptr (7) Singleton (5)\nSlicing (1) Smart Pointers (13) Source Files (2) Spaceship (4) span (2)\nStatements (1) static (2) static_assert (2) string (4) switch (2) Tag\nDispatching (3) Tasks (14) Template Metaprogramming (6) ThreadSanitizer (1)\nthread_local (3) Traits (1) Transactional Memory (1) type-traits (12) Type\nErasure (3) union (1) unique_ptr (5) User-Defined Literals (2) Variadic\nTemplates (5) variant (1) vector (1) Virtual Constructor (1) volatile (3)\nweak_ptr (1)\n\n### Source Code\n\n### Subscribe to the Newsletter\n\n### Latest news\n\n  * C++20: Query Calendar Dates and Ordinal DatesApril 22, 2024 - 9:53 am\n\nThe extended chrono library makes it relatively easy to ask for the time\nduration between calendar dates. This post is the sixth in my detailed journey\nthrough the chrono extension in C++20: Query Calendar Dates Without further\nado, the following program queryCalendarDates.cpp queries a few calendar\ndates. // queryCalendarDates.cpp #include <chrono> #include <iostream> int\nmain() [...]\n\n  * C++20: Displaying and Checking Calendar DatesApril 15, 2024 - 9:20 am\n\nI created calendar dates in my last post, \u201cC++20: Creating Calendar Dates,\u201d\nand I will display and check them today. This post is the fifth in my detailed\njourney through the chrono extension in C++20: Displaying Calendar Dates\nThanks to std::chrono::local_days or std::chrono::sys_days, you can convert\ncalendar dates to a local or a system std::chrono::time_point. [...]\n\n  * C++20: Creating Calendar DatesApril 8, 2024 - 10:51 am\n\nIn this post, I will dive deeper into calendar dates and create them. If this\npost is too overwhelming for you, read my previous ones: C++20 supports\nconstants and literals to make using calendar-date types more convenient.\nConstants and Literals for Calendar Types Let me start with the constants for\nstd::chrono::weekday, and std::chrono::month. std::chrono::Monday\nstd::chrono::Thuesday [...]\n\n  * C++20: Time of DayMarch 25, 2024 - 10:08 am\n\nThis new data type std::chrono::hh_mm_ss in C++20 stands for the time of day.\nTime of Day std::chrono::hh_mm_ss is the duration since midnight split into\nhours, minutes, seconds, and fractional seconds. This type is typically used\nas a formatting tool. First, the following table gives you a concise overview\nof std::chrono::hh_mm_ss instance tOfDay. Depending on the [...]\n\n  * C++20: Basic Chrono Terminology with Time Duration and Time PointMarch 18, 2024 - 10:34 am\n\nToday, I continue my journey through the basic types with time durations and\ntime points. Time Durations C++14 introduced helper types such as\nstd::chrono::seconds for time durations and corresponding time literals such\nas 5s. C++20 added new helper types. The following table shows all for\ncompleteness. Often the time duration std::chrono::days and the calendar date\n[...]\n\n  * My Next Mentoring Program: \u201cConcurrency with Modern C++\u201d startsMarch 11, 2024 - 11:24 am\n\nMy next mentoring program, \u201cConcurrency with Modern C++\u201d, starts on the 15th\nof March. Registration is open. Thanks a lot to my Patreon Supporters: Matt\nBraun, Roman Postanciuc, Tobias Zindl, G Prvulovic, Reinhold Dr\u00f6ge,\nAbernitzke, Frank Grimm, Sakib, Broeserl, Ant\u00f3nio Pina, Sergey Agafyin, \u0410\u043d\u0434\u0440\u0435\u0439\n\u0411\u0443\u0440\u043c\u0438\u0441\u0442\u0440\u043e\u0432, Jake, GS, Lawton Shoemake, Jozo Leko, John Breland, Venkat Nandam,\n[...]\n\n### Become a Patreon\n\nPrivacy Statement\n\nImprint\n\nDisclaimer\n\nContact Me\n\n\u00a9 Copyright 2023 - Modernes C++ GmbH\n\n  * Facebook\n  * Twitter\n  * LinkedIn\n\nC++20: Query Calendar Dates and Ordinal Dates\n\nScroll to top\n\n", "frontpage": false}
