{"aid": "40083315", "title": "The Julia programming language: a missed opportunity for AI", "url": "https://www.techzine.eu/blogs/devops/118517/the-julia-programming-language-a-missed-opportunity-for-ai/", "domain": "techzine.eu", "votes": 1, "user": "blindseer", "posted_at": "2024-04-19 04:00:28", "comments": 0, "source_title": "The Julia programming language: a missed opportunity for AI", "source_text": "The Julia programming language: a missed opportunity for AI - Techzine Europe\n\nSkip to content\n\nTechzine Europe\n\nTechzine Blogs Devops The Julia programming language: a missed opportunity for\nAI\n\n  * Techzine Europe\n  * Techzine Netherlands\n\n\"*\" indicates required fields\n\n# The Julia programming language: a missed opportunity for AI\n\nErik van Klinken\n\nApril 9, 2024April 9, 2024\n\n5 min\n\n#### Tags in this article\n\nJulia, programming language, Python\n\nThe use of Python is growing at lightning speed. This language is benefiting\nenormously from the AI march, despite criticism about disappointing\nperformance. Meanwhile, Julia, designed to be better equipped for handling\nlarge data volumes, can be a lot faster. Nevertheless, the latter language is\nbarely growing. Why?\n\nJulia has been around since 2009 and is developed on an open-source basis. Its\ncreators, in a 2012 blog post, stated they aimed to combine the speed of C\nwith the ease of use of Python, while adopting additional positive qualities\nfrom various other leading programming languages. They admitted that was a\n\u201cgreedy\u201d desire, but Julia has been considered up for the task for a while.\nThe syntax has been stable since 2018 with version 1.0 \u2013 in essence, it was\nprimed for a breakthrough should the opportunity arrive.\n\nJulia is highly parallelized, meaning it is set up to perform many\ncomputations simultaneously. This distributed approach to compute is crucial\nfor handling large amounts of data in a timely manner. The language thus\nresponds to the current trend within CPUs and GPUs to provide more and more\ncores. This applies to products intended for individual users as well as High\nPerformance Computing (HPC) and data centers. If you need to scale your\nworkload, Julia should offer a strong basis to keep growing.\n\n## Applications plenty\n\nJulia\u2019s real-world applications are already plentiful. For example, NASA has\ndeployed Julia to calculate the courses of spacecraft. The performance-\noriented Julia also excels in financial analysis, weather forecasting and car\ncrash simulations. Such use-cases show that the language\u2019s excellent ability\nto handle parallelized workloads isn\u2019t just a promise: it can indeed deliver\nwhat\u2019s promised.\n\nIn other words, those doing a multitude of similar calculations with a lot of\ndata can complete them much faster with Julia than with Python. Because the\nformer is a compiled language, many calculations have already occurred\nbeforehand. It means that Julia can run significantly faster than Python,\nwhich still needs to translate to bytecode at runtime and, via the Python\nVirtual Machine, to machine code (which is the long set of binary numbers that\na computer can actually read).\n\nMoving from Python to the better-performing but complex C is time-consuming.\nThe popular Rust, praised for its safe and stable nature, often proves too\nverbose for scientific applications because it cannot be interpreted at a\nglance. Compared to other programming languages, Julia code is quite\nstraightforward. That sounds like an excellent resume for achieving wider\nadoption among development teams, especially if they are currently using\nPython. However, several factors have thrown a spanner in the works.\n\n## The strength and weakness of the Julia community\n\nIt should be an advantage of Julia that it is \u201ctruly\u201d open source, with no\nmeaningful restrictions on the distribution of software built on this\nlanguage. The project has over 1,000 contributors and runs on developer\nfeedback. Ideally, that fixes persistent problems, but that is far from the\ncase. In a blog titled \u201cWhy I no longer recommend Julia,\u201d developer Yuri\nVishnevsky states that the programming language\u2019s problems are regularly swept\nunder the rug by the community.\n\nEvery language has bugs. However, Vishnevsky doesn\u2019t take issue with the bugs\nthemselves, but the culture around discussing them online. He points to five\nprevious blogs by others that raised various problems, to which the Julia\ncommunity responded with denials and trivializations.\n\nOne problem here is that not everyone agrees on what constitutes a bug. In the\nofficial documentation, the Julia development team admits that the compiler is\nunconventional and can feel unintuitive. Once users figure out exactly how the\nlanguage works, they can expect performance close to that of C. It is up to\n\u201cJulians,\u201d as supporters of the language are called, to convince others of\nthat new approach.\n\n## The popularity problem\n\nA central problem is simply that Juliet is used far less than other languages.\nThe TIOBE Index places the Julia programming language 37th, with virtually all\nthe options that Julia was supposed to replace above it. Python is right at\nthe top, and for specific applications is actually currently experiencing a\nmeteoric rise in popularity. This level of popularity means that single Python\npackages will often even offer more support than the entire Julia language\ndoes.\n\nTip: Popularity of Python continues to rise against backdrop of AI race\n\nThis results in a lack of support, as many a developer has discovered. Those\nlooking for specific information to perform a particular action often find the\ndesired assistance missing. A key benefit of popular languages being widely-\nused is that the community finds ways to simplify common tasks, optimize them,\nprovide tutorials or simply answer them on Stack Overflow.\n\nSome \u201cJulians\u201d will have hopes that their favourite language will eventually\nreplace Python or at least catch up to it at some point. They might draw hope\nfrom Kotlin, which, as a relatively young language, is now the lingua franca\non Android. However, Kotlin managed to overcome the incumbent Java because\nAndroid builder Google deliberately chose to promote it. Without this assist\nby Google, Kotlin would never have grown as quickly, its developers think.\nCould the rise of AI mean a similar popularity explosion for Julia?\n\n## The rise of AI\n\nThe biggest problem for Julia has nothing to do with the language itself:\nPython is already the most obvious option and isn\u2019t in need of an alternative.\nAlthough the rise of AI presents new challenges for developers, they can reach\nfor the tools that are familiar to them. Torsten Grabs, Senior Director of\nProduct Management at Snowflake, described in detail on our Dutch-language\nsite last year how versatile Python is. \u201cFor example, it forms the basis of\nNetflix\u2019s algorithm and the software that drives self-driving cars,\u201d he wrote\nat the time. Its extensive ecosystem of libraries offers a versatility that no\nalternative can match.\n\nDespite that versatility, a large group of Python developers specialize\nprecisely in data analysis (51 percent) and ML (38 percent). Regardless of\nJulia\u2019s functional advantages, the time-to-market for AI applications with\nPython is faster because all the tools are at hand. In addition, millions of\nprogrammers can use such tools right away. In other words, the niche is\nalready filled, and by none other than the single most common programming\nlanguage in the world. It means that Julia, despite all its positives, is\nconfined to a niche it has little hope of escaping.\n\nRead more: How the Kotlin programming language has conquered Android\n\n#### Recent in Devops\n\n### New version of Copilot coming to Visual Studio 17.10 in May, preview\navailable now\n\n### Google makes Gemini Pro LLM available in Android Studio\n\n### Jira update increases insight into app performance with Compass\n\n### Canonical offers two addtional years of support for Ubuntu Pro 14.04 LTS\n\n### It is now possible to add AI to .NET apps within a few clicks\n\n#### Jobs - Techcareer\n\n### Data Engineer AWS\n\nDen Haag Full time\n\n### Cloud DevOps Engineer\n\nDen Haag Full time\n\n## Related articles\n\n### Java highly vulnerable relative to other programming languages\n\n### Rust rolls out critical fix for Windows vulnerability and urges immediate\nupdating\n\n### CAST AI introduces cost-cutting solution AI Optimizer for Large Language\nModels\n\n### Supersimple drives \u2018complex\u2019 AI-native data analytics\n\n### Intel aims for developers to utilize 100 million AI PCs by 2025\n\n## Events - Techcalendar\n\nApril 25, 2024\n\n### Microsoft Discovery Workshop Infrastructure & Database Modernization\n\nMay 6, 2024, Denver\n\n### Red Hat Summit\n\nMay 6, 2024, San Francisco\n\n### RSA Conference 2024\n\n## Top Stories\n\n### Newest ASML machine at Intel is ready to go, with plenty of R&D ahead\n\nIntel has just announced that ASML's High-NA EUV machine has finished\nconstruction. For the first time, the s...\n\n### How did Phishing-as-a-Service group LabHost operate?\n\nWith \"Operation PhishOFF,\" phishing gang LabHost appears to have exited the\ncybercrime stage. This criminal g...\n\n### Cisco Hypershield: new security architecture protects against new (and\nold) problems\n\nAccording to Cisco, what we need is not so much new security products, but a\ncompletely new architecture to b...\n\n### SAS wants to make AI models and AI modeling as accessible as possible\n\nAI models sometimes have an almost mythical status. You can do a lot with\nthem, but building and deploying th...\n\n### Google hints at breakthrough for LLMs with Infini-attention\n\nGoogle researchers claim they've cracked the code to give large language\nmodels (LLMs) the literary equivalen...\n\n## Recent news\n\n### The ability to offer iOS apps through your own website is now finally here\n\nWith the latest update to iOS, version 17.5 beta 2, Apple has made it possible\nfor app providers to offer sof...\n\n15 hours ago\n\n### Google moves part of operations and lays off employees once more\n\nFor the second time this year, Google is laying off a large number of\nemployees. The round of layoffs mainly ...\n\n20 hours ago\n\n### French AI startup Mistral AI again looking for investors\n\nFrench AI startup Mistral appears to have an unquenchable appetite for\ninvestor capital. The company is repor...\n\n20 hours ago\n\n### Java highly vulnerable relative to other programming languages\n\nAmong widely used programming languages, Java appears to be the most\nsusceptible to third-party vulnerabiliti...\n\n21 hours ago\n\n### ASML sends High-NA EUV machine to second customer\n\nASML has delivered its second advanced EUV lithography system. Although ASML\ndid not disclose the new custome...\n\n2 days ago\n\n### NetSuite Analytics Warehouse available in 11 new countries\n\nNetSuite Analytics Warehouse is now available in 11 additional countries,\nNetsuite announced during SuiteConn...\n\n2 days ago\n\n### Techzine Europe - Your single source of truth!\n\nTechzine focusses on IT professionals and business decision makers by\npublishing the latest IT news and background stories. The goal is to help IT\nprofessionals get acquainted with new innovative products and services, but\nalso to offer in-depth information to help them understand products and\nservices better.\n\n### Follow us\n\nTwitter LinkedIn Facebook\n\n\u00a9 2024 Dolphin Publications B.V. All rights reserved.\n\n### Techzine Service\n\n  * Become a partner\n  * Advertising\n  * About Us\n  * Contact\n  * Terms & Conditions\n  * Privacy Statement\n\nNotifications\n\n", "frontpage": false}
