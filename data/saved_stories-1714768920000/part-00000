{"aid": "40247163", "title": "Useless apps will make you a better engineer", "url": "https://toddle.dev/blog/how-useless-apps-teach-you-how-to-program-faster", "domain": "toddle.dev", "votes": 4, "user": "vakis", "posted_at": "2024-05-03 12:55:54", "comments": 2, "source_title": "How useless apps teach you how to program faster.", "source_text": "How useless apps teach you how to program faster.\n\n# How useless apps teach you how to program faster.\n\nIt's hard to learn new things like programming. Unlike Neo, you can\u2019t just\nplug into The Matrix and instantly know how to develop\u2014maybe someday, but not\nyet.\n\nVakis Rigas\n\nMay 2, 2024\n\nFor now, we must work hard to become comfortable with new skills. Learning\ntakes time, and we rarely have unlimited amounts to learn a new skill. We\nmostly encounter new tools because we have a job to be done that wasn\u2019t solved\nby other tools. This often means that our patience to dive in and learn the\nins and outs of this tool is limited. Nevertheless, this is precisely what we\nshould do.\n\nThe problem with these scenarios is that we almost always come to a tool with\na pre-existing idea of what to do. Whether it\u2019s Figma, React, or Supabase,\nmost have a challenge they need to solve, and they were told that solution x\nwas best for them.\n\nThere are several problems with this approach:\n\n  1. Inadequate grasp of fundamental principles and concepts\n\n  2. Unable to troubleshoot or understand mechanisms\n\n  3. Confusion and frustration from error messages\n\n  4. Slow progress and demotivation\n\n  5. Difficulty with advanced topics without a strong foundation\n\nWe have found a trick to make the process a bit easier: Build useless apps.\n\nOn average, it takes 10,000 hours to master a new skill, and many applications\nrequire a certain level of mastery. While you don\u2019t need to put in 10,000\nhours to build, you can make your learning faster by building stupid shit.\nBuilding useless apps helps you scope your app to your means and introduces\nyou to new concepts without frustration.\n\nIn product development, you need to learn fundamental principles and concepts.\nThese principles help you avoid significant mistakes later in your build. Like\nan architect draws a building before a project begins, there are certain\ndecisions you need to make before you start any project. The plans are then\npassed on to a building engineer who decides which materials to use and\nhighlights areas that may not yet be feasible. Much work goes into a project\nbefore the building site begins, which is no less accurate for a software\nengineer.\n\nThe decisions you make before you start a build are based on your knowledge of\nlimitations and the experience you have acquired as an engineer. The\nexperience aspect is why it takes a long time to become a principal engineer\n(the highest engineering rank as an individual contributor). The more you\nbuild, the better you understand the principles, which errors will or may\noccur, and how to troubleshoot mistakes.\n\nBuilding fast increases morale. The energy you get when you solve a complex\nproblem is the energy that will get you through your build when mistakes\nhappen. That\u2019s why it\u2019s so essential to balance success and failure. Some\ntools, like Canva or Evernote, are easy to learn, while others, like toddle,\nhave much more depth. The best way to learn a new development platform is to\nplay around and build useless apps.\n\nUseless apps are great because they have much less emotional value. Mistakes\nhurt less, and abandoning a project is less taxing. Useless apps are also\nsmaller than: \u201cI\u2019ve got an idea for a marketplace app.\u201d Every app you build\nwill bring new challenges and creative solutions that you can leverage in your\nnext project. In 2005, Ludvig Strigeus created uTorrent, a BitTorrent client.\nHe later used the knowledge he had learned from peer-to-peer sharing when he\nbuilt the underlying technology that serves music to Spotify\u2019s hundreds of\nmillions of users.\n\nWe have built countless useless apps at toddle, like the Owen Wilson Wow app,\na random band app, or the T-Beat Pro.\n\nAn engineer's job is not to code. Engineers are hired to solve complex\nproblems, regardless of the language. The more you play, the better you\u2019ll see\nunique solutions to hard problems.\n\nMany of the digital services we access today result from curious souls who\nlearn how to do things differently and experiment with various ideas. We\nadvise you to play around, learn a ton, and put your big idea on hold just\nuntil you have a few apps under your belt.\n\n## Stop scrolling. Start building.\n\ntoddle is a visual web app builder that rivals custom code \u2014 but accessible to\nyour entire team!\n\nTry toddle \u2014 it's free!\n\n## Chat with @team-toddle\n\n## Video call our CEO\n\nHello, toddle!\n\n## Get in touch!\n\n### Product\n\nPricingPackagesT&CsPrivacy Policy\n\n### Company\n\nPress kitContact Become partner\n\n### Resources\n\nDocumentationIntegrationsBlogFounder storiesHire experts\n\n### Community\n\nDiscordLinkedInXYouTube\n\nServer-side renderedInstallable PWAsConnect to any databaseAs performant as\ncodetoddle is built in toddleundefinedundefinedundefinedundefinedundefined\n\nundefinedStyle tokensExport as web componentsNo feature limitsConnec to any\nAPIExtend with codeundefinedundefinedundefinedundefined\n\n\u00a9 Copyright 2024 toddle. All rights reserved.\n\nBuilt in toddle\n\n", "frontpage": false}
