{"aid": "40209709", "title": "Poetry mono repo made easy with plugin", "url": "https://github.com/gerbenoostra/poetry-plugin-mono-repo-deps", "domain": "github.com/gerbenoostra", "votes": 1, "user": "grbno", "posted_at": "2024-04-30 11:16:00", "comments": 0, "source_title": "GitHub - gerbenoostra/poetry-plugin-mono-repo-deps: Poetry plugin for mono repos to replace path dependencies with named dependencies", "source_text": "GitHub - gerbenoostra/poetry-plugin-mono-repo-deps: Poetry plugin for mono\nrepos to replace path dependencies with named dependencies\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\ngerbenoostra / poetry-plugin-mono-repo-deps Public\n\n  * Notifications\n  * Fork 0\n  * Star 14\n\nPoetry plugin for mono repos to replace path dependencies with named\ndependencies\n\n### License\n\nMIT license\n\n14 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# gerbenoostra/poetry-plugin-mono-repo-deps\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n1 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\njakob-kellerdocs: fix typo (#4)Apr 16, 202495c9458 \u00b7 Apr 16, 2024Apr 16, 2024\n\n## History\n\n12 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| ci: skip redeploying same version to testpypi| Apr 12, 2024  \n  \n### .vscode\n\n|\n\n### .vscode\n\n| feat: replace dependencies within poetry commands| Apr 5, 2024  \n  \n### poetry_plugin_mono_repo_deps\n\n|\n\n### poetry_plugin_mono_repo_deps\n\n| bump: 0.1.0 \u2192 0.2.0| Apr 12, 2024  \n  \n### tests\n\n|\n\n### tests\n\n| test: fix for windows, verify on github| Apr 6, 2024  \n  \n### .flake8\n\n|\n\n### .flake8\n\n| feat: replace dependencies within poetry commands| Apr 5, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| feat: replace dependencies within poetry commands| Apr 5, 2024  \n  \n### .pre-commit-config.yaml\n\n|\n\n### .pre-commit-config.yaml\n\n| test: fix for windows, verify on github| Apr 6, 2024  \n  \n### .python-version\n\n|\n\n### .python-version\n\n| chore: define poetry project| Apr 5, 2024  \n  \n### CHANGELOG.md\n\n|\n\n### CHANGELOG.md\n\n| bump: 0.1.0 \u2192 0.2.0| Apr 12, 2024  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| feat: replace dependencies within poetry commands| Apr 5, 2024  \n  \n### Makefile\n\n|\n\n### Makefile\n\n| bump: 0.1.0 \u2192 0.2.0| Apr 12, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| docs: fix typo (#4)| Apr 16, 2024  \n  \n### VERSION\n\n|\n\n### VERSION\n\n| bump: 0.1.0 \u2192 0.2.0| Apr 12, 2024  \n  \n### poetry.lock\n\n|\n\n### poetry.lock\n\n| test: fix for windows, verify on github| Apr 6, 2024  \n  \n### poetry.toml\n\n|\n\n### poetry.toml\n\n| feat: replace dependencies within poetry commands| Apr 5, 2024  \n  \n### pyproject.toml\n\n|\n\n### pyproject.toml\n\n| bump: 0.1.0 \u2192 0.2.0| Apr 12, 2024  \n  \n## Repository files navigation\n\n# Poetry plugin to Pin Path dependencies\n\nA Poetry plugin for Poetry mono repositories, that will replace path\ndependencies with named dependency specifications.\n\nA mono repository contains multiple Python packages, which can depend on each\nother. These are typically path dependencies with the develop = true\nattribute. This allows for easy development and local running. However, when\nthe packages are published to a PyPi repo, these dependencies should be named\ndependencies. By publishing the packages with named dependencies, one can\neasily install the packages and their dependencies.\n\nThis plugin will replace path dependencies (name @ path) with named dependency\nspecifications (name ~= version). By default, this is done when building\nartifacts (poetry build) and exporting the locked dependency list (poetry\nexport). The plugin can however be configured to modify any other command\nregistered by Poetry or other plugins.\n\n## An example using build and export\n\nSuppose you have a single folder with 2 Python packages, where one (app-b)\ndepends on the other (lib-a).\n\nThe used library has the following in its Poetry section:\n\n    \n    \n    # repo/A/pyproject.toml [tool.poetry] name = \"lib-a\" version = \"0.0.1\"\n\nThe application package depends on the previous library as follows:\n\n    \n    \n    # repo/B/pyproject.toml [tool.poetry] name = \"app-B\" [tool.poetry.dependencies] library-a = {path = \"../A\", develop=true}\n\n### Poetry build\n\nBy default, building the above project with Poetry (poetry build), will result\nin a build artifact (tar.gz/whl) containing a path dependency in its metadata\nsimilar to:\n\n    \n    \n    Requires-Dist: lib-a @ file:///your/local/checkout/project/root/lib-a\n\nThis prevents sharing the build and reusing the build artifact on other\nsystems, as it expects to find lib-a at that specific path.\n\nUsing this Mono-Repo-Deps plugin, the Poetry build will result in the\nfollowing dependency:\n\n    \n    \n    Requires-Dist: lib-a (>=0.0.1,<0.1.0)\n\n### Poetry export\n\nBy default, exporting the full dependency list (poetry export) results in a\ndependency list (requirements.txt) that also contain path dedendencies with\nfull paths:\n\n    \n    \n    lib-a @ file:///your/local/checkout/project/root/lib-a\n\nAgain, by using this Mono-Repo-Deps plugin, these will become:\n\n    \n    \n    lib-a==0.1.0\n\n## Installation\n\nYou can install the plugin as explained in the Poetry documentation about\nplugin usage.\n\nWhich can be summarized as:\n\nIf you used PipX to install Poetry:\n\n    \n    \n    pipx inject poetry poetry-plugin-mono-repo-deps\n\nIf you used Pip to install Poetry:\n\n    \n    \n    pip install poetry-plugin-mono-repo-deps\n\nOn non-Windows devices, you can also use Poetry's self add which will also\nvalidate compatibility:\n\n    \n    \n    poetry self add poetry-plugin-mono-repo-deps\n\n## Usage:\n\nAs plugins are installed systemwide, this plugin is by default disabled to not\nunintentionally modify the existing behavior of Poetry.\n\nEnable the plugin by adding the following (empty) section to your\npyproject.toml:\n\n    \n    \n    # repo/B/pyproject.toml [tool.poetry-monorepo.deps]\n\nThis is equivalent to adding the following default settings:\n\n    \n    \n    [tool.poetry-monorepo.deps] enabled = true commands = [\"build\", \"export\"] constraint = \"~=\" source_types = [\"file\", \"directory\"] only_develop = false\n\nPossible alternative values can be found in the following section:\n\n## Configuration:\n\n### enabled\n\nType: boolean\n\nDefault: true\n\nAllowed values: true, false\n\nWhether the plugin should be activated for commands on this project.\n\n### commands\n\nType: List[string]\n\nDefault: [\"build\", \"export\"]\n\nAllowed values: Any CLI command registered with Poetry (could also be provided\nby other plugins).\n\nThe intercepted poetry commands. The plugin will intercept the command and\nupdate the internal representation of dependencies, changing the path\ndependencies to named dependency specifications.\n\n### constraint\n\nType: string\n\nDefault: ~=\n\nAllowed values: ==, >= , ~= , ^ (All valid Poetry version constraints).\n\nThe version constraint that is applied to the current version of the\ndependency.\n\nFor example, when the dependency has version 0.0.1, and the default constraint\nstring ~= is used, it will result in a named dependency with version >=0.1.0,\n<0.1.0.\n\n### source_types\n\nType: List[string]\n\nDefault: [\"file\", \"directory\"] (local Path dependencies)\n\nAllowed values: [\"file\", \"directory\", \"url\", \"git\"]. (Any source_type\nattribute of Poetry's internal Dependency object, which includes the lowercase\nVCS identifier, like git).\n\nThe type of dependencies that should be replaced with their named version\nspecification.\n\n### only_develop\n\nType: boolean\n\nDefault: false\n\nEnable to only replace develop dependencies, which, as currently implemented\nin Poetry, are only directory Path dependencies.\n\nThis filter is only applied to directory path dependencies, as only those can\nhave the develop mark.\n\nIf you configure source_types to be any Path dependency (ie. file or\ndirectory), all file path dependencies will be translated, while only the\ndirectory dependencies annotated with develop = true will be translated.\n\n## Caveats\n\nCurrently, the plugin has only been verified to work with the poetry build and\npoetry export commands. Though theoretically it should work with any other\n(plugin's) command, your mileage may vary.\n\n## How it works\n\nIf enabled, this plugin registers itself to run before specific commands. When\nthese commands are run, it will modify the internal lock file representation\nthat Poetry uses, replacing the path dependency objects with regular\ndependencies.\n\nThe idea came from the Python Poetry Monorepo without Limitations blog post on\nMedium, which describes how a simple script can modify the pyproject.toml\nbefore a build step, resulting in named dependencies in the build artifacts.\nThis plugin only temporarily modifies the structure, in memory, just for the\ncommand you run it on.\n\n## Contributing\n\nWe recommend using PyEnv to select the right Python version:\n\n    \n    \n    pyenv local && poetry env use $(which python) make venv\n\nWe use pre-commit, which most recent version requires Python >=3.9, while this\nproject aims to work on Python >=3.8. Therefore install pre-commit on your\nsystem yourself (using Homebrew / PipX)\n\nTests can be run with make test, linting with make lint\n\n## License\n\nThis project is licensed under the terms of the MIT open-source license.\nPlease refer to MIT for the full terms.\n\n## About\n\nPoetry plugin for mono repos to replace path dependencies with named\ndependencies\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n14 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases 1\n\nv0.2.0 Latest\n\nApr 12, 2024\n\n## Packages 0\n\nNo packages published\n\n## Contributors 2\n\n  * gerbenoostra Gerben Oostra\n  * jakob-keller Jakob Keller\n\n## Languages\n\n  * Python 95.8%\n  * Makefile 4.2%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
