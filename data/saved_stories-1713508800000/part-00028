{"aid": "40080477", "title": "Garden-Path Incidents", "url": "https://blog.danslimmon.com/2024/04/18/garden-path-incidents-saying-hypotheses-out-loud/", "domain": "danslimmon.com", "votes": 1, "user": "nalgeon", "posted_at": "2024-04-18 20:37:56", "comments": 0, "source_title": "Garden-path incidents", "source_text": "Garden-path incidents \u2013 Dan Slimmon\n\nSkip to content\n\n# Dan Slimmon\n\nScientific incident response\n\n# Garden-path incidents\n\nOn 2024/04/182024/04/18 By Dan SlimmonIn incident-response, Problem-Solving\n\n### Barb\u2019s story\n\nIt\u2019s 12 noon on a Minneapolis Wednesday, which means Barb can be found at\nQuang. As the waiter sets down Barb\u2019s usual order (#307, the Bun Chay, extra\nspicy), Barb\u2019s nostrils catch the heavenly aroma of peanuts and scallions and\nred chiles. A wave of calm moves through her. Barb pulls her chair forward,\ncracks apart her wooden chopsticks, and...her pager goes off.\n\nAfter cursing under her breath, she dutifully reads the message:\n\n    \n    \n    Error rate for `environment:production' exceeds 100 msg/s\n\nWelp.\n\nBarb grabs one quick bite of spring roll as she flags down the waiter for a\nto-go box. Opening Slack on her phone, she declares an incident, joins the\nZoom call, and hurries back up Nicollet Ave. and around the corner, toward her\napartment.\n\nFive minutes later, finally sitting at her laptop, Barb is pretty sure she\nknows what the problem is. The error flooding the logs is:\n\n    \n    \n    object 'nil' has no method 'reimport!'\n\nThat looks like a straightforward app bug to her, and wouldn\u2019t you know it?\nRight before these errors started cropping up, there was a deploy to the Rails\napp by a newish dev named Alice, who according to her Slack profile, is based\nin Seattle. Barb asks this \u2018Alice\u2019 to join the incident Zoom.\n\n\u2013 Hi, this is Alice. What\u2019d I do? \u2013 Thanks for joining, Alice. I\u2019m incident\ncommander for this spike of production errors. It looks like you deployed a\nchange at 17:46 UTC and a bunch of errors started happening. Can you revert\nthat change please? \u2013 Sure, no problem. I\u2019ll put together the revert PR now.\n\n5 minutes later, Alice\u2019s PR is approved. Alice click\u2019s \u201cMerge.\u201d The pair begin\nthe anxious but familiar 15-minute wait for CI to pass, all the while greeting\nand informing the bewildered latecomers who straggle into the call.\n\n### Alice\u2019s story\n\nAlice stares blankly at the white rectangle on her monitor. She spent her\nfirst hour getting yesterday\u2019s frontend bugfixes pushed out, and now it\u2019s time\nto start her PowerPoint. She\u2019ll be working on this PowerPoint for the rest of\nthe morning, probably through lunch, and all afternoon.\n\nAlice shuts her eyes and heaves a dismal sigh. Alice fucking hates PowerPoint.\nBut she can\u2019t put it off anymore. So she dons her headphones, cracks her\nknuckles,, and... gets an urgent Slack message:\n\n> Morning, Alice \u2013 we\u2019ve got a production incident involving a spike of\n> errors, and it looks like it coincides with a deploy of yours. Can you jump\n> on https://zoom.globocorp.co/z/123456789... when you have a moment please?\n\nAs she waits for Zoom to load, Alice feels something almost like relief. At\nleast she doesn\u2019t have to work on that goddamn PowerPoint yet.\n\n\u2013 Hi, this is Alice. What\u2019d I do? \u2013 Thanks for joining, Alice. I\u2019m incident\ncommander for this spike of production errors. It looks like you deployed a\nchange at 16:46 UTC and a bunch of errors started happening. Can you revert\nthat change please? \u2013 Sure, no problem. I\u2019ll put together the revert PR now.\n\nAlice quickly whips up that PR and gets it approved. She spends the next 15\nminutes waiting for CI to pass, while absent-mindedly writing the first slide\nof her PowerPoint. By the time the tests are green, she has typed out and\ndeleted 4 different titles.\n\n### The real story\n\nThis incident seems to have gone about as well as it could, considering. Alice\nwas on the call within 7 minutes of the alert, and a PR was ready 5 minutes\nlater. It would be great if CI were faster, or even better if CI could be\nskipped for a revert. They\u2019ll talk about that at the post-mortem.\n\nHowever, nobody in the call yet knows what really happened. What really\nhappened is this:\n\n  * Alice\u2019s 16:46 UTC deploy was the first to pick up the latest Docker image.\n  * The new Docker image includes an update to a software dependency.\n  * The updated dependency has a bug that only shows up in production.\n\nBut instead of knowing any of that, Alice and Barb are sitting here for 15\nminutes waiting for CI to run, so they can deploy a fix that won\u2019t even work.\n\nThis is a garden-path incident. Barb has what she feels is a strong signal\nfrom the telemetry, which points toward a bug in Alice\u2019s code. Alice has what\nshe feels is a strong signal, which is that Barb seems very confident in her\nconclusion. But they\u2019ve been led up the garden path, and as a consequence,\nthis incident will run longer than it needs to.\n\n### How this could all have been avoided\n\nImagine instead, that Barb and Alice are both in the habit of saying their\nhypotheses out loud.\n\nWhen Alice joins the call, Barb instead says:\n\n\u2013 Thanks for joining, Alice. I\u2019m incident commander for this spike of\nproduction errors. It looks like you deployed a change at 16:46 UTC and a\nbunch of errors started happening. My hypothesis is that your change triggered\nthis spike of errors. Can you revert the change please?\n\nInstead of letting Alice infer that the cause of the error spike is already\nknown to be her deploy, Barb acknowledges the limits of her certainty. She has\na hypothesis, not a definitive diagnosis. This gives Alice the opportunity to\nrespond with something like:\n\n\u2013 Well, are the errors from the backend or the frontend? Because my change was\nfrontend-only.\n\nAnd just like that, Alice and Barb have stepped back from the garden path.\nInstead of waiting around for a useless CI cycle, they can continue straight\naway with diagnosis.\n\nNote that, even if Barb doesn\u2019t state her hypothesis, things will still be\nokay as long as Alice does:\n\n\u2013 Hi, this is Alice. What\u2019d I do? \u2013 Thanks for joining, Alice. I\u2019m incident\ncommander for this spike of production errors. It looks like you deployed a\nchange at 16:46 UTC and a bunch of errors started happening. Can you revert\nthat change please? \u2013 Sure, no problem. I\u2019ll put together the revert PR now.\nJust to be clear, the hypothesis is that my frontend-only changeset is somehow\ncausing these nil-has-no-method errors in the backend? \u2013 Uh, did you say\nfrontend-only?\n\nAgain, Barb and Alice have gotten themselves off the garden path. Which means\nthis technique \u2013 stating your hypothesis and asking for rule-outs \u2013 is\nsomething you can do unilaterally starting today to make your team better at\ntroubleshooting.\n\nAnother thing you can do to make your team better at troubleshooting is employ\nClinical Troubleshooting against your next head-scratcher of a bug.\n\n### Share this:\n\n  * Twitter\n  * Facebook\n\nLike Loading...\n\ndevopsopssretroubleshooting\n\n### Leave a comment Cancel reply\n\n# Top Posts\n\n  * Do-nothing scripting: the key to gradual automation\n  * Explaining the fire\n  * Clinical troubleshooting: diagnose any production issue, fast.\n  * Garden-path incidents\n  * Dead air on the incident call\n\n# Archives\n\n  * April 2024\n  * March 2024\n  * February 2024\n  * January 2024\n  * December 2023\n  * August 2023\n  * May 2023\n  * April 2023\n  * March 2023\n  * February 2023\n  * December 2022\n  * November 2022\n  * October 2022\n  * July 2022\n  * June 2022\n  * May 2022\n  * February 2022\n  * December 2021\n  * March 2021\n  * August 2019\n  * July 2019\n  * June 2019\n  * May 2019\n  * March 2019\n  * February 2019\n  * October 2017\n  * July 2017\n  * June 2017\n  * April 2017\n  * September 2016\n  * August 2016\n  * June 2016\n  * March 2016\n  * December 2015\n  * October 2015\n  * July 2015\n  * June 2015\n  * September 2014\n  * August 2014\n  * July 2014\n  * May 2014\n  * October 2013\n  * September 2013\n  * June 2013\n  * May 2013\n  * April 2013\n  * March 2013\n  * December 2012\n  * November 2012\n  * August 2012\n  * July 2012\n\n# Categories\n\n  * Descriptive engineering\n  * incident-response\n  * Mind hacks\n  * Monitoring\n  * Post-mortems\n  * Postgres\n  * Problem-Solving\n  * Statistics and probability\n  * Uncategorized\n  * Workflow\n\n# Meta\n\n  * Register\n  * Log in\n  * Entries feed\n  * Comments feed\n  * WordPress.com\n\nBlog at WordPress.com.\n\n## Discover more from Dan Slimmon\n\nSubscribe now to keep reading and get access to the full archive.\n\nContinue reading\n\n  * Comment\n  * Reblog\n  * Subscribe Subscribed\n\n    * Dan Slimmon\n    * Already have a WordPress.com account? Log in now.\n\n  * Privacy\n  *     * Dan Slimmon\n    * Customize\n    * Subscribe Subscribed\n    * Sign up\n    * Log in\n    * Copy shortlink\n    * Report this content\n    * View post in Reader\n    * Manage subscriptions\n    * Collapse this bar\n\n%d\n\n", "frontpage": false}
