{"aid": "40092479", "title": "Show HN: Lipupini, an OSS PHP Media Platform, has reached release cycle v5.x", "url": "https://github.com/lipupini/lipupini", "domain": "github.com/lipupini", "votes": 1, "user": "utdliyvlyuc", "posted_at": "2024-04-19 22:11:13", "comments": 0, "source_title": "GitHub - lipupini/lipupini: Lipupini is a public domain platform for organizing computer files like images, videos, sounds and writings that you might want to display under your domain on the Internet. Lipupini aims to support RSS and Fediverse protocols.", "source_text": "GitHub - lipupini/lipupini: Lipupini is a public domain platform for\norganizing computer files like images, videos, sounds and writings that you\nmight want to display under your domain on the Internet. Lipupini aims to\nsupport RSS and Fediverse protocols.\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nlipupini / lipupini Public\n\n  * Notifications\n  * Fork 1\n  * Star 15\n\nLipupini is a public domain platform for organizing computer files like\nimages, videos, sounds and writings that you might want to display under your\ndomain on the Internet. Lipupini aims to support RSS and Fediverse protocols.\n\nlipupini-demo.dup.bz/@example\n\n### License\n\nView license\n\n15 stars 1 fork Branches Tags Activity\n\nStar\n\nNotifications\n\n# lipupini/lipupini\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n6 Branches\n\n30 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nDanTest asks PHP about items per page from system/config/state.php to ...Apr\n19, 20245ffea80 \u00b7 Apr 19, 2024Apr 19, 2024\n\n## History\n\n573 Commits  \n  \n### bin\n\n|\n\n### bin\n\n| Test asks PHP about items per page from system/config/state.php to ...| Apr\n19, 2024  \n  \n### collection\n\n|\n\n### collection\n\n| Add rclone to list of file transfer solutions that support Lipupini| Apr 19,\n2024  \n  \n### module\n\n|\n\n### module\n\n| Update og:image tag with v5.x folder structure| Apr 19, 2024  \n  \n### system\n\n|\n\n### system\n\n| \\- Support 8K image sizes for large| Apr 19, 2024  \n  \n### test\n\n|\n\n### test\n\n| Test asks PHP about items per page from system/config/state.php to ...| Apr\n19, 2024  \n  \n### .editorconfig\n\n|\n\n### .editorconfig\n\n| \\- Updates to testing including bridge to PHP from JS tests (#12)| Apr 17,\n2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Updates to repository file tracking| Mar 27, 2024  \n  \n### LICENSE.md\n\n|\n\n### LICENSE.md\n\n| AI search is not reintroduced yet| Mar 23, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| Update /README.md and add one for system/config. After `composer ...| Apr\n18, 2024  \n  \n### justfile\n\n|\n\n### justfile\n\n| Update test action in justfile| Apr 19, 2024  \n  \n## Repository files navigation\n\n# Lipupini\n\n## Hypermedia Organization and Showcase System\n\n### Photo and Video gallery, Music player, Text document viewer\n\nLipupini is a public domain platform for organizing and displaying digital art\nsuch as images, videos, sounds and writings that you might want to display\nunder your domain on the Internet. Lipupini aims to support RSS and Fediverse\nprotocols.\n\n### Version 5.x\n\nStatus\n\nFeatures\n\nLipupini Docker Setup\n\nStarting Lipupini with PHP\n\nAdd Your Collection\n\nActivityPub Note\n\nThe Name\n\nDemo\n\nContributing\n\nAcknowledgements\n\n## Status\n\nFor displaying a media portfolio or posts on the Internet, despite currently\nlimited ActivityPub support the latest release of Lipupini is considered to be\nproduction-ready. The demo site is running the demo branch which is usually\nahead of the latest release.\n\n  1. Install dependencies and clone the repository to the latest release tag. While the demo site has maintained the same respository since version 1.x, avoid using the demo branch in production unless you are interested in keeping up with development and have a mechanism for rollbacks.\n  2. Add and initialize your collection, customize .lipupini/files.json with captions, and delete the example collection.\n  3. Ensure that your files display. If they don't, convert them to supported formats.\n  4. Deploy to a PHP server.\n\nUpdating Lipupini can be as simple as running git pull from your environment\ndepending on the setup.\n\n## Features\n\n  * Support for the following media file formats: AVIF, FLAC, GIF, JPG, PNG, M4A, MP3, MP4, Markdown, OGG Vorbis\n  * Allows subscribing to your content collection via RSS2.0.\n  * Search Lipupini accounts from other Fediverse platforms via the ActivityPub protocol.\n  * Supports translations/internationalization: See module/Lukinview/L18n\n  * Automatically fix image orientation and strip private metadata thanks to Imagine library\n  * With ffmpeg available and useFfmpeg enabled, video thumbnails and audio waveforms can be generated automatically.\n  * Supports both \"hidden\" and \"unlisted\" options in files.json\n  * Once dependencies are installed, Lipupini is designed to get up and running quickly.\n  * API for retrieving collection data. See module/Lipupini/Collection/ApiRequest.php\n  * Media collections are self-contained, served as they are on your filesystem. Lipupini-specific collection files are stored in a special .lipupini folder, making account collections completely portable.\n  * Module system paves a way for collaborative development.\n  * Docker support. See deployment instructions.\n  * Show an avatar PNG when searching from an external ActivityPub or RSS client.\n  * Lipupini manages to implement ActivityPub without a database. Certain inbox activities can be logged to your collection in raw JSON. See system/config/state.php for the option.\n  * Minimalist grid layout. Frontend is ready to be customized, or you can make an entirely new frontend module.\n  * On-demand caching system creates and serves static media files. Support for custom caching URL can facilitate the use of a CDN.\n  * Public domain source code is the most permissive license there is. You can do whatever you want with this thing. Please feel free to contribute back to upstream, post in discussions, etc. There is no obligation of any kind.\n\n## Starting the PHP Webserver\n\nMake sure all dependencies are installed first.\n\n  1. Clone the app and cd into the project root\n\n    \n    \n    git clone https://github.com/lipupini/lipupini.git cd lipupini\n\n  2. Install Composer dependencies and go back to project root. Composer should automatically create the config file after installing. See system/config/README.md\n\n    \n    \n    cd module/Lipupini composer install cd ../..\n\n  3. Navigate to the webserver document root and start PHP's built-in webserver. See module/Lukinview/README.md\n\n    \n    \n    cd module/Lukinview/webroot PHP_CLI_SERVER_WORKERS=2 php -S localhost:4000 index.php\n\n  4. Visit http://localhost:4000/@example\n\n## Add Your Collection\n\nSay you have a folder of awesome photos at /home/sally/Pictures/AwesomePhotos\n\nYour Lipupini installation is at /opt/webapp/lipupini\n\n  1. Take the photos from /home/sally/Pictures/AwesomeCollection and put them into the collection directory /opt/webapp/lipupini/collection/sally either by copying them:\n\n    \n    \n    cp -R /home/sally/Pictures/AwesomeCollection /opt/webapp/lipupini/collection/sally\n\nor symlinking them:\n\n    \n    \n    ln -s /home/sally/Pictures/AwesomeCollection /opt/webapp/lipupini/collection/sally\n\n  2. Initialize the .lipupini folder for the collection\n\n    \n    \n    cd /opt/webapp/lipupini bin/generate-keys.php sally bin/create-files-json.php sally\n\n  3. Save a file called avatar.png at /opt/webapp/lipupini/collection/sally/.lipupini/avatar.png\n\n  4. Edit the file at /opt/webapp/lipupini/collection/sally/.lipupini/files.json to add captions (this is optional)\n\n  5. Delete the example collection:\n\n    \n    \n    rm -r collection/example\n\n  6. Your collection should now be viewable at http://localhost:4000/@sally\n\nIn addition to copying or symlinking, see collection/README.md#vision for\nideas on other ways to keep these directories in sync.\n\n## ActivityPub Note\n\nActivityPub transactions should occur via HTTPS per spec. https://ngrok.com\ncan be used to get up and running quickly for development.\n\nFor example, after starting Lipupini you can run this command:\n\n    \n    \n    ngrok http 4000\n\nContinuing with the example above in \"Add Your Collection,\" if your Ngrok URL\nbecomes https://f674-73.ngrok-free.app, you should then be able to query\n@sally@f674-73.ngrok-free.app from another Fediverse client once the\ncollection is initialized.\n\nUsing Ngrok, with an upgraded plan you can setup a fairly restrictive port\nfirewall, configure it to run on startup, and reliably host any domain with\nHTTPS.\n\n## The Name\n\n\"Lipupini\" is a word formed by combining other words (portmanteau), and \"lipu\npini\" in this context translates to \"past document\" in Toki Pona core.\nLipupini is for organizing computer files like images, videos, sounds and\nwritings that you might want to display under your domain on the Internet.\n\n## Demo\n\nHere is what it can look like so far: https://lipupini-demo.dup.bz/@example\n\nThough ActivityPub implementation is currently limited, the demo is searchable\nin properly-configured Fediverse clients @example@lipupini-demo.dup.bz\n\nNOTE: Please use activitypub.academy Mastondon server for testing, as this is\na test server.\n\nThe demo is the demo branch running on Apache2. If you already have Apache2\nconfigured to serve PHP, you can install Composer dependencies and point the\nvirtual host's DocumentRoot to webroot and it should \"just work.\"\n\n## Contributing\n\nYou are welcome to fork it, change it, add modules! Please don't hesitate to\nmake a PR that includes your own modules - it could be shipped with or\nintegrated into core.\n\nI hope that the module architecture makes for a good workflow, especially\nbeing open to merging new modules. In theory, modules could just as easily be\nComposer packages and not have a module directory at all. The current\narchitecture can still work seamlessly with the Composer pattern as well.\n\nEmail apps [at] dup.bz if you'd like a point of contact or post in\ndiscussions! Please reach out if you begin to find any aspect frustrating or\nfeel that it should be done in a different way.\n\nIf you want to use Lipupini for your artist portfolio or business website, I\nwill support your effort.\n\n## Acknowledgements\n\nVanJS: https://vanjs.org\n\nMarkdown parser: https://parsedown.org\n\nImage processor: https://github.com/php-imagine/Imagine\n\nArrow icons: https://www.svgrepo.com/author/Pictogrammers\n\nActivityPub inspiration: @dansup@pixelfed.social & Landrok's ActivityPub\nlibrary\n\n## TODO\n\n  * Add option for favicon in collection .lipupini folder\n  * bin/generate-files-json.php\n\n    * Make recursive\n    * Do not overwrite entries, or add option\n    * Read EXIF data if available for setting a default date\n  * Something else besides exception when file in files.json does not exist in collection\n  * Create script to normalize file and directory user/group/permissions\n  * Check on cross-platform compatibility, MacOS and Windows with and without Docker. While only tested on Linux, I believe it will work on all three OSes including ffmpeg interfaces as long as symlinking is supported.\n  * Look into:\n\n    * https://indieweb.org/Webmention\n    * https://indieweb.org/Microsub\n    * https://indieweb.org/Micropub\n    * https://atproto.com\n    * https://micropub.rocks\n  * Detect readline support in a custom confirm routine. If readline is not available a 10-second timer will be indicated that can be cancelled with CTRL+C.\n  * Create a mechanism for writing to a collection's files.json\n\n    * Could start with a CLI tool, e.g. bin/caption.php <collection> <filename> <caption>\n    * Would like to try creating a desktop tool\n  * ActivitPub: Do not let same account try to follow more than once when already logged previous follow\n  * Look into caching headers\n  * If a photo is taking a while to upload and a browser pageload is triggered with media processor requests in the request queue, the thumbnail version will likely only show a partial image.\n\n    * Removing all media processors from the HTTP request queue and only using bin/process-media.php after uploading is a solution.\n    * File transfer clients that use temporary files during transfer are a solution.\n    * Adding a file watcher daemon or transfer queue could help with an alternative solution.\n    * I would like to know if there is a way using pure PHP to detect if a file is still uploading via SFTP.\n\n## About\n\nLipupini is a public domain platform for organizing computer files like\nimages, videos, sounds and writings that you might want to display under your\ndomain on the Internet. Lipupini aims to support RSS and Fediverse protocols.\n\nlipupini-demo.dup.bz/@example\n\n### Topics\n\naudio markdown rss php website images photo-gallery composer-project videos\nactivitypub fediverse\n\n### Resources\n\nReadme\n\n### License\n\nView license\n\nActivity\n\n### Stars\n\n15 stars\n\n### Watchers\n\n0 watching\n\n### Forks\n\n1 fork\n\nReport repository\n\n## Releases 30\n\n5.2.2 Latest\n\nApr 19, 2024\n\n\\+ 29 releases\n\n## Packages 0\n\nNo packages published\n\n## Contributors 2\n\n  * lipupini Instalution\n  * jchook Wes Roberts\n\n## Languages\n\n  * JavaScript 91.9%\n  * PHP 5.5%\n  * CSS 2.1%\n  * TypeScript 0.5%\n  * Just 0.0%\n  * Dockerfile 0.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
