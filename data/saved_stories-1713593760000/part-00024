{"aid": "40091015", "title": "Graphics Offload Revisited", "url": "https://blog.gtk.org/2024/04/17/graphics-offload-revisited/", "domain": "gtk.org", "votes": 1, "user": "nolist_policy", "posted_at": "2024-04-19 19:26:28", "comments": 0, "source_title": "Graphics offload revisited", "source_text": "Graphics offload revisited \u2013 GTK Development Blog\n\nSkip to content\n\nGTK Development Blog\n\nAll things GTK\n\n# Graphics offload revisited\n\nWe first introduced support for dmabufs and graphics offload last fall, and it\nis included in GTK 4.14. Since then, some improvements have happened, so it is\ntime for an update.\n\n### Improvements down the stack\n\nThe GStreamer 1.24 release has improved support for explicit modifiers, and\nthe GStreamer media backend in GTK has been updated to request dmabufs from\nGStreamer.\n\nAnother thing that happens on the GStreamer side is that dmabufs sometimes\ncome with padding: in that case GStreamer will give us a buffer with a\nviewport and expect us to only show that part of the buffer. This is sometimes\nnecessary to accommodate stride and size requirements of hardware decoders.\n\nGTK 4.14 supports this when offloading, and only shows the part of the dmabuf\nindicated by the viewport.\n\n### Improvements inside GTK\n\nWe\u2019ve merged new GSK renderers for GTK 4.14. The new renderers support dmabufs\nin the same way as the old gl renderer. In addition, the new Vulkan renderer\nproduces dmabufs when rendering to a texture.\n\nIn GTK 4.16, the GtkGLArea widget will also provide dmabuf textures if it can,\nso you can put it in a GtkGraphicsOffload widget to send its output directly\nto the compositor.\n\nYou can see this in action in the shadertoy demo in gtk4-demo in git main.\n\nShadertoy demo with golden outline around offloaded graphics\n\n### Improved compositor interaction\n\nOne nice thing about graphics offload is that the compositor may be able to\npass the dmabuf to the KMS apis of the kernel without any extra copies or\ncompositing. This is known as direct scanout and it helps reduce power\nconsumption since large parts of the GPU aren\u2019t used.\n\nThe compositor can only do this if the dmabuf is attached to a fullscreen\nsurface and has the right dimensions to cover it fully. If it does not cover\nit fully, the compositor needs some assurance that it is ok to leave the\noutside parts black.\n\nOne way for clients to provide that assurance is to attach a specially\nconstructed black buffer to a surface below the one that has the dmabuf\nattached. GSK will do this now if it finds black color node in the rendernode\ntree, and the GtkGraphicsOffload widget will put that color there if you set\nthe \u201cblack-background\u201d property. This should greatly increase the chances that\nyou can enjoy the benefits of direct scanout when playing fullscreen video.\n\nOffloaded content with fullscreen black background\n\nIn implementing this for GTK 4.16, we found some issues with mutter\u2019s support\nfor single-pixel buffers, but these have been fixed quickly.\n\nTo see graphics offload and direct scanout in action in a GTK4 video player,\nyou can try the Light Video Player.\n\nIf you want to find out if graphics offload works on your system or debug why\nit doesn\u2019t, this recent post by Benjamin is very helpful.\n\n### Summary\n\nGTK 4 continues to improve for efficient video playback and drives\nimprovements in this area up and down the stack.\n\nA big thank you for pushing all of this forward goes to Robert Mader.\n\nAuthor mclasenPosted on April 17, 2024April 17, 2024Categories Uncategorized\n\n## What is GTK?\n\nGTK is a toolkit for creating graphical user interfaces. Offering a complete\nset of widgets, GTK is suitable for projects ranging from small one-off tools\nto complete application suites.\n\nGTK is the core of the GNOME development platform, but it can also be used to\nwrite applications for other Linux environments, as well as applications\ntargeting Microsoft Windows and Apple macOS.\n\n## Support GTK\n\nBecome a Friend of GNOME and support GTK development!\n\n## Get Involved\n\nJoin the project\n\n## Web & Social\n\n## Recent Posts\n\n## Archives\n\nGTK Development Blog Proudly powered by WordPress\n\n", "frontpage": false}
