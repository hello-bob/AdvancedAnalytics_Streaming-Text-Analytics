{"aid": "40216283", "title": "Magic Machines for CI/CD Testing", "url": "https://world.hey.com/dhh/magic-machines-10c534bd", "domain": "world.hey.com", "votes": 1, "user": "transpute", "posted_at": "2024-04-30 21:00:49", "comments": 0, "source_title": "Magic machines", "source_text": "Magic machines\n\nDavid Heinemeier Hansson\n\nApril 30, 2024\n\n## Magic machines\n\nThere's an interesting psychological phenomenon where programmers tend to\nascribe more trust to computers run by anyone but themselves. Perhaps it's a\ncorollary to imposter syndrome, which leads programmers to believe that if a\ncomputer is operated by AWS or SaaS or literally anyone else, it must be more\nsecure, better managed, less buggy, and ultimately purer. I wish that was so,\nbut there are no magic machines and no magic operators. Just the same kind of\npotentially faulty bits and brains.\n\nA great example of this was the feedback to our declaration that we're bring\ncontinuous integration back to developer machines. The most common objection\nwas to invoke \"it works on my machine\", as to imply that developer machines\nwere somehow a different breed than the ones running in the cloud or the data\ncenter. They really aren't! The computer running tests remotely is indeed just\nthat: Another computer. It isn't magical, and it's no less prone to be reliant\non unaccounted for dependencies or environmental factors.\n\nIn fact, when it comes to testing, it's a feature not a bug to have the suite\nrun on multiple machines. It's like an extra fuzzy check that will uncover\nundeclared dependencies, and help you produce a more resilient system. Because\neven the best CI setup isn't production. And just because it works in CI\ndoesn't mean it'll be free of issues in production.\n\nWhich leads us to the whole point of testing systems in the first place: It's\nabout confidence, not certainty. The road to programmer misery is paved with\ndelusional aspirations that you can ever be fully, truly certain that any\nsufficiently complicated system will ever work as intended in production. All\nyou have is degrees of confidence to trade-off against increasingly cumbersome\nprotocols and procedures. There's no such thing as 100% test coverage that's\nmeaningful and achievable at the same time.\n\nAnd it's the fundamental lack of confidence in their own abilities that lead\nprogrammers to think that the people operating their cloud computers are so\nmuch smarter or better than they are. They rarely are. They're just hidden,\nand it's that opaqueness that false implies a higher competence. If only you\nknew what kind of frazzled mechanical turk it takes to run most cloud\ninstitutions or SaaS operations, you wouldn't be so quick to doubt your own\nabilities.\n\nThere's no magic class of computers and no magic class of computing clerics.\n\"It works on my computer\" is just the midwit version of \"it works on THAT\ncomputer\". It's all just computers. You can figure them out, you can make them\ndance.\n\nAbout David Heinemeier Hansson\n\nMade Basecamp and HEY for the underdogs as co-owner and CTO of 37signals.\nCreated Ruby on Rails. Wrote REWORK, It Doesn't Have to Be Crazy at Work, and\nREMOTE. Won at Le Mans as a racing driver. Fought the big tech monopolies as\nan antitrust advocate. Invested in Danish startups.\n\nSent to the world with HEY\n\n", "frontpage": false}
