{"aid": "40176031", "title": "How Not to Release Historic Source Code", "url": "https://www.os2museum.com/wp/how-not-to-release-historic-source-code/", "domain": "os2museum.com", "votes": 33, "user": "zdw", "posted_at": "2024-04-27 00:46:49", "comments": 9, "source_title": "How Not To Release Historic Source Code", "source_text": "How Not To Release Historic Source Code | OS/2 Museum\n\nOS/2 Museum\n\nOS/2, vintage PC computing, and random musings\n\nSkip to content\n\n  * Home\n  * About\n\n    * Wanted List\n  * OS/2 History\n\n    * OS/2 Beginnings\n    * OS/2 1.0\n    * OS/2 1.1\n    * OS/2 1.2 and 1.3\n    * OS/2 16-bit Server\n    * OS/2 2.0\n    * OS/2 2.1 and 2.11\n    * OS/2 Warp\n    * OS/2 Warp, PowerPC Edition\n    * OS/2 Warp 4\n    * OS/2 Timeline\n    * OS/2 Library\n\n      * OS/2 1.x SDK\n      * OS/2 1.x Programming\n      * OS/2 2.0 Technical Library\n    * OS/2 Videos, 1987\n  * DOS History\n\n    * DOS Beginnings\n    * DOS 1.0 and 1.1\n    * DOS 2.0 and 2.1\n    * DOS 3.0, 3.1, and 3.2\n    * DOS 3.3\n    * DOS 4.0\n    * DOS Library\n  * NetWare History\n\n    * NetWare Timeline\n    * NetWare Library\n  * Windows History\n\n    * Windows Library\n  * PC UNIX History\n\n    * Solaris 2.1 for x86\n\n\u2190 The Future That Never Was\n\n# How Not To Release Historic Source Code\n\nPosted on April 26, 2024 by Michal Necasek\n\nThis is how to not do it:\n\nGitHub\n\nDon\u2019t get me wrong, it\u2019s absolutely brilliant that Microsoft was able to\nrelease a fairly complete (minus DOSSHELL) source code for MS-DOS 4.00 or 4.01\n(see below). As much as it was hated, DOS 4.0 was an important milestone and\nDOS 5.0 was much more similar to DOS 4.0 than not. This source code will be an\nexcellent reference of modern-ish DOS until Microsoft officially releases the\nlong ago leaked MS-DOS 6.0 source code. The source code includes all required\nbuild tools, which makes building it (compared to many other source releases)\nextremely easy.\n\nBut please please don\u2019t mutilate historic source code by shoving it into\n(stupid) git.\n\nFirst of all, git does not preserve timestamps, which causes irreversible\ndamage. Knowing when a source file was last modified is valuable information.\n\nSecond of all, the people releasing the source code clearly thought, hey, it\u2019s\nsource code, let\u2019s shove it into git, what could possibly go wrong. Well, this\nis what could go wrong:\n\nNope, not building\n\nFor practical purposes, old source files are not text files. They are binary\nfiles, and must be preserved without modification. It is not OK to take an old\nsource file and convert it to UTF-8. For one thing, UTF-8 didn\u2019t even exist in\nthe times of MASM 5.10 and Microsoft C 5.1, of course old tools can\u2019t deal\nwith it!\n\nThe above problem was most likely caused by taking a source line using\ncodepage 437 characters and badly converting them to UTF-8. That made the\nsource line too long, past the circa 512 byte line length limit of MASM.\n\nIn the case of getmsg.asm it\u2019s easy enough to manually delete the too long\nline in a comment. But it\u2019s much worse with the src\\SELECT\\USA.INF file. Here,\nthe misguided use of git not only made some comment lines too long for MASM,\nbut it also actively destroyed the original source code. The byte arrays\ndefined near labels PANEL36 and PANEL37 got turned into junk, or more\naccurately into a sequence of Unicode replacement characters.\n\nThis blunder is all the more regrettable because similar problems affected the\nprevious GW-BASIC source release (very old MASM versions cannot deal with UNIX\nstyle line endings).\n\nThe timestamp destruction makes it harder to pin down what the source code\nactually is. The DOS 4.0 release was very confused because IBM first released\nPC DOS 4.0 in June 1988 (files dated 06/17/1988), but soon followed with a\nquiet update (files dated 08/03/1988) where the disks were labeled 4.01 but\nthe software still reported itself as 4.00.\n\nThe just released source code almost certainly corresponds to this quiet 4.01\nupdate. At least one source comment implies 8/5/88 modification, i.e. August\n1988.\n\nAt least the core files (IO.SYS, MSDOS.SYS, COMMAND.COM, FORMAT.COM,\nFDISK.SYS, SYS.COM) built from the source release are a perfect match for the\nfiles on \u201cMS-DOS 4.00\u201d disk images that can be found on winworldpc.\n\nSaid files are dated 10/06/1988 and DOS reports itself as 4.00. However, the\nreleased source code, in the file SETENV.BAT, includes the following line:\n\n    \n    \n    echo setting up system to build the MS-DOS 4.01 SOURCE BAK...\n\nThis further suggests that the source code in fact corresponds to the quiet\nupdate of DOS 4.01 and not to the original IBM DOS 4.00 from June 1988, which\nto the best of my knowledge was never available from Microsoft. After a few\nmonths, perhaps in late 1988 Microsoft changed DOS to report itself as 4.01\nbecause\u2014unsurprisingly\u2014the 4.00 version number was confusing customers.\n\nAs a historic footnote, BAK stood for Binary Adaptation Kit. MS-DOS OEMs would\nreceive the BAK to adapt to their hardware. However, most OEMs did not receive\nthe full source code, only the code to components that likely needed\nmodification, such as IO.SYS.\n\nBut the fact that the \u201cSource BAK\u201d was something that Microsoft shipped to\n(select lucky) customers is actually great\u2014since it\u2019s supposed to be built by\n3rd parties, it includes all of the required tools and is in fact quite easy\nto build.\n\n### Executive Summary\n\nIt\u2019s terrific that the source code for DOS 4.00/4.01 was released! But don\u2019t\nexpect to build the source code mutilated by git without problems.\n\nHistoric source code should be released simply as an archive of files, ZIP or\ntar or 7z or whatever, with all timestamps preserved and every single byte\nkept the way it was. Git is simply not a suitable tool for this.\n\nThis entry was posted in Development, DOS, Source code. Bookmark the\npermalink.\n\n\u2190 The Future That Never Was\n\n### 24 Responses to How Not To Release Historic Source Code\n\n  1. starfrost says:\n\nApril 26, 2024 at 7:00 pm\n\nI worked with MS to get this released. If you really want I can probably get\nthe original ZIP (I don\u2019t know about timestamps, but in ASCII).\n\n  2. starfrost says:\n\nApril 26, 2024 at 7:01 pm\n\nThe reason I cannot do timestamps is because data protection law mandates\nanonymisation of source files, at least that is the policy.\n\nNote that this is far better than the CHM \u201cpreservation\u201d.\n\n  3. Michal Necasek says:\n\nApril 26, 2024 at 7:12 pm\n\nDo you know how the files survived? On floppies or on some hard disk backup?\nIf on disks, then releasing the disk images would be terrific. But really\nanything that builds without having to be edited would be good.\n\nThere\u2019s probably some way to fix the files in git as well? As I said they\u2019re\nnot plain ASCII (most are, but not all of them) and they must not be converted\nto UTF-8.\n\n  4. Michal Necasek says:\n\nApril 26, 2024 at 7:16 pm\n\nLet\u2019s hear it for idiotic corporate policies! Obviously not your fault.\n\nBut I have to point out that in the Multitasking DOS release, there are source\nfiles on a floppy image, with original timestamps...\n\nYes, the CHM release of DOS source code was... not ideal.\n\n  5. Michal Necasek says:\n\nApril 26, 2024 at 7:18 pm\n\nI should say that except for the git mutilation, the DOS 4.0 source code seems\nto be complete (no DOS shell, but that never seems to have been part of it)\nand easy to build. In comparison, building the DOS 2.x source code was hell\nbecause I first had to find just the right tools. Here it\u2019s all included, and\nthe resulting binaries match what Microsoft released in 1988!\n\n  6. starfrost says:\n\nApril 26, 2024 at 7:40 pm\n\nYeah, I\u2019m going to look into it. Sorry, I got a bit annoyed. I would prefer to\nemail you about this if that\u2019s okay? Just email me (surely you can view\nemails?\n\nI don\u2019t know how they survived.\n\n  7. Random says:\n\nApril 26, 2024 at 7:44 pm\n\nI\u2019m glad it\u2019s not just me! I\u2019ve been trying to chase down errors building\nthings with the creeping feeling that I was going to need to do some sort of\nunix2dos magic on the entire source tree.\n\nNot. Fun.\n\nWhat you wrote confirmed my fears. I am going to do a hail mary and install\nvisual studio on a VM and see if I can import the git tree with windows line\nendings (I vaguely remember that being an option but I\u2019m not sure and could\neasily be wrong).\n\nOf course, based on what you\u2019re saying there\u2019s deeper problems than that...\n\nI\u2019ve been able to build (but not test) a lot of the utilities; I\u2019m not sure if\nemm386.sys is going to run or not, for instance; but it builds. Command.com\nbuilds and runs. So far the problems I\u2019m having are with the kernel files and\nfdisk...but I\u2019m not done going through the tree and trying to build things\nmanually, either.\n\n  8. Random says:\n\nApril 26, 2024 at 7:47 pm\n\nAdditional note; I got it to build in dosbox-x on windows 11, playing around\nwith mounting folders as \u201cc\u201d and then editing setenv.bat as needed. I didn\u2019t\nhave a lot of luck building it in native MS-DOS (4, natch) in 86box and\nhaven\u2019t tried much of anything else yet.\n\n  9. felsqualle says:\n\nApril 26, 2024 at 7:57 pm\n\nThank you for covering this! I\u2019d love to see a release with sources that work\nwithout modifications \u2013 a clean ZIP file with proper encoding would be so\namazing...\n\n  10. Morty says:\n\nApril 26, 2024 at 8:26 pm\n\nCool! Just wondering about MS-DOS 6 as referenced here. This was my first DOS\n(family PC, xmas 1993!). Does anyone know if the source leak included the\nsource for the newer more advanced utils like memmaker, dblspace, defrag etc?\nI seem to recall someone mentioning they were not.\n\n  11. Derek says:\n\nApril 26, 2024 at 8:38 pm\n\nThe only loss which should be attributed to git is the loss of per-file\ntimestamps.\n\nAny \u2018corruption\u2019 of the contents is down to the user of git.\n\nI\u2019ve got various old DOS based source, with CP-437 chars etc, and CRLF line\nendings in git repo\u2019s without any issue; also some associated binaries. So if\nthere is bad UTF-8 encoding of the files, that is down to the person driving\ngit.\n\n  12. Michal Necasek says:\n\nApril 26, 2024 at 8:49 pm\n\nThe git defaults are what they are, so the \u201cperson driving git\u201d needs to know\nexactly which files need what treatment. In this case line endings are not an\nissue I believe, but the garbled files where the source files were (probably)\nCP 437 encoded are.\n\n  13. Michal Necasek says:\n\nApril 26, 2024 at 8:50 pm\n\nIt did not, and I\u2019m not entirely clear on how much source code Microsoft had,\nsince those were all licensed from 3rd parties.\n\n  14. Michal Necasek says:\n\nApril 26, 2024 at 8:51 pm\n\nThe line endings aren\u2019t an issue, MASM 5.10/MS C 5.1 can deal with those. Non-\nASCII characters in the original source files are the problem.\n\nI was able to build all of it, just copied it over to a VM running PC DOS 2000\nand ran the build there. I did not bother properly fixing the SELECT source\nfile.\n\n  15. Jeff Wilcox says:\n\nApril 26, 2024 at 9:55 pm\n\nThanks for the feedback. We\u2019re learning a lot here... and some of our other\nreleases such as the 3D Movie Maker we sort of knew would not be buildable\nwithout some work, but didn\u2019t even think about this in the hurry to go publish\nonce it was ready.\n\nWe liked GitHub here to make browsing it all so accessible on the web, and\nthere\u2019s definitely some conflict between pure software preservation, what\nredaction is important or not, and how much time to invest in providing a\ngreat buildable experience as-is or making it more of ... a project, sorry.\n\nIf anyone finds a straightforward set of fixes, or some scripts or patches,\nhappy to revisit in a few weeks and see what we could do. Feel free to ping\njwilcox at microsoft.\n\nThanks for the post and the feedback, we\u2019re learning with each project.\n\n  16. Morty says:\n\nApril 26, 2024 at 10:38 pm\n\nYes it seems a lot of those advanced utils were licensed: Dblspace from\nvertisoft, msav from Central point, defrag seemed to me at the time to be a\ncut-down version of speeddisk but I haven\u2019t seen this confirmed. Memmaker\ndidn\u2019t look like other utils I have seen, but could be as well. However, I\ndon\u2019t know if this means Microsoft didn\u2019t have the source code and could\nindependently build the software. After all, e.g. Doublespace was deeply\nintegrated. But there could be IP reasons why they can\u2019t release the source\neven now. On the other hand, if the current MS-DOS 6 out there is a leak, this\nwouldn\u2019t necessarily apply.\n\n  17. digital archivist says:\n\nApril 26, 2024 at 10:46 pm\n\nThank you Mr. Michal Necasek saying loud out what a lot of us are thinking\ninside.\n\n  18. r34jinkai says:\n\nApril 26, 2024 at 11:03 pm\n\n@Morty. Leaked DOS6 source is from the v6.21, which has all the 3rd party\ncomponents removed for audit review as part of the Stac Electronics vs\nMicrosoft lawsuit (defrag, scandisk and dblspace are tied as all them need to\nknow the internal structures of the on-disk compression format). Also, DEFRAG\nis licensed from Symantec and shipped as OBJ files so not much to see there.\n\nMemmaker, Undelete, MSAV and Backup were licensed from Central Point and also\nshipped as OBJs. And since this is DOS 6.21, not .22, DriveSpace isn\u2019t still\nthere (As an interesting trivia, leaked NT4 source actually includes an NT FS\ndriver for Doublespace CVFs, but it is opted out and never compiled, hidden in\nthe NTOS tree as source detritus).\n\n  19. Tuomas Tynkkynen says:\n\nApril 26, 2024 at 11:19 pm\n\nAccording to HN comments, some of the source was even censored a bit as a hot-\nfix (original contained a not-so-nice comment about Tim Paterson):\nhttps://news.ycombinator.com/item?id=40163766\n\n  20. Derek says:\n\nApril 26, 2024 at 11:20 pm\n\nThe defaults for git (the CLI tools) have always been \u201cstore a binary blob\u201d \u2013\nuninterpreted. See below for CLI proof. Now it may be that some other tool was\nused to generate the git repo, in which case that tool (or the user driving\nit) is at fault.\n\n$ mkdir GG-test $ cd GG-test $ printf \u201cHello\\xC1\\r\\nWor\\xC2ld\\r\\n\u201d > test.txt $ hexdump -C test.txt 00000000 48 65 6c 6c 6f c1 0d 0a 57 6f 72 c2 6c 64 0d 0a |Hello...Wor.ld..| 00000010 $ git init . Initialised empty Git repository in /home/derek/GG-test/.git/ $ git add * $ git commit -m \u2018Initial\u2019 [master (root-commit) bb3afe3] Initial 1 file changed, 2 insertions(+) create mode 100644 test.txt $ git show HEAD:test.txt | hexdump -C 00000000 48 65 6c 6c 6f c1 0d 0a 57 6f 72 c2 6c 64 0d 0a |Hello...Wor.ld..| 00000010 $ rm test.txt $ ls $ git reset \u2013hard HEAD HEAD is now at bb3afe3 Initial $ ls test.txt $ hexdump -C test.txt 00000000 48 65 6c 6c 6f c1 0d 0a 57 6f 72 c2 6c 64 0d 0a |Hello...Wor.ld..| 00000010\n\n  21. ecm says:\n\nApril 26, 2024 at 11:24 pm\n\nThe line endings actually were problematic for nosrvbld.exe and for exe2bin\nwhich has its stdin redirected to supply a default answer to a prompt for a\nrelocation segment (done using int 21h service 0Ah).\n\n  22. Michal Necasek says:\n\nApril 26, 2024 at 11:44 pm\n\nI haven\u2019t noticed those problems (probably wasn\u2019t looking hard enough) but...\nyes, CRLF line ending are the safe option. Many DOS-based tools can work with\nUNIX line endings, but not all. I\u2019m sure the original files all used CRLF.\n\n  23. Michal Necasek says:\n\nApril 27, 2024 at 12:32 am\n\nMemmaker was from Helix (Netroom).\n\n  24. OBattler says:\n\nApril 27, 2024 at 2:07 am\n\n1\\. To respond to a comment above, no, the leaked MS-DOS 6.0 source code is\nnot from 6.21, but from 6.0 beta build 0204. There is even a compiled\nCOMMAND.COM in it with that build number.\n\n2\\. There is a version confusion here. MS-DOS 4.00 from October 1988 is not PC\nDOS 4.00 from June 1988. It\u2019s actually based on PC DOS 4.01 but for some\nreason, Microsoft decided to reset the version number back to 4.00 and release\nit as that before releasing their own MS-DOS 4.01.\n\n### Leave a Reply\n\nThis site uses Akismet to reduce spam. Learn how your comment data is\nprocessed.\n\n  * ### Archives\n\n    * April 2024\n    * March 2024\n    * February 2024\n    * January 2024\n    * October 2023\n    * September 2023\n    * August 2023\n    * July 2023\n    * June 2023\n    * May 2023\n    * April 2023\n    * March 2023\n    * January 2023\n    * December 2022\n    * November 2022\n    * October 2022\n    * September 2022\n    * July 2022\n    * June 2022\n    * May 2022\n    * April 2022\n    * March 2022\n    * February 2022\n    * January 2022\n    * December 2021\n    * November 2021\n    * October 2021\n    * September 2021\n    * August 2021\n    * July 2021\n    * June 2021\n    * May 2021\n    * April 2021\n    * March 2021\n    * February 2021\n    * January 2021\n    * December 2020\n    * November 2020\n    * October 2020\n    * September 2020\n    * August 2020\n    * July 2020\n    * June 2020\n    * May 2020\n    * April 2020\n    * March 2020\n    * February 2020\n    * January 2020\n    * December 2019\n    * November 2019\n    * October 2019\n    * September 2019\n    * August 2019\n    * July 2019\n    * June 2019\n    * May 2019\n    * April 2019\n    * March 2019\n    * February 2019\n    * January 2019\n    * December 2018\n    * November 2018\n    * October 2018\n    * August 2018\n    * July 2018\n    * June 2018\n    * May 2018\n    * April 2018\n    * March 2018\n    * February 2018\n    * January 2018\n    * December 2017\n    * November 2017\n    * October 2017\n    * August 2017\n    * July 2017\n    * June 2017\n    * May 2017\n    * April 2017\n    * March 2017\n    * February 2017\n    * January 2017\n    * December 2016\n    * November 2016\n    * October 2016\n    * September 2016\n    * August 2016\n    * July 2016\n    * June 2016\n    * May 2016\n    * April 2016\n    * March 2016\n    * February 2016\n    * January 2016\n    * December 2015\n    * November 2015\n    * October 2015\n    * September 2015\n    * August 2015\n    * July 2015\n    * June 2015\n    * May 2015\n    * April 2015\n    * March 2015\n    * February 2015\n    * January 2015\n    * December 2014\n    * November 2014\n    * October 2014\n    * September 2014\n    * August 2014\n    * July 2014\n    * June 2014\n    * May 2014\n    * April 2014\n    * March 2014\n    * February 2014\n    * January 2014\n    * December 2013\n    * November 2013\n    * October 2013\n    * September 2013\n    * August 2013\n    * July 2013\n    * June 2013\n    * May 2013\n    * April 2013\n    * March 2013\n    * February 2013\n    * January 2013\n    * December 2012\n    * November 2012\n    * October 2012\n    * September 2012\n    * August 2012\n    * July 2012\n    * June 2012\n    * May 2012\n    * April 2012\n    * March 2012\n    * February 2012\n    * January 2012\n    * December 2011\n    * November 2011\n    * October 2011\n    * September 2011\n    * August 2011\n    * July 2011\n    * June 2011\n    * May 2011\n    * April 2011\n    * March 2011\n    * January 2011\n    * November 2010\n    * October 2010\n    * August 2010\n    * July 2010\n\n  * ### Categories\n\n    * 286\n    * 386\n    * 386MAX\n    * 3Com\n    * 3Dfx\n    * 486\n    * 8086/8088\n    * Adaptec\n    * AGP\n    * AMD\n    * AMD64\n    * Apple\n    * Archiving\n    * Assembler\n    * ATi\n    * BIOS\n    * Books\n    * Borland\n    * BSD\n    * Bugs\n    * BusLogic\n    * C\n    * C&T\n    * CD-ROM\n    * Cirrus Logic\n    * CompactFlash\n    * Compaq\n    * Compression\n    * Computing History\n    * Conner\n    * Corrections\n    * CP/M\n    * Creative Labs\n    * Crystal Semi\n    * Cyrix\n    * DDR RAM\n    * Debugging\n    * DEC\n    * Development\n    * Digital Research\n    * Documentation\n    * DOS\n    * DOS Extenders\n    * Dream\n    * E-mu\n    * Editors\n    * EISA\n    * Ensoniq\n    * ESDI\n    * Ethernet\n    * Fakes\n    * Fixes\n    * Floppies\n    * Graphics\n    * Hardware Hacks\n    * I18N\n    * IBM\n    * IDE\n    * Intel\n    * Internet\n    * Keyboard\n    * Kryoflux\n    * Kurzweil\n    * LAN Manager\n    * Legal\n    * Linux\n    * MCA\n    * Microsoft\n    * MIDI\n    * NetWare\n    * Networking\n    * NeXTSTEP\n    * NFS\n    * Novell\n    * NT\n    * OS X\n    * OS/2\n    * PC architecture\n    * PC hardware\n    * PC history\n    * PC press\n    * PCI\n    * PCMCIA\n    * Pentium\n    * Pentium 4\n    * Pentium II\n    * Pentium III\n    * Pentium Pro\n    * Plug and Play\n    * PowerPC\n    * Pre-release\n    * PS/2\n    * QNX\n    * Quantum\n    * Random Thoughts\n    * RDRAM\n    * Roland\n    * Ryzen\n    * S3\n    * SCO\n    * SCSI\n    * Seagate\n    * Security\n    * Site Management\n    * SMP\n    * Software Hacks\n    * Solaris\n    * Sound\n    * Sound Blaster\n    * Source code\n    * Standards\n    * Storage\n    * Supermicro\n    * TCP/IP\n    * ThinkPad\n    * Trident\n    * UltraSound\n    * Uncategorized\n    * Undocumented\n    * UNIX\n    * UnixWare\n    * USB\n    * VGA\n    * VirtualBox\n    * Virtualization\n    * VLB\n    * Watcom\n    * Wave Blaster\n    * Western Digital\n    * Windows\n    * Windows 95\n    * Windows XP\n    * Wireless\n    * WordStar\n    * x86\n    * x87\n    * Xenix\n    * Xeon\n    * Yamaha\n\nOS/2 Museum\n\nProudly powered by WordPress.\n\n", "frontpage": true}
