{"aid": "40218182", "title": "Open-source platform accelerating enterprise apps development", "url": "https://github.com/openkoda/openkoda", "domain": "github.com/openkoda", "votes": 1, "user": "mgl", "posted_at": "2024-05-01 00:34:00", "comments": 0, "source_title": "GitHub - openkoda/openkoda: Open source business application platform for fast development", "source_text": "GitHub - openkoda/openkoda: Open source business application platform for fast\ndevelopment\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nopenkoda / openkoda Public\n\n  * Notifications\n  * Fork 3\n  * Star 61\n\nOpen source business application platform for fast development\n\nopenkoda.com/\n\n### License\n\nMIT license\n\n61 stars 3 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# openkoda/openkoda\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n3 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nmichalboronski[docker] Updated README sectionMar 28, 20242769cd9 \u00b7 Mar 28,\n2024Mar 28, 2024\n\n## History\n\n27 Commits  \n  \n### docker\n\n|\n\n### docker\n\n| [docker] Fixed compose default spring profiles| Mar 28, 2024  \n  \n### examples\n\n|\n\n### examples\n\n| Release Insurance Policy Management template application| Mar 22, 2024  \n  \n### openkoda-app\n\n|\n\n### openkoda-app\n\n| RELEASE 1.5.1| Mar 22, 2024  \n  \n### openkoda\n\n|\n\n### openkoda\n\n| Fix Insurance Policy Management .zip url| Mar 22, 2024  \n  \n### scripts\n\n|\n\n### scripts\n\n| RELEASE 1.4.1| Jun 22, 2023  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Openkoda Release 1.4.0| Apr 25, 2023  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Initial commit| Apr 18, 2023  \n  \n### README.md\n\n|\n\n### README.md\n\n| [docker] Updated README section| Mar 28, 2024  \n  \n### pom.xml\n\n|\n\n### pom.xml\n\n| RELEASE 1.5.1| Mar 22, 2024  \n  \n## Repository files navigation\n\n### Ready-to-use development platform that accelerates the process of building\nbusiness applications and internal tools.\n\n  * Reduce development time and effort. Use pre-built functionalities and out-of-the-box features.\n  * Adopt a flexible and scalable approach. Build applications with dynamic entities. Choose from multiple multi-tenancy models.\n  * Use technology you already know: Java, Spring Boot, JavaScript, HTML, Hibernate, PostgreSQL\n  * Extend as you wish. Openkoda offers unlimited customization and integration options.\n\n### \ud83d\udcccContents\n\n\ud83e\udde9 Integrations \ud83d\ude80 How to start \u2705 Out-of-the-box features \ud83d\udc68\ud83d\udcbb Tech stack \ud83d\udca1 Sample\napplications \ud83d\udca1 Application screenshots \ud83d\udc99 Contribution \ud83d\udcdc Release notes \ud83e\udd1d\nPartners\n\n### \ud83e\udde9 Integrations\n\nEnhance your application by adding integrations.\n\n#### Open Source\n\n#### Enterprise\n\n### \ud83d\udc68\ud83d\udcbb Tech stack\n\n  * Java (17+)\n  * Spring Boot 3.x\n  * Hibernate\n  * PostgreSQL\n  * GraalVM\n\n### \ud83d\ude80 Getting started\n\n#### Installation\n\nThere are two installation options to start application development with\nOpenkoda:\n\n  * Building from sources\n  * Running as a Docker container\n\n#### Option #1: Build from Source\n\nPrerequisites:\n\nGit, Java 17+, Maven 3.8+, PostgreSQL 14+\n\n  1. Create an empty database\n  2. Clone or download this Git repository\n  3. Build application with maven:\n\n    \n    \n    mvn -f openkoda/pom.xml clean install spring-boot:repackage -DskipTests\n\n  4. Initialize the database in a first run:\n\n    \n    \n    java -Dloader.path=/BOOT-INF/classes -Dspring.profiles.active=openkoda,drop_and_init_database -jar openkoda.jar --server.port=<http port>\n\n  5. Run Openkoda\n\n    \n    \n    java -Dloader.path=/BOOT-INF/classes -Dsecure.cookie=false -jar openkoda.jar --spring.profiles.active=openkoda --server.port=<http port>\n\nDetailed instructions can be found in the Installation manual.\n\n#### Option #2: Run as a Docker Container\n\nDocker images are available at Docker Hub :\nhttps://hub.docker.com/r/openkoda/openkoda\n\nIt can be launched via simple:\n\n    \n    \n    docker pull openkoda/openkoda:latest\n\nPlease note that in that case Postgres needs to be already in place and\nSPRING_DATASOURCE_URL, SPRING_DATASOURCE_USERNAME, SPRING_DATASOURCE_PASSWORD\nenv variables needs to be adjusted when running docker (see Docker Hub for\ndetailed options)\n\n##### Docker compose\n\nA simpler option may be to use the Docker Compose scripts located in the:\n./docker/docker-compose.yaml and ./docker/docker-compose-no-db.yaml -\ndepending on your preference, with or without Postgres as a part of the docker\nservice. Here is a useful one-liner :\n\n    \n    \n    curl https://raw.githubusercontent.com/openkoda/openkoda/main/docker/docker-compose.yaml | docker compose -f - up\n\n### \u2705 Out-of-the-box features\n\nTo significantly reduce development time and effort, Openkoda offers pre-built\nfunctionality and out-of-the-box features.\n\n#### \ud83d\udd00 Dynamic entities:\n\nCreate database table, CRUD functionality, form, and overview with no need of\nre-compilation\n\n#### \ud83d\udee0\ufe0f Application admin panel:\n\n  * App Configurations: Manage email settings, roles, privileges, and HTML templates.\n  * Audit Screen: Track changes to data for accountability.\n  * System Logs: Review logs for activity insights and troubleshooting.\n  * System Health: Get a quick overview of system performance and status.\n\n#### \ud83d\udc64User Management\n\n  * Invite users to the organization\n  * Set roles globally and within the organization context\n  * Access user profile settings\n  * Spoof user (available in admin mode)\n\n#### \ud83d\udd11 Roles and Privileges\n\n  * Create global or organization-specific roles\n  * Assign privileges from a list to each role\n\n#### \ud83c\udfe2 Organization management\n\n  * Separate organization data\n  * Implement security rules for data access\n  * Customize your own dashboard\n  * Assign organizational roles, such as member or admin, to users.\n\n#### \ud83d\udcdd CMS\n\n  * Modify HTML templates\n  * Edit draft versions of resources\n  * Introduce new public resources\n\n#### \ud83d\uddc2\ufe0f Resource Management\n\n  * Manage file overview\n  * Resize images\n  * Set files to public access\n\n#### \ud83d\udd0a Event Listeners:\n\nRespond to application events (e.g., user creation, login, application start)\nwith built-in Openkoda handlers (e.g., messaging, push notifications).\n\n#### \ud83d\udcbe Backups:\n\nEmbedded database backup routines\n\n#### \ud83d\udce5 Import and export:\n\nExport components from current app and easily import them into another\nOpenkoda Core instance\n\n#### \ud83d\uddc4\ufe0f Multiple Multi-tenancy models:\n\nOpenkoda supports the following multi-tenancy setups:\n\n  * Single Database / Single Schema\n  * Single Database / Many Schemas\n  * Multiple Databases / Many Schemas\n\nSee multitenancy setup for more details\n\n#### \ud83d\udd04 Job Requests\n\nSchedule jobs to be performed in time intervals Process jobs with event\nlisteners\n\n#### \ud83d\udd14 Notifications\n\nSynchronize your application with notifications channels: Email Slack Jira\nGitHub Trello Basecamp\n\n#### \u2709\ufe0f Email Sender\n\nCustomize email templates via CMS Schedule emails\n\n### \ud83d\udca1 Sample applications\n\nOpenkoda Application Templates are sample applications built with Openkoda.\n\nThey represent a standard set of functions for a traditional web application\nprovided by Openkoda Core, as well as business functionalities created\nspecifically for these examples.\n\nApplication Templates can be easily extended, taking into account both the\ndata storage schema and any custom functionality.\n\nLearn more in our 5-minute guide.\n\nTimelog\n\nTimelog is a time tracking solution for companies of all sizes. It allows\nemployees to record hours spent on specific tasks, while managers generate\nmonthly performance reports. Learn more.\n\nInsurance Policy Management\n\nInsurance Policy Management is a dynamic policy data storage tool with a\nvariety of embeddable widgets for personalized customer and policy dashboards.\nWidgets include: message senders, email schedulers, attachment and task lists,\nnotes, and detailed customer/policy information to improve operational\nefficiency and customer engagement. Learn more.\n\nWeather App\n\nA sample application that provides weather forecast for selected vacation\nspots.\n\nWatch the short video to see the building process:\n\n### \ud83d\udca1 Application screenshots\n\nCMS\n\nOrganization Settings\n\nJob Request\n\nEvent Litener\n\nForgot Password\n\n### \ud83d\udc99 Contribution\n\nOpenkoda is an open source project under MIT license. It\u2019s built by developers\nfor developers.\n\nIf you have ideas for improvement, contribute and let's innovate together.\n\nHow to contribute:\n\n  1. Create a fork\n  2. Create a feature branch from main branch\n  3. Push\n  4. Create a Pull Request to an upstream main branch\n\nDetailed contribution rules\n\n### \ud83d\udce2 Follow, learn, and spread the word\n\nOpenkoda Community: Become a part of Openkoda YouTube: Learn how to use\nOpenkoda LinkedIn: Stay up to date About us: Let us introduce ourselves\n\n### \ud83d\uddc3\ufe0f Release notes\n\nOpenkoda is constantly evolving. Check out the changelog:\n\n#### Openkoda 1.5. \ud83d\ude80\n\n  * Dynamic Entities: Now create database tables, perform full CRUD operations and generate forms.\n  * New Dashboard UI: Enhanced for better readability and smoother navigation flow.\n  * Files Assignment: Support for dynamically registered entities.\n  * Organization-Level Email Configuration: Customize email settings at the organization level.\n  * Bug Fixes: Various fixes for improved app stability and performance.\n\n#### Openkoda 1.4.3.\n\n  * Page Builder: Introducing a tool for creating custom dashboards.\n  * Web Forms Assistance: Streamlined web form creation based on your data model definitions.\n  * YAML Components Import/Export: Easily manage components such as web forms, endpoints, server code, event listeners, schedulers, and frontend resources.\n  * Dashboard UI: Upgrades for an improved dashboard interface.\n  * Updates & Security: Minor adjustments and security fixes.\n\n### \ud83e\udd1d Partners\n\nOpenkoda source code is completely free and is available under the MIT\nlicense.\n\nJoin us as a partner in transforming the software development market by\ndelivering maximum value to your clients using Openkoda. The goal is to\nsimplify the process of building enterprise applications, allowing developers\nto focus on core business logic.\n\nLearn more about Openkoda Partner Program.\n\n#### \u2601\ufe0f Managed Cloud\n\nOur enterprise managed cloud allows for easy deployment and scaling of your\nOpenkoda applications. Contact us for more information.\n\n## About\n\nOpen source business application platform for fast development\n\nopenkoda.com/\n\n### Topics\n\njava open-source spring-boot customizable multitenancy development-tools\nbusiness-application-platform openkoda\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\nCustom properties\n\n### Stars\n\n61 stars\n\n### Watchers\n\n3 watching\n\n### Forks\n\n3 forks\n\nReport repository\n\n## Releases\n\n3 tags\n\n## Packages 0\n\nNo packages published\n\n## Contributors 4\n\n  * emlitka Martyna Litkowska\n  * michalboronski\n  * zpajorska\n  * michalglomba\n\n## Languages\n\n  * Java 86.9%\n  * HTML 11.7%\n  * Gherkin 1.2%\n  * PLpgSQL 0.1%\n  * Shell 0.1%\n  * Dockerfile 0.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
