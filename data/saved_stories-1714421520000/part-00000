{"aid": "40197781", "title": "Let Developers \"Cheat\" in Your Interviews", "url": "https://spin.atomicobject.com/developers-llms-interviews/", "domain": "atomicobject.com", "votes": 2, "user": "philk10", "posted_at": "2024-04-29 13:03:20", "comments": 0, "source_title": "Let Developers \u201cCheat\u201d in Your Interviews", "source_text": "Let Developers Cheat with LLMs in Their Interviews\n\n\u2190 Back to Blog Home\n\n# Let Developers \u201cCheat\u201d in Your Interviews\n\nBusiness Practices\n\nby: Dylan Goings\n\nApril 27, 2024\n\n  * Twitter\n  * Facebook\n  * Linkedin\n  * Hackernews\n\n### Article summary\n\n  * What are you hiring for?\n  * Don't be lazy.\n  * Sometimes, every problem looks like a nail.\n\nA recent experiment conducted by interviewing.io highlighted how ChatGPT could\nhelp interviewees to cheat on technical interviews.\n\nThe most notable result from the experiment was that not a single interviewer\nsniffed out that a candidate might be using ChatGPT to give their answers.\nThey also observed that being tasked with a unique problem vs. a more\ntraditional LeetCode type of challenge significantly hurt the performance of\nthe AI \u201ccheaters.\u201d\n\nThe author\u2019s takeaway was not that surprising: \u201cThe obvious conclusion from\nthese results is that companies need to start asking custom questions\nimmediately, or they are at serious risk of candidates cheating during\ninterviews (and ultimately not getting useful signal from their interviews)!\u201d\n\nIt was also the wrong conclusion.\n\n## What are you hiring for?\n\nThe risk of not using more custom, open-ended questions in your coding\ninterviews is not that people will cheat on them. Instead, it\u2019s that you\u2019ll\nbias your hiring toward candidates who over-prepare for these \u201cstandardized\u201d\nproblems. Software development is no longer an assembly line job. Like any\nhighly skilled trade, your ability to effectively use your tools is more\nimportant than your ability to regurgitate a memorized solution.\n\nIn fact, the interview process is an excellent opportunity to evaluate a\ncandidate\u2019s ability to analyze the output generated by LLMs critically. While\nthese tools are powerful, they are not infallible. A skilled developer should\nbe able to identify potential errors, inconsistencies, or areas for\nimprovement in the generated code and make necessary adjustments. Likewise, a\nmore junior developer with more confidence using these tools could set\nthemself apart among many similar candidates.\n\n## Don\u2019t be lazy.\n\nI think part of the problem is that (ahem) some hiring managers want to be\nlazy. Why bother spending all this time developing a thorough hiring process\nthat actually evaluates the qualities of the developer we want to hire if I\ncan automate everything using content others have created? Can\u2019t I just hire\nsomeone without ever meeting them in person?\n\nI recognize that there are reasonable concerns about using LLMs, both\npractical and ethical. And, some companies may require developers to forego\ntheir use. In that case, I think you have two options.\n\n  1. Fight an endless losing battle trying to stay ahead of the LLMs with ever more specific and challenging questions until you lose the ability to hire anyone because your interviews are so onerous.\n  2. Invest in your hiring infrastructure to conduct sealed, on-site interviews, so that you can still evaluate your candidates in a real-world environment that approximates the actual job you\u2019re hiring for.\n\n## Sometimes, every problem looks like a nail.\n\nImagine hiring a carpenter and inventing a nailing task no one would ever want\nto build. It\u2019s just really hard to do with a nail gun so you have to use a\nhammer. And also, you don\u2019t actually want to watch them hammer. You just want\nthem to describe their hammering technique and estimate how long it might take\nthem to hammer in all the nails in your silly problem.\n\nThat\u2019s where interviewing software developers is headed if we try to eliminate\nthe use of LLMs. Love it or hate it, LLMs aren\u2019t going away anytime soon. So,\nlet your candidates \u201ccheat\u201d in their coding interviews. Instead of spending a\nton of time and energy trying to fool the machines, spend your time creating a\nhiring process that is humane.\n\nartificial intelligencedeveloper applicantinterviewLLM\n\nDylan Goings Accelerator Manager and Software Consultant. If you don't learn\nfrom history, you're doomed to rebase it.\n\nAll Posts \u2192\n\n### Related Posts\n\n  * Business Practices\n\n## Successful Vendor Relationships: 3 Do\u2019s and Dont\u2019s\n\n  * Business Practices\n\n## The Art and Impact of Making \u201cIntelligent Failures\u201d\n\n  * Business Practices\n\n## Is It Time to Replace Your Business Software? Here Are the Signs\n\n## Keep up with our latest posts.\n\nWe\u2019ll send our latest tips, learnings, and case studies from the Atomic\nbraintrust on a monthly basis.\n\n[mailpoet_form id=\"1\"]\n\nConversation\n\n### Join the conversation Cancel reply\n\n### Atomic Thinking Category\n\n  * Atomic Accelerator\n  * Business Practices\n  * Resources for Clients\n  * Culture\n  * Communities\n  * News & Events\n  * Project Stories\n  * Workplace\n\nRelated Posts\n\nBusiness Practices\n\n# Successful Vendor Relationships: 3 Do's and Dont's\n\nBusiness Practices\n\n# The Art and Impact of Making \"Intelligent Failures\"\n\nBusiness Practices\n\n# Is It Time to Replace Your Business Software? Here Are the Signs\n\n### Tell Us About Your Project\n\nWe\u2019d love to talk with you about your next great software project. Fill out\nthis form and we\u2019ll get back to you within two business days.\n\nShare Your Project\n\nAtomic is a software design + development consultancy.\n\n\u00a9 2024 Atomic Object LLC\n\n##### Explore\n\n  * Careers\n  * Diversity\n  * Resources\n  * Atomic Blog\n\n##### Offices\n\n  * Grand Rapids\n  * Ann Arbor\n  * Chicago\n  * Raleigh-Durham\n\n##### Details\n\n  * Contact\n  * Media\n  * Privacy Policy\n\n", "frontpage": false}
