{"aid": "40133381", "title": "Rust-sel4: Rust support for seL4 userspace", "url": "https://github.com/seL4/rust-sel4", "domain": "github.com/sel4", "votes": 2, "user": "todsacerdoti", "posted_at": "2024-04-23 15:54:33", "comments": 0, "source_title": "GitHub - seL4/rust-sel4: Rust support for seL4 userspace", "source_text": "GitHub - seL4/rust-sel4: Rust support for seL4 userspace\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nseL4 / rust-sel4 Public\n\n  * Notifications\n  * Fork 7\n  * Star 59\n\nRust support for seL4 userspace\n\n59 stars 7 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# seL4/rust-sel4\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n2 Branches\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nnspinImprove styleApr 22, 2024b2c08c6 \u00b7 Apr 22, 2024Apr 22, 2024\n\n## History\n\n1,238 Commits  \n  \n### .cargo\n\n|\n\n### .cargo\n\n| Rename .cargo/config -> .cargo/config.toml| Mar 16, 2024  \n  \n### .github\n\n|\n\n### .github\n\n| ci: Bump action versions| Mar 14, 2024  \n  \n### .reuse\n\n|\n\n### .reuse\n\n| Clean up CapDL branch| Feb 14, 2024  \n  \n### LICENSES\n\n|\n\n### LICENSES\n\n| Remove mbedtls| Jan 7, 2024  \n  \n### crates\n\n|\n\n### crates\n\n| Improve style| Apr 22, 2024  \n  \n### hacking\n\n|\n\n### hacking\n\n| nix: Allow for more precision in sysroot config| Apr 22, 2024  \n  \n### support/targets\n\n|\n\n### support/targets\n\n| Update rustc target specs| Mar 16, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Add to .gitignore| Oct 24, 2023  \n  \n### Cargo.lock\n\n|\n\n### Cargo.lock\n\n| Use upstream rustls| Apr 20, 2024  \n  \n### Cargo.nix\n\n|\n\n### Cargo.nix\n\n| Update ring dependency| Apr 16, 2024  \n  \n### Cargo.toml\n\n|\n\n### Cargo.toml\n\n| Update ring dependency| Apr 16, 2024  \n  \n### Makefile\n\n|\n\n### Makefile\n\n| Use impure nix-shell in Makefile| Jan 6, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| docs: Remove mention of unused SEL4_KERNEL_LOADER_CONFIG| Feb 14, 2024  \n  \n### default.nix\n\n|\n\n### default.nix\n\n| Add licensing information to Nix sources| Oct 24, 2023  \n  \n### rust-toolchain.toml\n\n|\n\n### rust-toolchain.toml\n\n| Bump Rust toolchain version| Mar 16, 2024  \n  \n### rustfmt.toml\n\n|\n\n### rustfmt.toml\n\n| Add some comments for REUSE compliance| Oct 24, 2023  \n  \n## Repository files navigation\n\n# Rust support for seL4 userspace\n\nThis repository contains crates for supporting the use of Rust in seL4\nuserspace. So far, this includes:\n\n  * Rust bindings for the seL4 API (source)\n  * A runtime for root tasks (source)\n  * A runtime for seL4 Microkit protection domains (source)\n  * A CapDL-based system initializer (source and docs)\n  * A loader for the seL4 kernel (source and docs)\n  * Custom rustc target specifications for seL4 userspace (JSON and docs)\n  * Many more crates for use in seL4 userspace\n\nThe ./hacking directory contains scripts for developing and testing these\ncrates using Nix and, optionally, Docker.\n\nThis work is funded by the seL4 Foundation.\n\n### Rendered rustdoc\n\nhttps://sel4.github.io/rust-sel4/\n\n### Compatible versions of related seL4 Foundation projects\n\nThis project builds upon seL4 and the seL4 Microkit. In particular, this\nproject works with at least the following versions of those related projects:\n\n  * seL4, when used without Microkit: 9bac64c6ceb1ece54fe00eae44065a836bd224f3 (github.com/coliasgroup/seL4:rust, an ancestor of github.com/seL4/seL4:master).\n  * seL4, when used with Microkit: b9fb3fec722e65fedc2a3038726f5183c4c7a6b9 (github.com/coliasgroup/seL4:rust-microkit, not an ancestor of github.com/seL4/seL4:master). For now, Microkit (both upstream trunk and the branch used by this project) requires a patch on top of upstream seL4 trunk.\n  * seL4 Microkit: e04afe55ac7f3d4242145fd7466b583fe1b1fce3 (github.com/coliasgroup/microkit:rust, an ancestor of github.com/seL4/microkit:main).\n\n### Demos\n\n  * Simple root task: https://github.com/seL4/rust-root-task-demo\n  * Simple system using the seL4 Microkit: https://github.com/seL4/rust-microkit-demo\n  * HTTP server using the seL4 Microkit: https://github.com/seL4/rust-microkit-http-server-demo\n\n### Overview of crates\n\n##### General crates\n\n  * sel4: Straightforward, pure-Rust bindings to the seL4 API.\n  * sel4-sys: Raw bindings to the seL4 API, generated from the libsel4 headers and interface definition files. This crate is not intended to be used directly by application code, but rather serves as a basis for the sel4 crate's implementation.\n  * sel4-config: Macros and constants corresponding to the seL4 kernel configuration. Can be used by all targets (i.e. in all of: application code, build scripts, and build-time tools).\n  * sel4-platform-info: Constants corresponding to the contents of platform_info.h. Can be used by all targets, on configurations where this file exists..\n  * sel4-sync: Synchronization constructs using seL4 IPC. Currently only supports notification-based mutexes.\n  * sel4-logging: Log implementation for the log crate.\n  * sel4-externally-shared: Abstractions for interacting with data in shared memory.\n  * sel4-shared-ring-buffer: Implementation of shared data structures used in the seL4 Device Driver Framework.\n  * sel4-async-*: Crates for leveraging async Rust in seL4 userspace.\n\n##### Runtime crates\n\n  * Root task:\n\n    * sel4-root-task: A runtime for root tasks that supports thread-local storage and unwinding, and provides a global allocator.\n  * seL4 Microkit:\n\n    * sel4-microkit: A runtime for seL4 Microkit protection domains, including an implementation of libmicrokit and abstractions for IPC.\n\n##### Complete programs\n\n  * sel4-capdl-initializer: A CapDL-based system initializer.\n  * sel4-kernel-loader: A loader for the seL4 kernel, similar in purpose to elfloader.\n\n### Integrating these crates into your project\n\nThe best way to learn how to integrate these crates into your project is to\ncheck out the concrete examples of their use listed above.\n\nThese crates are not yet hosted on crates.io. Use them either as Git or path\nCargo dependencies.\n\nSome of these crates depend, at build time, on external components and\nconfiguration. In all cases, information for locating these dependencies is\npassed to the dependant crates via environment variables which are interpreted\nby build.rs scripts. Here is a list of environment variables and the crates\nwhich use them:\n\n  * sel4-config and sel4-sys, whose dependants include sel4, sel4-root-task, sel4-microkit, and many more, use $SEL4_INCLUDE_DIRS (defaulting to $SEL4_PREFIX/libsel4/include if $SEL4_PREFIX is set) which must contain a colon-separated list of include paths for the libsel4 headers. See the the sel4 crate's rustdoc for more information.\n  * sel4-platform-info, whose dependants include sel4-kernel-loader, uses $SEL4_PLATFORM_INFO (defaulting to $SEL4_PREFIX/support/platform_gen.yaml if $SEL4_PREFIX is set) which must contain the path of the platform_gen.yaml file from the seL4 kernel build system.\n  * sel4-kernel-loader uses $SEL4_KERNEL (defaulting to $SEL4_PREFIX/bin/kernel.elf if $SEL4_PREFIX is set) which must contain the path of the seL4 kernel (as an ELF executable).\n\n### Quick start for running the tests in this repository\n\nThe only requirements for building and running the tests in this repository\nare Linux, Make, rustup, and Nix. This repository contains scripts for setting\nup a Docker container with a suitable development environment in case you\naren't on Linux or don't want to install Nix.\n\nFirst, clone this repository:\n\n    \n    \n    git clone https://github.com/seL4/rust-sel4 cd rust-sel4\n\nIf you are using Docker, build, run, and enter a Docker container for\ndevelopment. This container mounts this repository's top-level at /work.\n\n    \n    \n    cd hacking/docker && make run && make exec\n\nAt this repository's top-level directory, build and simulate a simple\nseL4-based system with a root task written in Rust (this will take a few\nminutes):\n\n    \n    \n    make example\n\nBuild and run all of this repository's automated tests:\n\n    \n    \n    make run-tests\n\n## About\n\nRust support for seL4 userspace\n\n### Resources\n\nReadme\n\n### Code of conduct\n\nCode of conduct\n\nActivity\n\nCustom properties\n\n### Stars\n\n59 stars\n\n### Watchers\n\n19 watching\n\n### Forks\n\n7 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Contributors 4\n\n  * nspin Nick Spinale\n  * Ivan-Velickovic Ivan Velickovic\n  * protoben Ben Hamlin\n  * lsf37 Gerwin Klein\n\n## Languages\n\n  * Rust 80.6%\n  * Nix 14.5%\n  * Python 2.1%\n  * Assembly 1.3%\n  * C 0.6%\n  * Makefile 0.6%\n  * Other 0.3%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
