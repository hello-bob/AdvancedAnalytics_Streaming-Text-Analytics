{"aid": "40283917", "title": "The Definitive C Book Guide and List", "url": "https://stackoverflow.com/questions/562303/the-definitive-c-book-guide-and-list", "domain": "stackoverflow.com", "votes": 2, "user": "hggh", "posted_at": "2024-05-07 10:04:02", "comments": 0, "source_title": "The Definitive C Book Guide and List", "source_text": "The Definitive C Book Guide and List - Stack Overflow\n\n#\n\nJoin Stack Overflow\n\nBy clicking \u201cSign up\u201d, you agree to our terms of service and acknowledge you\nhave read our privacy policy.\n\n# OR\n\nAlready have an account? Log in\n\nSkip to main content\n\nStack Overflow\n\n  1. About\n  2. Products\n  3. For Teams\n\n  1. Stack Overflow Public questions & answers\n  2. Stack Overflow for Teams Where developers & technologists share private knowledge with coworkers\n  3. Talent Build your employer brand\n  4. Advertising Reach developers & technologists worldwide\n  5. Labs The future of collective knowledge sharing\n  6. About the company\n\n##### CollectivesTM on Stack Overflow\n\nFind centralized, trusted content and collaborate around the technologies you\nuse most.\n\nLearn more about Collectives\n\nTeams\n\nQ&A for work\n\nConnect and share knowledge within a single location that is structured and\neasy to search.\n\nLearn more about Teams\n\nGet early access and see previews of new features.\n\nLearn more about Labs\n\n# The Definitive C Book Guide and List\n\nAsk Question\n\nAsked 15 years, 2 months ago\n\nModified 15 days ago\n\nViewed 625k times\n\nThis question shows research effort; it is useful and clear\n\n400\n\nSave this question.\n\nShow activity on this post.\n\nThis question's answers are a community effort. Edit existing answers to\nimprove this post. It is not currently accepting new answers or interactions.\n\nThis question attempts to collect a community-maintained list of quality books\non the c programming language, targeted at various skill levels.\n\nC is a complex programming language that is difficult to pick up on-the-go by\nreading online tutorials. A comprehensive book is often the best way to learn\nthe language, and finding a good book is the first step. It is important to\navoid badly-written books, and even more importantly, books that contain\nserious technical errors.\n\nPlease suggest edits to the accepted answer to add quality books, with an\napproximate skill level and a short blurb/description about each book. (Note\nthat the question is locked, so no new answers will be accepted. A single\nanswer is being maintained with the list)\n\nFeel free to debate book choices, quality, headings, summaries, skill levels,\nand anything else you see that is wrong. Books that are deemed satisfactory by\nthe C community here will stick around on the list; the rest will be regularly\nremoved.\n\nFor books that have reviews by the Association of C and C++ Users (ACCU), a\nlink to those reviews should be added along with the book.\n\nSee also:\n\n  * Other C-related resources in the c tag wiki\n  * A similar list for c++: The Definitive C++ Book Guide and List\n\n_This question was discussed on Meta as part of the Deleted Questions Audit\n2018. The consensus was to keep it undeleted and actively maintained.\n\n  * c\n\nShare\n\nCC BY-SA 4.0\n\nFollow this question to receive notifications\n\nedited Jan 15, 2019 at 0:30\n\ncommunity wiki\n\n33 revs, 23 users 20% lillq\n\n2\n\n  * 4\n\nIf you are new to C, keep in mind that modern C is ANSI C and anything\npredating that standard (1989) may be wildly out of date. Shoot for the\nmid-90s or later.\n\n\u2013 Dana Robinson\n\nJun 7, 2011 at 1:28\n\n  * 7\n\n@Dhaivat I think not, be careful to jump on the K&R bandwagon. K&R does not\naddress good program design nor good programming practice, mainly because it\nwas originally written before anyone knew what good programming practice was.\nIt does not mention which parts of the C language that are superfluous or even\ndangerous. The book is correctly listed as a reference manual, it should not\nbe used for teaching/learning modern programming.\n\n\u2013 Lundin\n\nAug 12, 2011 at 7:45\n\nComments disabled on deleted / locked posts / reviews |\n\n## 1 Answer 1\n\nReset to default\n\nThis answer is useful\n\n583\n\nSave this answer.\n\nShow activity on this post.\n\nWarning!\n\nThis is a list of random books of diverse quality. In the view of some people\n(with some justification), it is no longer a list of recommended books. Some\nof the listed books contain blatantly incorrect statements or teach\nwrong/harmful practices. People who are aware of such books can edit this\nanswer to help improve it. See The C book list has gone haywire. What to do\nwith it?, and also Deleted question audit 2018.\n\n# Reference (All Levels)\n\n  * The C Programming Language (2nd Edition) - Brian W. Kernighan and Dennis M. Ritchie (1988). It is still a good, short, but complete, introduction to C (C89, not C99 or later versions), written by the inventor of C. However, the language has changed and good C style has developed in the last 25 years, and there are parts of the book that show its age.\n\n  * C: A Reference Manual (5th Edition) - Samuel P. Harbison and Guy R. Steele (2002). An excellent reference book on C, up to and including C99. It is not a tutorial, and probably unfit for beginners. It's great if you need to write a compiler for C, as the authors had to do when they started.\n\n  * C Pocket Reference (O'Reilly) - Peter Prinz and Ulla Kirch-Prinz (2002).\n\n  * The comp.lang.c FAQ - Steve Summit. Web site with answers to many questions about C.\n\n  * Various versions of the C language standards can be found here. There is an online version of the draft C11 standard.\n\n  * The new C standard - an annotated reference (Free PDF) - Derek M. Jones (2009). The \"new standard\" referred to is the old C99 standard rather than C11.\n\n  * Rationale for C99 Standard.\n\n# Beginner\n\n  * C Programming: A Modern Approach (2nd Edition) - K. N. King (2008). A good book for learning C.\n\n  * Programming in C (4th Edition) - Stephen Kochan (2014). A good general introduction and tutorial.\n\n  * C Primer Plus (5th Edition) - Stephen Prata (2004)\n\n  * A Book on C - Al Kelley/Ira Pohl (1998).\n\n  * The C Book (Free Online) - Mike Banahan, Declan Brady, and Mark Doran (1991).\n\n  * C: How to Program (8th Edition) - Paul Deitel and Harvey M. Deitel (2015). Lots of good tips and best practices for beginners. The index is very good and serves as a decent reference (just not fully comprehensive, and very shallow).\n\n  * Head First C - David Griffiths and Dawn Griffiths (2012).\n\n  * Beginning C (5th Edition) - Ivor Horton (2013). Very good explanation of pointers, using lots of small but complete programs.\n\n  * Sams Teach Yourself C in 21 Days - Bradley L. Jones and Peter Aitken (2002). Very good introductory stuff.\n\n  * C In Easy Steps (5th Edition) - Mike McGrath (2018). It is a good book for learning and referencing C.\n\n# Intermediate\n\n  * Modern C \u2014 Jens Gustedt (2017 1st Edn; 2019 2nd Edn). Covers C in 5 levels (encounter, acquaintance, cognition, experience, ambition) from beginning C to advanced C. It covers C11 and C17, including threads and atomic access, which few other books do. Not all compilers recognize these features in all environments.\n\n  * C Interfaces and Implementations - David R. Hanson (1997). Provides information on how to define a boundary between an interface and implementation in C in a generic and reusable fashion. It also demonstrates this principle by applying it to the implementation of common mechanisms and data structures in C, such as lists, sets, exceptions, string manipulation, memory allocators, and more. Basically, Hanson took all the code he'd written as part of building Icon and lcc and pulled out the best bits in a form that other people could reuse for their own projects. It's a model of good C programming using modern design techniques (including Liskov's data abstraction), showing how to organize a big C project as a bunch of useful libraries.\n\n  * The C Puzzle Book - Alan R. Feuer (1998)\n\n  * The Standard C Library - P.J. Plauger (1992). It contains the complete source code to an implementation of the C89 standard library, along with extensive discussions about the design and why the code is designed as shown.\n\n  * 21st Century C: C Tips from the New School - Ben Klemens (2012). In addition to the C language, the book explains gdb, valgrind, autotools, and git. The comments on style are found in the last part (Chapter 6 and beyond).\n\n  * Algorithms in C - Robert Sedgewick (1997). Gives you a real grasp of implementing algorithms in C. Very lucid and clear; will probably make you want to throw away all of your other algorithms books and keep this one.\n\n  * Pointers on C - Kenneth Reek (1997).\n\n  * Problem Solving and Program Design in C (6th Edition) - Jeri R. Hanly and Elliot B. Koffman (2009).\n\n  * Data Structures - An Advanced Approach Using C - Jeffrey Esakov and Tom Weiss (1989).\n\n  * C Unleashed - Richard Heathfield, Lawrence Kirby, et al. (2000). Not ideal, but it is worth intermediate programmers practicing problems written in this book. This is a good cookbook-like approach suggested by comp.lang.c contributors.\n\n  * Object-oriented Programming with ANSI-C (Free PDF) - Axel-Tobias Schreiner (1993). The code gets a bit convoluted. If you want C++, use C++. It only uses C90, of course.\n\n# Expert\n\n  * Expert C Programming: Deep C Secrets - Peter van der Linden (1994). Lots of interesting information and war stories from the Sun compiler team, but a little dated in places.\n\n  * Advanced C Programming by Example - John W. Perry (1998).\n\n  * Advanced Programming in the UNIX Environment - Richard W. Stevens and Stephen A. Rago (2013). Comprehensive description of how to use the Unix APIs from C code, but not so much about the mechanics of C coding.\n\n# Uncategorized\n\n  * Essential C (Free PDF) - Nick Parlante (2003). Note that this describes the C90 language at several points (e.g., in discussing // comments and placement of variable declarations at arbitrary points in the code), so it should be treated with some caution.\n\n  * C Programming FAQs: Frequently Asked Questions - Steve Summit (1995). This is the book of the web site listed earlier. It doesn't cover C99 or the later standards.\n\n  * C in a Nutshell - Peter Prinz and Tony Crawford (2005). Excellent book if you need a reference for C99.\n\n  * C in a Nutshell (2nd Ed.) - Peter Prinz and Tony Crawford (2016), a reference-style book covering C11.\n\n  * Functional C - Pieter Hartel and Henk Muller (1997). Teaches modern practices that are invaluable for low-level programming, with concurrency and modularity in mind.\n\n  * The Practice of Programming - Brian W. Kernighan and Rob Pike (1999). A very good book to accompany K&R. It uses C++ and Java too.\n\n  * C Traps and Pitfalls by A. Koenig (1989). Very good, but the C style pre-dates standard C, which makes it less recommendable these days.\n\n^Some have argued for the removal of 'Traps and Pitfalls' from this list\nbecause it has trapped some people into making mistakes; others continue to\nargue for its inclusion. Perhaps it should be regarded as an 'expert' book\nbecause it requires moderately extensive knowledge of C to understand what's\nchanged since it was published.\n\n  * MISRA-C - industry standard published and maintained by the Motor Industry Software Reliability Association. Covers C89 and C99.\n\n^Although this isn't a book as such, many programmers recommend reading and\nimplementing as much of it as possible. MISRA-C was originally intended as\nguidelines for safety-critical applications in particular, but it applies to\nany area of application where stable, bug-free C code is desired (who doesn't\nwant fewer bugs?). MISRA-C is becoming the de facto standard in the whole\nembedded industry and is getting increasingly popular even in other\nprogramming branches. There are (at least) three publications of the standard\n(1998, 2004, and the current version from 2012). There is also a MISRA\nCompliance Guidelines document from 2016, and MISRA C:2012 Amendment 1 \u2014\nAdditional Security Guidelines for MISRA C:2012 (published in April 2016).\n\n^Note that some of the strictures in the MISRA rules are not appropriate to\nevery context. For example, directive 4.12 states \"Dynamic memory allocation\nshall not be used\". This is appropriate in the embedded systems for which the\nMISRA rules are designed; it is not appropriate everywhere. (Compilers, for\ninstance, generally use dynamic memory allocation for things like symbol\ntables, and to do without dynamic memory allocation would be difficult, if not\npreposterous.)\n\n  * Archived lists of ACCU-reviewed books on Beginner's C (116 titles) from 2007 and Advanced C (76 titles) from 2008. Most of these don't look to be on the main site anymore, and you can't browse that by subject anyway.\n\n# Warnings\n\nThere is a list of books and tutorials to be cautious about at the ISO 9899\nWiki, which is not itself formally associated with ISO or the C standard, but\ncontains information about the C standard (though it hails the release of ISO\n9899:2011 and does not mention the release of ISO 9899:2018).\n\nBe wary of books written by Herbert Schildt. In particular, you should stay\naway from C: The Complete Reference (4th Edition, 2000), known in some circles\nas C: The Complete Nonsense.\n\nAlso do not use the book Let Us C (16^th Edition, 2017) by Yashavant Kanetkar.\nMany people view it as an outdated book that teaches Turbo C and has lots of\nobsolete, misleading and incorrect material. For example, page 137 discusses\nthe expected output from printf(\"%d %d %d\\n\", a, ++a, a++) and does not\ncategorize it as undefined behaviour as it should. It also consistently\npromotes unportable and buggy coding practices, such as using gets, %[\\n]s in\nscanf, storing the return value of getchar in a variable of type char or using\nfflush on stdin.\n\nLearn C The Hard Way (2015) by Zed Shaw. A book with mixed reviews. A critique\nof this book by Tim Hentenaar:\n\n> To summarize my views, which are laid out below, the author presents the\n> material in a greatly oversimplified and misleading way, the whole corpus is\n> a bundled mess, and some of the opinions and analyses he offers are just\n> plain wrong. I've tried to view this book through the eyes of a novice, but\n> unfortunately I am biased by years of experience writing code in C. It's\n> obvious to me that either the author has a flawed understanding of C, or\n> he's deliberately oversimplifying to the point where he's actually\n> misleading the reader (intentionally or otherwise).\n\n\"Learn C The Hard Way\" is not a book that I could recommend to someone who is\nboth learning to program and learning C. If you're already a competent\nprogrammer in some other related language, then it represents an interesting\nand unusual exposition on C, though I have reservations about parts of the\nbook. _Jonathan Leffler\n\n# Outdated\n\n  * Practical C Programming (3rd Edition) - Steve Oualline (1997)(Beginner)\n\n_Other contributors, not necessarily credited in the revision history,\ninclude: Alex Lockwood, Ben Jackson, Bubbles, claws, coledot, Dana Robinson,\nDaniel Holden, desbest, Dervin Thunk, dwc, Erci Hou, Garen, haziz, Johan\nBezem, Jonathan Leffler, Joshua Partogi, Lucas, Lundin, Matt K., mossplix,\nMatthieu M., midor, Nietzche-jou, Norman Ramsey, r3st0r3, ridthyself, Robert\nS. Barnes, smalinux, Steve Summit, Tim Ring, Tony Bai, VMAtm\n\nShare\n\nCC BY-SA 4.0\n\nImprove this answer\n\nFollow this answer to receive notifications\n\nedited Apr 21 at 13:48\n\ncommunity wiki\n\n61 revs, 26 users 42% Jonathan Leffler\n\n9\n\n  * @LorenzoDonati--Codidact.com \u2014 the list is a lot less random than it originally was, but is still not as definitive or comprehensive as would be desirable. It is actively maintained. There are still books in the list that I've not reviewed that I regard as somewhat dubious. It lists a few old books about pre-standard C that should perhaps be removed.\n\n\u2013 Jonathan Leffler\n\nOct 1, 2021 at 14:49\n\n  * Here is a project with clear and tested solutions to the exercises in the C Programming Language by K and R, hope it helps: github.com/double-o-z/TheCProgramming_KandR\n\n\u2013 DoubleOZ\n\nMar 10, 2022 at 1:55\n\n  * Thank you for helping curate this list @JonathanLeffler. If possible, could you please indicate which books are pending review, e.g. an asterisk before the title? I'm looking for an introductory text, so it would help to know which titles are definitely recommended.\n\n\u2013 user51462\n\nAug 21, 2022 at 7:51\n\n  * 3\n\n@Hari Why should we add even more outdated books to the list? It's bad enough\nas it is... Anything which doesn't at least cover C11 is questionable,\nanything which doesn't at least cover C99 is a historical relic not suitable\nfor learning.\n\n\u2013 Lundin\n\nDec 1, 2022 at 9:31\n\n  * 2\n\nThe link to Modern C by Jens Gustedt (Intermediate section) is broken. Here is\na new link: inria.hal.science/hal-02383654v1/file/ModernC.pdf\n\n\u2013 fu7zed\n\nJun 27, 2023 at 21:39\n\n| Show 4 more comments\n\n##\n\nNot the answer you're looking for? Browse other questions tagged\n\n  * c\n\nor ask your own question.\n\n  * The Overflow Blog\n  * The reverse mullett model of software engineering\n\n  * Reshaping the future of API platforms\n\n  * Featured on Meta\n  * Testing a new version of Stack Overflow Jobs\n\n  * Our Partnership with OpenAI\n\n  * Policy: Generative AI (e.g., ChatGPT) is banned\n\n  * The [connect] tag is being burninated\n\n22 people chatting\n\nC++ Questions and Answers\n\n2 hours ago - nwp\n\nC\n\nyesterday - Kamiccolo\n\n#### Linked\n\n-1\n\nWhat is the meaning of int \"f\" in this function in C?\n\n-3\n\ntwo-way UART communication between STM32 and ESP32 works :) But I would like\nto understand more what happens\n\n0\n\nWhat books/websites should i read to learn to write readable and maintainable\nC code?\n\n0\n\ndifference between declaring char variable with '' or \"\" in c\n\n-1\n\nC how to convert between a normal char to unsigned char (uint)?\n\n0\n\nHow does this program create a 2D Array using malloc in C\n\n0\n\nmalloc error shows\"corrupted size vs. prev_size\"\n\n1\n\nStructure variable initialization in short way\n\n-3\n\nWhat is it mean by exit code 139 in C programming when i compile a code?\n\n1\n\nFormatted output\n\nSee more linked questions\n\n#### Related\n\n0\n\nI need Reference and Explanation of all C standard functions\n\n8\n\nGetting Started in C\n\n0\n\nReading Recommendations To Learn Basics Of C\n\n6\n\nSome general C questions\n\n8\n\nWhere can I find a good guide to writing C Collections?\n\n0\n\nDocuments about C language specs\n\n7\n\nInner working of the C standard library\n\n1\n\nThe C Programming Language by K&R Examples CH1\n\n0\n\nEx 1-8 The C Programming Language\n\n0\n\nThe C programming language Second Edition practice 1-9\n\n#### Hot Network Questions\n\n  * Inverse filtering to undo a convolution blows up\n\n  * Why wouldn't the world have advanced warning of a significant asteroid/comet strike?\n\n  * Why does this vintage DRAM chip enable circuit require such a beefy resistor?\n\n  * sample size calculation using G*Power -- which model to use based on an already calculated effect size?\n\n  * Teaching job application: Should I make any references to a gap year in my employment history due to depression?\n\n  * Why are almost all winglets turned upwards?\n\n  * Would it be possible to create a telepathic field with electromagnetism?\n\n  * Light curves for Chandra\n\n  * Detergent spilled into lint trap\n\n  * Can Blindness/Deafness Condition caused by Find Familiar etc be removed by Lesser Restoration?\n\n  * Where am I working?\n\n  * Does Jesus mean \"Salvation\" or \"God is Salvation\"?\n\n  * Sucked into the vacuum of a black hole\n\n  * Calling TikZ code several time to plot the same graph multiple time\n\n  * Call Managed Package Flow from Apex\n\n  * What does \"quod\" refer to in Vulgate in Matthew 26:75?\n\n  * An artist visits the future (the 1920's) and tries to write a story about it\n\n  * Convert Mathematica formulas to Julia\n\n  * ps: invalid option -- 'p'\n\n  * What rights do a dead body have? Can crimes be committed against one?\n\n  * Powers of 5 in an infinite product series\n\n  * If gravity is not a force, what makes massive objects spheroid?\n\n  * Curved beam on tikz\n\n  * Two passports, one name transliterated slightly differently\n\nlang-c\n\n  * Blog\n  * Facebook\n  * Twitter\n  * LinkedIn\n  * Instagram\n\nSite design / logo \u00a9 2024 Stack Exchange Inc; user contributions licensed\nunder CC BY-SA. rev 2024.5.3.8609\n\n## We Care About Your Privacy\n\nWe and our 4 partners store and/or access information on a device, such as\nunique IDs in cookies to process personal data. You may accept or manage your\nchoices by clicking below, including your right to object where legitimate\ninterest is used, or at any time in the privacy policy page. These choices\nwill be signaled to our partners and will not affect browsing data.\n\nCookie Policy.\n\n### We and our partners perform the following based on your settings:\n\nUse precise geolocation data. Actively scan device characteristics for\nidentification. Understand audiences through statistics or combinations of\ndata from different sources. Store and/or access information on a device.\nDevelop and improve services. Create profiles to personalise content. Measure\ncontent performance. Use limited data to select content. Measure advertising\nperformance. Use limited data to select advertising. Create profiles for\npersonalised advertising. Use profiles to select personalised advertising. Use\nprofiles to select personalised content.\n\n", "frontpage": false}
