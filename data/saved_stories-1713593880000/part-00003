{"aid": "40091174", "title": "OLAP = OLAP Cube. (2021)", "url": "https://www.holistics.io/blog/olap-is-not-olap-cube/", "domain": "holistics.io", "votes": 1, "user": "fanf2", "posted_at": "2024-04-19 19:42:04", "comments": 0, "source_title": "OLAP != OLAP Cube", "source_text": "OLAP != OLAP Cube\n\nBlog\n\nBusiness Intelligence Data Modeling\n\n# OLAP != OLAP Cube\n\nThere's a tendency for people to conflate OLAP with OLAP cube. We take a quick\nlook at how this happens, why it shouldn't, and why it matters if you're a\ndata practitioner.\n\nCedric Chin\n\nFeb 6, 2020 . 6 min read\n\nOne of the most consistent bits of confusion I\u2019ve seen in reaction to last\nweek\u2019s The Rise and Fall of the OLAP Cube is the perception that OLAP and OLAP\ncubes are the same thing.\n\nThey aren\u2019t.\n\nOLAP (short for \u2018online analytical processing\u2019) is a pattern of database usage\n\u2014 something I dedicated an entire section to in my original piece. Go read\nthat section if you\u2019re still confused; in a single sentence, OLAP is the type\nof work you must do if you are performing typical data analysis (e.g. you\nfilter a dataset based on some set of dimensions, aggregate values in the\ncollection, or present data across those dimensions).\n\nThe OLAP cube, on the other hand, is an efficient data structure used to\nperform OLAP workloads. I sometimes joke that OLAP cubes are just \u2018very\nsophisticated nested arrays\u2019 ... which has a grain of truth in it, but only if\nyou squint real hard.\n\nIn reality, OLAP cubes as they are implemented today are the result of over 40\nyears worth of research and development. Cubes are implemented with dozens of\noptimizations: these include advanced data compression techniques, various\nembedded data structures to help with indexing and filtering and scanning, and\nheuristics to figure out what to load into memory, what to pre-aggregate, and\nwhat to persist to disk.\n\nIn short: you may run OLAP workloads on an OLAP cube or in a columnar\ndatabase; OLAP != OLAP cube.\n\n## Why Understanding These Definitions Matter\n\nAt this point you might think \u201cthis seems like a definitional thing, why does\nit matter what words mean?\u201d But I think there are two reasons it matters.\n\nIt is important to understand the original meaning of those terms if you want\nto keep up with the evolving BI landscape.\n\nThe first reason is that accurate definitions are important if you want to\ntrack the latest developments in the field. The art of business intelligence\nadvances when new ideas are published in research papers and when new ideas\nare implemented in commercial products. More often than not, the marketing\nmaterials of these products use terminology that's inherited from academia.\n\nWhen a research paper says \u2018OLAP\u2019, for instance, they mean \u2018a type of\nworkload\u2019, and when they say \u2018OLAP cube\u2019 they mean \u2018a specific data\nstructure\u2019. It is thus important to understand the original meaning of those\nterms \u2014 at least, it is if you want to keep up with the evolving landscape. It\nis also important to understand these definitions if you want to evaluate\ncompeting offerings in both columnar and cube camps.\n\nThe second reason it matters is because it is helpful when you communicate\nwith other people in the data world. Because of widespread confusion,\ndifferent people mean different things when they say \u2018OLAP\u2019 and \u2018OLAP cube\u2019.\nIf you understand what alternative definitions exist, you\u2019ll be able to code-\nswitch and use their definitions instead. I believe using \u2018wrong\u2019 definitions\nmay sometimes be useful. After all, it can make for the difference between a\ngood discussion and a bad one: you either speak their language, or you talk\npast each other.\n\nBetter to understand what they mean, so you can do more of the former and less\nof the latter.\n\n## How People Conflate The Two Concepts\n\nThere are two ways that people conflate OLAP with OLAP cubes.\n\nThe first way is to believe that OLAP workloads can only run on top of cubes.\nTake this blog post by OLAP cube provider Kyligence, for instance, which says:\n\n> OLAP (short for OnLine Analytical Processing) is an approach designed to\n> quickly answer analytics queries involving multiple dimensions. It does this\n> by rolling up large, sometimes separate, datasets into a multidimensional\n> database known as an OLAP Cube.\n\nWikipedia also puts the two together in its article about OLAP:\n\n> At the core of any OLAP system is an OLAP cube (also called a\n> 'multidimensional cube' or a hypercube). It consists of numeric facts called\n> measures that are categorized by dimensions. The measures are placed at the\n> intersections of the hypercube, which is spanned by the dimensions as a\n> vector space.\n\nAs I\u2019ve written earlier, this is no longer the case: columnar data warehouses\nare now able to run large OLAP workloads, and they call for a slightly\ndifferent approach (you materialize views and/or persist them within the\nwarehouse, instead of extracting such data into cubes).\n\nTo be fair to these two pieces, it was true that OLAP meant using an OLAP\ncube, at least for much of the history of business intelligence. I don\u2019t mean\nto say that you can\u2019t do OLAP work with a traditional relational database\n(this is known as ROLAP, and is doable if a little annoying); the fact remains\nthat for the past 30 years, a cube was your best option if you wanted to do\nserious analysis on a large dataset.\n\nThe second way that people conflate the two ideas is to say that the OLAP cube\nis an abstract concept, and a columnar datastore is merely a way to implement\nthis concept. I refer to this comment on Hacker News:\n\n> It seems that the article makes a categorical error, arguing that OLAP cubes\n> were replaced by columnar data stores. I always understood OLAP cube as an\n> abstract concept that can have various technical implementations, while\n> column store is a kind of optimization in that technical implementation.\n\nAs well as this comment:\n\n> I have a slight problem with the terminology in the middle of the article,\n> as I'm so far down the rabbit-hole that I think of cubes as databases; I\n> suffer cognitive dissonance when I read about shifts from cubes to databases\n> etc. To me, a cube is just a fancy term for a table/view for a particular\n> use-case.\n\nThis confusion is understandable, because cube interfaces were widespread in\nthe old paradigm, and OLAP cubes were pretty much the only option for serious\nOLAP work not too long ago. To make matters worse, several relational\ndatabases implemented a cube operator in the 90s, which materialized cube-like\nviews for OLAP workloads, because, well, why not? (Gray, Bosworth, Lyaman &\nPirahesh, 1996)\n\nThere are two pieces of evidence that suggest this view is mistaken, however.\nThe first piece is from the mainstream columnar database providers themselves.\nYou\u2019ll note that BigQuery, Redshift and Snowflake will all say that they are\nwell suited for OLAP workloads, but will never say they are OLAP cubes. OLAP\ncubes may be materialized from columnar databases, but columnar databases are\nnot themselves cubes. They are simply two different things.\n\nThe second is to look at the research done on cubes from the beginning of\ntime. My first instinct here was to look for summary papers to see what they\nsaid of OLAP and OLAP cubes; I found Alfredo Cuzzocrea\u2019s paper on 10 years of\ncube compression techniques rather quickly (Cuzzocrea, 2010). Next, I searched\nthrough Cuzzocrea\u2019s publication history for an implementation paper, and found\none where the authors describe a mobile-oriented cube system (Cuzzocrea,\nFurfaro & Sacca, 2008).\n\nIn both papers, \u2018OLAP\u2019 meant \u2018workload type\u2019, and \u2018OLAP cube\u2019 (or \u2018data cube\u2019)\nmeant a specific data structure. I then skimmed their citations for prior\nwork, and was satisfied that this usage was consistent, stretching back to the\nearly 90s.\n\n## Conclusion\n\nI\u2019ve spent about a thousand words at this point explaining the differences\nbetween these two ideas, so I think I should wrap up.\n\nIn sum:\n\n  * OLAP is a type of database workload.\n  * OLAP cubes are a specific data structure designed for OLAP workloads\n  * Some people think that OLAP can only be implemented on top of OLAP cubes. This is mistaken.\n\nI\u2019ll admit that I\u2019ve written this piece for one other reason. When I first\nstarted in the world of Business Intelligence, I was terribly confused by the\nmarketing materials and random blog posts I would find on OLAP and OLAP cubes.\nIt was only in the process of writing my previous post that I finally sat down\nto dig into the history \u2014 and research! \u2014 of both concepts. This post presents\na summary of what I\u2019ve found.\n\nThe confusion between these two ideas are both widespread and real: to this\nvery day, we get emails from prospects asking us if they can create OLAP cubes\nwith Holistics. The answer is nuanced and rather difficult to articulate \u2014 it\nreally depends on what they mean by OLAP and what they mean by cube.\n\nMy hope now is that we can put these doubts to rest. I also hope that people\nwill stop writing \u2018the death of OLAP\u2019 articles; it really doesn\u2019t make sense\ngiven that OLAP is a form of database use. But I don\u2019t know \u2014 words are weird,\nand definitions are whatever people say they are. Perhaps it\u2019s too much to\nask.\n\n### What's happening in the BI world?\n\nJoin 30k+ people to get insights from BI practitioners around the globe. In\nyour inbox. Every week. Learn more\n\nNo spam, ever. We respect your email privacy. Unsubscribe anytime.\n\n#### Cedric Chin\n\nStaff writer at Holistics. Enjoys Python, coffee, green tea, and cats. I'd\nlove to talk to you about the future of business intelligence!\n\nRead More\n\n\u2014 The Holistics Blog \u2014\n\n### Business Intelligence\n\n  * 4 levels of Analytics-as-Code\n  * You\u2019re a Data Leader About to Get Laid Off. Here\u2019s What You Can Do\n  * Slice n' Dice: A Self-Service Story\n\nSee all 105 posts \u2192\n\nBusiness Intelligence Business Fundamentals\n\n## Developing an Intuitive Understanding of the SaaS Quick Ratio\n\nAn explanation of the SaaS Quick Ratio that focuses on the intuition behind\nthe metric. Written with the data analyst in mind.\n\nFebruary 13, 2020\n\nBusiness Intelligence Data Modeling\n\n## The Rise and Fall of the OLAP Cube\n\nA definitive history of the rise of the OLAP cube, how it's affected our\nindustry, and what comes after.\n\nJanuary 30, 2020\n\nThe Holistics Blog\n\n\u2014\n\nOLAP != OLAP Cube\n\nShare this\n\nThe Holistics Blog \u00a9 2024\n\n", "frontpage": false}
