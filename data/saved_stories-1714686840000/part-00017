{"aid": "40237352", "title": "Iopsystems/rezolus: Systems performance telemetry", "url": "https://github.com/iopsystems/rezolus", "domain": "github.com/iopsystems", "votes": 2, "user": "l2dy", "posted_at": "2024-05-02 15:27:04", "comments": 0, "source_title": "GitHub - iopsystems/rezolus: Systems performance telemetry", "source_text": "GitHub - iopsystems/rezolus: Systems performance telemetry\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\niopsystems / rezolus Public\n\n  * Notifications\n  * Fork 8\n  * Star 42\n\nSystems performance telemetry\n\n### License\n\n42 stars 8 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# iopsystems/rezolus\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n24 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nbrayniacrefactor bpf histogram indexing (#249)Apr 30, 202423b1eb8 \u00b7 Apr 30,\n2024Apr 30, 2024\n\n## History\n\n506 Commits  \n  \n### .github\n\n|\n\n### .github\n\n| give packaging workflow additional permissions (#192)| Mar 21, 2024  \n  \n### crates/systeminfo\n\n|\n\n### crates/systeminfo\n\n| add log level config (#246)| Apr 30, 2024  \n  \n### debian\n\n|\n\n### debian\n\n| Add support for cross compiling and arm64 debian package (#60)| Aug 23, 2023  \n  \n### rpm\n\n|\n\n### rpm\n\n| packaging: add basic rpm packing (#111)| Dec 1, 2023  \n  \n### src\n\n|\n\n### src\n\n| refactor bpf histogram indexing (#249)| Apr 30, 2024  \n  \n### .gitattributes\n\n|\n\n### .gitattributes\n\n| add gitattributes (#170)| Mar 15, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| initial commit| Aug 19, 2019  \n  \n### CHANGELOG.md\n\n|\n\n### CHANGELOG.md\n\n| prepare for release 3.14.2 (#237)| Apr 18, 2024  \n  \n### COPYRIGHT\n\n|\n\n### COPYRIGHT\n\n| feat: rewrite (#9)| Apr 25, 2023  \n  \n### Cargo.lock\n\n|\n\n### Cargo.lock\n\n| chore(deps): bump the cargo-dependencies group across 1 directory wit...|\nApr 30, 2024  \n  \n### Cargo.toml\n\n|\n\n### Cargo.toml\n\n| bump dependency versions in manifest (#244)| Apr 24, 2024  \n  \n### LICENSE-APACHE\n\n|\n\n### LICENSE-APACHE\n\n| feat: rewrite (#9)| Apr 25, 2023  \n  \n### LICENSE-MIT\n\n|\n\n### LICENSE-MIT\n\n| feat: rewrite (#9)| Apr 25, 2023  \n  \n### README.md\n\n|\n\n### README.md\n\n| add example grafana dashboard (#239)| Apr 18, 2024  \n  \n### build.rs\n\n|\n\n### build.rs\n\n| add network stats using bpf (#200)| Mar 25, 2024  \n  \n### config.toml\n\n|\n\n### config.toml\n\n| add log level config (#246)| Apr 30, 2024  \n  \n### dashboard.json\n\n|\n\n### dashboard.json\n\n| add example grafana dashboard (#239)| Apr 18, 2024  \n  \n## Repository files navigation\n\n# Rezolus\n\nRezolus captures and exports high resolution data about systems performance.\nIt sets itself apart from other telemetry agents by using:\n\n  * eBPF: Uses eBPF on Linux to instrument individual events and aggregate them into distributions. Rezolus will report on things like block io size and latency distributions, system call latency, TCP segment sizes, and more. By using eBPF we are able to instrument low-level events efficiently and provide new insights into system performance and workload characteristics.\n\n  * Perf Events: On x86_64 we support gathering data from the CPU using performance counters. Rezolus gathers information about instructions being retired, the number of CPU cyles, and fine-grained CPU frequency data. This helps expose how efficient workload execution is on the hardware.\n\n  * High frequency sampling: For traditional telemetry sources, Rezolus will sample at high frequency and provide summary statistics about behavior over time. By capturing data at high resolution, Rezolus is able to see spikes in utilization. Normally more data makes it more expensive to collect and store in your observability stack. But with Rezolus' summary statistics, these spikes will be reflected in percentile summaries. It's cheaper to export a few percentiles for each metrics than it is to collect on a secondly (or finer) basis.\n\n## Overview\n\nRezolus is designed to produce high resolution systems performance telemetry.\nIt has a collection of samplers which instrument various aspects of systems\nperformance including CPU, GPU, task scheduling, system calls, TCP, block IO,\nand more.\n\nAll of Rezolus's sampler focus on capturing key signals that can be used to\nunderstand how the workload is running on the underlying system. These\ninsights are useful for understanding where bottlenecks and optimization\nopportunities might be. With high frequency sampling and eBPF, Rezolus can\nalso provide insights into your workload itself like what typical block and\nnetwork IO sizes are, the number and type of system calls being executed, and\nif there's spikes in utilization metrics.\n\nRezolus provides valuable data about systems performance and can be used to\nroot cause production performance issues, capture better data in test\nenvironments, and provide signals for optimization efforts.\n\n### Configuration\n\nRezolus uses a TOML configuration. See config.toml in this project for an\nexample config file.\n\n### Dashboard\n\nIf you are running Prometheus and Grafana for collecting and visualizing\nmetrics, the dashboard.json file is an example Grafana dashboard that\ndemonstrates some ways to use the collected data. This can help you get\nstarted on your own dashboards.\n\n## Getting Help\n\nJoin our Discord server to ask questions and have discussions.\n\nIf you have a problem using Rezolus or a question about Rezolus that you can't\nfind an answer to, please open a new issue on GitHub\n\n## Building\n\nRezolus is built using the Rust toolchain. If you do not have the Rust\ntoolchain installed, please see rust-lang.org to get started with Rust.\n\n### Build Dependencies\n\nRust >= 1.70.0\n\nA default build of Rezolus that targets Linux systems will have BPF support\nenabled by default. For this build, in addition to the rust toolchain, you\nwill need:\n\n  * clang >= 11.0\n  * libelf-dev >= 0.183\n  * make >= 4.3\n  * pkg-config >= 0.29.2\n\nWhen building for non-Linux systems or without the default features to disable\nthe bpf feature, the only dependencies aside from the rust toolchain are:\n\n  * clang >= 11.0\n\nDebian and Ubuntu users can install all the required dependencies for a\ndefault build with:\n\n    \n    \n    sudo apt install clang libelf-dev make pkg-config\n\n### Steps\n\n  * clone this repository or transfer the contents of the repository to your build machine\n  * change directory into the repository root\n  * run cargo build in release mode\n\n    \n    \n    git clone https://github.com/iopsystems/rezolus cd rezolus cargo build --release\n\nNOTE: If you want to disable BPF support, you should build Rezolus with:\n\n    \n    \n    cargo build --release --no-default-features\n\n### Configuration\n\nAt this time, the configuration for Rezolus is very minimal with the only\noption being the listen address of the agent. See the config.toml file for an\nexample.\n\n### Installation\n\nYou can either manually install Rezolus and register it with your init system\n(eg systemd) or if you're using Debian or Ubuntu you can build a package for\nRezolus using dpkg-buildpackage -b in the repository root. Note: you will need\nboth devscripts and jq installed to generate the package.\n\n### Running\n\nYou may also run Rezolus manually after building from source. In the\nrepository root you can run:\n\n    \n    \n    sudo target/release/rezolus config.toml\n\n## Contributing\n\nTo contribute to Rezolus first check if there are any open pull requests or\nissues related to the bugfix or feature you wish to contribute. If there is\nnot, please start by opening a new issue on GitHub to either report the bug or\nget feedback on a new feature. This will allow one of the maintainers to\nconfirm the bug and provide early input on new features.\n\nOnce you're ready to contribute some changes, the workflow is:\n\n  * create a fork of this repository\n  * clone your fork and create a new feature branch\n  * make your changes and write a helpful commit message\n  * push your feature branch to your fork\n  * open a new pull request\n\n## License\n\nRezolus is dual-licensed under the Apache License v2.0 and the MIT License,\nunless otherwise specified.\n\nDetailed licensing information can be found in the COPYRIGHT document\n\n## About\n\nSystems performance telemetry\n\n### Resources\n\nReadme\n\n### License\n\nActivity\n\nCustom properties\n\n### Stars\n\n42 stars\n\n### Watchers\n\n2 watching\n\n### Forks\n\n8 forks\n\nReport repository\n\n## Releases 24\n\nv3.14.2 Latest\n\nApr 18, 2024\n\n\\+ 23 releases\n\n## Packages 0\n\nNo packages published\n\n## Contributors 17\n\n\\+ 3 contributors\n\n## Languages\n\n  * Rust 85.7%\n  * C 14.2%\n  * Shell 0.1%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
