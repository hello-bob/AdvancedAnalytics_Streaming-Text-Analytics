{"aid": "40274293", "title": "Tiobe 2024 May Headline: Fortran in the top 10, what is going on?", "url": "https://fortran-lang.discourse.group/t/fortran-returns-to-top-20-tiobe-index/1069?page=10", "domain": "fortran-lang.discourse.group", "votes": 2, "user": "zaikunzhang", "posted_at": "2024-05-06 13:19:27", "comments": 0, "source_title": "Fortran returns to top 20 TIOBE index - Fortran Discourse", "source_text": "Fortran returns to top 20 TIOBE index - Fortran Discourse\n\nSkip to main content\n\n# Fortran returns to top 20 TIOBE index\n\nYou have selected 0 posts.\n\nselect all\n\ncancel selecting\n\nFederchen\n\nSep 2023\n\nJust for the record: Fortran on position #11 (again) in September 2023,\nratings 1,28%.\n\nPersonally, I really can\u2019t judge about the metrics behind this. But what I can\nsee is a realistic chance for that programming language to become THE first\nclass dataflow-programming language within the next few years, based on\nserious research (in the RMA/PGAS area) over the past decade already.\n\nNevertheless, it\u2019s also the programmers job to solve some major issues with\nMPI RMA through a qualified programming model, namely to massively reduce the\ncost of synchronization: https://arxiv.org/pdf/2111.08142.pdf 18\n\ncertik\n\nSep 2023\n\nOk, this is interesting. According to TIOBE Index - TIOBE 18 :\n\nScreen Shot 2023-09-13 at 11.04.57 AM1920\u00d7674 56.2 KB\n\nThe last time the ranking was higher than the current rank of 1.28%, was on\nNovember 28, 2001, which is almost 22 years ago (the same ranking of 1.28% was\nalso temporarily reached on June 29, 2002).\n\nIt\u2019s hard to say if it means anything at all, without understanding how they\nrank it.\n\nThat being said, I see less and less of the \u201cFortran should die\u201d mentality at\nconferences. People are very very slowly, but surely being more positive\ntowards Fortran.\n\nPap\n\nSep 2023\n\nThe fact remains right there. We are dwarfed by an interpreted language taking\nup #1. And I don\u2019t have much kind words to say about most of the others on the\ntop of the list either. Who knows, maybe we will eventually see Intercal 3\nhigh-ranked as well - and not as a joke. Ah wait, Intercal is too old, and as\neveryone knows old is always bad. We need something more \u201cmodern\u201d... Maybe BS\n5 then, with 17-bit integers (sic), normal scalar variables that must be freed\nor memory leaks occur, and many many other amazing features... Yes, that one\nsounds like a good candidate for high ranks in the lists.\n\nO tempora, o mores...\n\nnbehrnd\n\ncertik\n\nSep 2023\n\nThank for pointing out the diagram\u2019s span is larger, than the recordings of\narchive\u2019s waybackmachine previously used provide (entry 86). Starting now with\nJune 2001, the local .csv now stores 260+ records (for six months the present\ndiagram does not provide data) one may access with AWK, grep, etc. Though the\nreadings of percentages eventually yielding an integer rank* are affected by\nthe number of programming languages each Tiobe survey considers significant\nenough, summer 2023 indeed was fruitful one:\n\n    \n    \n    | highest percentage | 1.46% | August 2001 | | lowest percentage | 0.22% | February 2020 | | highest rank | 11 | July 2023 (1.25%), September 2023 (1.28%) | | lowest rank | 50 | July 2020 (0.22%) |\n\n* The .csv retains this starting with the record about July 2016.\n\nvmagnin\n\nSep 2023\n\ncertik:\n\n> It\u2019s hard to say if it means anything at all, without understanding how they\n> rank it.\n\nAnd the definition and sources of the rank are probably ever evolving. 20\nyears ago the Web was so different: for example, no Facebook (2004), no\nTwitter/X (2006), and, more important concerning development, no GitHub\n(2008)! (it was the era of SourceForge (1999))\n\nBut on a shorter term, we can see that Fortran was in the TOP 20 for 9 months\nin 2021 (the year it went back), 5 months in 2022, and already 7 months in\n2023. A total of 21 months on the last 33 months (if we start in January\n2021). Being in the TOP 20 for 2/3 of the time looks like a signal, isn\u2019t it?\n\n24 days later\n\nvmagnin\n\nOct 2023\n\nOctober TIOBE index:\n\n    \n    \n    Rank Ratings Change 16 Fortran 1.02% +0.23%\n\n\u201cI have fallen but I am still there!\u201d (8th month in the TOP 20 in 2023)\n\n1 month later\n\nvmagnin\n\nNov 2023\n\nNovember TIOBE index:\n\n    \n    \n    Rank Ratings (annual)Change 12 Fortran 1.30% +0.74%\n\n\u201cI don\u2019t know if it means something, but the last time I was so high in\nratings was at Fall 2001, that is a fact\u201d: https://www.tiobe.com/tiobe-\nindex/fortran/ 18 \u201cA little more noise and I could surf on the 10th rank...\u201d\n\nRonShepard\n\nNov 2023\n\nvmagnin:\n\n> the last time I was so high in ratings was at Fall 2001\n\nThere are posts earlier in this thread that show it was ranked at 11 in July.\n\ncertik\n\nNov 2023\n\n@vmagnin solid. It\u2019s important to take a screenshot:\n\nScreen Shot 2023-11-10 at 4.52.52 PM1920\u00d71042 69.5 KB\n\nvmagnin\n\nNov 2023\n\nRonShepard:\n\n> There are posts earlier in this thread that show it was ranked at 11 in\n> July.\n\nYes, but the rating was 1.28%.\n\n> The ratings are calculated by counting hits of the most popular search\n> engines.\n\nThe plot I linked to is the evolution of the rating and Fortran is at the\nhighest since October/November 2001.\n\nAnd it is its 9th month in the TOP 20 in 2023.\n\nnbehrnd\n\nRonShepard\n\nNov 2023\n\nBoth July 2023 (1.25%) and September 2023 (1.28%) put Fortran highest at rang\n11. In percentage, however, August 2001 (1.46%) was the best. This however is\nin the (somewhat) \u00abdark ages\u00bb as I did not find a record by archive\u2019s\nwaybackmachine to add the rang into the curated .csv of entry 86 in this\nthread.\n\nRegarding percentage and rang, it seems worth to add some of Tiobe\u2019s\ninformation about the metric. To quote:\n\n\u00abThe data set runs from June 2001 till today. It started with 25 languages\nback in 2001, and now measures more than 150 languages once a month.\u00bb (source\n1, below the pull down how to access the complete data set [for 5k US$] /\nnominate an additional programming language)\n\n19 days later\n\nvmagnin\n\nNov 2023\n\nIn the magazine Linux Format of October 2023, you can read at the bottom of\nthe cover: \u201cFORTRAN DAYS - The oldest of codes remains the fastest\u201d\n\nDownload Free PDF Magazine - freepdfmagazine.com \u2013 26 Sep 23\n\n### Linux Format UK - Issue 307 - October 2023 - Download Free PDF Magazine\n-... 14\n\nLinux Format UK - Issue 307 - October 2023 Magazine - Download Free PDF\nMagazine on freepdfmagazine.com!\n\nEst. reading time: 2 minutes\n\nI have an official access to the paying content. The article is 4 pages long\nand its title is: \u201cFORTRAN - the first high-level language\u201d (uppercase is used\nin the whole paper). And the chapeau says:\n\n> It might have been the world\u2019s first high-level language, but Mike Bedford\n> discovers that FORTRAN is still alive and well today.\n\nOn the left of the first page, there is a frame about LFortran (@certik). And\nalso a frame about the TOP500 and exascale computing.\n\nOn the last page, the section \u201cFORTRAN today\u201d talks about its 14th place in\nthe TIOBE index (it was in August). They interviewed Rafik Zurob, IBM Open XL\nFortran compiler development manager, and this is the conclusion of the\narticle:\n\n> So, what are the benefits of FORTRAN that have contributed to its use today,\n> and how does it compare, in this respect, to more modern languages?\n> According to Rafik, \u201cFORTRAN is a high-level language that gives the\n> compiler more opportunities to optimise. An example of this is in the design\n> of pointers. FORTRAN lets the user specify targets a pointer can address.\n> This allows the compiler to construct a more precise aliasing analysis than\n> other languages like C, in which pointers can address anything.\u201d It remains\n> to be seen whether the likes of Python and Java are still attracting such\n> favourable comment in another half century.\n\nSee also the website of the magazine:\nhttps://linuxformat.com/archives?issue=307 10\n\nsamharrison7\n\nDec 2023\n\nI don\u2019t get to start many new Fortran projects these days (indeed, I don\u2019t get\nto write much Fortran at all). But I had the opportunity a few weeks back and\nit was probably the first time I had used a few of the things coming out of\nthis community in angst (rather than just on toy projects or testing with\nexisting code). I\u2019m convinced this is a big part around why Fortran is now\nconsistently high in the TIOBE index.\n\nI used fpm to build and pull in two libraries that I didn\u2019t know existed\nbefore (@jacobwilliams\u2019 csv-fortran 5 and argparse-f 6) and one that I\u2019ve\nwanted to find an excuse to use for a while (Fortran Lang\u2019s test-drive 7). I\nalso used LFortran to build the code. And honestly, it was magical joy where\neverything just worked. The libraries are excellent and well documented, fpm\nmade building them seamless and LFortran worked without a bug in site*.\n\nWhen I think back to the pain of many years ago - of manually downloading\nlibraries, trying (and failing) to build them, deciding whether to install and\nhave as a dependency vs copying the code into my project - this is a\nmonumental improvement. Back then, if a student wanted to do some simple\ncoding, modelling or data analysis, I would have probably recommend Python as\nquicker and easier to get started (with more libraries). Today, I would be\nhappy recommending Fortran**. I\u2019m sure this is being replicated in many\ninstitutes and hopefully, as the Fortran Lang tools (etc) mature, this will\nbecome more and more true.\n\nThe future is very bright for Fortran!\n\n*Sort of - LFortran compiles the internals of the code correctly but doesn\u2019t yet work for csv-fortran, which is just used for a wrapper around the main code. **Though we don\u2019t have something like Pandas for Fortran (yet), so if their analysis is heavy on 2D data processing, I might revert to Python...\n\n8 days later\n\nnbehrnd\n\nDec 2023\n\nvmagnin:\n\n> But on a shorter term, we can see that Fortran was in the TOP 20 for 9\n> months in 2021 (the year it went back), 5 months in 2022, and already 7\n> months in 2023.\n\nThe new numbers (December 2023) are compiled (cf entry 86 of this thread)\n\n> 2023-12, 1.07%, yearly comparison +0.64%, rank 12\n\nThis puts Fortran into the top 20 for the 10th month in 2023 (continuously,\nsince and including March). And while rank 20 was assigned twice in 2021, it\nonly was once in 2023:\n\n    \n    \n    |---------+--------+------| | 2023-01 | 0.45% | 27 | | 2023-02 | 0.58% | 24 | | 2023-03 | 0.79% | 17 | |---------+--------+------| | 2023-04 | 0.59% | 20 | | 2023-05 | 0.78% | 19 | | 2023-06 | 0.99% | 15 | |---------+--------+------| | 2023-07 | 1.25% | 11 | | 2023-08 | 1.03% | 14 | | 2023-09 | 1.28% | 11 | |---------+--------+------| | 2023-10 | 1.02% | 16 | | 2023-11 | 1.30% | 12 | | 2023-12 | 1.07% | 12 |\n\nAddition: data already in hand were reused for two visuals highlighting the\nyear-to-year comparison:\n\nThe combined scatter/Box plot, each dot is one distinctive level / \u00abTiobe\nrank\u00bb. On occasion, a level was assigned more than once, leading to a\nsuperposition of the dots. In the violin plot, the more frequent a \u00abTiobe\nrank\u00bb assigned, the wider the horizontal dimension of the shape. Though there\nare nicer ways to do this (Python pandas/seaborn?, R?), a brief copy-paste\ninto PAST4 3 did the job good enough to yield the overview (raw data shared\nbelow).\n\n2023-12-10_brief_inspection.zip.txt (164.0 KB)\n\nvmagnin\n\nDec 2023\n\nWe can also notice that it is cited in the text:\n\n> December Headline: C# on its way to become programming language of the year\n> 2023 Yes, I know, we have been here before. At the end of 2022, it looked\n> like C# would become the programming language of that year. But at the final\n> moment, C++ took the title unexpectedly. This year we are a bit surer that\n> C# is going to win. It gained +2.38% in 1 year, whereas its closest\n> contenders Fortran and F# only gained +0.64% and +0.48% respectively. It\n> might look a bit strange that most of the top 20 languages lost popularity\n> in 2023. So what happened? The answer lies in the long tail, where all the\n> small languages reside. Those are all moving up a bit and are getting closer\n> to the big languages.[...]\n\nAnecdotal things like this can be positive, as it could lead to a few articles\nin the tech journals. I don\u2019t know if the paper in the Linux Format magazine\ncame from reading the TIOBE, but it could.\n\n28 days later\n\nnbehrnd\n\nJan 7\n\nWhile updating the readings by Tiobe for January 2024 (rang 12, the eleventh\nmonth in a row Fortran is listed among the top 20), I notice Jansen\u2019s comment\nto review 2023 (emphases added):\n\n> For the first time in the history of the TIOBE index, C# has won the\n> programming language of the year award. Congratulations! C# has been a top\n> 10 player for more than 2 decades and now that it is catching up with the\n> big 4 languages, it won the well-deserved award by being the language with\n> the biggest uptick in one year (+1.43%). Runners up are Scratch (+0.83%) and\n> Fortran (+0.64%). C# is eating market share from Java and is getting more\n> and more popular in domains such as web application back ends and games\n> (thanks to Unity). C# can be used free of charge and evolves in a steady\n> pace, making the language more expressive every new release. C# is here to\n> stay and might even surpass Java soon.\n>\n> Apart from C#, there were a lot of interesting changes in the TIOBE index\n> last year. Fortran and Kotlin became permanent top 20 players replacing old-\n> time favorites R and Perl. Fortran is very fit to crunch numbers with good\n> libraries and remains a university favorite in lots of domains. Kotlin is\n> the easy to learn/write competitor of Java. Interesting question: what\n> languages will enter the TIOBE index top 20 in 2024? This is very hard to\n> predict. Julia touched the TIOBE index briefly in 2023, but couldn\u2019t keep\n> that position.* Maturity of the Julia language and community is needed to\n> get a second chance. [...]\n\nThe violin plot below can illustrate a little the evolution with readings\navailable (each dot one record of entry 86), a doodle by a snippet of R\nobtained with ChatGTP:\n\nviolon_plot1038\u00d7619 62.6 KB\n\n* In the present reading for January 2024, ranked at position 28.\n\nvmagnin\n\nJan 7\n\nOur Fortran logo appears in this blog post, at the beginning of a paragraph\nabout the first FORTRAN compiler:\n\nbinaire \u2013 8 Dec 23\n\n### Ce qu\u2019il faut savoir sur les compilateurs et leur v\u00e9rification (1/2) 16\n\nSandrine Blazy, Professeure \u00e0 l\u2019universit\u00e9 de Rennes et directrice adjointe de\nl'IRISA, est une sp\u00e9cialiste des compilateurs et des logiciels s\u00fbrs. Elle a\nd\u00e9velopp\u00e9 avec Xavier Leroy, CompCert, le premier compilateur pour le langage\nC v\u00e9rifi\u00e9 \u00e0...\n\n> Sandrine Blazy, Professor at the University of Rennes and Deputy Director of\n> IRISA, is a specialist in compilers and secure software. She developed with\n> Xavier Leroy, CompCert, the first compiler for the C language to be verified\n> with Coq.\n\nThe blog Binaire 1 is edited by the Soci\u00e9t\u00e9 Informatique de France on the site\nof the journal LeMonde.fr\n\ngak\n\nJan 11\n\nProfesseure Blazy taught sessions on CompCert at the Oregon Programming\nLanguage Summer School (OPLSS) last year (2023). I was really looking forward\nto these. (I got to attend some of the sessions before I caught COVID and had\nto isolate before leaving.)\n\nI think a noble goal would be to see CompCert Fortran some day.\n\n  * Requesting insights on the BLOCK construct for scoped variable declarations\n\n14 days later\n\nBeliavsky\n\nJan 26\n\nSurprised by the rise of Fortran in the TIOBE index, Txreq created an 8min20s\nvideo 12 about learning enough Fortran from the fortran-lang.org 2 site to\nmake a spinning donut. At 8:00 he says, \u201cthe single thing I hated about it is\nthe fact that you have to declare all of your variables right at the start of\nyour program\u201d. This is incorrect because of the Fortran 2008 block construct\n8.\n\nCodee, a tool vendor, has started a repo open-catalog 3\n\n> to consolidate the collective wisdom of performance experts on the best\n> practices for performance. It consists of a glossary and a list of checks\n> for the C, C++ and Fortran programming languages.\n\nThey make a similar mistake, writing 1\n\n> The Fortran programming language does not allow to declare variables inside\n> loops, in the statements of the loop body.\n\nabout which I raised an issue Fortran allows declaration of variables within\nloops, contrary to what PWR002 says \u00b7 Issue #1 \u00b7 codee-com/open-catalog \u00b7\nGitHub 13. There needs to be more awareness of the block construct of modern\nFortran. It could be discussed at Variables \u2014 Fortran Programming Language 10.\n\nPierU\n\nJan 26\n\nI\u2019m always amazed by people who learn <whatever a bit complex> in a few days\nand then teach the whole world about that. humility = tiny(x)\n\ndavidpfister\n\nBeliavsky\n\nJan 26\n\nThe block construct is indeed quite useful in this situation. In some specific\ncases the associate construct can also be quite handy to store the result of a\nfunction that returns a pointer without having to declare the variable.\n\n    \n    \n    associate(x => get_logger()) x%write(\"\") end associate ... function get_logger() result(res) type(logger), pointer :: res res => null() if (.not. allocated(internal_logger)) then call logger_initialize() end if res => internal_logger end function\n\n20 days later\n\nvmagnin\n\nFeb 15\n\nIn the TIOBE Index for February 2024, Fortran is #11, its highest position\n(the same as in July and September 2023). And its rating 28 (1.40%) is the\nhighest since 2001-09-28.\n\nnbehrnd\n\nFeb 15\n\nWorth to add: February 2024 (cf. entry 86) is the twelfth consecutive month\nTiobe reports Fortran on rank 20, or better. A residence in the set of \u00abtop\n20\u00bb this long is a first time since 2017 with records by Tiobe in archive\u2019s\nwaybackmachine. We\u2019ll see if the data continue to move towards the favourable\ndirection (in reference to the violon plot of entry 181).\n\n23 days later\n\nzaikunzhang\n\nMar 10\n\nMarch 2024: #14, 1.22% March 2023: #17, 0.79%\n\nhttps://www.tiobe.com/tiobe-index/ 28\n\n28 days later\n\nnbehrnd\n\n28d\n\nApril 2024: for the first time since July 2016, Fortran is among Tiobe\u2019s top\n10 languages on rank 10. Percentage-wise, 1.47% as for Delphi/Object Pascal\n(permalink 11).\n\nvmagnin\n\n28d\n\nnbehrnd:\n\n> for the first time since July 2016\n\nProbably even since the TIOBE index was launched? (2001?)\n\nhttps://www.tiobe.com/tiobe-index/fortran/ 16\n\n> Highest Position (since 2001): #10 in Apr 2024\n\nAnd its April 1.47% rating is higher than the 1.46% of the 30th August 2001.\n\nPierU\n\nnbehrnd\n\n28d\n\nFortran is becoming too trendy... I\u2019m switching to Cobol.\n\nvmagnin\n\n28d\n\nApril fools?\n\nBeliavsky\n\nnbehrnd\n\n28d\n\nGlad to see this, but I strongly doubt that #11 Delphi/Object Pascal is more\npopular than #19 Rust or #20 R. The top 7 (in order, Python, C, C++, Java, C#,\nJavaScript, Go) seem right, but starting with #8 Visual Basic I wonder about\nthe rankings.\n\nWe know the Tiobe Index is fishy, but hopefully some people will be encouraged\nto try Fortran because of its top-10 Tiobe ranking.\n\nPierU\n\n28d\n\nBeliavsky:\n\n> I strongly doubt that #11 Delphi/Object Pascal is more popular than #19 Rust\n> or #20 R\n\nMaybe yes, maybe no, depends what \u201cpopular\u201d means... Delphi/O.Pascal has\nprobably an existing code base that make it \u201cpopular\u201d to some degree.\n\nBeliavsky:\n\n> but starting with #8 Visual Basic I wonder about the rankings.\n\nI would say that starting from #7 Go, all the percentages are clustered and\nthe intervals are probably smaller than the uncertainty of the \u201cpopularity\u201d\nmeasure.\n\ncertik\n\n28d\n\nArchiving the graph.\n\nScreen Shot 2024-04-08 at 7.30.22 AM1920\u00d7826 69.3 KB\n\n> We know the Tiobe Index is fishy,\n\nIt\u2019s very accurate this month.\n\nvmagnin\n\n28d\n\nBeliavsky:\n\n> Glad to see this, but I strongly doubt that #11 Delphi/Object Pascal is more\n> popular than #19 Rust or #20 R. The top 7 (in order, Python, C, C++, Java,\n> C#, JavaScript, Go) seem right, but starting with #8 Visual Basic I wonder\n> about the rankings.\n\nAt least, Visual Basic is embedded in MS OFFICE. So it is a major macro\nlanguage.\n\nConcerning Delphi, I was surprised to learn that it is used in softwares like\nSkype and Kaspersky Anti-Virus. I guess it is mainly for the GUI part.\n\nnbehrnd\n\n24d\n\nBeliavsky:\n\n> We know the Tiobe Index is fishy\n\nHow the data are queried and processed by Tiobe is a black box (or is there a\npublic repository of their algorithm used, allowing a replication?). With the\nadvent of new programming languages, climbing to 1% today in 2024 probably is\nof different value, than it was in 2002 (or are the tokens of popularity\nlimited, as for Bitcoin?). Which is why the eventually assigned rank, e.g.,\n#10 for April 2024 could be slightly more meaningful, than the percentage \u2013\nthough without knowing the number of all competitors considered, still vague.\n\n23 days later\n\nvmagnin\n\n7h\n\nThe May TIOBE Index 20 is all about Fortran:\n\n> May Headline: Fortran in the top 10, what is going on? I have received a lot\n> of questions why Fortran entered the top 10 again after more than 20 years.\n> The TIOBE index just publishes what has been measured. There are for\n> instance more than 1,000 hits for \u201cFortran programming\u201d on Amazon, which is\n> the leading company in books. New cool languages such as Kotlin and Rust,\n> barely hit 300 books for the same search query. So, what is going on? First\n> of all, the Fortran language is still evolving since its inception in 1957.\n> Less than half a year ago, the new ISO Fortran 2023 definition was\n> published. The main reason for Fortran\u2019s resurrection is the growing\n> importance of numerical/mathematical computing. Despite lots of competitors\n> in this field, Fortran has its reason for existence. Let\u2019s briefly check the\n> competition out. Python: choice number one, but slow, MATLAB: very easy to\n> use for mathematical computation but it comes with expensive licenses,\n> C/C++: mainstream and fast, but they have no native mathematical computation\n> support, R: very similar to Python, but less popular and slow, Julia: the\n> rising new kid on the block, but not mature yet. And in this jungle of\n> languages, Fortran appears to be fast, having native mathematical\n> computation support, mature, and free of charge. Silently, slowly but\n> surely, Fortran gains ground. It is surprising but undeniable. \u2013Paul Jansen\n> CEO TIOBE Software\n\nRank 10 like in April, rating 1.24%.\n\nBeliavsky\n\n2h\n\nIt is easy to start with a conclusion and then find reasons for it. So often\npeople have started with the conclusion that Fortran is obsolete and then\njustified that assertion based on what is in FORTRAN 77. The TIOBE quote is\nunfair to other languages, for example the assertion that C++ has \u201cno native\nmathematical computation support\u201d. The native array in C and C++ is lacking,\nbut there are C++ array class libraries such as Eigen and Armadillo. C++ has\nspecial functions 2 that are not in the Fortran standard. It has a wider range\nof uniform RNG and has non-uniform RNG that Fortran does not have. People\nknowledgeable about C++ could say more.\n\nIf I were an academic who wanted to disseminate a statistical algorithm, I\u2019d\ncreate an R package (perhaps with underlying Fortran code). There is no\nFortran equivalent to the massive CRAN package repository 2, although efforts\nare underway.\n\n### Related Topics\n\nTopic| Replies| Views| Activity  \n---|---|---|---  \nFortran is back on the TIOBE Top 20 list| 1.4k| Apr 2021  \nTop 10 has never been so close| 559| Jul 2023  \nA video showing \u201cMost Popular Programming Languages 1965 - 2019\u201d| 354| Dec\n2022  \nIEEE Spectrum programming language ranks| 479| Aug 2021  \nStack Overflow 2022 surveyAnnouncements| 715| Jun 2022  \n  \nPowered by Discourse\n\n", "frontpage": false}
