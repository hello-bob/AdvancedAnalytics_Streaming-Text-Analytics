{"aid": "40253775", "title": "Playing with Rich", "url": "https://www.chiark.greenend.org.uk/~cjwatson/blog/playing-with-rich.html", "domain": "greenend.org.uk", "votes": 1, "user": "edward", "posted_at": "2024-05-04 00:23:34", "comments": 0, "source_title": "Playing with rich", "source_text": "Playing with rich | Colin Watson's blog\n\n# May 03 2024 Playing with rich\n\nOne of the things I do as a side project for Freexian is to work on various\nbits of business automation: accounting tools, programs to help contributors\nreport their hours, invoicing, that kind of thing. While it\u2019s not quite my\nusual beat, this makes quite a good side project as the tools involved are\nmostly rather sensible and easy to deal with (Python, git, ledger, that sort\nof thing) and it\u2019s the kind of thing where I can dip into it for a day or so a\nweek and feel like I\u2019m making useful contributions. The logic can be quite\ncomplex, but there\u2019s very little friction in the tools themselves.\n\nA recent case where I did run into some friction in the tools was with some\ncommands that need to present small amounts of tabular data on the terminal,\nusing OSC 8 hyperlinks if the terminal supports them: think customer-related\ninformation with some links to issues. One of my colleagues had previously\ndone this using a hack on top of texttable, which was perfectly fine as far as\nit went. However, now I wanted to be able to add multiple links in a single\ntable cell in some cases, and that was really going to stretch the limits of\nthat approach: working out the width of the displayed text in the cell was\ngoing to take an annoying amount of bookkeeping.\n\nI started looking around to see whether any other approaches might be easier,\nwithout too much effort (remember that \u201ca day or so a week\u201d bit above).\nansiwrap looked somewhat promising, but it isn\u2019t currently packaged in Debian,\nand it would have still left me with the problem of figuring out how to\nintegrate it into texttable, which looked like it would be quite complicated.\nThen I remembered that I\u2019d heard good things about rich, and thought I\u2019d take\na look.\n\nrich turned out to be exactly what I wanted. Instead of something like this\nbased on the texttable hack above:\n\n    \n    \n    import shutil from pyxian.texttable import UrlTable termsize = shutil.get_terminal_size((80, 25)) table = UrlTable(max_width=termsize.columns) table.set_deco(UrlTable.HEADER) table.set_cols_align([\"l\"]) table.set_cols_dtype([\"u\"]) table.add_row([\"Issue\"]) table.add_row([(issue_url, f\"#{issue_id}\")] print(table.draw())\n\n... now I can do this instead:\n\n    \n    \n    import rich from rich import box from rich.table import Table table = Table(box=box.SIMPLE) table.add_column(\"Issue\") table.add_row(f\"[link={issue_url}]#{issue_id}[/link]\") rich.print(table)\n\nWhile this is a little shorter, the real bonus is that I can now just put\nmultiple [link] tags in a single string, and it all just works. No ceremony.\nIn fact, once the relevant bits of code passed type-checking (since the real\ncode is a bit more complex than the samples above), it worked first time. It\u2019s\na pleasure to work with a library like that.\n\nIt looks like I\u2019ve only barely scratched the surface of rich, but I expect\nI\u2019ll reach for it more often now.\n\nPosted by Colin Watson on 2024-05-03 in columbiform. Tags: columbiform,\nfreexian, planet-debian, planet-ubuntu.\n\n", "frontpage": false}
