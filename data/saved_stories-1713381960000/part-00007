{"aid": "40063001", "title": "Stacked Pull Requests on GitHub", "url": "https://github.com/ejoffe/spr", "domain": "github.com/ejoffe", "votes": 1, "user": "marcosfelt", "posted_at": "2024-04-17 11:19:13", "comments": 0, "source_title": "GitHub - ejoffe/spr: Stacked Pull Requests on GitHub", "source_text": "GitHub - ejoffe/spr: Stacked Pull Requests on GitHub\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nejoffe / spr Public\n\n  * Notifications\n  * Fork 61\n  * Star 630\n\nStacked Pull Requests on GitHub\n\n### License\n\nMIT license\n\n630 stars 61 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# ejoffe/spr\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n62 Branches\n\n60 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nsimenbrekken-vismaandejoffeEnsure repository owner names allow dashesMar 15,\n2024e2eb786 \u00b7 Mar 15, 2024Mar 15, 2024\n\n## History\n\n244 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| Upgrade github cd go version to v1.21| Sep 27, 2023  \n  \n### cmd\n\n|\n\n### cmd\n\n| Check for backslashes in remote branch name| Jan 12, 2024  \n  \n### config\n\n|\n\n### config\n\n| Ensure repository owner names allow dashes| Mar 15, 2024  \n  \n### docs\n\n|\n\n### docs\n\n| update readme| Aug 7, 2021  \n  \n### git\n\n|\n\n### git\n\n| Fix remote origin branch config| Sep 7, 2023  \n  \n### github\n\n|\n\n### github\n\n| update gh login instructions after gh CLI storage update| Mar 15, 2024  \n  \n### pretty\n\n|\n\n### pretty\n\n| Remove branch name from pr namespace.| Apr 22, 2023  \n  \n### spr\n\n|\n\n### spr\n\n| Add BranchPushIndividually repo config| Dec 18, 2023  \n  \n### terminal\n\n|\n\n### terminal\n\n| Fix some go lints| Jul 7, 2021  \n  \n### tools\n\n|\n\n### tools\n\n| switch graphql client to use fezzik| Jul 25, 2022  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Fix PreserveTitleAndBody bug| Aug 12, 2022  \n  \n### .goreleaser.yml\n\n|\n\n### .goreleaser.yml\n\n| Get rid of space at the end of archive name| Jul 10, 2023  \n  \n### .spr.yml\n\n|\n\n### .spr.yml\n\n| config : remove old field| Jun 1, 2023  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| spr : stacked diff pull requests using github| May 23, 2021  \n  \n### Makefile\n\n|\n\n### Makefile\n\n| Address deprecation warning on goreleaser's --rm-dist| Jul 5, 2023  \n  \n### go.mod\n\n|\n\n### go.mod\n\n| Remove merge queue from query is feature is disabled| Dec 7, 2023  \n  \n### go.sum\n\n|\n\n### go.sum\n\n| Remove merge queue from query is feature is disabled| Dec 7, 2023  \n  \n### readme.md\n\n|\n\n### readme.md\n\n| remove > from the installation instructions| Mar 15, 2024  \n  \n## Repository files navigation\n\n## GraphQL Users\n\nCheckout my company Inigo for the best holistic platform for your api.\n\n# Stacked Pull Requests on GitHub\n\nEasily manage stacks of pull requests on GitHub. git spr is a client side tool\nthat achieves a simple streamlined stacked diff workflow using github pull\nrequests and branches. git spr manages your pull request stacks for you, so\nyou don't have to.\n\nWith git spr each commit becomes a pull request, and each branch becomes a\nstack of pull requests. This allows for multiple commits to be stacked on top\nof each other in a single branch, avoiding the overhead of starting a new\nbranch for every new change or feature. Small changes and pull requests are\neasy and fast to achieve. One doesn't have to worry about stacked branches on\ntop of each other and managing complicated pull request stacks. The end result\nis a more streamlined faster software development cycle.\n\n## Installation\n\n### Brew\n\n    \n    \n    brew tap ejoffe/homebrew-tap brew install ejoffe/tap/spr\n\n### Apt\n\n    \n    \n    echo \"deb [trusted=yes] https://apt.fury.io/inigolabs/ /\" | sudo tee /etc/apt/sources.list.d/inigolabs.list sudo apt update sudo apt install spr\n\n### Manual\n\nDownload the pre-compiled binaries from the releases page and copy to your bin\npath.\n\n### From source\n\nInstall goreleaser and run make. Binaries can be found in the dist directory.\n\n    \n    \n    make bin\n\n## Workflow\n\nCommit your changes to a branch as you normally do. Note that every commit\nwill end up becoming a pull request.\n\n    \n    \n    > touch feature_1 > git add feature_1 > git commit -m \"Feature 1\" > touch feature_2 > git add feature_2 > git commit -m \"Feature 2\" > touch feature_3 > git add feature_3 > git commit -m \"Feature 3\"\n\nThe subject of the commit message will be the title of the pull request, and\nthe body of the message will be the body of the pull request. If you have a\nwork in progress change that you want to commit, but don't want to create a\npull request yet, start the commit message with all caps WIP. The spr script\nwill not create a pull request for any commit which starts with WIP, when you\nare ready to create a pull request remove the WIP. There is no need to create\nnew branches for every change, and you don't have to call git push to get your\ncode to github. Instead just call git spr update.\n\n## Managing Pull Requests\n\nRun git spr update to sync your whole commit stack to github and create pull\nrequests for each new commit in the stack. If a commit was amended the pull\nrequest will be updated automatically. The command outputs a list of your open\npull requests and their status. git spr update pushes your commits to github\nand creates pull requests for you, so you don't need to call git push or open\npull requests manually in the UI.\n\n    \n    \n    > git spr update [\u231b\u274c\u2705\u274c] 60: Feature 3 [\u2705\u2705\u2705\u2705] 59: Feature 2 [\u2705\u2705\u2705\u2705] 58: Feature 1\n\nTo update only part of the stack use the --count flag with the number of pull\nrequests in the stack that you would like to update. Pull requests will be\nupdated from the bottom of the stack upwards.\n\n## Amending Commits\n\nWhen you need to update a commit, either to fix tests, update code based on\nreview comments, or just need to change something because you feel like it.\nYou should amend the commit. Use git amend to easily amend your changes\nanywhere in the stack. Stage the files you want to amend, and instead of\ncalling git commit, use git amend and choose the commit you want to amend when\nprompted.\n\n    \n    \n    > touch feature_2 > git add feature_2 > git amend 3 : 5cba235d : Feature 3 2 : 4dc2c5b2 : Feature 2 1 : 9d1b8193 : Feature 1 Commit to amend [1-3]: 2\n\n## Merge Status Bits\n\nEach pull request has four merge status bits signifying the request's ability\nto be merged. For a request to be merged, all required status bits need to\nshow \u2714. Each status bit has the following meaning:\n\n  1. github checks run and pass\n\n  * \u231b : pending\n  * \u274c : some check failed\n  * \u2705 : all checks pass\n  * \u2796 : checks are not required to merge (can be configured in yml config)\n\n  2. pull request approval\n\n  * \u274c : pull request hasn't been approved\n  * \u2705 : pull request is approved\n  * \u2796 : approval is not required to merge (can be configured in yml config)\n\n  3. merge conflicts\n\n  * \u274c : commit has conflicts that need to be resolved\n  * \u2705 : commit has no conflicts\n\n  4. stack status\n\n  * \u274c : commit has other pull requests below it that can't merge\n  * \u2705 : all commits below this one are clear to merge\n\nPull request approval and checks requirement can be disabled in the config\nfile, see configuration section below for more details.\n\n## Show Current Pull Requests\n\nUse git spr status to see the status of your pull request stack. In the\nfollowing case three pull requests are all green and ready to be merged, and\none pull request is waiting for review approval.\n\n    \n    \n    > git spr status [\u2705\u274c\u2705\u2705] 61: Feature 4 [\u2705\u2705\u2705\u2705] 60: Feature 3 [\u2705\u2705\u2705\u2705] 59: Feature 2 [\u2705\u2705\u2705\u2705] 58: Feature 1\n\n## Merging Pull Requests\n\nYour pull requests are stacked. Don't use the GitHub UI to merge pull\nrequests, if you do it in the wrong order, you'll end up pushing one pull\nrequest into another, which is probably not what you want. Instead just use\ngit spr merge and you can merge all the pull requests that are mergeable in\none shot. Status for the remaining pull requests will be printed after the\nmerged requests. In order to merge all pull requests in one shot without\ncausing extra github checks to trigger, spr finds the top mergeable pull\nrequest. It then combines all the commits up to this pull request into one\nsingle pull request, merges this request, and closes the rest of the pull\nrequests. This is a bit surprising at first, and has some side effects, but no\nbetter solution has been found to date.\n\n    \n    \n    > git spr merge MERGED #58 Feature 1 MERGED #59 Feature 2 MERGED #60 Feature 3 [\u2705\u274c\u2705\u2705] 61: Feature 4\n\nTo merge only part of the stack use the --count flag with the number of pull\nrequests in the stack that you would like to merge. Pull requests will be\nmerged from the bottom of the stack upwards.\n\n    \n    \n    > git spr merge --count 2 MERGED #58 Feature 1 MERGED #59 Feature 2 [\u2705\u274c\u2705\u2705] 61: Feature 4 [\u2705\u2705\u2705\u2705] 60: Feature 3\n\nBy default merges are done using the rebase merge method, this can be changed\nusing the mergeMethod configuration.\n\n## Starting a New Stack\n\nStarting a new stack works by creating a new branch. For example, if you want\nto start a new stack from the latest pushed state of your current branch, use\ngit checkout -b new_branch @{push}.\n\n## Configuration\n\nWhen the script is run for the first time two config files are created.\nRepository configuration is saved to .spr.yml in the repository base\ndirectory. User specific configuration is saved to .spr.yml in the user home\ndirectory.\n\nRepository Config| Type| Default| Description  \n---|---|---|---  \nrequireChecks| bool| true| require checks to pass in order to merge  \nrequireApproval| bool| true| require pull request approval in order to merge  \ngithubRepoOwner| str| name of the github owner (fetched from git remote\nconfig)  \ngithubRepoName| str| name of the github repository (fetched from git remote\nconfig)  \ngithubRemote| str| origin| github remote name to use  \ngithubBranch| str| main| github branch for pull request target  \ngithubHost| str| github.com| github host, can be updated for github enterprise\nuse case  \nmergeMethod| str| rebase| merge method, valid values: [rebase, squash, merge]  \nmergeQueue| bool| false| use GitHub merge queue to merge pull requests  \nprTemplatePath| str| path to PR template (e.g.\n.github/PULL_REQUEST_TEMPLATE/pull_request_template.md)  \nprTemplateInsertStart| str| text to search for in PR template that determines\nbody insert start location  \nprTemplateInsertEnd| str| text to search for in PR template that determines\nbody insert end location  \nmergeCheck| str| enforce a pre-merge check using 'git spr check'  \nforceFetchTags| bool| false| also fetch tags when running 'git spr update'  \nbranchNameIncludeTarget| bool| false| include target branch name in pull\nrequest branch name  \nshowPrTitlesInStack| bool| false| show PR titles in stack description within\npull request body  \nbranchPushIndividually| bool| false| push branches individually instead of\natomically (only enable to avoid timeouts)  \nUser Config| Type| Default| Description  \n---|---|---|---  \nshowPRLink| bool| true| show full pull request http link  \nlogGitCommands| bool| true| logs all git commands to stdout  \nlogGitHubCalls| bool| true| logs all github api calls to stdout  \nstatusBitsHeader| bool| true| show status bits type headers  \nstatusBitsEmojis| bool| true| show status bits using fancy emojis  \ncreateDraftPRs| bool| false| new pull requests are created as draft  \npreserveTitleAndBody| bool| false| updating pull requests will not overwrite\nthe pr title and body  \nnoRebase| bool| false| when true spr update will not rebase on top of origin  \n  \n## Happy Coding!\n\nIf you find a bug, feel free to open an issue. Pull requests are welcome.\n\nIf you find this script as useful as I do, add a star and tell your fellow\ngithubers.\n\n## License\n\n  * MIT License\n\n## About\n\nStacked Pull Requests on GitHub\n\n### Topics\n\ngithub git pull-requests code-reviews\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n630 stars\n\n### Watchers\n\n2 watching\n\n### Forks\n\n61 forks\n\nReport repository\n\n## Releases 45\n\nv0.14.9 Latest\n\nMar 15, 2024\n\n\\+ 44 releases\n\n## Packages 0\n\nNo packages published\n\n## Contributors 33\n\n\\+ 19 contributors\n\n## Languages\n\n  * Go 100.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
