{"aid": "40069974", "title": "AsyncAPI v3 Feedback", "url": "https://github.com/asyncapi/jasyncapi/discussions/190", "domain": "github.com/asyncapi", "votes": 1, "user": "pakisan", "posted_at": "2024-04-17 20:56:24", "comments": 0, "source_title": "It's feedback time \ud83d\udc40 \u00b7 asyncapi/jasyncapi \u00b7 Discussion #190", "source_text": "It's feedback time \ud83d\udc40 \u00b7 asyncapi/jasyncapi \u00b7 Discussion #190 \u00b7 GitHub\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nasyncapi / jasyncapi Public\n\n  * Notifications\n  * Fork 22\n  * Star 61\n\n# It's feedback time \ud83d\udc40 #190\n\nPakisan announced in Announcements\n\nIt's feedback time \ud83d\udc40 #190\n\nPakisan\n\nMar 25, 2024 \u00b7 1 comments \u00b7 3 replies\n\nReturn to top\n\nDiscussion options\n\n##\n\nPakisan\n\nMar 25, 2024\n\nMaintainer\n\nOriginal comment in English -\n\nHey, it's Pavel, maintainer of AsyncAPI Java bindings and plugin for\nJetBrainsI want to ask you to share your experience with JAsyncAPI and\nJAsyncAPI IDEA plugin to better understand your expectations and your opinion\nabout the current stateI welcome any feedback, whether it's positive or\nnegativeFor example:\n\n  * I don't use AsyncAPI and I don't have plans, because of\n  * I was using AsyncAPI, but due to , I have stopped using it\n  * I am currently using AsyncAPI in my projects and I aim to change several aspects\n\n  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nYou must be logged in to vote\n\n## Replies: 1 comment \u00b7 3 replies\n\nComment options\n\n###\n\nerosb\n\nMar 26, 2024\n\n-\n\nHello @Pakisan thank you for raising this topic. I don't use AsyncAPI, because\nI haven't found enough java tooling (at least, when I looked for it last\nsummer).My usecases are the followings:\n\n## Verifying consumed messages in tests\n\nGiven I'm writing a test, that sends a message to my application (and verified\nit is processed properly) When my test runs Then I want to verify that the\nmessage sent from my test conforms to the AsyncAPI specification, so that I\nmake sure both my test and production code conforms to the AsyncAPI\nspec.Rationale: it is possible to write both production code and test code in\na way that the test is passing; still, without additional test tooling,\nnothing ensures that the messaging conforms to the AsyncAPI spec, which will\nyield an error only after my tests are ran and my service is integrated with\nan other service, publishing that message. I want to prevent such situation by\nvalidating both the production and test code against the AsyncAPI contract.\n\n## Verifying published messages in tests\n\nGiven I'm writing an integration test When my application sends a message Then\nI want my integration test to verify that the outgoing message conforms to the\nAsyncAPI specRationale: same as above, but this time my service is the\npublisher (and not the consumer) of the message\n\n## Verifying received messages in production\n\nGiven my service is running When an incoming message received by my service\nThen I want to check if the message payload, metadata, subscription etc.\nconforms to my AsyncAPI specification.Rationale: when something goes wrong,\nwhen 2 services integrate via messaging, it is important to know which party\nbroke the AsyncAPI contract.Summary: I need proper validators pluggable into\nthe frameworks I use (partly JMS, party Azure Service Bus client library). I\nwould like to use these to do contract-first development & verify conformity\nto the AsyncAPI contract, when I integ-test my service in isolation (without\nthe other publisher/consumer services). I'm much less interested in code\ngenerators.In case of REST interfaces (OpenAPI), I could put it together the\ncontract-first development flow with openapi4j, RestAssured and a servlet\nfilter, but for messaging (AsyncAPI) I haven't found the necessary tooling.  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nYou must be logged in to vote\n\n3 replies\n\nComment options\n\n####\n\nPakisan Mar 26, 2024\n\nMaintainer Author\n\n-\n\nHi @erosb, thanks for great scenario!Did you try Microcks? You can mock\nOpenAPI/AsyncAPI specifications to receive \"live\" request or events to ensure\nthat your application will handle them in correct way?  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\nerosb Mar 26, 2024\n\n-\n\nThank you @Pakisan we will definitely look into it!  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\nPakisan Mar 26, 2024\n\nMaintainer Author\n\n-\n\nIf you are using Spring, you can check out SpringWolf to generate\nspecification from your code, at runtime and expose web view to interact with\nconfigured brokerI wrote demo, for conference,\nhttps://github.com/Pakisan/podlodka-java-crew-4. I need to finish Microcks\npart(push docker compose), but anyway is good point to start  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nSign up for free to join this conversation on GitHub. Already have an account?\nSign in to comment\n\nCategory\n\nAnnouncements\n\nLabels\n\nNone yet\n\n2 participants\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
