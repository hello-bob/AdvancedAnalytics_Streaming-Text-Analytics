{"aid": "40187656", "title": "Zilog Z80 CPU \u2013 Modern, free and open source silicon clone", "url": "https://github.com/rejunity/z80-open-silicon", "domain": "github.com/rejunity", "votes": 57, "user": "jnord", "posted_at": "2024-04-28 11:03:45", "comments": 3, "source_title": "GitHub - rejunity/z80-open-silicon: Z80 open-source silicon. Goal is to become a silicon proven, pin compatible, open-source replacement for classic Z80.", "source_text": "GitHub - rejunity/z80-open-silicon: Z80 open-source silicon. Goal is to become\na silicon proven, pin compatible, open-source replacement for classic Z80.\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nrejunity / z80-open-silicon Public\n\ngenerated from TinyTapeout/tt07-verilog-template\n\n  * Notifications\n  * Fork 3\n  * Star 62\n\nZ80 open-source silicon. Goal is to become a silicon proven, pin compatible,\nopen-source replacement for classic Z80.\n\nrejunity.github.io/z80-open-silicon/\n\n### License\n\nApache-2.0 license\n\n62 stars 3 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# rejunity/z80-open-silicon\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nrejunityUpdate README.mdApr 27, 2024974c771 \u00b7 Apr 27, 2024Apr 27, 2024\n\n## History\n\n36 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| Initial commit| Apr 21, 2024  \n  \n### docs\n\n|\n\n### docs\n\n| Rotated GDS images 180 degrees to match with the overall chip layout| Apr\n27, 2024  \n  \n### gds/tinytapeout_07_skywater130A\n\n|\n\n### gds/tinytapeout_07_skywater130A\n\n| Renamed folder| Apr 27, 2024  \n  \n### src\n\n|\n\n### src\n\n| Should be able to fit in 4 tiles| Apr 21, 2024  \n  \n### test\n\n|\n\n### test\n\n| Makefile and basic tests (NOP, LD)| Apr 21, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Initial commit| Apr 21, 2024  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Initial commit| Apr 21, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| Update README.md| Apr 27, 2024  \n  \n### info.yaml\n\n|\n\n### info.yaml\n\n| Formatting outputs in info.yaml| Apr 26, 2024  \n  \n## Repository files navigation\n\n# Announcement\n\nOn April 15 of 2024 Zilog has announced End-of-Life for Z80, one of the most\nfamous 8-bit CPUs of all time.\n\nIt is a time for open-source and hardware preservation community to step in\nwith a Free and Open Source Silicon (FOSS) replacement for Zilog Z80.\n\nThe first fabrication of FOSS Z80 is scheduled for June of 2024!\n\n# Zilog Z80 modern free and open source silicon clone\n\nOn the path to become a silicon proven, pin compatible, open-source\nreplacement for classic Zilog Z80.\n\nFOSS Z80 leverages OpenROAD flow and FOSS 130 nm Skywater PDK to synthesize\nproduction ready silicon. Tiny Tapeout infrastructure is used to test and pool\ndesign with many others to reduce the cost of physical chip fabrication at\nSkywater Foundries.\n\n## The first iteration of FOSS Z80 silicon\n\nThe first iteration is developed with Tiny Tapeout 07 using 130 nm process and\nfits on a 0.064 mm^2 die area. The first fabrication is scheduled for June of\n2024 as a part of CI 2406 Shuttle.\n\nThe implementation is based around Guy Hutchison's TV80 Verilog core.\n\nRead documentation for Tiny Tapeout 07 version\n\nBelow is the image of GDSII integrated circuit layout for FOSS Z80. It is the\nresult of automatic place-and-route flow in OpenROAD using 130 nm \"gates\"\nlogic elements.\n\n## Further Plan / ToDo\n\n  * Add thorough instruction (including 'illegal') execution tests ZEXALL to testbench\n  * Compare different implementations: Verilog core A-Z80, Netlist based Z80Explorer\n  * Tapeout with ChipIgnite in QFN44 package\n  * Tapeout with DIP40 package\n  * Create gate-level layouts that would resemble the original Z80 layout, see the original chip dies below. Zilog designed Z80 by manually placing each transistor by hand.\n\n# Z80\n\n## Pinout\n\n    \n    \n    ,---------.__,---------. <-- A11 |1 40| A10 --> <-- A12 |2 39| A9 --> <-- A13 |3 Z80 CPU 38| A8 --> <-- A14 |4 37| A7 --> <-- A15 |5 36| A6 --> --> CLK |6 35| A5 --> <-> D4 |7 34| A4 --> <-> D3 |8 33| A3 --> <-> D5 |9 32| A2 --> <-> D6 |10 31| A1 --> VCC |11 30| A0 --> <-> D2 |12 29| GND <-> D7 |13 28| /RFSH --> <-> D0 |14 27| /M1 --> <-> D1 |15 26| /RESET <-- --> /INT |16 25| /BUSRQ <-- --> /NMI |17 24| /WAIT <-- <-- /HALT |18 23| /BUSAK --> <-- /MREQ |19 22| /WR --> <-- /IORQ |20 21| /RD --> `----------------------'\n\n## Documentation\n\n  * Z80 Users Manual\n  * Z80 Users Manual from Mostek\n  * Zilog Data Book\n  * All the information about Z80\n  * Undocumented instructions\n  * Opcode table and timing\n\n## Oral History of the Development of the Z80\n\nOral History Panel on the Founding of the Company and the Development of the\nZ80 Microprocessor\n\nM. Shima on Demystifying Microprocessor Design\n\n## Z80 Patents\n\n  * (expired) Patent US4605980 -- input voltage spike protection\n  * (expired) Patent US4332008A -- ???\n  * (expired) Patent US4486827A -- reset circuitry\n\n## Z80 Die shots\n\n  * How to \"read\" die shots\n  * nMOS variant Z8400 with 'Zilog 75' marking and Zilog Z8400 with 'DC' letter marking\n  * CMOS variants Zilog Z84C00 and its 8MHz version\n  * Nintendo Z80 variant from Super Game Boy SGB-CPU 01 produced in 1994\n  * Sean Riddle's image of Mostek MK3880 clone metal layer removed\n  * Pauli Rautakorpi's images of Z80 clones: National Semiconductor NSC800, Mostek MK3880, MME9201 with 'U880/5' markings\n  * Zeptobar\u2019s images of Zilog Z0840004PSC from 1990, Soviet KR1858VM3 with an uncommon layout, MME Z80A a clone on a 5um technology larger than the original Zilog chip, Soviet KR1858VM1 a clone of U880/6 which is in turn a clone of Z80, Soviet T34VM1 based on U880/5\n\n## Z80 Reverse Engineering\n\n  * Z80 Instruction Register deciphered\n  * Z80 Tri-stated Data & Address bus gates\n  * Z80 (un)documented behavior\n  * The instruction decode PLA in the Z80 microprocessor\n  * Why the Z-80's data pins are scrambled\n  * How the Z80's registers are implemented\n  * The Z-80's 16-bit increment/decrement circuit reverse engineered\n  * The Z-80 has a 4-bit ALU\n  * XOR, the silicon for two interesting gates explained\n  * WZ aka MEMPTR, esoteric register of the Z80\n\n## Existing Z80 implementations\n\n  * TV80 in Verilog https://github.com/hutch31/tv80\n  * TV80 in Verilog https://github.com/Obijuan/Z80-FPGA\n  * A-Z80 in Verilog https://github.com/gdevic/A-Z80 its overview and details\n  * Z80 net-list level emulator https://github.com/gdevic/Z80Explorer and its overview and Users Guide\n\n# What is Tiny Tapeout?\n\nTiny Tapeout is an educational project that aims to make it easier and cheaper\nthan ever to get your digital designs manufactured on a real chip.\n\nTo learn more and get started, visit https://tinytapeout.com.\n\n## Resources\n\n  * FAQ\n  * Digital design lessons\n  * Learn how semiconductors work\n  * Join the community\n  * Build your design locally\n\n## About\n\nZ80 open-source silicon. Goal is to become a silicon proven, pin compatible,\nopen-source replacement for classic Z80.\n\nrejunity.github.io/z80-open-silicon/\n\n### Topics\n\nfoss z80 chip tinytapeout\n\n### Resources\n\nReadme\n\n### License\n\nApache-2.0 license\n\nActivity\n\n### Stars\n\n62 stars\n\n### Watchers\n\n4 watching\n\n### Forks\n\n3 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * Verilog 95.4%\n  * Python 2.3%\n  * Tcl 1.6%\n  * Makefile 0.7%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": true}
