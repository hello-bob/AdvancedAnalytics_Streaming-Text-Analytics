{"aid": "40187334", "title": "Flow Field Pathfinding", "url": "https://www.redblobgames.com/blog/2024-04-27-flow-field-pathfinding/", "domain": "redblobgames.com", "votes": 23, "user": "ingve", "posted_at": "2024-04-28 09:48:40", "comments": 0, "source_title": "Flow field pathfinding", "source_text": "Flow field pathfinding\n\n# Flow field pathfinding\n\nfrom Red Blob Games\n\n27 Apr 2024\n\nYou may know me for my interactive tutorials. But before that, I was writing\nvisual but non-interactive tutorials. In particular, there wasn\u2019t a lot of\ninformation about A* on the web, so I decided to collect all my notes about\npathfinding^[1] together in one place in the 1990s. But then in the 2010s I\nstarted making interactive pages. The newer pages are narrower in scope; I\ncovered a broader set of topics on the older pages. I maintain both sets now.\n\nOver the years people have asked me about \u201cflow field pathfinding\u201d. I felt\nlike the early papers about it conflated the flow fields with hierarchical\npathfinding, but I wasn\u2019t sure, and I didn\u2019t want to write about it until I\nwas sure.\n\nFlow field\n\nBut it\u2019s been many years now and I would like to write something even if it\u2019s\nnot complete. My understanding so far is:\n\n  1. flow fields are a vector field that tells agents from any location what direction to move to find a single destination\n  2. optionally, agents that are in between locations on the pathfinding graph can interpolate between the vectors in the flow field\n  3. optionally, a hierarchy of coarse and fine stepped fields can speed up pathfinding\n\nIn addition, there are distance fields which are themselves interesting for\nthings like \u201cDijsktra maps^[2]\u201d in roguelike games and \u201cinfluence maps^[3]\u201d in\nstrategy games. Distance fields can also be used for 3d modeling^[4] and font\nrendering. The flow fields and distance fields are related: in vector\ncalculus, the gradient (\u2207) of the distance field produces the flow field.\n\nDistance field\n\nThe graph-based pathfinding algorithms I cover on my A* page^[5] output both\ndistance fields and flow fields, in the cost_so_far and came_from outputs. I\nupdated my pages to mention both flow and distance fields:\n\n  * I added a new section to my older pathfinding notes^[6].\n  * I updated my tower defense pathfinding page^[7].\n\nAlthough I mention hierarchical pathfinding^[8] in these notes, I don\u2019t cover\nit in detail. Maybe I will do so one day, but I don\u2019t have to wait until then\nbefore publish the pages. That\u2019s one of the advantages of web pages over\ntextbooks or academic papers. I can update my pages as I learn more. I still\nupdate my pathfinding pages that I started in 1997, and I still update my\ninteractive pathfinding pages that I started in 2014.\n\nEmail me redblobgames@gmail.com, or tweet @redblobgames, or comment:\n\n### Endnotes\n\n  1. [1]: http://theory.stanford.edu/~amitp/GameProgramming/\n  2. [2]: https://www.roguebasin.com/index.php/Dijkstra_Maps_Visualized\n  3. [3]: https://www.gamedev.net/tutorials/programming/artificial-intelligence/the-core-mechanics-of-influence-mapping-r2799/\n  4. [4]: https://iquilezles.org/articles/distfunctions/\n  5. [5]: https://www.redblobgames.com/pathfinding/a-star/introduction.html\n  6. [6]: https://theory.stanford.edu/~amitp/GameProgramming/Variations.html#flow-fields\n  7. [7]: https://www.redblobgames.com/pathfinding/tower-defense/\n  8. [8]: https://theory.stanford.edu/~amitp/GameProgramming/MapRepresentations.html#hierarchical\n\nCopyright \u00a9 2024 Red Blob Games RSS Feed\n\nCreated 27 Apr 2024; Last modified: 27 Apr 2024\n\n", "frontpage": true}
