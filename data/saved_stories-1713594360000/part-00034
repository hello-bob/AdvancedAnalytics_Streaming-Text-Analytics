{"aid": "40092593", "title": "AI for Math Resources", "url": "https://docs.google.com/document/u/0/d/1kD7H4E28656ua8jOGZ934nbH2HcBLyxcRgFDduH5iQ0/mobilebasic", "domain": "docs.google.com", "votes": 6, "user": "dargscisyhp", "posted_at": "2024-04-19 22:24:37", "comments": 0, "source_title": "AI for Math Resources", "source_text": "AI for Math Resources\n\nZu Drive\n\nAI for Math Resources\n\nThis is a preliminary list of resources for those looking to get into the\nfield of AI for Math, put together as part of the AI to Assist Mathematical\nReasoning workshop (the official workshop proceedings can be found in the link\nhere). It is not complete, but hopefully once distributed, it can continue to\ngrow.\n\nPlease feel free to add comments or suggestions to this document. To add\ncomments or suggestions (or to correct any existing text) you may either use\nthe \"comment\" feature of Google Docs, or you may type directly into the\ndocument in suggestion mode. Everyone who views this should have\ncomment/suggestion access. I will review and approve suggestions.\n\nThank you to everyone who has contributed so far!\n\nEducation 2\n\nTextbooks and Survey Papers 2\n\nWikis and Glossaries 2\n\nTutorials 2\n\nCourse Materials 3\n\nBlogs, Opinion Pieces, and Personal Experiences 3\n\nCollaboration 3\n\nForums 4\n\nTools and Repositories 4\n\nML Frameworks 4\n\nProof Assistants 4\n\nConstraint Solvers & Automated Theorem Provers 6\n\nComputational Mathematics Tools 6\n\nMathematics Databases 7\n\nMathematical Search Engines 8\n\nIntegrated AI for Math Tools 8\n\nDatasets and Benchmarks 8\n\nLanguage Models and Chatbots 9\n\nGeneral Purpose Models 9\n\nMathematics Models 10\n\nML for Formal Proof Models 10\n\nChatbots 11\n\nMath OCR 11\n\nResearch 11\n\nMeta-Bibliography 11\n\nVenues 12\n\nIncentive Structures 13\n\n# Education\n\nHere are some educational materials that may be useful for folks interested in\nthis space.\n\n## Textbooks and Survey Papers^[a]\n\n  * Formal Proof\n\n  * Software Foundations series\n  * Certified Programming with Dependent Types\n  * QED at Large: A Survey of Engineering of Formally Verified Software (2020)\n  * AMS Special Issue on Formal Proof (2008)\n  * Concrete Semantics\n  * Mathematics in Lean book\n  * The Mechanics of Proof by Heather Macbeth\n  * Mathematical Components book\n\n  * Machine Learning\n\n  * Grokking Deep Learning (2019)\n  * Neurosymbolic Programming (2021)\n  * Automatically Correcting Large Language Models (2023)\n  * Deep Learning (2016)\n  * Probabilistic Machine Learning: An Introduction (reference) (2022)\n\n  * Machine Learning for Formal Proof\n\n  * A Survey on Deep Learning for Theorem Proving (2024)\n\n## Wikis and Glossaries\n\n  * Programming Languages\n\n  * 1lab for homotopy type theory (https://homotopytypetheory.org/)^[b]^[c]\n\n  * Mathematics\n\n  * MathGloss (https://mathgloss.github.io/MathGloss/database)\n  * nLab (https://ncatlab.org/nlab/show/HomePage)\n\n## Tutorials\n\n  * Formal Proof\n\n  * Natural Number Game (Lean)\n  * Homotopy Type Theory Game (Cubical Agda)\n  * Isabelle/HOL tutorial\n  * HOL4 tutorials and guidebooks\n  * Lean for the Curious Mathematician workshop materials and recordings: 2020, 2022, 2023, 2024\n  * Learning Lean community webpage\n  * Terry Tao's Lean phrasebook\n  * A publically editable list of formalized concepts in Lean (additions greatly welcome)\n  * List of Lean tactics\n\n  * Machine Learning for Formal Proof\n\n  * A tutorial on neural theorem proving by Sean Welleck\n  * NeurIPS Tutorial on Machine Learning for Theorem Proving by Emily First, Albert Jiang, and Kaiyu Yang\n\n  * Machine Learning\n\n  * Numerical Methods for Deep Learning (lecture slides updated 2021).\n\n## Course Materials\n\n  * Proof Automation by Talia Ringer\n  * Formalising Mathematics by Kevin Buzzard\n  * Machine Learning by Andrew Ng\n  * Machine Learning for the Working Mathematician seminar in Sydney\n  * Software Foundations course at Penn\n  * Programming language foundations in Agda by Philip Wadler\n  * Lean for teaching stream on the Lean Zulip and courses webpage\n  * Real Analysis (in French) by Patrick Massot\n  * The Hitchhiker\u2019s Guide to Logical Verification by Anne Baanen et al\n\n## Blogs, Opinion Pieces, and Personal Experiences\n\n  * Mathematics and the Formal Turn (survey paper by Avigad)\n  * Why formalize mathematics? (survey paper by Massot)\n  * QED Manifesto (manifesto, 1994) (2014 follow-up)\n  * Is deep learning a useful tool for the pure mathematician?, Williamson\n  * A volume of the Bulletin of the American Mathematical Society dedicated to AI, formal proof, and mathematics (first of a two-volume series).\n  * Embracing change and resetting expectations, Tao\n  * Machine assisted proof, Tao\n  * Formalising Mathematics \u2013 in Praxis; A Mathematician\u2019s First Experiences with Isabelle/HOL and the Why and How of Getting Started, Koutsoukou-Argyraki\n\n# Collaboration\n\nThis is a highly collaborative intersection of fields, so it is very helpful\nto know where to connect with people who may have complementary expertise,\nexperience, or interests.\n\n## Forums\n\n  * Lean Zulip: A discussion medium for the community around the Lean proof assistant (including an active stream on \u201cMachine Learning for Theorem Proving\u201d).\n  * Coq Zulip: A discussion medium for the community around the Coq proof assistant.\n  * EleutherAI Discord: A discussion medium for an open source AI community centered around the open source AI nonprofit EleutherAI. There is a channel specifically for #ai-for-math. Fantastic for forming collaborations. In dire need of more active involvement from academics.\n  * Neurosymbolic AI Slack for discussing the intersection of neural and symbolic methods for machine learning (theorem proving and math are domains of interest)\n  * Univalent Agda Discord for the community around Cubical Agda\n  * Isabelle Zulip for the community around the Isabelle proof assistant\n  * HoTT Zulip for the community around Homotopy Type Theory\n  * Proof Assistant Stack Exchange\n\n# Tools and Repositories\n\nA non-exhaustive list of tools that may be useful for getting started in this\nspace.\n\n## ML Frameworks\n\n  * PyTorch\n  * Tensorflow\n  * JAX\n\n## Proof Assistants\n\nOne promising direction of research in AI for Math is combining AI-based\nautomation with machine-checkable proof. Here is a non-exhaustive list of\ntools that can be used for writing machine-checkable proofs, in no particular\norder:\n\n  * Lean\n\n  * Active community of mathematicians\n  * Has an especially rich mathematical library: Mathlib\n  * Strong automation with mathematicians in mind\n  * Foundations:\n\n  * Dependent type theory (Calculus of Inductive Constructions)\n  * Constructive, but common to use classical axioms (and automation does by default these days)\n  * Common to assume functional extensionality and get proper quotients\n  * Proof irrelevant\n  * Intensional\n  * Explicit proof objects\n\n  * Search engines: Loogle, Moogle^[d]^[e]\n  * Package registry: Reservoir\n  * Lean playground\n\n  * Coq\n\n  * Most math development in Coq happens in MathComp (most famously, the formal proof of the Four Color Theorem and the formal proof of the Odd Order Theorem)\n  * Coq-platform, a very large maintained library of formal proofs\n  * There is also UniMath and (https://github.com/HoTT/Coq-HoTT), an outgrowth of Voevodsky\u2019s foundations library that is still maintained by an active community\n  * Strong automation\n  * Foundations:\n\n  * Dependent type theory (Calculus of Inductive Constructions)\n  * Constructive, but compatible with classical axioms\n  * Possible to assume functional extensionality and get proper quotients\n  * Agnostic about proof relevance\n  * Intensional\n  * Explicit proof objects\n\n  * jsCoq: try Coq in your web browser\n\n  * Isabelle\n\n  * Rich, massive archive: Archive of Formal Proofs\n  * Strong automation\n  * Foundations:\n\n  * Logic-based\n  * Several logical systems to choose from\n  * Isabelle/HOL is a classical, higher-order logic\n  * Ephemeral proof objects\n\n  * HOL4\n\n  * Foundations:\n\n  * Logic-based\n  * Classical, higher-order logic\n\n  * HOL Light\n\n  * Foundations:\n\n  * Logic-based\n  * Classical, higher-order logic\n\n  * Agda\n\n  * There is a rich univalent mathematical library here\n  * Automation is minimal\n  * Foundations:\n\n  * Dependent type theory (Calculus of Inductive Constructions)\n  * Constructive, but compatible with classical axioms\n  * Agnostic about proof relevance\n  * Intensional\n  * Explicit proof objects\n\n  * Cubical Agda\n\n  * Good for topology and homotopy theory, and for reasoning about how different proofs relate to each other\n  * Has an absolutely beautiful and powerful notion of equality corresponding exactly to topological paths\n  * Automation is extremely minimal\n  * Can take a ton of expertise to get comfortable using at all\n  * Foundations:\n\n  * Dependent type theory (Homotopy Type Theory, specifically Cubical)\n  * Univalent\n  * Constructive\n  * Proof relevant (at higher h-levels)\n  * Has native functional extensionality and quotient types\n  * Intensional\n  * Explicit proof objects\n\n  * Other proof assistants or languages for verification\n\n  * Nuprl\n  * red* family of proof assistants\n  * F*\n  * Twelf\n  * SasyLF\n  * Metamath\n  * Mizar\n  * PVS\n  * ACL2\n  * ProofPower\n  * Dafny\n  * Boogie\n\n## Constraint Solvers & Automated Theorem Provers\n\n  * CVC5 SMT Solver\n  * Vampire Theorem Prover^[f]^[g]^[h]^[i]\n  * Z3 SMT Solver\n  * Rosette language for building tools that use constraint solvers\n  * Egg library for reasoning about equalities\n\n## Computational Mathematics Tools\n\n  * CoCalc (https://cocalc.com/, with access to ChatGPT assistance)\n  * CoCoa (https://cocoa.dima.unige.it/cocoa/)\n  * CGSuite (https://www.cgsuite.org/)\n  * Fermat (https://home.bway.net/lewis/)\n  * FLINT (https://flintlib.org/) (includes Arb, Antic, and Calcium)\n  * GAP (https://www.gap-system.org/)\n  * Macaulay2 (https://macaulay2.com/)\n  * Magma (https://magma.maths.usyd.edu.au/)\n  * Mathematica (https://www.wolfram.com/mathematica/)\n  * Maple (https://www.maplesoft.com )\n  * MATLAB (https://www.mathworks.com/)\n  * Maxima (https://maxima.sourceforge.io/)\n  * Mathics (https://mathics.org/)\n  * GNU Octave (https://octave.org/)\n  * OSCAR (https://www.oscar-system.org/about/)\n  * PARI/GP (https://pari.math.u-bordeaux.fr/)\n  * Polymake (https://polymake.org/doku.php/start)\n  * REDUCE (https://reduce-algebra.sourceforge.io/)\n  * SageMath (https://sagemath.org/)\n  * SymPy (https://www.sympy.org)\n  * SciLab (https://www.scilab.org/)\n  * Singular (https://www.singular.uni-kl.de/index.php.html)\n  * The CompuTop.org Software Archive (https://nmd.web.illinois.edu/computop/)\n  * WolframAlpha (https://www.wolframalpha.com/)\n  * Wolfram System Modeler (https://www.wolfram.com/system-modeler/)\n  * Desmos (https://www.desmos.com/calculator)\n  * Geogebra (https://www.geogebra.org/)\n  * Yacas (https://github.com/grzegorzmazur/yacas)\n\n## Mathematics Databases^[j]\n\n  * MathBases \u2013 index of mathematical databases (https://mathbases.org/)\n  * PolyDB (https://db.polymake.org/)\n  * L-functions and Modular Forms Database (https://www.lmfdb.org/)\n  * ATLAS of Finite Group Representations, Atlas of Lie Groups and Representations, Groupprops\n  * Projective Planes of Small Order\n  * The online database of Vertex Operator Algebras and Modular Categories\n  * Catalogue of Lattices, Database of sphere packings, record tables, Packomania\n  * Error Correction Zoo\n  * OEIS, Inverse Symbolic Calculator\n  * DLMF\n  * Fungrim\n  * Mathematical Equations - EqWorld\n  * factordb.com\n  * elliptic multiple zeta values datamine\n  * Polynomials with Small Mahler Measure\n  * House of Graphs\n  * \u03c0-Base, Topospaces\n  * KnotInfo / LinkInfo, Knot Atlas\n  * Fanography, Calabi Yau data, Graded Ring Database\n  * Cantor's Attic, Googology Wiki, Reverse Mathematics Zoo, Forking and Dividing, Consequences of the Axiom of Choice\n  * Complexity Zoo\n  * LifeWiki (conwaylife.com) / Catagolue\n  * The Mathematics Genealogy Project (nodak.edu)\n  * Catalogue of Mathematical Datasets\n\n## Mathematical Search Engines\n\n  * https://www.searchonmath.com/\n  * https://approach0.xyz/search/\n\n## Integrated AI for Math Tools\n\n  * LeanDojo (and also LeanCopilot) for Lean\n  * Proofster web tool for Coq, and corresponding plugin\n  * llmstep: LLM proofstep suggestions in Lean\n  * PISA (Portal for Isabelle)\n  * AlphaGeometry\n  * FunSearch\n\n## Datasets and Benchmarks\n\nNote that many of the below can be used as training data or as evaluation\nbenchmarks. Some come with a standard training/test split, and some do not.\nRegardless, care should be taken to ensure that test data does not pollute the\ntraining dataset whenever you are building any kind of tool, otherwise your\nresults will not be valid. It is also worth noting that HuggingFace stores a\nlot of public datasets and benchmark suites, and so it is always good to look\nthere as well.\n\n  * Training Datasets\n\n  * OpenWebMath\n  * The Pile (not entirely math but contains a large math subset that can be independently downloaded). This dataset has an associated paper and datasheet.\n  * ProofPile\n  * Mizar Mathematical Library\n  * MetaMath\n  * MPTP\n  * REPLICA small atomic edit dataset for Coq\n  * PRISM Proof Repair dataset for Coq (larger releases coming)\n  * Isabelle Parallel Corpus (aligned natural and formal proof data)\n  * Isabelle Archive of Formal Proofs\n  * MLFMF: Data Sets for Machine Learning for Mathematical Formalization\n  * List of parts of the French curriculum that have been formalized in Lean\u2019s mathlib\n  * Math Olympiad problem data sets\n\n  * AIMO list of resources (see also this discussion)\n  * External problem set of 25K problems\n  * IMO solutions in Isabelle\n  * IMO solutions in Lean\n\n  * Evaluation Benchmarks\n\n  * MATH\n  * GSM8K\n  * Some components of MMLU\n  * CoqGym for Coq\n  * LeanDojo for Lean\n  * ProofNet autoformalization benchmark\n  * Math Olympiad benchmarks: miniF2F, OlympiadBench\n  * ARC Abstraction & Reasoning Corpus\n  * ARB Advanced Reasoning Benchmark for Large Language Models\n  * GHOSTS\n  * \u201cEvaluating Language Models for Mathematics through Interactions\u201d, Collins et al.\n\n## Language Models and Chatbots\n\nNote: it is common for AI tools to be labeled as \u201copen\u201d or \u201copen source\u201d when\nthey are downloadable by people outside the hosting institution. These often\nhave substantial use-based or distribution restrictions that violate the norms\nof open source software. In this section we use the words \u201cfree and open\nsource\u201d in accordance with the OSI definition. For models labeled as \u201cpublicly\navailable,\u201d make sure to read the licenses carefully before making assumptions\nabout permissible use.\n\n### General Purpose Models\n\n  * Free and Open Source\n\n  * Open Data\n\n  * GPT-J-6B\n  * GPT-NeoX-20B\n  * Pythia models (8 models ranging from 70M through 13B)\n\n  * Limited or Non-Open Data\n\n  * Falcon\n  * Mistral 7B\n\n  * Publicly Available\n\n  * LLaMA 1\n  * LLaMA 2 (7B, 14B, and 70B)\n  * Code LLaMA\n  * Falcon-180B\n  * BLOOM (multilingual)\n  * Command R+\n  * DBRX\n  * More can be found on the HuggingFace leaderboard\n\n  * Gated by Public API\n\n  * PaLM\n  * GPT-3.5\n  * GPT-4\n  * Claude Haiku\n\n  * Private\n\n  * Chinchilla\n  * Gopher\n\n### Mathematics Models\n\n  * Free and Open Source\n\n  * Open Data\n\n  * Llema\n\n  * Publicly Available\n\n  * WizardMath\n  * MetaMath\n  * MathGLM\n\n  * Gated by Public API\n\n  * GPT-3.5 and GPT-4 with Wolfram Alpha Plug-In\n\n  * Private\n\n  * Minerva (fine-tuned for math specifically)\n\n### ML for Formal Proof Models^[k]\n\n  * Free and Open Source\n\n  * Proverbot9001\n  * CoqGym/ASTactic\n  * LeanDojo/ReProver\n  * Passport\n  * Diva\n  * TacTok\n\n  * Uncategorized^[l]\n\n  * TacticToe\n  * Tactician\n\n  * Private\n\n  * Baldur\n\n### Chatbots\n\n  * Free and Open Source\n\n  * Falcon-Instruct-7B\n  * Falcon-Instruct-40B\n\n  * Publicly Available\n\n  * LLaMA 2 Chat\n  * Stable Beluga 2\n  * Falcon-Chat-180B\n\n  * Gated by Public API\n\n  * Gemini (formerly Bard)\n  * ChatGPT\n\n# Math OCR\n\n  * https://mathpix.com/\n\n# Research\n\nResearch that is published in this space and where to find it.\n\n## Meta-Bibliography\n\nSome bibliographies listing relevant work in this area:\n\n  * Paper list - Deep Learning for Theorem Proving (DL4TP)\n  * Paper list - Deep Learning for Mathematical Reasoning (DL4MATH)\n  * Advancing mathematics by guiding human intuition with AI.^[m]\n  * NeurIPS 2023 Tutorial on Machine Learning for Theorem Proving (TBA)\n  * Paper list - Machine Learning for Theorem Proving\n  * Talia\u2019s list of ml-for-proofs papers\n  * Mathlib\u2019s references.bib\n  * Is deep learning a useful tool for the pure mathematician?, Geordie Williamson\n  * Large Language Models for Mathematicians, Frieder et al.\n  * Proof engineering bibliography from QED at Large (2019)\n\n## Venues\n\nThese are venues where work in AI for Math or related areas may be found.\n\n  * AI for Math^[n]^[o]^[p]\n\n  * AITP\n  * NeurIPS AI for Math Workshop (3rd Workshop, Dec 15, 2023)\n  * 2022 Fields Medal Symposium: Akshay Venkatesh (Oct 17-19, 2022)\n  * IPAM Machine Assisted Proofs (Feb 13-17, 2023)\n  * AI to Assist Mathematical Reasoning: A Workshop (Jun 12-14, 2023)\n  * Dagstuhl 23401 on Automated Mathematics (Oct 01 \u2013 Oct 06, 2023)\n  * Hausdorff Trimester \"Prospects of formal mathematics\" (May 06, 2024 - August 16, 2024)\n  * National Academies AI To Assist Mathematical Reasoning Workshop (June 12th - June 14th, 2023)\n\n  * Followup webinar\n\n  * CICM\n\n  * Formal Proof and Constraint Solving\n\n  * CPP\n  * ITP\n  * CAV\n  * Lean-related conferences and events\n  * Journals\n\n  * Journal of Automated Reasoning\n  * Formalized Mathematics\n  * Journal of Formalized Reasoning\n  * Annals of Formalized Mathematics\n\n  * Programming Languages and Software Engineering\n\n  * PLDI\n  * POPL\n  * ICFP\n  * SPLASH/OOPSLA\n  * TOPLAS\n  * ICSE\n  * ESEC/FSE\n  * OPLSS (Summer School)\n\n  * Artificial Intelligence and Machine Learning\n\n  * NeurIPS\n  * ICML\n  * ICLR\n  * TMLR\n  * JMLR\n  * AAAI\n  * JAIR\n  * IJCAI\n  * IEEE Transactions on Pattern Analysis and Machine Intelligence\n\n  * Mathematics\n\n  * Joint Mathematics Meetings (JMM) [every year in January]\n  * MathSciNet, zbMATH\n  * SIAM meetings\n  * Mathematics Institutes, including those supported by NSF DMS, (Workshops, Schools, Long Programs)\n\n  * SLMATH (formerly MSRI) (https://www.slmath.org)\n  * ICERM (https://icerm.brown.edu/)\n  * BIRS (https://www.birs.ca)\n  * IPAM (https://www.ipam.ucla.edu)\n  * AIM (aimath.org)\n  * IMSI (https://www.imsi.institute/)\n  * Fields Institute (http://www.fields.utoronto.ca/)\n  * IAS (https://www.ias.edu)\n  * MFO (https://www.mfo.de/)\n  * MPIM (https://www.mpim-bonn.mpg.de/)\n  * CMI (https://www.claymath.org/)\n  * CRM (https://www.crm.umontreal.ca/en/)\n  * Newton Institute (https://www.newton.ac.uk/)\n\n  * General\n\n  * Nature\n  * PNAS\n  * Science\n\n## Incentive Structures\n\nSome incentive structures that only some of these fields do, but that are very\nuseful for this kind of work, especially when it comes to large\ncollaborations, building practical tools, and formalizing proofs. Maybe these\nwill be useful to other communities.\n\n  * Artifact evaluation committees\n\n  * It is common to post artifacts on Zenodo\n\n  * ICSE tool track\n  * CRA Hiring & Tenure Guidelines\n  * Experience Reports at ICFP\n  * Proof Pearls at ITP\n  * The AI Mathematical Olympiad (AIMO) challenge\n\n  * Progress Prize 1\n\n  * NSF Funding Opportunity: Artificial Intelligence, Formal Methods, and Mathematical Reasoning (AIMing)\n\n[a]Could this survey paper be considered to be on this list as well?\n\nhttps://arxiv.org/abs/2402.00157\n\nThis is my survey paper about LLMs for Mathematical Reasoning, focusing on\nmath datasets, models & methods, factors affecting models' performance, and\nchallenges (insights).\n\n[b]What is meant here by \"Programming languages\"? It seems odd to have just\n1lab as the only reference. Are we collecting wikis/glossaries about\nprogramming language theory, and how is this related to \"AI for Math\"? If I\nunderstood what's being collected, perhaps I can recommend some resources.\n\n[c]Just any resource that is a wiki/glossary for a language or type theory or\nproof assistant used to write proofs\n\n[d]I am trying to decide whether to consolidate search engines somewhere\n\n[e]Since there are already some informal math search engines in their own\nsection and I'm not sure if it makes sense to have the formal ones in the same\nplace or not\n\n[f]Several ATP systems seem to be missing, like Prover9, E, Waldmeister, and\nTwee. (Prover9 has been the most popular among mathematicians because of its\nsimple input language. I have basically built my entire career upon it.) Would\nyou consider having a separate heading for ATP systems listing the ones I\nmentioned as well as others. Vampire should really be moved under that heading\nas well, since it's not exactly a constraint solver.\n\n[g]I have trouble differentiating between the two but maybe it's good to say\n\"Constraint Solvers and ATPs\"? Also it is ideal if you can list things via the\n\"suggest edit\" function so that we can just approve the edits\n\n[h]Sure, putting them together is fine as they're somewhat related. Sorry,\nI've never used google docs before yesterday; I only just now, several hours\nlater, found out how to unhide the toolbar.\n\n[i]If you can add links to each of these provers in the comment response here,\nI can add them to the bulleted list\n\n[j]Add: Imaginary.org, plus anything that comes out of the Dagstuhl\n\n[k]Very incomplete list, and also missing links. Feel free to add many here if\nyou get here before I do\n\n[l]Yet to categorize, feel free to take this task if anyone gets here before I\ndo\n\n[m]This is listed in the DL4MATH list, but definitely is an important Nature\npaper.\n\nThree other lines of work:\n\n1\\. Charton/Lample et al.'s work at Meta (some are mentioned in DL4MATH)\n\n2\\. http://www.ramanujanmachine.com/\n\n3\\. Yang-Hui He's works: he gave several talks with the title \"Universes as\nBig Data\" and https://www.youtube.com/watch?v=KK11It_BAqo and\nhttps://www.youtube.com/watch?v=NyNnmZO7iS4 are the latest. (slides from Nov\n2021:\nhttps://dl3.pushbulletusercontent.com/NAms43DGGWVf7s3Q6MRpE0lB70zUbDJq/slides_He.pdf)\n\nThe DL4MATH repo hasn't been updated for 7 months. Maybe we should submit PRs?\nIt's also missing this https://www.pnas.org/doi/10.1073/pnas.2123433119 for\nexample.\n\n[n]Would results of the kind of https://arxiv.org/abs/2201.06780 and rigorous\nnumerics fit in here?\n\n[o](this is a relatively old survey on computer assisted proofs in PDEs:\nhttps://arxiv.org/abs/1810.00745)\n\n[p]survey papers definitely go under educational resources at the very top,\nand/or in the meta-bibliography; feel free to drop in the section you think\nmakes the most sense. right now we are not directly including a bibliography\nfor direct results/papers, but we are adding links to other existing\nbibliographies, so if you have a list of papers you'd like referenced, feel\nfree to write that list somewhere and then link to it in the meta-bibliography\n\n", "frontpage": true}
