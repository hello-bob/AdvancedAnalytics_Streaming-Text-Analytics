{"aid": "40257711", "title": "Modern SQLite #1: STRICT tables", "url": "https://antonz.org/sqlite-strict-tables/", "domain": "antonz.org", "votes": 5, "user": "gulced", "posted_at": "2024-05-04 13:56:53", "comments": 0, "source_title": "Modern SQLite #1: STRICT tables", "source_text": "Modern SQLite #1: STRICT tables\n\nAnton Zhiyanov\n\nprojects books blog about\n\n# Modern SQLite #1: STRICT tables\n\nI'm starting a series of short notes about handy SQLite features you may not\nhave heard about. The first one is \"strict\" tables.\n\nAs you probably know, SQLite's type system is very flexible (some people even\ncall SQLite the JavaScript of databases) \u2014 you can store any value in any\ncolumn type (e.g. create an INTEGER column and store text values there, or a\nREAL with blob values).\n\nSome people love SQLite for its flexibility, others hate it for the same\nreason. So at some point the SQLite authors introduced STRICT tables:\n\n    \n    \n    create table people ( id integer primary key, name text, salary real ) strict;\n\nEdit \u2715\n\nThey check types the same way other DBMS do:\n\n    \n    \n    insert into people (name, salary) values ('Alice', 100);\n\nEdit \u2715\n\n    \n    \n    insert into people (name, salary) values ('Bob', 90.5);\n\nEdit \u2715\n\n    \n    \n    insert into people (name, salary) values ('Cindy', 'decent');\n\nEdit \u2715\n\nEven with strict tables, you can still explicitly declare a column as ANY \u2014\nsuch columns can hold values of any type. So you can have the best of both\nworlds \u2014 strict type checking and type flexibility:\n\n    \n    \n    create table people ( id integer primary key, name text, salary any ) strict; insert into people (name, salary) values ('Alice', 100); insert into people (name, salary) values ('Bob', randomblob(10)); insert into people (name, salary) values ('Cindy', 'decent');\n\nEdit \u2715\n\nAvailable since SQLite 3.37 (Nov 2021).\n\nDocumentation\n\n\u2500\u2500\n\nInteractive examples in this post are powered by codapi \u2014 an open source tool\nI'm building. Use it to embed live code snippets into your product docs,\nonline course or blog.\n\nSubscribe to keep up with new posts.\n\n04 May, 2024\n\nsqlite\n\n\u2190 Grep by example: Interactive guide\n\n### See also\n\nSQLite 3.45: Interactive release notes\n\nSQLite 3.44: Interactive release notes\n\nEscaping macOS quarantine for SQLite extensions\n\n  * Subscribe: Newsletter Discord Twitter LinkedIn GitHub RSS\n  * Email: m@antonz.org\n\n", "frontpage": true}
