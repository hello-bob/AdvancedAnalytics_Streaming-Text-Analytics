{"aid": "40153657", "title": "OpenAI Security Bots", "url": "https://github.com/openai/openai-security-bots/tree/main/bots/incident-response-slackbot", "domain": "github.com/openai", "votes": 1, "user": "srirangr", "posted_at": "2024-04-25 05:06:26", "comments": 0, "source_title": "openai-security-bots/bots/incident-response-slackbot at main \u00b7 openai/openai-security-bots", "source_text": "openai-security-bots/bots/incident-response-slackbot at main \u00b7 openai/openai-\nsecurity-bots \u00b7 GitHub\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nopenai / openai-security-bots Public\n\n  * Notifications\n  * Fork 16\n  * Star 207\n\n/\n\n# incident-response-slackbot\n\n/\n\n## Directory actions\n\n## More options\n\n## Directory actions\n\n## More options\n\n## Latest commit\n\nithilgore\n\nAdding SDLC bot and updates\n\nApr 18, 2024\n\n20fb090 \u00b7 Apr 18, 2024Apr 18, 2024\n\n## History\n\nHistory\n\n/\n\n# incident-response-slackbot\n\n/\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n### parent directory\n\n..  \n  \n### incident_response_slackbot\n\n|\n\n### incident_response_slackbot\n\n| Adding SDLC bot and updates| Apr 18, 2024  \n  \n### scripts\n\n|\n\n### scripts\n\n| Adding Incident Response Slackbot| Jan 12, 2024  \n  \n### tests\n\n|\n\n### tests\n\n| Adding Incident Response Slackbot| Jan 12, 2024  \n  \n### Makefile\n\n|\n\n### Makefile\n\n| Adding Incident Response Slackbot| Jan 12, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| Adding Incident Response Slackbot| Jan 12, 2024  \n  \n### pyproject.template.toml\n\n|\n\n### pyproject.template.toml\n\n| Adding Incident Response Slackbot| Jan 12, 2024  \n  \n## README.md\n\n# Incident Response Slackbot\n\nIncident Response Slackbot automatically chats with users who have been part\nof an incident alert.\n\n## Prerequisites\n\nYou will need:\n\n  1. A Slack application (aka your triage bot) with Socket Mode enabled\n  2. OpenAI API key\n\nGrab your SLACK_BOT_TOKEN by Oauth & Permissions tab in your Slack App page.\n\nGenerate an App-level token for your Slack app, by going to:\n\n    \n    \n    Your Slack App > Basic Information > App-Level Tokens > Generate Token and Scopes\n\nCreate a new token with connections:write scope. This is your SOCKET_APP_TOKEN\ntoken.\n\nOnce you have them, from the current directory, run:\n\n    \n    \n    $ make init-env-file\n\nand fill in the right values.\n\nYour Slack App needs the following scopes:\n\n  * users:read\n  * channels:history\n  * chat:write\n  * groups:history\n\n## Setup\n\nFrom the current directory, run:\n\n    \n    \n    make init-pyproject\n\nFrom the repo root, run:\n\n    \n    \n    make clean-venv source venv/bin/activate make build-bot BOT=incident-response-slackbot\n\n## Run bot with example configuration\n\nThe example configuration is config.toml. Replace the configuration values as\nneeded. In particular, the bot will post to channel feed_channel_id, and will\ntake an OpenAI Organization ID associated with your OpenAI API key.\n\n\u26a0\ufe0f Make sure that the bot is added to the channels it needs to read from and\npost to. \u26a0\ufe0f\n\nWe will need to add example alerts to ./scripts/alerts.toml Replace with alert\ninformation and user_id. To get the user_id:\n\n  1. Click on the desired user name within Slack.\n  2. Click on the ellpises (three dots).\n  3. Click on \"Copy Member ID\".\n\n\u26a0\ufe0f These are mock alerts. In real-world scenarios, this will be integrated\nwith alert feed/database \u26a0\ufe0f\n\nTo generate an axample alert, in this directory, run:\n\n    \n    \n    python ./scripts/send_alert.py\n\nAn example alert will be sent to the channel.\n\nTo have the bot start listening, run the following from the repo root:\n\n    \n    \n    make run-bot BOT=incident-response-slackbot\n\nNow you can start a chat with a user, or do nothing. When you start a chat,\n\n  1. The bot will reach out to the user involved with the alert\n  2. Post a message to the original thread in monitoring channel what was sent to the user (message generated with OpenAI API)\n  3. Post any messages the user sends to original thread\n  4. Checks to see if the user has answered the question using OpenAI's API.\n\n  * If yes, end the chat and provide a summary to the original thread\n  * If no, continues sending a message to the user, and repeats this step\n\nLet's start a chat:\n\n## Alert Details\n\nIn practice, the app will connect with a database or queuing system that\nmonitors alerts. We provide a mock alert system here, and a mock database to\nhold the state of users and their alerts.\n\nIn the alerts.toml file:\n\n    \n    \n    [[ alerts ]] id = \"pivot\" ... user_id = ID of person to start chat with (@harold user) [alerts.properties] source_host = \"source.machine.org\" destination_host = \"destination.machine.org\" [[ alerts ]] id = \"privesc\" ... user_id = ID of person to start chat with (@harold user)\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
