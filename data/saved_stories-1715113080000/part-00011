{"aid": "40283922", "title": "Show HN: Playbooks for your Terminal, replacing your shell's history", "url": "https://github.com/laktak/tome", "domain": "github.com/laktak", "votes": 4, "user": "laktak", "posted_at": "2024-05-07 10:04:43", "comments": 0, "source_title": "GitHub - laktak/tome: \ud83d\udd01 Playbooks for your Terminal, replacing your shell's history", "source_text": "GitHub - laktak/tome: \ud83d\udd01 Playbooks for your Terminal, replacing your shell's\nhistory\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nlaktak / tome Public\n\n  * Notifications\n  * Fork 0\n  * Star 0\n\n\ud83d\udd01 Playbooks for your Terminal, replacing your shell's history\n\n### License\n\nMIT license\n\n0 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# laktak/tome\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nlaktakintroMay 6, 20244ce5dfc \u00b7 May 6, 2024May 6, 2024\n\n## History\n\n8 Commits  \n  \n### doc\n\n|\n\n### doc\n\n| add TomeScratchPad| May 5, 2024  \n  \n### plugin\n\n|\n\n### plugin\n\n| add TomeScratchPad| May 5, 2024  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Import/rewrite to publish| May 4, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| intro| May 6, 2024  \n  \n### tome.tmux\n\n|\n\n### tome.tmux\n\n| add TomeScratchPad| May 5, 2024  \n  \n## Repository files navigation\n\n# \ud83d\udd01 TOME\n\nPlaybooks for your Terminal AKA \"Your history is history!\"\n\nTOME is a notcronym for tmux-vim-terminal-playbooks and maybe slightly better\nthan \"TVITP\".\n\n  * Goals\n  * Introduction\n  * Requirements\n  * Installation\n\n    * vim plugin\n    * tmux plugin\n  * Configuration\n\n    * vim options\n    * tmux options\n\n## Goals\n\n  * Provide a list of commands to execute (a \"playbook\").\n  * Easily execute these commands in any REPL (a system shell, ssh, a database client, etc.)\n  * Manage these playbooks per project.\n  * Bonus: completely replace the shell command history.\n\n## Introduction\n\nAfter installing the plugins, press <tmux-prefix> p, this will split the\ncurrent pane vertically and create or open a playbook in vim.\n\nA playbook is a mixture of command history and script. It contains a list of\ncommands that you can execute interactively in any order for any terminal\napplication.\n\n    \n    \n    ls *.jpg convert input.jpg output.png convert input.jpg -resize 200x200 output.jpg convert input.jpg -crop 200x200+50+50 output.jpg convert input.jpg -rotate 90 output.jpg\n\nYou can send (execute) the commands to the target, which is a tmux pane\nfollowing the playbook. Usually you use <Enter> to execute one line. It's also\npossible to execute a selection or paragraph (<Leader>p and <Leader>P).\n\nTreat your playbook like notes for a project. Unlike your shell history you\ncan start a docker container, open a database client or even ssh to a remote\nsystem and then proceed to send commands to the executing application.\n\n    \n    \n    # connect remote ssh myserver # run psql psql \"host=localhost port=5432 dbname=postgres user=pg password=pg sslmode=disable\" psql \"host=dbserver port=5432 dbname=postgres user=pg password=pg\" # run a query select * from foo where bar='red'; # insert data etc. insert into foo(bar, result) values('blue', 42);\n\nWhile playbooks are organized by projects in folders, the target's location\ncan be anywhere.\n\nYou can also make any document (like this README) into a temporary playbook by\nusing the <Leader>p key bindings or enabling <Enter> with the :TomePlayBook\ncommand.\n\nTome does not use variables because your shell already supports them.\n\n    \n    \n    # get an auth token, set base export BASE=http://localhost:8080 export TOKEN=$(token-request) # define a call function with defaults for httpie call() { http -A bearer -a $TOKEN \"$@\"; } id=$(call $BASE/car name==foostang | jq .[0].id) call $BASE/car/$id call PUT $BASE/car/$id color=blue\n\nIf you want a temporary scratch pad press <tmux-prefix> P. It is also a good\nidea to paste commands here instead of directly into the terminal.\n\nWhen you want multiple playbooks in a project just prefix them with\n.playbook-, e.g. .playbook-db.sql with the correct extension to get syntax\nhighlighting.\n\n## Requirements\n\n  * tmux\n  * vim\n  * any REPL, e.g. bash, a database client, etc.\n\n## Installation\n\n### vim plugin\n\nAdd laktak/tome to your favorite plugin manager.\n\nE.g. for vim-plug place this in your .vimrc:\n\n    \n    \n    Plug 'laktak/tome'\n\nthen run the following in Vim:\n\n    \n    \n    :source % :PlugInstall\n\n### tmux plugin\n\nTo install Tome with the Tmux Plugin Manager simply add the plugin to the list\nof TPM plugins in .tmux.conf:\n\n    \n    \n    set -g @plugin 'laktak/tome'\n\nthen and hit <tmux-prefix> I to fetch the plugin and source it.\n\nTo install it manually, first clone the repo:\n\n    \n    \n    $ git clone https://github.com/laktak/tome ~/.tmux/tome\n\nAdd this line to the bottom of .tmux.conf:\n\n    \n    \n    run-shell ~/.tmux/tome/tome.tmux\n\nReload the tmux environment:\n\n    \n    \n    # type this in terminal $ tmux source-file ~/.tmux.conf\n\n## Configuration\n\n### vim options\n\nBy default Tome has the following mappings:\n\n    \n    \n    nmap <Leader>p <Plug>(TomePlayLine) nmap <Leader>P <Plug>(TomePlayParagraph) xmap <Leader>p <Plug>(TomePlaySelection)\n\nIf you prefer to create them yourself set\n\n    \n    \n    let g:tome_no_mappings = 1\n\nTome has a no send list to avoid accidentially sending input to a tui\napplication. By default this includes lf (the file manager) and vim. Set your\nown list with\n\n    \n    \n    let g:tome_no_send = ['vim', 'lf', 'gitui']\n\nIf you do not want to automatically open .playbook* files as playbooks you can\nset\n\n    \n    \n    let g:tome_no_auto = 1\n\n### tmux options\n\nYou can set any of these options by adding them to your ~/.tmux.conf file:\n\n    \n    \n    set -g <option> \"<value>\"\n\nWhere <option> and <value> correspond to one of the options specified below\n\nOption| Default| Description  \n---|---|---  \n@tome_key| p| The key binding to open a Tome playbook.  \n@tome_scratch_key| P| The key binding to open a Tome scratchpad.  \n@tome_height| 8| Height of the playbook vertial split.  \n@tome_playbook| .playbook.sh| Name of the playbook to open.  \n  \n## About\n\n\ud83d\udd01 Playbooks for your Terminal, replacing your shell's history\n\n### Topics\n\nvim shell tmux automation vim-plugin history shell-history tmux-plugin\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n0 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Languages\n\n  * Vim Script 83.3%\n  * Shell 16.7%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": true}
