{"aid": "40091442", "title": "Open Source Is Not About You (2018)", "url": "https://gist.github.com/richhickey/1563cddea1002958f96e7ba9519972d9", "domain": "gist.github.com", "votes": 1, "user": "rglover", "posted_at": "2024-04-19 20:11:40", "comments": 0, "source_title": "Open Source is Not About You", "source_text": "Open Source is Not About You \u00b7 GitHub\n\nSkip to content\n\nSign in Sign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nInstantly share code, notes, and snippets.\n\n# richhickey/OpenSourceIsNotAboutYou.md Secret\n\nLast active April 6, 2024 03:46\n\nShow Gist options\n\n  * Download ZIP\n\n  * Star 1,144 You must be signed in to star a gist\n  * Fork 62 You must be signed in to fork a gist\n\n  *     * Learn more about clone URLs\n\n  * Save richhickey/1563cddea1002958f96e7ba9519972d9 to your computer and use it in GitHub Desktop.\n\n  * Learn more about clone URLs\n\nSave richhickey/1563cddea1002958f96e7ba9519972d9 to your computer and use it\nin GitHub Desktop.\n\nDownload ZIP\n\nOpen Source is Not About You\n\nRaw\n\nOpenSourceIsNotAboutYou.md\n\n# Open Source is Not About You\n\nThe only people entitled to say how open source 'ought' to work are people who\nrun projects, and the scope of their entitlement extends only to their own\nprojects.\n\nJust because someone open sources something does not imply they owe the world\na change in their status, focus and effort, e.g. from inventor to community\nmanager.\n\nAs a user of something open source you are not thereby entitled to anything at\nall. You are not entitled to contribute. You are not entitled to features. You\nare not entitled to the attention of others. You are not entitled to having\nvalue attached to your complaints. You are not entitled to this explanation.\n\nIf you have expectations (of others) that aren't being met, those expectations\nare your own responsibility. You are responsible for your own needs. If you\nwant things, make them.\n\nOpen source is a licensing and delivery mechanism, period. It means you get\nthe source for software and the right to use and modify it. All social\nimpositions associated with it, including the idea of 'community-driven-\ndevelopment' are part of a recently-invented mythology with little basis in\nhow things actually work, a mythology that embodies, cult-like, both a lack of\nsupport for diversity in the ways things can work and a pervasive sense of\ncommunal entitlement.\n\nIf you think Cognitect is not doing anything for the community, or is not\nlistening to the community, you are simply wrong. You are not, however,\nentitled to it being the effort, focus or response you desire. We get to make\nour own choices as regards our time and lives.\n\nWe at Cognitect have to show up to work, every day, to make a living. We get\nno royalties of any kind from Clojure. We are in no way building Clojure for\nprofit. Far fewer than 1% of Clojure users are our consulting or product\ncustomers, and thus contributing to our livelihood.\n\nWe take some of what we earn, money that could e.g. go into our retirement\nsavings and instead use it to hire people to work on Clojure and community\noutreach, some full-time. To be honest, I could use that money in my\nretirement account, having depleted it to make Clojure in the first place. But\nI love working with the team on Clojure, and am proud of the work we do.\n\nAlex Miller is extremely attentive to and engaged with the Clojure community.\nHe and Stu Halloway and I regularly meet and discuss community issues. Alex,\nat my direction, spends the majority of his time either working on features\nfor the community or assessing patches and bug reports. I spend significant\nportions of my time designing these features - spec, tools.deps, error\nhandling and more to come. This is time taken away from earning a living.\n\nI am grateful for the contributions of the community. Every Clojure release\nincorporates many contributions. The vast majority of the user community\ndoesn't contribute, and doesn't desire to contribute. And that's fine. Open\nsource is a no-strings-attached gift, and all participants should recognize it\nas such.\n\nThe Clojure process is not closed, but it is conservative. I think Clojure\nbenefits greatly from that conservatism, in contrast to some other projects\nwith high churn rates and feature bloat. If you disagree or imagine otherwise,\nthat's too bad. It's my life and I'm not going to spend it arguing/negotiating\non/with the internet. Write your own things and run your own projects as you\nsee fit.\n\nWe can always do more, but it is specious to claim that the core team is\nstanding in the way of meaningful contributions to Clojure, as opportunities\nabound: in library development, outreach, training, tutorials, documentation,\ngiving talks, tool building etc.\n\nAnd yes, on patches to core. Did you know that most patches/issues have poor\nproblem statements, no description of the plan (read my code!), no\nconsideration of alternatives, no tests, no designs, and are ill-conceived\nand/or broken in some way? Community efforts to triage matter a lot in moving\nthings forward - thanks Nicola, Ghadi and many others!\n\nThe time to re-examine preconceptions about open source is right now. Morale\nerosion amongst creators is a real thing. Your preconceptions and how you act\nupon them are your responsibility and yours alone. I am not going to answer\nfor them or to them.\n\nIf the way Clojure works isn't for you, a process which produced Clojure in\nthe first place, paradoxically, so be it. I'm sure you know better about the\none true way to write software. But kindly don't burn the community down on\nyour way out, with self-serving proclamations. Yes, everyone is entitled to an\nopinion, but, tragedy of the commons and all that.\n\nI encourage everyone gnashing their teeth with negativity at what they think\nthey can't do instead pick something positive they can do and do it.\n\nRich\n\np.s. My partners and coworkers at Cognitect were not consulted regarding this\nmessage - I am certain they would have dissuaded me. These opinions are mine\nalone.\n\np.p.s. I think the vast majority of people in the Clojure community are\nwonderful and positive. If you don't recognize yourself in the message above,\nit's not for/about you!\n\n###\n\nbelucid commented Dec 4, 2018\n\n@krisleech no, it's an investment. Yes, they could have kept it closed source\nor licensed it commercially, but then the adoption of Clojure would be\nextremely negligible, and there would be no market for Cognitect's Clojure\ndevelopment services or Datomic. Basically they'd need to be in a different\nbusiness then they are in today. To think that Cognitect actually thinks of\nClojure as a gift and not an investment is just not accurately describing the\nsituation.\n\nCognitect invests in Clojure The Clojure community invests their time and\nattention and technical risk in Clojure by using it Together we make a\ncommunity\n\nThere are no gifts here. Just self-interested investment by both sides.\n\n###\n\nschneems commented Dec 6, 2018\n\nRegarding the need to triage issues. If anyone wants to get started helping an\nopen source library, check out https://www.codetriage.com it sends you issues\nto triage in your inbox.\n\n###\n\nGitMoDu commented Dec 12, 2018\n\n> Saying that users aren't even entitled to an explanation of why they're not\n> entitled to support is childish in the extreme.\n\nSo, someone makes free software, then they become \"childish in the extreme\"\nfor not doing more work for free? You sir, are one entitled brat.\n\n###\n\nthiru commented Dec 16, 2018\n\nThank you so much for Clojure Rich! It's my favourite language to program in.\nI appreciate you and your team's hard work. The careful, considerate way it's\nevolved is a rare gift.\n\n###\n\nKingCode commented Dec 18, 2018 \u2022\n\nWell said Rich, thank you for sticking to your vision and standards...Clojure\nput the fun back in programming, and I will always be grateful for your (and\nteam's) work!\n\n###\n\nAlexKVal commented Jan 5, 2019\n\nThank you, Rich, for writing and sharing this. Thank you and all the\ncontributors for Clojure \ud83c\udf52\n\n###\n\nmlanza commented Feb 4, 2019\n\nFew things have impacted my view of programming as a whole more than the\nClojure way. Thanks for inventing it and sharing it.\n\n###\n\njohnlawrenceaspden commented Feb 22, 2019\n\nRich, I've no idea what this is really about, but you made a beautiful thing\nand I love it and use it lots. Thank you very much, and of course you don't\nowe me anything. Thank you for your wonderful gift!\n\n###\n\nakyoto commented Feb 25, 2019\n\nWell written, thank you.\n\n###\n\nMalloZup commented Apr 8, 2019\n\nthank you\n\n###\n\nmmeroberts commented May 6, 2019\n\nMy feeling as I have dabbled in Clojure is that I fear it becoming too big,\nmore features, more complex less easy to use. I, therefore, like to\nconservative approach. I look with horror at the underlying morass that Java\nhas become, I remember when I could read it and understand it, I no longer\nfind I stand a chance. I do not want Clojure to go that way. I have found that\nconstraints are the key to creativity, unbounded options lead to paralysis and\nnot progress. Having to work with constraints, as long as they are not severe,\nenables you to focus on finding a solution within a walled garden. I find as I\nlearn more about the Clojure, my view changes and I have a little more space\nto work, but lifting those constraints would make me exposed to having to face\ncontinual choices. In a world where coffee is no longer coffee, but an endless\nlist of choices, the joy of working with something that is simple,\nconstrained, well thought out, does not change on a whim, has what I believe\nto be the most under-rated quality - \"conceptual integrity\", is a joy. Yes, I\nstill have to dig through the weed pile of error messages.\n\nThe fact that Rich and Cognitect both contribute and gain from the success of\nClojure, I can not begrudge. Having a practical, usable LISP is a gift I\nreceive with thanks and hope that we can enjoy what we have even with the\nweeds.\n\n###\n\nwildermuthn commented Sep 20, 2019\n\nClojure's open-source nature, as Hickey so clearly states, is simply about\nlicencing. But Clojure itself is a tool. Is it also a product?\n\n> \"Product' is from the Latin producer: \"lead or bring forth, draw out,\"\n> figuratively \"to promote, empower; stretch out, extend.\"\n\nIn the context of users (those who are empowered), Clojure is a product.\n\nIn isolation from users, Clojure is merely a tool \u2013 an idiosyncratic invention\nbirthed as a labor of love.\n\n> Just because someone open sources something does not imply they owe the\n> world a change in their status, focus and effort, e.g. from inventor to\n> community manager.\n\nPerhaps Hickey really does view Clojure as an invention, as merely a tool?\n\n> We are in no way building Clojure for profit . . . I love working with the\n> team on Clojure, and am proud of the work we do.\n\nHickley doesn't seem to see Clojure as a product. Unfortunately, this means he\nis more likely to see Clojurists as followers of a tool rather than users of a\nproduct. Followers can be told that we are a drain on Hickey's morale and\nbank-account. Followers can be scolded that we are entitled. Even an important\nfollower can be beat-down in public until he issues a public apology.\n\nUsers will simply find another product.\n\nMany years ago, I switched from Common Lisp to Clojure for precisely one\npurpose: Clojure had a growing ecosystem that extended the power of the\nlanguage itself. But Hickey's letter reinforces the fact that the ecosystem is\nan accident, not an essential. Clojure core seems to be in competition with\nthe ecosystem rather than enabling it. I'll always love Clojure, and admire\nthe technical brilliance of Hickey, but I can't responsibly invest into an\nidiosyncratic invention that treats its ecosystem as ancillary rather than\nprimary.\n\n###\n\nloganpowell commented Oct 30, 2019 \u2022\n\nI love Clojure. I love it. Rich Hickey has \"gift\"ed it to us and I am thankful\nfor that. I also can tell that there's an underlying pattern to the nature of\nthe responses to PRs or contribution in general. They're short. I get the\nfeeling this culture derives from the top. Perhaps the policy should move from\n\"respond to everyone, but be brief\" to \"don't respond to everyone\". Less\npeople will find themselves going down a path that has a dead end, because\nthey won't be encouraged by any feedback. This would also prevent people from\nfeeling hurt when they spend hours/days/weeks on something only to get a two-\nsecond response. At least until the command-line becomes less pyramidal.\n\nThis is not the first project to have a BDFL. Many other great projects follow\nthis same model (Linux, Python [until recently], Apple [until recently], the\ngreat architects [e.g., Mies van der Rohe, Le Corbusier, Frank Llyod Wright],\netc.). In fact, I believe this focused thought leadership is why Clojure is so\ngreat. Rich is a Shepherd. There's a very clear goal that Rich has and he\nleads from the front to execute it, but it obviously doesn't scale.\n\nOne day our benevolent dictator (emphasis on benevolent) will have to come up\nwith a succession/committee model. Perhaps some of this energy could be\ndirected at that plan. Doing so would give contributors an outlet for their\nfrustrations and might even give Rich some good ideas for how to \"share the\nload\".\n\n###\n\nKah0ona commented Dec 16, 2019\n\nJust wanted to say: I agree, and thanks! I, as a programmer, had my views\nturned upside down in 2015, and since then I haven't looked back. I write\nclojure for a living, and 'snuck' it in in a handful of companies, in one it\nactually became a full on saas product with a small team working on it now.\nAnd I now run a profitable bootstrapped startup saas fully written in\nclojure/script.\n\nTruly feel I am living the dream.\n\nThank you.\n\n###\n\nStanleyMasinde commented Jun 9, 2020\n\nHehe sounds right\n\n###\n\nedtsech commented Jun 9, 2020\n\nSome open-source etiquette to think about\nhttps://github.com/kossnocorp/etiquette\n\n###\n\nMalsasa commented Jun 10, 2020\n\n\"If you disagree or imagine otherwise, that's too bad. It's my life and I'm\nnot going to spend it arguing/negotiating on/with the internet. Write your own\nthings and run your own projects as you see fit.\"\n\nHello, Rich. I do not know Clojure, but I got this article from RuboCop's\ndeveloper, and I really like your words above. I agree and thanks, you made\nClojure great.\n\n###\n\ng1eny0ung commented Jul 4, 2020 \u2022\n\nThank you Rich, this inspired me more.\n\n###\n\nguruma commented Jan 18, 2021 \u2022\n\nThank you Rich. I love Clojure from which I have learn a lot.\n\n###\n\njaimeagudo commented Jun 3, 2021\n\nGod\u2019s word \ud83d\ude4f (no kidding) Thanks a lot for sharing once more!\n\n###\n\nnickdex commented Sep 5, 2021\n\n> I think we can learn something by seeing it from a larger perspective, and\n> recognizing that a conversation regarding the balance between them\n> Completely agree. I'm constantly amazed how people don't even try to gain\n> that perspective. People (maybe not all but many) have good intentions, they\n> are coming in from different directions. Being polarized is just wastage\n> (attention, time, resources etc). Good to see that is not the case here \ud83d\udc4f\n\nClojure is indeed a gift, and a very addictive one at that \ud83d\ude04 Thank you\n@richhickey for the clojure and all the meta talks. Some even provide great\noneliners \ud83e\udd23\n\n###\n\nhinell commented Dec 29, 2021\n\nThis blog post is nice, but could have been much shorter. Really.\n\n###\n\nabserari commented Jul 5, 2022\n\nThat's true. Opensource doesn't mean help you without any requirements. The\ncommunity only exists in those who contribute themselves. Although open source\nbrings so many valuable things to companies or society. Open source just opens\nthe source and helps share the intelligence of the researcher.\n\nThanks for this post.\n\n###\n\nstardiviner commented Aug 27, 2022\n\n    \n    \n    I agree with all your points.\n\nI don't have other words to say but this one. Don't need to explain in\ncommenter's own thought, or any other comments. This is just a declarement. No\nneed to comment. (So this is not a comment, just a comment to other comments.)\n\n###\n\nrlouf commented Nov 24, 2022\n\nHey Rich, I don\u2019t use Clojure but I have found this post helpful as a\nmaintainer of much smaller projects. So thank you for gifting us with this\nexplanation as well.\n\n###\n\nalurm commented Feb 26, 2023\n\nThank you, Rich\n\n###\n\nignorabilis commented Jun 23, 2023\n\nI cannot possibly understand the people that try to force their opinions on\nsomething that's not under their control. If you don't like some Clojure\nfeatures - well fork Clojure and make them. You didn't pay for the thing and\nyou weren't promised anything - it's as simple as that. Good or bad - the\nchoices are not yours to make. Learn to respect other's people's effort,\ndecisions, opinions, lives.\n\nThank you for Clojure and all the brilliant ideas. Those are truly a gift -\nand much more than that if you ask me, as they changed my whole career.\n\n###\n\nChipNowacek commented Aug 30, 2023 \u2022\n\nThank you for sharing the heartache that comes from folks not living their\nlives. The human developmental model is a double-edge sword which is very\nsharp on both edges. Most of us can't get past dependency. Socially and\npersonally, we pay a very high price for our 9-month + 25-year-+ internship.\n\nYour suffering is real. We can better share it now. Thank you for trusting us\nwith it.\n\nedit because a quote came to mind:\n\n> My mom said something. \u201cYou can lie down for people to walk on you and they\n> will still complain that you're not flat enough.\" Live your life.\n\n###\n\ncerebrux commented Oct 9, 2023\n\nAlmost 20 years in open source and Free Software, couldn't say it better.\n\n###\n\nvorant94 commented Oct 11, 2023\n\nI assume that strict linkage between read access to repo and access to create\nissues in GitHub is part of the problem... it creates illusion that if I can\nread the code therefore I can have a vote in its development\n\nSign up for free to join this conversation on GitHub. Already have an account?\nSign in to comment\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
