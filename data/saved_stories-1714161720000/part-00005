{"aid": "40166977", "title": "Show HN: I made a ROS package for realtime semantic segmentation", "url": "https://github.com/Ginga-Kennis/semantic_segmentation_ros", "domain": "github.com/ginga-kennis", "votes": 1, "user": "Ginga_Kennis", "posted_at": "2024-04-26 08:14:12", "comments": 0, "source_title": "GitHub - Ginga-Kennis/semantic_segmentation_ros: ROS package for semantic segmentation", "source_text": "GitHub - Ginga-Kennis/semantic_segmentation_ros: ROS package for semantic\nsegmentation\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nGinga-Kennis / semantic_segmentation_ros Public\n\n  * Notifications\n  * Fork 1\n  * Star 19\n\nROS package for semantic segmentation\n\n19 stars 1 fork Branches Tags Activity\n\nStar\n\nNotifications\n\n# Ginga-Kennis/semantic_segmentation_ros\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n2 Branches\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nGinga-KennisMerge pull request #4 from Ginga-Kennis/refactoringApr 25,\n2024b85f739 \u00b7 Apr 25, 2024Apr 25, 2024\n\n## History\n\n59 Commits  \n  \n### assets\n\n|\n\n### assets\n\n| update video| Apr 25, 2024  \n  \n### config\n\n|\n\n### config\n\n| refactor train.py| Apr 24, 2024  \n  \n### launch\n\n|\n\n### launch\n\n| update README| Apr 18, 2024  \n  \n### nodes\n\n|\n\n### nodes\n\n| refactor self.cv_bridge.imgmsg_to_cv2(msg, rgb8).transpose(2,0,1).ast...|\nApr 24, 2024  \n  \n### scripts\n\n|\n\n### scripts\n\n| update README| Apr 25, 2024  \n  \n### src/semantic_segmentation_ros\n\n|\n\n### src/semantic_segmentation_ros\n\n| finish adding type hints| Apr 25, 2024  \n  \n### srv\n\n|\n\n### srv\n\n| implement service call| Apr 22, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| change .gitignore| Apr 25, 2024  \n  \n### CMakeLists.txt\n\n|\n\n### CMakeLists.txt\n\n| implement service call| Apr 22, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| update video| Apr 25, 2024  \n  \n### package.xml\n\n|\n\n### package.xml\n\n| implement service call| Apr 22, 2024  \n  \n### requirements.txt\n\n|\n\n### requirements.txt\n\n| fix requirements| Apr 16, 2024  \n  \n### setup.py\n\n|\n\n### setup.py\n\n| refactor dataset| Apr 25, 2024  \n  \n## Repository files navigation\n\n# Semantic Segmentation ROS\n\nThis repository contains a ROS package designed for semantic segmentation.\n\n## Installation\n\nThe following instructions were tested with python3.8 on Ubuntu 20.04.\n\nClone the repository into the src folder of a catkin workspace.\n\n    \n    \n    git clone https://github.com/Ginga-Kennis/semantic_segmentation_ros.git\n\nCreate and activate a new virtual environment.\n\n    \n    \n    cd /path/to/semantic_segmentation_ros python3 -m venv .venv source .venv/bin/activate\n\nInstall the Python dependencies within the activated virtual environment.\n\n    \n    \n    pip install -r requirements.txt\n\nBuild and source the catkin workspace,\n\n    \n    \n    catkin build semantic_segmentation_ros source /path/to/catkin_ws/devel/setup.bash\n\n## Network Training\n\nTo train the network on a custom dataset, follow these steps:\n\n  * Place your training images in the assets/data/train/img directory and the JSON files created with LabelMe in the assets/data/train/ann directory. Place your validation images in the assets/data/val/img directory and the JSON files created with LabelMe in the assets/data/val/ann directory. Ensure that each image has a corresponding JSON file with a matching name.\n  * Configure the config/train.json file according to your training preferences and dataset specifications.\n\n    \n    \n    python3 scripts/train.py [--config]\n\nTraining and validation metrics are logged to TensorBoard and can be accessed\nwith\n\n    \n    \n    tensorboard --logdir=log/training\n\n## RealSense Inference\n\nThis package contains an example of realtime semantic segmentation with Intel\nRealsense. Configure the config/realsense.yaml file to suit your environment.\n\n    \n    \n    roslaunch semantic_segmentation_ros realsense_semantic_segmentation.launch\n\n### Subscribed Topics\n\n  * /camera/color/image_raw (sensor_msgs/Image)\n\n    * The raw image stream from a camera, used as input for real-time semantic segmentation.\n\n### Published Topics\n\n  * /segmentation_mask (sensor_msgs/Image)\n\n    * This topic outputs semantic predictions as a mono8 image, indicating semantic classes at each pixel.\n  * /segmentation_image (sensor_msgs/Image)\n\n    * This topic outputs a colored RGB version of the semantic predictions for visualization purposes, as a bgr8 image.\n\n### ROS Services\n\n  * /get_segmentation_mask (semantic_segmentation_ros/GetSegmentationMask)\n\n    * This service allows for on-demand retrieval of the latest semantic segmentation mask. When called, it returns a sensor_msgs/Image containing the semantic mask as a mono8 image, where each pixel's intensity corresponds to a class index.\n\nService Details:\n\n    * Request: Empty\n    * Response: sensor_msgs/Image (the segmentation mask as mono8)\n\n## About\n\nROS package for semantic segmentation\n\n### Topics\n\nmachine-learning computer-vision pytorch ros semantic-segmentation\n\n### Resources\n\nReadme\n\nActivity\n\n### Stars\n\n19 stars\n\n### Watchers\n\n3 watching\n\n### Forks\n\n1 fork\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * Python 98.9%\n  * CMake 1.1%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
