{"aid": "40219205", "title": "Kolmogorov-Arnold Networks", "url": "https://github.com/KindXiaoming/pykan", "domain": "github.com/kindxiaoming", "votes": 6, "user": "sumo43", "posted_at": "2024-05-01 03:30:47", "comments": 0, "source_title": "GitHub - KindXiaoming/pykan: Kolmogorov Arnold Networks", "source_text": "GitHub - KindXiaoming/pykan: Kolmogorov Arnold Networks\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nKindXiaoming / pykan Public\n\n  * Notifications\n  * Fork 4\n  * Star 51\n\nKolmogorov Arnold Networks\n\n### License\n\nMIT license\n\n51 stars 4 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# KindXiaoming/pykan\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n2 Branches\n\n2 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nKindXiaomingMerge branch 'master' of github.com:KindXiaoming/pykanMay 1,\n20246aed4d7 \u00b7 May 1, 2024May 1, 2024\n\n## History\n\n101 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| add mockimport sklearn| Apr 29, 2024  \n  \n### .ipynb_checkpoints\n\n|\n\n### .ipynb_checkpoints\n\n| update hellokan| Apr 29, 2024  \n  \n### docs\n\n|\n\n### docs\n\n| fix typo| May 1, 2024  \n  \n### kan\n\n|\n\n### kan\n\n| fix html| Apr 29, 2024  \n  \n### pykan.egg-info\n\n|\n\n### pykan.egg-info\n\n| clean| Apr 29, 2024  \n  \n### tutorials\n\n|\n\n### tutorials\n\n| update paper link| May 1, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| clean| Apr 29, 2024  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Create LICENSE| Apr 29, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| Update README.md| May 1, 2024  \n  \n### hellokan.ipynb\n\n|\n\n### hellokan.ipynb\n\n| update hellokan| Apr 29, 2024  \n  \n### requirements.txt\n\n|\n\n### requirements.txt\n\n| clean| Apr 29, 2024  \n  \n### setup.py\n\n|\n\n### setup.py\n\n| update to v0.0.2| Apr 29, 2024  \n  \n## Repository files navigation\n\n# Kolmogorov-Arnold Newtworks (KANs)\n\nThis is the github repo for the paper \"KAN: Kolmogorov-Arnold Networks\". Find\nthe documentation here.\n\nKolmogorov-Arnold Networks (KANs) are promising alternatives of Multi-Layer\nPerceptrons (MLPs). KANs have strong mathematical foundations just like MLPs:\nMLPs are based on the universal approximation theorem, while KANs are based on\nKolmogorov-Arnold representation theorem. KANs and MLPs are dual: KANs have\nactivation functions on edges, while MLPs have activation functions on nodes.\nThis simple change makes KANs better (sometimes much better!) than MLPs in\nterms of both model accuracy and interpretability. A quick intro of KANs here.\n\n## Accuracy\n\nKANs have faster scaling than MLPs. KANs have better accuracy than MLPs with\nfewer parameters.\n\nExample 1: fitting symbolic formulas\n\nExample 2: fitting special functions\n\nExample 3: PDE solving\n\nExample 4: avoid catastrophic forgetting\n\n## Interpretability\n\nKANs can be intuitively visualized. KANs offer interpretability and\ninteractivity that MLPs cannot provide. We can use KANs to potentially\ndiscover new scientific laws.\n\nExample 1: Symbolic formulas\n\nExample 2: Discovering mathematical laws of knots\n\nExample 3: Discovering physical laws of Anderson localization\n\nExample 4: Training of a three-layer KAN\n\n## Installation\n\nThere are two ways to install pykan, through pypi or github.\n\nInstallation via github\n\n    \n    \n    git clone https://github.com/KindXiaoming/pykan.git cd pykan pip install -e .\n\nInstallation via pypi\n\n    \n    \n    pip install pykan\n\nRequirements\n\n    \n    \n    # python==3.9.7 matplotlib==3.6.2 numpy==1.24.4 scikit_learn==1.1.3 setuptools==65.5.0 sympy==1.11.1 torch==2.2.2 tqdm==4.66.2\n\nTo install requirements:\n\n    \n    \n    pip install -r requirements.txt\n\n## Computation requirements\n\nExamples in tutorials are runnable on a single CPU typically less than 10\nminutes. All examples in the paper are runnable on a single CPU in less than\none day. Training KANs for PDE is the most expensive and may take hours to\ndays on a single CPU. We use CPUs to train our models because we carried out\nparameter sweeps (both for MLPs and KANs) to obtain Pareto Frontiers. There\nare thousands of small models which is why we use CPUs rather than GPUs.\nAdmittedly, our problem scales are smaller than typical machine learning\ntasks, but are typical for science-related tasks. In case the scale of your\ntask is large, it is advisable to use GPUs.\n\n## Documentation\n\nThe documenation can be found here.\n\n## Tutorials\n\nQuickstart\n\nGet started with hellokan.ipynb notebook.\n\nMore demos\n\nMore Notebook tutorials can be found in tutorials.\n\n## Citation\n\n    \n    \n    @misc{liu2024kan, title={KAN: Kolmogorov-Arnold Networks}, author={Ziming Liu and Yixuan Wang and Sachin Vaidya and Fabian Ruehle and James Halverson and Marin Solja\u010di\u0107 and Thomas Y. Hou and Max Tegmark}, year={2024}, eprint={2404.19756}, archivePrefix={arXiv}, primaryClass={cs.LG} }\n\n## Contact\n\nIf you have any questions, please contact zmliu@mit.edu\n\n## About\n\nKolmogorov Arnold Networks\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n51 stars\n\n### Watchers\n\n2 watching\n\n### Forks\n\n4 forks\n\nReport repository\n\n## Releases 2\n\nv0.0.2 Latest\n\nApr 29, 2024\n\n\\+ 1 release\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * Jupyter Notebook 97.4%\n  * Python 2.6%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": true}
