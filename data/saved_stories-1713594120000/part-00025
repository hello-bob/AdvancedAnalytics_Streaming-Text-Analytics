{"aid": "40091994", "title": "Improved Browser Testing on Heroku with Chrome", "url": "https://blog.heroku.com/improved-browser-testing-on-heroku-with-chrome", "domain": "heroku.com", "votes": 1, "user": "joeyespo", "posted_at": "2024-04-19 21:16:20", "comments": 0, "source_title": "Improved Browser Testing on Heroku with Chrome", "source_text": "Improved Browser Testing on Heroku with Chrome | Heroku\n\nSkip Navigation\n\n|||\n\n## Video Transcript\n\nClose\n\n# Improved Browser Testing on Heroku with Chrome\n\nPosted by Mars Hall Software Engineering Architect Last Updated: April 09,\n2024\n\nFor developers and businesses offering a web-based product, automated browser\ntesting is a critical tool to ensure continuous delivery of a reliable\nservice. Developers write browser tests by scripting actions against a real\nbrowser, simulating real usage by navigating, selecting, and making assertions\nabout web pages and their document elements.\n\nIn this post, we introduce a new community buildpack that helps with automated\nbrowser testing. The new buildpack resolves installation reliability problems\nin the existing Chrome browser buildpacks for Heroku apps.\n\n## Browser Testing on Heroku\n\nDevelopers can manually run browser tests on their machines to support writing\nand debugging tests. They can automate browser tests with continuous\nintegration tools like Heroku CI to run in response to code updates and catch\nnew problems on feature branches before they\u2019re merged and released. They can\nalso automate browser tests with a continuous end-to-end testing service. For\nexample, running the test suite every hour to catch new problems with a\ncustomer-facing app.\n\nAt Heroku, we use automated browser testing to ensure the reliability of the\nHeroku Dashboard, our primary web interface. Continuous testing of the\ndashboard and related interfaces throughout their lifecycle, from feature\ndevelopment to monitoring the production system, is essential for early bug\ndetection, quality assurance, and adaptability.\n\nHeroku engineers found one long-standing issue regularly disrupts browser\ntesting. Occasionally, automated Chrome browser tests all fail due to a\nversion mismatch of the installed Chrome and Chromedriver components, like\nthis example error message:\n\n    \n    \n    This version of ChromeDriver only supports Chrome version N Current browser version is M\n\nWhile it seems like the answer is to set a specific version number, Chrome is\nan evergreen browser. The browser continuously refreshes itself with security\nupdates and features. Setting a specific version is discouraged because the\nbrowser quickly falls out of date.\n\n## Introducing A New Community Buildpack\n\nTo solve this cycle of version mismatches as Chrome updates itself, we created\nthe Chrome for Testing Heroku Buildpack. We were able to release this\nbuildpack because the Chrome development team addressed the long-standing\nproblem of keeping Chrome and Chromedriver versions updated and aligned with\neach other for automated testing environments.\n\nTo use this new Chrome for Testing buildpack in Heroku apps, head over to the\nHeroku Elements Marketplace and install the Chrome for Testing Heroku\nBuildpack.\n\nIf the app is already using Chrome, make sure to remove existing Chrome and\nChromedriver buildpacks before installing the new buildpack. To install Chrome\nfor Testing on an app, add heroku-community/chrome-for-testing as the first\nbuildpack:\n\n    \n    \n    heroku buildpacks:add -i 1 heroku-community/chrome-for-testing\n\nBy default, this buildpack downloads the latest Stable release, which Google\nprovides. You can control the channel of the release by setting the app\u2019s\nGOOGLE_CHROME_CHANNEL config variable to Stable, Beta, Dev, or Canary, and\nthen deploy and build the app.\n\nAfter the app deploys with the Chrome for Testing buildpack, chrome and\nchromedriver executables are installed on the PATH in dynos, available for\nbrowser automation tools like Selenium WebDriver and Puppeteer. We welcome\nfeedback about this buildpack on its GitHub repository. Happy testing!\n\nOriginally published: April 09, 2024\n\ntesting Heroku CI continuous integration buildpack\n\n  * Tweet\n  * Share\n  * Share\n\n######\n\nRelated posts\n\n  * Heroku CI and Heroku Teams Now Free for Card Paying Customers\n  * Coding at the Speed of a Pandemic: How Trineo Delivered Apps That Test the Test Kits\n  * Announcing New Review Apps: Expanded Options for Greater Control, Automation, and Easier Access\n  * Heroku Buildpack Registry: Making Buildpacks Open and Shareable\n  * Heroku Postgres Update: Configuration, Credentials, and CI\n\n###### More from the author\n\n##### Mars Hall\n\nHeroku Staff\n\n  * Reactive Programming with Salesforce Data\n  * Introducing the Einstein Vision Add-on for Image Recognition\n  * Deploying React with Zero Configuration\n\nBrowse the archives for engineering or all blogs Subscribe to the RSS feed for\nengineering or all blogs.\n\n### Subscribe to our monthly newsletter\n\n  * RSS\n\n    * Heroku Blog\n    * Heroku News Blog\n    * Heroku Engineering Blog\n    * Dev Center Articles\n    * Dev Center Changelog\n    * Heroku Status\n\n  * Twitter\n\n    * Heroku\n    * Dev Center Articles\n    * Dev Center Changelog\n    * Heroku Status\n\n  * GitHub\n  * LinkedIn\n\nHeroku is a company\n\n  * heroku.com\n  * Terms of Service\n  * Privacy\n  * Cookies\n  * Cookie Preferences\n  * Your Privacy Choices\n  * \u00a9 2024 Salesforce.com\n\n", "frontpage": false}
