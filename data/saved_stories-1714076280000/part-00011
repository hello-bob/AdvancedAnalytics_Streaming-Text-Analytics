{"aid": "40157685", "title": "Poptop: A modern top command that charts system metrics", "url": "https://github.com/bakks/poptop", "domain": "github.com/bakks", "votes": 1, "user": "tosh", "posted_at": "2024-04-25 13:59:40", "comments": 0, "source_title": "GitHub - bakks/poptop", "source_text": "GitHub - bakks/poptop\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nbakks / poptop Public\n\n  * Notifications\n  * Fork 3\n  * Star 40\n\n### License\n\nMIT license\n\n40 stars 3 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# bakks/poptop\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n9 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nbakksMore graceful exit handling when calling top processesJan 16, 20239e50f7d\n\u00b7 Jan 16, 2023Jan 16, 2023\n\n## History\n\n62 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| Tweak compiler config| Oct 27, 2022  \n  \n### assets\n\n|\n\n### assets\n\n| Update demo image| Oct 27, 2022  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| No more committing binaries| Oct 26, 2022  \n  \n### .goreleaser.yml\n\n|\n\n### .goreleaser.yml\n\n| Prepare for release| Oct 27, 2022  \n  \n### LICENSE.md\n\n|\n\n### LICENSE.md\n\n| Create LICENSE.md| Oct 19, 2022  \n  \n### Makefile\n\n|\n\n### Makefile\n\n| No more committing binaries| Oct 26, 2022  \n  \n### README.md\n\n|\n\n### README.md\n\n| Update help| Nov 9, 2022  \n  \n### charts.go\n\n|\n\n### charts.go\n\n| Update help| Nov 9, 2022  \n  \n### go.mod\n\n|\n\n### go.mod\n\n| Make chart titles and lines bold| Oct 28, 2022  \n  \n### go.sum\n\n|\n\n### go.sum\n\n| Make chart titles and lines bold| Oct 28, 2022  \n  \n### main.go\n\n|\n\n### main.go\n\n| More graceful exit handling when calling top processes| Jan 16, 2023  \n  \n### series.go\n\n|\n\n### series.go\n\n| Add smoothing| Oct 3, 2022  \n  \n### series_test.go\n\n|\n\n### series_test.go\n\n| Add smoothing| Oct 3, 2022  \n  \n### top.go\n\n|\n\n### top.go\n\n| More graceful exit handling when calling top processes| Jan 16, 2023  \n  \n## Repository files navigation\n\n# Poptop\n\nA modern top command that charts system metrics like CPU load, network IO, etc\nin the terminal.\n\n\"What's going on with my local system?\". I often want a quick overview of the\nload on my system, more visually and with a higher-level view than the classic\ntop program. Poptop turns your terminal into a dynamic charting tool for\nsystem metrics. While the top and htop commands show precise point-in-time\ndata, Poptop aims to provide metrics over a time window to give a better at-a-\nglance summary of your system's activity. And make it look cool.\n\n## Installation\n\nPoptop has only been built and tested on MacOS (amd64 and arm64). Install\nusing Homebrew:\n\n    \n    \n    brew install bakks/bakks/poptop\n\n## Operation\n\nAfter installation with homebrew, execute with poptop on the command line.\n\n    \n    \n    Flags: -h, --help Show help information -r, --redraw-interval=500 Redraw interval in milliseconds (how often to repaint charts) -s, --sample-interval=500 Sample interval in milliseconds (how often to fetch a new datapoint -d, --chart-duration=120 Duration of the charted series in seconds (i.e. width of chart x-axis in time), 60 == 1 minute -z, --split-horizontal Arrange panes horizontally rather than vertically -w, --tile-windows Tile windows rather than placing them in a horizontal or vertical line -a, --smooth=4 How many samples will be included in running average -L, --cpu-load Add CPU Load chart to layout -C, --cpu-percent Add CPU % chart to layout -D, --disk-iops Add Disk IOPS chart to layout -E, --disk-io Add Disk IO chart to layout -N, --network-io Add Network IO chart to layout -T, --top-cpu Add Top Processes by CPU list to layout -M, --top-memory Add Top Processes by Memory list to layout Examples: poptop -CL -d 30 Show only CPU Load and % charts for 30 second duration. poptop -w -LCDN Show 4 specific charts arranged in a square.\n\n## Layout\n\nPoptop displays some default charts, but also allows you to select your own.\nFor example, 'poptop -LC' will display only CPU load and % charts. You can\nalso add and remove charts at runtime by pressing the key corresponding to\ntheir flag (e.g. press C to toggle the CPU % chart).\n\nBy default, all charts will be stacked vertically. You can use the -z flag to\nstack them horizontally instead.\n\nYou can also use the -w flag to arrange charts in a square, i.e. to switch\nbetween vertical and horizontal stacking as the layout is built. 'z' and 'w'\ncan also be pressed at runtime to change the layout dynamically.\n\n## Hotkeys\n\nThe following hotkeys are available while Poptopt is running. Note that the\nkeys are mostly the same as the command line options.\n\n    \n    \n    h Toggle help widget q Quit Poptop L Toggle CPU Load widget C Toggle CPU Percent widget D Toggle Disk IOPS widget E Toggle Disk Throughput widget N Toggle Network Throughput widget T Toggle Top CPU Processes widget M Toggle Top Memory Processes widget z Toggle horizontal vs vertical alignment w Toggle row of widgets vs panes of widgets\n\n## Metrics\n\n### CPU Load (1min, 5min, 15min)\n\nCharts CPU load at 1, 5, 15min averages by calling sysctl.\n\nLoad is one of the simplest metrics for understanding how busy your system is.\nIt means roughly how many processes are executing or waiting to execute on a\nCPU. If load is higher than the number of CPU cores on your system then it\nindicates processes are having to wait for execution.\n\n### CPU (%) (min, avg, max)\n\nA chart to show min, average, max CPU busy % time. On MacOS this calls\nhost_processor_info(). The judgement call here is that min, avg, max is a\nsimpler way to understand CPU load rather than a single average, or charting\nper-CPU time.\n\nCPU time here means the total time minus CPU idle time and IO wait time.\n\n### Network IO (KiB/s) (send, recv)\n\nChart to show throughput on the selected network device in kibibytes per\nsecond using data from the netstat command. We automatically choose a network\ndevice based on which device has received the most inbound data since system\nstart, changing dynamically if this this switches to a new device.\n\n### Disk IOPS (read, write)\n\nChart to show Disk IOPS (input/output operations per second) over time using\ndata from iostat. Arguably, in an everyday scenario with many heavy processes\nthen IOPS is a simpler metric than throughput, but if disk load is skewed to a\nspecific process (e.g. heavy file copies, database operations), then disk\nthroughput may be a better metric.\n\n### Disk IO (KiB/s) (read, write)\n\nChart to show disk IO throughput in kibibytes per second based on iostat\noutput. This chart currently shows only a single disk.\n\n### Top CPU Processes (%, pid, command)\n\nShow a list of top CPU processes output by the ps command, i.e. which\nprocesses are consuming the most CPU. This is sampled at one-fourth of the\nsample interval rate since this is a point-in-time list rather than a chart.\nRun 'man ps' for more information on calculation methodology.\n\n### Top Memory Processes (%, pid, command)\n\nShow a list of top Memory processes output by the ps command, i.e. which\nprocesses are consuming the most real memory. This is sampled at one-fourth of\nthe sample interval rate since this is a point-in-time list rather than a\nchart. Run 'man ps' for more information on calculation methodology.\n\n## Acknowledgements\n\nPoptop is written in Golang and uses the following libraries:\n\n  * github.com/alecthomas/kong\n  * github.com/mum4k/termdash (forked)\n  * github.com/shirou/gopsutil/v3\n\nMIT License - Copyright (c) 2022 Peter Bakkum\n\n## About\n\nNo description, website, or topics provided.\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n40 stars\n\n### Watchers\n\n3 watching\n\n### Forks\n\n3 forks\n\nReport repository\n\n## Releases 7\n\nv0.1.8 Latest\n\nJan 16, 2023\n\n\\+ 6 releases\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * Go 99.9%\n  * Makefile 0.1%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
