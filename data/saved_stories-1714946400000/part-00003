{"aid": "40263615", "title": "Show HN: PgQueuer \u2013 Over 5k Jobs/SEC with PostgreSQL", "url": "https://github.com/janbjorge/PgQueuer", "domain": "github.com/janbjorge", "votes": 1, "user": "jeeybee", "posted_at": "2024-05-05 10:09:58", "comments": 0, "source_title": "GitHub - janbjorge/PgQueuer: PgQueuer is a Python library leveraging PostgreSQL for efficient job queuing.", "source_text": "GitHub - janbjorge/PgQueuer: PgQueuer is a Python library leveraging\nPostgreSQL for efficient job queuing.\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\njanbjorge / PgQueuer Public\n\n  * Notifications\n  * Fork 0\n  * Star 8\n\nPgQueuer is a Python library leveraging PostgreSQL for efficient job queuing.\n\n### License\n\nMIT license\n\n8 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# janbjorge/PgQueuer\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n9 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\njanbjorgeAlways print install/uninstall query, prefix uniq constrant (#11)May\n5, 20244744541 \u00b7 May 5, 2024May 5, 2024\n\n## History\n\n43 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| CI Benchmark| Apr 28, 2024  \n  \n### src/PgQueuer\n\n|\n\n### src/PgQueuer\n\n| Always print install/uninstall query, prefix uniq constrant (#11)| May 5,\n2024  \n  \n### test\n\n|\n\n### test\n\n| Simplefy log-job query| Apr 30, 2024  \n  \n### tools\n\n|\n\n### tools\n\n| Add timelimit to benchmark tool| May 2, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| A few tests| Apr 21, 2024  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| MVP| Apr 20, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| Update readme (#8)| May 3, 2024  \n  \n### docker-compose.yml\n\n|\n\n### docker-compose.yml\n\n| Add CI| Apr 26, 2024  \n  \n### pyproject.toml\n\n|\n\n### pyproject.toml\n\n| Update documentation url| May 5, 2024  \n  \n## Repository files navigation\n\n## \ud83d\ude80 PgQueuer - Building Smoother Workflows One Queue at a Time \ud83d\ude80\n\n\ud83d\udcda Documentation: Explore the Docs \ud83d\udcd6\n\n\ud83d\udd0d Source Code: View on GitHub \ud83d\udcbe\n\n## PgQueuer\n\nPgQueuer is a minimalist, high-performance job queue library for Python,\nleveraging the robustness of PostgreSQL. Designed for simplicity and\nefficiency, PgQueuer uses PostgreSQL's LISTEN/NOTIFY to manage job queues\neffortlessly.\n\n### Features\n\n  * Simple Integration: Easy to integrate with existing Python applications using PostgreSQL.\n  * Efficient Concurrency Handling: Utilizes PostgreSQL's FOR UPDATE SKIP LOCKED for reliable and concurrent job processing.\n  * Real-time Notifications: Leverages LISTEN and NOTIFY for real-time updates on job status changes.\n\n### Installation\n\nTo install PgQueuer, simply install with pip the following command:\n\n    \n    \n    pip install PgQueuer\n\n### Database Configuration\n\nPgQueuer provides a command-line interface for easy management of installation\nand uninstallation. Ensure you have configured your environment variables or\nuse the appropriate flags to specify your database credentials.\n\n  * Installing PgQueuer Database Components:\n    \n        python -m PgQueuer install\n\n  * Uninstalling PgQueuer Database Components:\n    \n        python -m PgQueuer uninstall\n\nThe CLI supports several flags to customize the connection settings. Use\n--help to see all available options.\n\n#### Dashboard Command\n\nThe dashboard command provides a real-time view of job processing statistics,\nwhich can be refreshed at a specified interval:\n\n    \n    \n    python -m PgQueuer dashboard --interval 10 --tail 25 --table-format grid\n\n  * \\--interval <seconds>: Set the refresh interval in seconds for updating the dashboard display. If not set, the dashboard will update only once and exit.\n  * \\--tail <number>: Specify the number of the most recent log entries to display.\n  * \\--table-format <format>: Choose the format of the table used to display statistics. Options are provided by the tabulate library, such as grid, plain, html, etc.\n\n### Example Usage\n\nHere's how you can use PgQueuer in a typical scenario processing incoming data\nmessages:\n\n    \n    \n    import asyncio import asyncpg from PgQueuer.models import Job from PgQueuer.qm import QueueManager async def main() -> None: pool = await asyncpg.create_pool(min_size=2) qm = QueueManager(pool) N = 1_000 # Enqueue messages. for n in range(N): await qm.queries.enqueue(\"fetch\", f\"this is from me: {n}\".encode()) @qm.entrypoint(\"fetch\") async def process_message(job: Job) -> None: print(f\"Processed message: {job}\") await qm.run() if __name__ == \"__main__\": asyncio.run(main())\n\n### Benchmark Summary\n\nPgQueuer underwent basic benchmark testing to assess its performance across\nvarying job volumes and concurrency levels.\n\n#### Key Observations:\n\n  * Scalability: Performance increases with higher concurrency, demonstrating the library's ability to efficiently manage larger workloads.\n  * Consistency: PgQueuer maintains consistent throughput across different job counts, ensuring reliable performance.\n  * Optimal Performance: The highest throughput observed was ~5,200 jobs per second at a concurrency level of 5.\n\n## About\n\nPgQueuer is a Python library leveraging PostgreSQL for efficient job queuing.\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n8 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases 9\n\nv0.3.2 Latest\n\nMay 5, 2024\n\n\\+ 8 releases\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * Python 98.2%\n  * Dockerfile 1.2%\n  * Shell 0.6%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
