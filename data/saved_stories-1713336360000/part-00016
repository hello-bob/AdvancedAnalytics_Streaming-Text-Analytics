{"aid": "40057542", "title": "Expr 1.16.5", "url": "https://github.com/expr-lang/expr/releases/tag/v1.16.5", "domain": "github.com/expr-lang", "votes": 1, "user": "medv", "posted_at": "2024-04-16 21:38:46", "comments": 0, "source_title": "Release v1.16.5 \u00b7 expr-lang/expr", "source_text": "Release v1.16.5 \u00b7 expr-lang/expr \u00b7 GitHub\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nexpr-lang / expr Public\n\n  * Sponsor\n  * Notifications\n  * Fork 357\n  * Star 5.5k\n\n# v1.16.5\n\nLatest\n\nLatest\n\nantonmedv released this 16 Apr 21:32\n\nv1.16.5\n\n6157395\n\nExpr is a Go-centric expression language designed to deliver dynamic\nconfigurations with unparalleled accuracy, safety, and speed.\n\n    \n    \n    output, err := expr.Eval(\"metric > 100\", map[string]any{ \"metric\": 200, })\n\nIn this release:\n\n  * Added compiler optimization for boolean operations between all, any, none functions (#626)\n  * Added optional predicate to sum() builtin (#592)\n  * Added sum() compiler optimization c2b609e edb1b5a\n  * Improved WithContext to work for methods on env struct (#602)\n  * Improved count() builtin: now predicate is optional 725b702\n  * Fixed printing of combinations conditional with binary nodes 6157395\n  * Fixed optional chaining to return proper nil 5804ccb\n\nExpr Editor\n\nThe Expr Editor is an embeddable code editor written in JavaScript with full\nsupport of Expr language.\n\nExpr Pro\n\nExpr Pro is a set of extensions for Expr for advanced use cases. It includes\nexpressions explanation, performance profiling, and more.\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
