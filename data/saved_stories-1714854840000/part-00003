{"aid": "40256680", "title": "FreeBSD Status Report: First Quarter 2024", "url": "https://www.freebsd.org/status/report-2024-01-2024-03/", "domain": "freebsd.org", "votes": 1, "user": "throw0101b", "posted_at": "2024-05-04 11:07:44", "comments": 0, "source_title": "FreeBSD Status Report First Quarter 2024", "source_text": "FreeBSD Status Report First Quarter 2024 | The FreeBSD Project\n\nDonate to FreeBSD\n\n  * About\n  * Features\n  * Applications\n  * Administration\n  * News\n  * Events\n  * Press\n  * Artwork\n  * Donations\n  * Legal Notices\n  * Privacy Policy\n\n# FreeBSD Status Report First Quarter 2024\n\nHere is the first 2024 status report, with 21 entries.\n\nThe New Year brings us many new interesting projects, such as the new libsys\nthat separates system calls from libc and libpthread or work on a graphical\ninstaller for FreeBSD, which will help making our OS more user-friendly. Of\ncourse, the usual projects keep going on, such as the work on cloud-init,\nOpenStack, or the GCC ports. As usual our main teams share their progress with\nus.\n\nHave a nice read.\n\nLorenzo Salvadore, on behalf of the Status Team.\n\nTable of Contents\n\n  * FreeBSD Team Reports\n\n    * FreeBSD Core Team\n    * FreeBSD Foundation\n    * FreeBSD Release Engineering Team\n    * Cluster Administration Team\n    * Continuous Integration\n    * Ports Collection\n  * Projects\n\n    * Audio Stack Improvements\n    * Bhyve Improvements\n    * Graphical Installer for FreeBSD\n  * Userland\n\n    * libsys\n    * PackageKit backend for FreeBSD pkg\n  * Kernel\n\n    * iwlwifi(4) and wireless for 13.3-RELEASE\n  * Architectures\n\n    * Ten64, WHLE-LS1, and HoneyComb\n  * Cloud\n\n    * FreeBSD on Microsoft HyperV and Azure\n    * FreeBSD as a Tier 1 cloud-init Platform\n    * OpenStack on FreeBSD\n  * Documentation\n\n    * Documentation Engineering Team\n  * Ports\n\n    * FreshPorts: Notification of new packages\n    * GCC on FreeBSD\n    * Valgrind: port to arm64 on its way\n  * Third Party Projects\n\n    * Containers and FreeBSD: Pot, Potluck and Potman\n\n## FreeBSD Team Reports\n\nEntries from the various official and semi-official teams, as found in the\nAdministration Page.\n\n### FreeBSD Core Team\n\nContact: FreeBSD Core Team <core@FreeBSD.org>\n\nThe FreeBSD Core Team is the governing body of FreeBSD.\n\n#### 13.3-RELEASE\n\nFreeBSD 13.3 was released on March 5th, 2024.\n\nThe release announcement is at:\n\nhttps://www.freebsd.org/releases/13.3R/announce/\n\nAlong the release engineering team, the project dedicates the 13.3-RELEASE to\nGlen Barber, with thanks for his many years of contributions as Release\nEngineer.\n\n#### Future of 32-bit platform support\n\nCore announced Future of 32-bit platform support in FreeBSD for deprecating\n32-bit platforms over the next couple of major releases.\n\n#### Commit bits\n\n  * Core approved the src commit bit for Bojan Novkovi\u0107\n\n  * Core reactivated the src commit bits for Mark Peek, Mark Murray, and Lawrence Stewart\n\n### FreeBSD Foundation\n\nLinks: FreeBSD Foundation URL: https://freebsdfoundation.org/ Technology\nRoadmap URL: https://freebsdfoundation.org/blog/technology-roadmap/ Donate\nURL: https://freebsdfoundation.org/donate/ Foundation Partnership Program URL:\nhttps://freebsdfoundation.org/our-donors/freebsd-foundation-partnership-\nprogram/ FreeBSD Journal URL: https://freebsdfoundation.org/journal/\nFoundation Events URL: https://freebsdfoundation.org/our-work/events/\n\nContact: Deb Goodkin <deb@FreeBSDFoundation.org>\n\nThe FreeBSD Foundation is a 501(c)(3) non-profit organization dedicated to\nsupporting and promoting the FreeBSD Project and worldwide community, and\nhelping to advance the state of FreeBSD. We do this in both technical and non-\ntechnical ways. We are 100% supported by donations from individuals and\ncorporations and those investments help us fund the:\n\n  * Software development projects to implement features and functionality in FreeBSD\n\n  * Sponsor and organize conferences and developer summits to provide collaborative opportunities and promote FreeBSD\n\n  * Purchase and support of hardware to improve and maintain FreeBSD infrastructure\n\n  * Resources to improve security, quality assurance, and continuous integration efforts\n\n  * Materials and staff needed to promote, educate, and advocate for FreeBSD\n\n  * Collaboration between commercial vendors and FreeBSD developers\n\n  * Representation of the FreeBSD Project in executing contracts, license agreements, and other legal arrangements that require a recognized legal entity\n\n#### Operations\n\nWe kicked off the new year with ambitious goals to help move the FreeBSD\nProject forward by identifying features and functionality to support in the\noperating system and increasing our advocacy efforts to increase and expand\nthe visibility of FreeBSD. Stay tuned for a blog post that will provide more\ninformation on our 2024 goals and plans.\n\nWe also published the 2024 Budget. In order to provide greater transparency\nabout the budgeting process, we wrote a blog post that provides more details\non how funding is allocated, new breakouts of some of the project expense\ncategories, and more details on where the funding is going.\n\n#### OS Improvements\n\nDuring the first quarter of 2024, 180 src, 65 ports, and 18 doc tree commits\nidentified The FreeBSD Foundation as a sponsor.\n\nThree new projects began this quarter.\n\n  * Work began to improve FreeBSD\u2019s audio stack and provide audio developers with useful tools and frameworks to make sound development on FreeBSD easier. Read more in Christos Margiolis Audio Stack Improvements report entry.\n\n  * Olivier Certner began his second contract with the Foundation, and this time around, the main goal is to make unionfs stable and useful on FreeBSD. Other work may include revamping VFS lookups, improving out-of-memory handling, implementing a notification system for en-masse detection of filesystem changes such as inotify, and improving console usability.\n\n  * This quarter, a new project to add hierarchical rate limits to the OpenZFS file system began. Pawel Dawidek will add support for limits that will be configurable, similar to quotas, but would limit the number of read/write operations and read/write bandwidth.\n\nSix projects continued this quarter.\n\n  * You can read about the continued work to port OpenStack components to FreeBSD in Chih-Hsin Chang\u2019s OpenStack on FreeBSD report entry.\n\n  * Work continued to improve cloud-init support for FreeBSD. You can read about Mina Gali\u0107\u2019s work in her FreeBSD as a Tier 1 cloud-init Platform report entry.\n\n  * A new joint project began between Advanced Micro Devices (AMD) and The FreeBSD Foundation to develop a complete FreeBSD AMD IOMMU driver. This work will allow FreeBSD to fully support greater than 256 cores with features such as CPU mapping and will also include bhyve integration. For those interested in the technical details, follow Konstantin Belousov commits tagged with Sponsored by fields for Advanced Micro Devices (AMD) and The FreeBSD Foundation.\n\n  * Refer to Pierre Pronchery\u2019s Graphical Installer for FreeBSD report entry to read about the status of FreeBSD\u2019s new graphical installer.\n\n  * Work continues to port the Vector Packet Processor (VPP) to FreeBSD. VPP is an open-source, high-performance user space networking stack that provides fast packet processing suitable for software-defined networking and network function virtualization applications. Look for a pending article from the developer working on the project, Tom Jones, that details the experience of porting VPP to FreeBSD.\n\n  * Bj\u00f6rn Zeeb and Cheng Cui continue their wireless work. This quarter was mostly focused on bug fixes and stability improvements to LinuxKPI 802.11 and net80211. Much of this work made it into the 13.3 release.\n\nHere is a sampling of other Foundation-sponsored development completed over\nthe first quarter of 2024:\n\n  * FreeBSD was accepted in Google Summer of Code 2024 after receiving 22 contributor proposals; on May 1, we will learn how many projects we will be awarded\n\n  * OpenSSH: update to 9.6p1 then 9.7p1\n\n  * Deprecate bsdlabel\n\n  * Import the kernel parts of bhyve/arm64\n\n  * Various RISC-V improvements\n\n#### FreeBSD Infrastructure\n\nA contract was completed to set up a new cluster site at NYI Chicago. You can\nread about the details of that project on the Foundation\u2019s blog.\n\n#### Continuous Integration and Workflow Improvement\n\nAs part of our continued support of the FreeBSD Project, the Foundation\nsupports a full-time staff member dedicated to improving the Project\u2019s\ncontinuous integration system and the test infrastructure. The full update can\nbe found within the quarterly status report.\n\n#### Partnerships and Research\n\nA focus of Partnerships this Quarter has been to educate the industry about\nthe innovations in the FreeBSD community and the impact that FreeBSD continues\nto have as a cornerstone to our digital society. This is an ongoing priority,\nand one we invite (encourage) everyone using and working on FreeBSD to join us\nin. Greg Wallace, the Foundation Partnerships lead, is grateful for the\nopportunities he has had to meet with open source and industry leaders at\nMicrosoft, Google, AWS, OpenSSF, Alpha-Omega, CISA, Eclipse Foundation, Open\nSource Initiative, Apache Software Foundation, Rust Foundation, Red Hat, Linux\nFoundation and many others to ensure they have visibility into the key role\nFreeBSD plays in the global digital infrastructure. This is a role FreeBSD has\nearned through its technical excellence, security by design, high\navailability, simplicity of operations, commitment to open source\ncollaboration, and cohesiveness.\n\nOne sees these characteristics of FreeBSD in the important ongoing funded\ndevelopment work such as porting VPP to FreeBSD, sponsored by RG Nets.\n\nEnsuring industry visibility to the excellence and impact of FreeBSD is vital\nto ensuring tier one support for FreeBSD across all key hardware and software\nplatforms. As a community, every conversation we have with people outside the\nBSD communities, and every piece of content we publish, that attest to how\nFreeBSD powers our individual and corporate success, brings us one step\ncloser.\n\nTo this end, the Foundation is working on a FreeBSD Impact Report that will\naggregate the core and often mission critical role FreeBSD plays in society,\nfrom embedded systems powered by QNX, to payments and check processing, to\ndigital entertainment, internet and cybersecurity infrastructure.\n\nOur community is stepping up in innumerable ways, including to make sure\nFreeBSD supports industry-standard containerized workloads \u2014 check out the\nOpen Container Initiative FreeBSD runtime extension working group.\n\nThe recently opened hardware vendor support survey will feed into a hardware\nsupport guide that reflects the collective experience of all respondents that\nis intended to help everyone identify hardware vendors that prioritize\nFreeBSD; it will also help focus Partnerships' outreach on the priority\nvendors.\n\nTo close, please TELL THE WORLD YOU USE FREEBSD AND WHY. There is no wrong way\nto do this \u2014 put it on your blog, on your favorite social media channel, list\nFreeBSD on your company\u2019s Open Source page, contact the Foundation about a\nCase Study, etc.\n\nStormshield, a leading cybersecurity company based in Europe, provides a great\nexample of how vendors that use FreeBSD can do this. The footer of their blogs\nsays: \"A strong supporter of Open Source, Stormshield is an active member (and\nsponsor) of the FreeBSD community...Whenever we modify Open Source software,\nmake patches or add features, we offer them to the community for inclusion.\"\n\n#### Advocacy\n\nThe first quarter of 2024 marked the beginning of a new era for the Foundation\nAdvocacy team. We welcomed Kim McMahon in the role of Senior Director of\nAdvocacy and Community and also brought on two new technical writers to help\nincrease the frequency and depth of the FreeBSD-related content we produce.\nJust some of our expanded Q1 efforts to support FreeBSD are below.\n\n  * Began work planning the on the May 2024 FreeBSD Developer Summit, co-located with BSDCan, taking place May 29-30, 2024 in Ottawa, Canada\n\n  * Introduced FreeBSD to new and returning folks at State of Open Con 24 in London, UK, February 6-7, 2024\n\n  * Held an Introduction to FreeBSD half-day workshop and staffed a booth at SCaLE21x, which took place March 14-17, 2024 in Pasadena, CA. Thanks to Gordon Tetlow for his help with the workshop\n\n  * The Foundation team also worked on a common message on the improvement and benefits of FreeBSD to ensure consistency between the FreeBSD Foundation and Core Team\n\n  * Members of the Foundation team served as Administrators for the 2024 Google Summer of Code. This year marks the 20th anniversary of Google Summer of Code and the 20th year that the FreeBSD Project was accepted as a mentoring organization. The Project received 23 applications from prospective interns\n\n  * Provided an overview of FreeBSD 13.x including the 13.3 release\n\n  * Worked on the final report of the 2024 FreeBSD Community Survey. Be on the lookout for the report at the end of April\n\n  * In partnership with Innovate UK and Digital Security by Design (DSbD), the Foundation held the first annual Digital Security by Design (DSbD) Ecosystem Beacon Awards to celebrate innovators working with and enhancing CheriBSD\n\n  * Published numerous blogs including:\n\n    * What Makes the FreeBSD Governance Model Successful\n\n    * Guiding the future of FreeBSD releases: Colin Percival, the new Release Engineering Team Lead\n\n  * Authored or participated in a number of Thought Leadership and News articles including:\n\n    * The Cybersecurity Battle Has Come to Hardware\n\n    * Ampere in the Wild: How FreeBSD Employs Ampere Arm64 Servers in the Data Center\n\n    * ISAs and the Dawning Hardware Security Revolution\n\n    * Published the March 2024 FreeBSD Update with a new look\n\n    * Released the November/December 2023 and January/February 2024 issues of the FreeBSD Journal now with HTML versions of the articles\n\n#### Fundraising\n\nThank you to everyone who gave us a financial contribution last quarter to\nhelp fund our work to support the Project. 2024 started strong with a total of\n$250,855 raised this quarter. We are grateful for your investment in FreeBSD!\n\nPlease consider supporting our efforts in 2024 by making a donation here:\nhttps://freebsdfoundation.org/donate/.\n\nOr, check out our Partnership opportunities here:\nhttps://freebsdfoundation.org/our-donors/freebsd-foundation-partnership-\nprogram/.\n\n#### Legal/FreeBSD IP\n\nThe Foundation owns the FreeBSD trademarks, and it is our responsibility to\nprotect them. We also provide legal support for the core team to investigate\nquestions that arise.\n\nGo to https://freebsdfoundation.org to find more about how we support FreeBSD\nand how we can help you!\n\n### FreeBSD Release Engineering Team\n\nLinks: FreeBSD 13.3-RELEASE announcement URL:\nhttps://www.freebsd.org/releases/13.3R/announce/ FreeBSD 14.1-RELEASE schedule\nURL: https://www.freebsd.org/releases/14.1R/schedule/ FreeBSD releases URL:\nhttps://download.freebsd.org/releases/ISO-IMAGES/ FreeBSD development\nsnapshots URL: https://download.freebsd.org/snapshots/ISO-IMAGES/\n\nContact: FreeBSD Release Engineering Team, <re@FreeBSD.org>\n\nThe FreeBSD Release Engineering Team is responsible for setting and publishing\nrelease schedules for official project releases of FreeBSD, announcing code\nfreezes and maintaining the respective branches, among other things.\n\nDuring the first quarter of the year, the Team managed 13.3-RELEASE, leading\nto the final RELEASE build and announcement in March. Planning has started for\nthe upcoming 14.1-RELEASE cycle.\n\nThe Release Engineering Team continued providing weekly development snapshot\nbuilds for the main, stable/14, and stable/13 branches.\n\n### Cluster Administration Team\n\nLinks: Cluster Administration Team members URL:\nhttps://www.freebsd.org/administration/#t-clusteradm\n\nContact: Cluster Administration Team <clusteradm@FreeBSD.org>\n\nFreeBSD Cluster Administration Team members are responsible for managing the\nmachines the Project relies on to synchronize its distributed work and\ncommunications.\n\nIn this quarter, the team has worked on the following:\n\n  * Regular support for FreeBSD.org user accounts.\n\n  * Regular disk and parts support (and replacement) for all physical hosts and mirrors.\n\n  * Set up a new mirror in Chicago.\n\n#### FreeBSD Official Mirrors Overview\n\nCurrent locations are Australia, Brazil, Germany, Japan (two full mirror\nsites), Malaysia, South Africa, Sweden, Taiwan, United Kingdom (full mirror\nsite), United States of America \u2014 California, Chicago, New Jersey (primary\nsite), and Washington.\n\nThe hardware and network connection have been generously provided by:\n\n  * Bytemark Hosting (being decommissioned)\n\n  * Cloud and SDN Laboratory at BroadBand Tower, Inc\n\n  * Department of Computer Science, National Yang Ming Chiao Tung University\n\n  * Equinix\n\n  * Internet Association of Australia\n\n  * Internet Systems Consortium\n\n  * INX-ZA\n\n  * KDDI Web Communications Inc\n\n  * Malaysian Research & Education Network\n\n  * MetaPeer\n\n  * New York Internet\n\n  * NIC.br\n\n  * Teleservice Sk\u00e5ne AB (new since 2023Q4)\n\n  * Your.Org\n\nNew official mirrors are always welcome. We have noted the benefits of hosting\nsingle mirrors at Internet Exchange Points globally, as evidenced by our\nexisting mirrors in Australia, Brazil, and South Africa. If you are affiliated\nwith or know of any organizations willing to sponsor a single mirror server,\nplease contact us. We are particularly interested in locations on the United\nStates West Coast and throughout Europe.\n\nSee generic mirrored layout for full mirror site specs and tiny-mirror for a\nsingle mirror site.\n\n### Continuous Integration\n\nLinks: FreeBSD Jenkins Instance URL: https://ci.FreeBSD.org FreeBSD CI\nTinderbox view URL: https://https://tinderbox.freebsd.org FreeBSD CI artifact\narchive URL: https://artifact.ci.FreeBSD.org Hosted CI wiki URL:\nhttps://wiki.FreeBSD.org/HostedCI 3rd Party Software CI URL:\nhttps://wiki.FreeBSD.org/3rdPartySoftwareCI Tickets related to freebsd-\ntesting@ URL:\nhttps://bugs.freebsd.org/bugzilla/buglist.cgi?bug_status=open&email1=testing%40FreeBSD.org&emailassigned_to1=1&emailcc1=1&emailtype1=equals\nFreeBSD CI Repository URL: https://github.com/freebsd/freebsd-ci dev-ci\nMailing List URL: https://lists.FreeBSD.org/subscription/dev-ci\n\nContact: Jenkins Admin <jenkins-admin@FreeBSD.org> Contact: Li-Wen Hsu\n<lwhsu@FreeBSD.org> Contact: freebsd-testing Mailing List Contact: IRC\n#freebsd-ci channel on EFNet\n\nIn the first quarter of 2024, we worked with the project contributors and\ndevelopers to address their testing requirements. Concurrently, we\ncollaborated with external projects and companies to enhance their products by\ntesting more on FreeBSD.\n\nImportant completed tasks:\n\n  * With help from clusteradm, the host running test VMs had disk and memory upgraded by reusing the parts of decommissioned machines.\n\n  * Update the build environment of stable/13 jobs to 13.3-RELEASE.\n\n  * Turn i386 build on main branch to use cross build on amd64.\n\nWork in progress tasks:\n\n  * Merging https://reviews.freebsd.org/D43786\n\n  * Merging https://reviews.freebsd.org/D36257\n\n  * Adding new hardware purchased by the FreeBSD Foundation to the CI cluster\n\n  * Designing and implementing pre-commit CI building and testing and pull/merge-request based system (to support the workflow working group)\n\n  * Proof of concept system is in progress.\n\n  * Designing and implementing use of CI cluster to build release artifacts as release engineering does, starting with snapshot builds\n\n  * Simplifying CI/test environment setting up for contributors and developers\n\n  * Setting up the CI stage environment and putting the experimental jobs on it\n\n  * Redesigning the hardware test lab and adding more hardware for testing\n\nOpen or queued tasks:\n\n  * Collecting and sorting CI tasks and ideas\n\n  * Setting up public network access for the VM guest running tests\n\n  * Implementing use of bare-metal hardware to run test suites\n\n  * Adding drm ports building tests against -CURRENT\n\n  * Planning to run ztest tests\n\n  * Helping more software get FreeBSD support in its CI pipeline (Wiki pages: 3rdPartySoftwareCI, HostedCI)\n\n  * Working with hosted CI providers to have better FreeBSD support\n\nPlease see freebsd-testing@ related tickets for more WIP information, and do\nnot hesitate to join the effort!\n\nSponsor: The FreeBSD Foundation\n\n### Ports Collection\n\nLinks: About FreeBSD Ports URL:https://www.FreeBSD.org/ports/ Contributing to\nPorts URL: https://docs.freebsd.org/en/articles/contributing/#ports-\ncontributing Ports Management Team URL: https://www.freebsd.org/portmgr/ Ports\nTarball URL: http://ftp.freebsd.org/pub/FreeBSD/ports/ports/\n\nContact: Tobias C. Berner <portmgr-secretary@FreeBSD.org> Contact: FreeBSD\nPorts Management Team <portmgr@FreeBSD.org>\n\nThe Ports Management Team is responsible for overseeing the overall direction\nof the Ports Tree, building packages, and personnel matters. Below is what\nhappened in the last quarter.\n\nAccording to INDEX, there are currently 32,244 ports in the Ports Collection.\nThere are currently ~3,300 open ports PRs. The last quarter saw 12,991 commits\nby 158 committers on the main branch and 888 commits by 61 committers on the\n2024Q1 branch. Compared to last quarter, this means a large increase in the\nnumber of commits on the main branch (up from 9,424) and slightly more\nbackports to the quarterly branch (up from 781). The number of ports also\nincreased (up from 31,942).\n\nIn Q1 there were around 14,127 commits to main: The most active committers\nwere:\n\n  * 2934 sunpoet\n\n  * 2676 bofh\n\n  * 1297 yuri\n\n  * 748 eduardo\n\n  * 545 jbeich\n\n  * 347 arrowd\n\n  * 233 diizzy\n\n  * 195 yasu\n\n  * 170 ehaupt\n\n  * 164 wen\n\nA lot has happened in the ports tree in the last quarter, an excerpt of the\nmajor software upgrades are:\n\n  * pkg 1.21.0\n\n  * New USES: ocaml\n\n  * Default version of gcc switched to 13\n\n  * Default version of ruby switched to 3.2\n\n  * Default version of lazarus switched to 3.2.0\n\n  * Default version of go switched to 1.21\n\n  * Chromium updated to 123.0.6312.105\n\n  * Electron-28 updated to 28.2.10\n\n  * Electron-27 updated to 27.3.9\n\n  * Firefox updated to 124.0.2\n\n  * Firefox-esr updated to 115.9.1\n\n  * KDE updated to Frameworks 5 5.115, Frameworks 6 to 6.0.0 Plasma Desktop 5 to 5.27.11, Plasma Desktop 6 to 6.0.2\n\n  * Qt5 updated to 5.15.13\n\n  * Qt6 updated to 6.6.3\n\n  * Python updated to 3.11.9, 3.10.14 and 3.8.10\n\n  * Ruby updated to 3.2.3\n\n  * Rust updated to 1.77.0\n\n  * SDL updated to 2.30.2\n\n  * Sway updated to 1.9\n\n  * wlroots updated to 1.17.2\n\n  * Wine updated to 9.0\n\n  * Xorg server updated to 0.17.2\n\nDuring the last quarter, FreeBSD Packages Management Team ran 17 exp-runs to\ntest various ports upgrades, updates to default versions of ports, subpackage\nsupport and base system changes.\n\n## Projects\n\nProjects that span multiple categories, from the kernel and userspace to the\nPorts Collection or external projects.\n\n### Audio Stack Improvements\n\nContact: Christos Margiolis <christos@FreeBSD.org>\n\nThe FreeBSD audio stack is one of those fields that does not attract the same\nattention and development as others do, since it has been left largely\nunmaintained, and, although high in quality, there is still room for\nimprovement \u2014 from lack of audio development frameworks, to missing userland\nutilities and kernel driver-related bugs. This project is meant to touch on\nall those areas, and as such, is more of a general improvement project, than\nan implementation of a specific feature.\n\nSo far, my focus has been towards the kernel side of the audio stack, with\nD43545 being probably the most requested and notable patch. I am also working\non scrapping the rather outdated \"snd_clone\" audio device cloning framework of\nsound(4), and replacing it with DEVFS_CDEVPRIV(9) (D44411).\n\nSome of the future tasks include:\n\n  * Attempt to find a better (ideally automatic) way to handle snd_hda(4) pin-patching.\n\n  * Implement an oss(3) library and audio(8) utility, in similar fashion to mixer(3) and mixer(8).\n\n  * Write a bluetooth device management utility.\n\n  * Improve mixer(3) and mixer(8).\n\n  * Improve documentation and test suite where needed.\n\nA more detailed description can be found here.\n\nYou can also follow the development process in freebsd-multimedia@, where I\npost regular reports:\n\n  * Report #1\n\n  * Report #2\n\n  * Report #3\n\n  * Report #4\n\n  * Report #5\n\n  * Report #6\n\n  * Report #7\n\n  * Report #8\n\nSponsor: The FreeBSD Foundation\n\n### Bhyve Improvements\n\nLinks: bhyve production users calls URL: https://callfortesting.org FreeBSD\nWiki - Enterprise Working Group URL:\nhttps://wiki.freebsd.org/EnterpriseWorkingGroup FreeBSD Wiki - EWG - bhyve and\njails management tooling URL:\nhttps://wiki.freebsd.org/ChrisMoerz/bhyve_management Jan Bramkamp\u2019s work on\ns6rc URL:http://static.bultmann.eu/s6-talk/(1)[] vmstated on GitHub URL:\nhttps://github.com/christian-moerz/vmstated YouTube - vmstated explained URL:\nhttps://www.youtube.com/watch?v=f60NCrunXyw\n\nContact: Chris Moerz <freebsd@ny-central.org>\n\n#### Bhyve I/O Performance Measurements\n\nParticipants of the weekly bhyve production users calls recently discussed\nbhyve\u2019s I/O performance. Various ways of measuring and comparing were brought\nup, however it was quickly clear that there is currently no formal analysis\nand report on this. So, we started this effort in the hopes of better\nunderstanding the various impacts of configuration options for a guest on its\nI/O performance. We created a set of shell scripts that harness a FreeBSD\nguest for running benchmarks/fio I/O performance measurements under various\nconfigurations. This allows us to compare multiple criteria like bandwidth,\nlatency, IOPS, and more.\n\nSo far, we are testing for\n\n  * different storage backends (i.e. ahci-hd, nvme, virtio-blk)\n\n  * different memory settings\n\n  * different CPU pinning options\n\n  * different block sizes for the backing storage\n\n  * different block sizes for accessing virtual disks\n\nWe are also pitting results for different CPU manufacturers against each other\nand contrasting guest vs host performance to better understand the performance\nimpact of virtualization.\n\nWe plan to continue discussing our results during Michael Dexter\u2019s weekly\nbhyve production users call - come join us if you are interested. We also hope\nto be able to present the results at EuroBSDCon in Q3.\n\n#### Bhyve Virtual Machine Tooling\n\nLast year, Greg Wallace at the FreeBSD Foundation founded the Enterprise\nWorking Group with the specific goal of addressing pain points of Enterprise\nusers of FreeBSD. One of the work groups that emerged clustered around bhyve\nand jails management tooling. After collecting a set of desired features and\nfunctionality, one overarching key point for bhyve emerged: the desire to have\nconfiguration concepts and tooling for bhyve like the ones available for\njails.\n\nWhile other desirable features were identified as well, i.e. TPM software\nemulation and snapshot/restore/host-migration, the conceptual tooling question\nwon over those due to the lower degree of complexity and its clarity on goal\nand the path on how to take steps towards it.\n\nTechnically, this means working out existing gaps around process supervision\nand virtual machine state management. First steps were taken by experimenting\nwith existing frameworks (i.e. s6rc work by Jan Bramkamp) and eventually \u2014\nthrough discussions in the weekly bhyve production user\u2019s calls (organized by\nMichael Dexter) \u2014 this led to a proof-of-concept implementation of \"vmstated\".\n\nStarted as an experiment to better understand the problem space of process\nsupervision and virtual machine state handling, vmstated is constructed of a\ndaemon and vmstatedctl management utility. It is built with base-only tooling\nand libraries and leverages FreeBSD specific constructs like kqueue to\nminimize its resource impact.\n\nvmstated is configured via a UCL configuration file (similar to jails.conf)\nand \u2014 in combination with a man:bhyve_config|5] configuration file \u2014 already\nprovides highest flexibility in configuring virtual machines. vmstatedctl\nprovides a jail-like command set to start, stop, and retrieve status\ninformation about guests. State transitions can easily be hooked via shell\nscripts and allow running additional commands for network or storage set up\nand tear down when relevant state changes occur.\n\nAn initial release is already in ports as sysutils/vmstated and updates are\npending commit; however, the newest version can be found on GitHub. We are\nconsidering expanding the work; we would also like to invite anyone interested\nto join us in this work! Patches, suggestions, feedback, etc. are all very\nmuch welcome!\n\nIf you want to know more about our work, come join us at one of Michael\nDexter\u2019s weekly bhyve production users calls or reach me by email.\n\n#### Documentation\n\nWe managed to update a few parts of the Handbook and Porter\u2019s Handbook (thanks\nto Ed Maste, Joseph Mingrone, Pau Amma, and Rodney W. Grimes):\n\n  * several improvements and expansions to the virtualization chapter in the FreeBSD Handbook\n\n    * using a man:bhyve_config|5] configuration file\n\n    * jailing bhyve\n\n    * experimental snapshot and restore feature\n\n    * setting up a Windows guest\n\n  * we also have a review (D43940) up for an initial step to improving the bhyve man page\n\n    * this was intentionally started with a structural update first to separate the many -s flag options\n\n    * once this lands, we can move to a more widespread update to the overall content\n\nFeedback is obviously very welcome \u2014 on the existing content as well as any\nadditional content we should be looking into!\n\n### Graphical Installer for FreeBSD\n\nLinks: Slides from AsiaBSDCon 2024 URL:\nhttps://people.defora.org/~khorben/FreeBSD/bsdinstall/bsdinstall%20-%20Now%20with%20Graphics!%20-%20AsiaBSDCon%202024%20-%20WIP%20Session.pdf\ngbsddialog URL: https://github.com/khorben/gbsddialog preview video URL:\nlink:https://youtu.be/jm6byc7N2O4\n\nContact: Pierre Pronchery <pierre@freebsdfoundation.org>\n\nThe first hurdle to overcome when testing a new Operating System is to get it\ninstalled. What is more, the first impression new users gather from an\nOperating System is its installation process. The state of the art for\nOperating System installers nowadays definitely involves a graphical process.\nThis is the case for mainstream systems but also for other UNIX systems\ncomparable to FreeBSD: RedHat Enterprise Linux, Ubuntu, Debian GNU/Linux, or\neven Devuan GNU+Linux Regardless of the technical level of the actual user,\nthis is how the platform will be compared in the public eye.\n\nIn practice, FreeBSD has already been derived as a desktop-oriented Operating\nSystem by different projects. Of these, I only found GhostBSD as a maintained\nproject offering a graphical procedure to install the system. The objective\nhere was to consider a procedure that FreeBSD could adopt as part of its base\nsystem, in order to ship a graphical installer much like the current\ninstaller. However, GhostBSD\u2019s installer relies on a Gtk+ interface driven\nwith Python, implying a hefty footprint on the installation media when\nadopting FreeBSD\u2019s usual image generation procedure. It would also imply\nimporting and maintaining new projects into the ports tree.\n\nInstead, with knowledge of the current bsdinstall(8) and bsdconfig(8)\nutilities, I envisioned a BSD-licensed replacement for Xdialog(1). Just like\nwhen invoking bsdconfig with the -X switch for graphical mode, it could be\ndropped in instead of bsddialog(1) and allow graphical installation - while\nsharing the infrastructure of the current installer. To avoid confusion with\nthe current implementation of Xdialog from the x11/xdialog port, I have named\nits replacement gbsddialog(1). It also has to be said that Xdialog is quite\nobsolete (latest release in 2006) and this shows visually too.\n\nAfter creating a Proof-of-Concept prototype past the 14.0 release, I was\nprovided with a 2-months window by the FreeBSD Foundation, in order to\ncomplete a working implementation. Thanks to a few shortcuts, I was glad to\npresent the outcome of this effort during the WIP session of AsiaBSDCon 2024,\nincluding a working graphical installer.\n\nMost of the necessary patches are already available for review in FreeBSD\u2019s\nPhabricator:\n\n  * D44279 bsdinstall: implement adduser with bsddialog\n\n  * D44280 bsdinstall: implement rootpass with bsddialog\n\n  * D44670 bsdinstall: implement timezone with bsddialog\n\n  * D44671 bsdinstall: allow forcing a specific partitioning mode\n\n  * D44672 bsdinstall: obtain the dialog binary from $DIALOG\n\n  * D44673 bsdinstall: handle command-line options in targets\n\n  * D44674 bsdinstall: add support for graphical mode\n\nI have tried to keep these patches in growing order of friction expected\nbefore integration.\n\nThe most important objective of this project was to improve bsdinstall,\nregardless of the success of this integration. From the items above, it should\nbe noted that D44279, D44280, D44670 are expecting to improve the general look\n& feel of the installer, even while in text mode. Similarly, D44671 and D44672\nimprove the overall versatility of the installer when scripted or customized.\nD44673 and D44674 bring it on par with bsdconfig -X, even allowing the\ngraphical installation of jails.\n\nSome parts are still missing, or made use of shortcuts still unsuitable for\nintegration:\n\n  * The \"fetchmissingdists\" target was avoided by shipping every component on the installation media;\n\n  * The \"checksum\" and \"extract\" targets had to be re-implemented with simpler code, degrading the user experience also with the regular installer;\n\n  * Creation of the installation media generates an additional, heavy image (almost 8 GB), and is suspected to be hindered by a bug in makefs(8).\n\nThe corresponding code can be found in my GitHub fork in the\nkhorben/bsdinstall-graphical4 branch. As can be guessed from the branch name,\ndepending on the complexity of rebasing operations, combined with the\n(hopefully) progressive integration of the changes proposed, new branches may\nbe added to keep track of the progress. (In fact a khorben/bsdinstall-\ngraphical5 branch already exists.)\n\nStill, a lot needs to be done for the installer to reach a new level of\nmaturity overall. While working on this project, I have received general\ncomplaints on the installer, and calls for a complete rewrite. It is true that\nthe current code base suffers from a number of issues and limitations. The\nlack of a graphical installer is one of many symptoms, which range from the\nlack of recovery from errors, of navigability to previous steps, of a general\nvision of the installation progress, or of a network-based installer. In the\nmeantime, this is the installer we have and are familiar with, and I think it\ncan still be saved and improved.\n\nSpecial thanks go to Ed Maste and Joe Mingrone for the opportunity, and to\nPhilippe Audeoud, Tobias C. Berner, Olivier Certner, Jessica Clarke, Olivier\nCochard-Labb\u00e9, Baptiste Daroussin, Brad Davis, Michael Dexter, Li-Wen Hsu,\nMateusz Piotrowski, Alfonso Siciliano, Emmanuel Vadot, and Robert Watson for\nthe feedback, reviews, and encouragements. (If I missed anyone, you know I did\nnot mean to!)\n\nSponsor: The FreeBSD Foundation\n\n## Userland\n\nChanges affecting the base system and programs in it.\n\n### libsys\n\nContact: Brooks Davis <brooks@FreeBSD.org>\n\nThe libsys project removes direct system calls from libc.so and libpthread.so\n(aka libthr.so) to a separate libsys.so. This will:\n\n  * Isolate language runtimes from the details of system call implementations.\n\n  * Better support logging and replay frameworks for systems calls.\n\n  * Support elimination of the ability to make system calls outside trusted code in the runtime linker and libsys.\n\nThis work was initially inspired by a compartmentalization prototype in\nCheriBSD in 2016. Ali Mashtizadeh and Tal Garfinkel picked that work up and\nattempted to upstream it (D14609). Unfortunately we could not figure out how\nto review and land the massive reorganization required through a phabricator\nreview so it languished. Last year the CHERI project once again found a need\nfor system call separation in a new library-based compartmentalization\nframework in CheriBSD so I rebuilt the patch from scratch, committing dozens\nof libc cleanups along the way. I landed the first batch of changes on\nFebruary 5th. Since then I have made a number of refinements to the way we\nlink libsys as well as which symbols are provided in which library.\n\nThanks to Konstantin Belousov for many rounds of review and feedback as well\nas runtime linker fixes. Thanks to Mark Johnston for runtime linker debugging\nand Dimitry Andric for sanitizer fixes. Thanks also to everyone who reported\nbugs and helped debug issues.\n\n#### Known issues (as of the end of the reporting period)\n\n  * The libsys ABI is not yet considered stable (it is safe to assume __sys_foo() will be supported so language runtimes can use it now).\n\n  * Programs using the address sanitizer must be linked with -lsys (resolved in base at publication time).\n\n#### TODO\n\n  * Add a libsys.h. (See D44387 and other reviews in the stack.)\n\n  * Update intro(2) for libsys.\n\n  * Finalize the ABI. I am likely to reduce the set of _ (underscore) prefixed symbols we expose.\n\n  * MFC the existence of libsys? It is not clear this is practical, but it might be possible to MFC something useful for language runtimes.\n\n#### Help wanted\n\n  * Port language runtimes that do not use libc to use libsys for system calls rather than rolling their own interfaces.\n\n  * Explore limitations on where system calls can be made similar to OpenBSD\u2019s msyscall(2) (now obsolete) and pinsyscalls(2) (not an obvious match to our libsys).\n\nSponsor: AFRL, DARPA\n\n### PackageKit backend for FreeBSD pkg\n\nContact: Gleb Popov <arrowd@FreeBSD.org>\n\nPackageKit is a small D-Bus daemon program that serves as a backend for\n\"application store\" type of apps - most notably Plasma Discover and Gnome\nSoftware Center. The latest PackageKit release features a libpkg backend,\nwhich means that you can now use PackageKit-enabled programs on FreeBSD to\nmanage software. Plasma Discover is already switched to using PackageKit, so\nyou will get it working out of the box once you update your ports/packages.\n\nIf you observe any crashes or bugs in PackageKit please let me know by opening\nan issue upstream. If you are interested in contributing, there is a lot of\nwork to do too!\n\nSponsor: Serenity Cybersecurity, LLC\n\n## Kernel\n\nUpdates to kernel subsystems/features, driver support, filesystems, and more.\n\n### iwlwifi(4) and wireless for 13.3-RELEASE\n\nLinks: Categorised Wireless Problem Reports URL:\nhttps://bugs.freebsd.org/bugzilla/showdependencytree.cgi?id=277512&hide_resolved=0\n\nContact: Bjoern A. Zeeb <bz@FreeBSD.org> Contact: The FreeBSD wireless mailing\nlist <wireless@FreeBSD.org>\n\nIn the first weeks of 2024 focus was on stability for 13.3-RELEASE to finally\nmake iwlwifi(4) usable. The upcoming 14.1-RELEASE will benefit from this work\ntoo. The response has since generally been positive and iwlwifi(4) supporting\nchipsets up to BE200 seems mostly stable, yet still slow.\n\nA lot of testing was provided by the FreeBSD Foundation and by many users.\nMassive thanks to everyone who tested, reported back, updated PRs and helped\nother users.\n\nI have also slowly started to \"categorise\" more (old) wireless problem reports\nand will try to continue with some spring cleaning throughout the year.\n\nIf you have questions or feedback please use the freebsd-wireless mailing\nlist. That way everyone will see, be able to join in, and the answers will be\npublicly archived.\n\nSponsor: minipci.biz (BE200 hardware)\n\n## Architectures\n\nUpdating platform-specific features and bringing in support for new hardware\nplatforms.\n\n### Ten64, WHLE-LS1, and HoneyComb\n\nLinks: My wiki page with links to some status URL:\nhttps://wiki.freebsd.org/BjoernZeeb/\n\nContact: Bjoern A. Zeeb <bz@FreeBSD.ORG>\n\nSolid-Run\u2019s HoneyComb, Traverse Technologies\u2019s Ten64 and some versions of\nConclusive Engineering\u2019s WHLE-LS1 all are NXP based platforms with the Data\nPath Acceleration Architecture Gen2 (DPAA2).\n\nWork has happened to support or improve support for peripherals on these\nboards.\n\nFor DPAA2 I have local changes which will need review (or further discussion):\n\n  * Cleanup of memac (MDIO) code reducing bus attachment (ACPI and FDT specific) code into more common code.\n\n  * Cleanup of MC bus attachment code (again ACPI, FDT).\n\n  * For reasons of mii_fdt.c support on some PHYs on FDT-based platforms restructure MAC/MII code and mostly migrate it out of the network interface (NI).\n\n  * Improve Dmitry Salychev\u2019s (dsl) initial SFF/SFP code, prototyping a bus similar to MII for SFP with the hope that with more work it can grow into a larger, general FreeBSD framework and hooked it up to DPMAC.\n\n  * With this, minimal support (still fairly hacked up) for \"managed\" SFP+ mode (using the Ten64 terminology) is usable on FDT-based systems using DAC and fiber cables.\n\n  * Add more sysctl statistics to DPMAC and NI.\n\nIn short, I mostly cleaned up some of the mess I contributed to during the\ninitial bring-up.\n\nFor the LS1088a based WHLE-LS1 systems changes include:\n\n  * device-tree file updates.\n\n  * Added support for the PCA9546 I2C Switch (committed).\n\n  * Added basic support for the PCAL6524 24-bit Fm+ I2C-bus/SMBus I/O expander.\n\n  * Added basic support for the PCA9633 4-bit Fm+ I2C-bus LED driver to drive the status LEDs.\n\n  * Added support to program the rgephy(4) LEDs (which needs to be validated).\n\n  * Started testing the eMMC with MMCCAM and GENERIC but had trouble (needs further investigation, seemed fine from firmware for updates).\n\n  * Tested one of three PCIe slots and USB fine.\n\nFor the Ten64:\n\n  * Most of the basic lifting happened a while ago and it has generally been usable.\n\n  * Detecting the VSC8514 PHY as such went in end of last year.\n\n  * Used as the default platform to test the DPAA2 changes and SFP/SFP+ code.\n\nIn addition Pierre-Luc Drouin has overhauled the Vybrid I2C support now\nattaching and working on both FDT- and ACPI-based systems (committed).\n\nSponsor: Traverse Technologies (Ten64 hardware a while ago, support)\n\n## Cloud\n\nUpdating cloud-specific features and bringing in support for new cloud\nplatforms.\n\n### FreeBSD on Microsoft HyperV and Azure\n\nLinks: Microsoft Azure article on FreeBSD wiki URL:\nhttps://wiki.freebsd.org/MicrosoftAzure Microsoft HyperV article on FreeBSD\nwiki URL: https://wiki.freebsd.org/HyperV\n\nContact: Microsoft FreeBSD Integration Services Team <bsdic@microsoft.com>\nContact: freebsd-cloud Mailing List Contact: The FreeBSD Azure Release\nEngineering Team <releng-azure@FreeBSD.org> Contact: Wei Hu <whu@FreeBSD.org>\nContact: Souradeep Chakrabarti <schakrabarti@microsoft.com> Contact: Li-Wen\nHsu <lwhsu@FreeBSD.org>\n\nIn this quarter, we have solved all the blocking issues and published the\n13.3-RELEASE on Azure Marketplace.\n\nWork in progress tasks:\n\n  * Automating the image building and publishing process and merging to src/release/.\n\n  * Building and publishing snapshot builds to Azure community gallery.\n\nThe above tasks are sponsored by The FreeBSD Foundation, with resources\nprovided by Microsoft.\n\nOpen tasks:\n\n  * Update FreeBSD-related doc at Microsoft Learn\n\n  * Support FreeBSD in Azure Pipelines\n\n  * Update Azure agent port to the latest version\n\n  * Upstream local modifications of Azure agent\n\n  * Port Linux Virtual Machine Extensions for Azure\n\nSponsor: Microsoft for people in Microsoft, and for resources for the rest\nSponsor: The FreeBSD Foundation for everything else\n\n### FreeBSD as a Tier 1 cloud-init Platform\n\nLinks: cloud-init Website URL: https://cloud-init.io/ cloud-init Documentation\nURL: https://cloudinit.readthedocs.io/en/latest/\n\nContact: Mina Gali\u0107 <freebsd@igalic.co>\n\ncloud-init is the standard way of provisioning servers in the cloud. Over the\npast year and a half, thanks to this FreeBSD support has steadily improved.\nThis year, together with cloud-init developers and the FreeBSD Foundation, we\ndecided to explicitly focus on making improvements in FreeBSD itself, that\nwill aid the cloud-init team to test future changes to FreeBSD code-paths\nthemselves. To achieve this goal, I need to make FreeBSD run in LXD (and\nIncus), under the control of lxd-agent (or incus-agent).\n\nHere are some improvements from the recent weeks:\n\n  * I have written a small testing-framework (in sh, and I\u2019m slowly porting it to OpenTofu/Terraform), which installs the latest version of net/cloud-init-devel or net/cloud-init and runs a couple of standard cloud-init tests.\n\n  * To do this, I have created a dedicated public repository which contains the latest versions of net/cloud-init-devel and net/cloud-init for FreeBSD 13 and 14 on amd64 and aarch64.\n\n  * I have ported Linux\u2019s vsock testing framework to FreeBSD\n\n  * I created a driver skeleton for a VirtIO Socket driver, based on the HyperV Socket driver.\n\n  * In doing so, I made numerous improvements to HyperV sockets, some of which are accepted, others still need more work.\n\n  * I have tested and released the latest 24.1 series cloud-init, where the cloud-init team and I have finally fixed some longstanding bugs, such as moving /run/cloud-init to /var/run/cloud-init on BSD, as well as fixing the homedir argument to user_groups to actually do something.\n\n  * This release also sees numerous fixes to the OpenBSD code-paths from the community and not just me.\n\n  * I have also started an official port for OpenBSD, but that work has stalled.\n\nThe work to come, in broad strokes:\n\n  * Finish the FreeBSD VirtIO Socket driver.\n\n  * Fix Go\u2019s runtime to support VirtIO on FreeBSD.\n\n  * Port lxd-agent\u2019s dependencies to FreeBSD.\n\n  * Port lxd-agent to FreeBSD.\n\nThat work will be interspersed with more improvements to cloud-init on BSDs,\nand more tests on different cloud providers.\n\nSponsor: The FreeBSD Foundation\n\n### OpenStack on FreeBSD\n\nLinks: OpenStack URL: https://www.openstack.org/ OpenStack on FreeBSD URL:\nhttps://github.com/openstack-on-freebsd\n\nContact: Chih-Hsin Chang <starbops@hey.com> Contact: Li-Wen Hsu\n<lwhsu@FreeBSD.org>\n\nThe OpenStack on FreeBSD project aims to seamlessly integrate OpenStack cloud\ninfrastructure with the FreeBSD operating system. It uses FreeBSD\u2019s unique\nfeatures while ensuring compatibility with OpenStack standards.\n\nIn the first quarter of 2024, we made significant progress on the OpenStack on\nFreeBSD project. This included submitting a proposal for BSDCan 2024 and\nattending AsiaBSDCon 2024 to share our porting experiences and gain exposure\nfor the project. The feedback received at AsiaBSDCon was particularly valuable\nand helped in refining the project\u2019s direction. During this period, we also\nreviewed the project\u2019s phase 1 tasks and made necessary adjustments. We also\nplanned for phases 2 and 3, aligning them with the project\u2019s long-term goals.\nOne technical achievement was verifying the functionality of bhyve serial\nconsole over TCP, an important part of the project\u2019s infrastructure.\nAdditionally, we created a demo video showcasing the project\u2019s progress and\nfeatures.\n\nLooking ahead, our focus for the next quarter includes confirming the\nfeasibility of implementing FreeBSD privilege-management user space tools\nleveraging mac(4) and priv(9), simplifying installation steps by transitioning\nto FreeBSD ports, and porting OpenStack Ironic to FreeBSD. These tasks will\nenhance the project\u2019s capabilities and compatibility.\n\nSponsor: The FreeBSD Foundation\n\n## Documentation\n\nNoteworthy changes in the documentation tree, manual pages, or new external\nbooks/documents.\n\n### Documentation Engineering Team\n\nLink: FreeBSD Documentation Project URL: https://www.freebsd.org/docproj/\nLink: FreeBSD Documentation Project Primer for New Contributors URL:\nhttps://docs.freebsd.org/en/books/fdp-primer/ Link: Documentation Engineering\nTeam URL: https://www.freebsd.org/administration/#t-doceng\n\nContact: FreeBSD Doceng Team <doceng@FreeBSD.org>\n\nThe doceng team is a body to handle some of the meta-project issues associated\nwith the FreeBSD Documentation Project; for more information, see FreeBSD\nDoceng Team Charter.\n\nDuring the last quarter:\n\nEdward Tomasz Napiera\u0142a's doc commit bit was taken for safekeeping. Tom\nRhodes's doc commit bit was taken for safekeeping.\n\n#### FreeBSD Translations on Weblate\n\nLink: Translate FreeBSD on Weblate URL:\nhttps://wiki.freebsd.org/Doc/Translation/Weblateurl Link: FreeBSD Weblate\nInstance URL: https://translate-dev.freebsd.org/url\n\n##### Q1 2024 Status\n\n  * 17 team languages\n\n  * 189 registered users\n\nThree new translators joined Weblate:\n\n  * piker3 in Polish team (pl)\n\n  * chrislongros in Greek team (el)\n\n  * grip in Italian team (it_IT)\n\n##### Languages\n\n  * Chinese (Simplified) (zh-cn) (progress: 7%)\n\n  * Chinese (Traditional) (zh-tw) (progress: 3%)\n\n  * Dutch (nl) (progress: 1%)\n\n  * French (fr) (progress: 1%)\n\n  * German (de) (progress: 1%)\n\n  * Greek (el) (progress: 1%)\n\n  * Indonesian (id) (progress: 1%)\n\n  * Italian (it) (progress: 5%)\n\n  * Korean (ko) (progress: 32%)\n\n  * Norwegian (nb-no) (progress: 1%)\n\n  * Persian (fa-ir) (progress: 3%)\n\n  * Polish (progress: 2%)\n\n  * Portuguese (progress: 0%)\n\n  * Portuguese (pt-br) (progress: 22%)\n\n  * Spanish (es) (progress: 36%)\n\n  * Turkish (tr) (progress: 2%)\n\nWe want to thank everyone that contributed, translating or reviewing\ndocuments.\n\nAnd please, help promote this effort on your local user group, we always need\nmore volunteers.\n\n## Ports\n\nChanges affecting the Ports Collection, whether sweeping changes that touch\nmost of the tree, or individual ports themselves.\n\n### FreshPorts: Notification of new packages\n\nLinks: FreshPorts URL: https://freshports.org/ FreshPorts blog URL:\nhttps://news.freshports.org/\n\nContact: Dan Langille <dvl@FreeBSD.org>\n\nFreshPorts and FreshSource have reported upon FreeBSD commits for 20 years.\nThey cover all commits, not just ports.\n\nFreshPorts tracks the commits and extracts data from the port Makefiles to\ncreate a database of information useful to both port maintainers and port\nusers.\n\nFor example, https://www.freshports.org/security/acme.sh/#history shows the\nhistory of the security/acme.sh port, back to its creation in May 2017. Also\navailable are dependencies, flavors, configuration options, and available\npackages. All of this is useful for both users and developers of ports.\n\n#### Notification: New Package Available\n\nOne of the original features of FreshPorts is notification of ports updates.\nYou can create a list of ports and receive notifications about those ports.\nThis new feature can also notify when a new package is available for that\nport. The use case: a known security vulnerability has been patched.\nFreshPorts will tell you the port has been patched, and then you wait for the\npackage. This new feature will tell you when that package is available.\n\nDetails at:\n\n  * https://github.com/FreshPorts/freshports/issues/542\n\n#### Help Needed\n\nIt has been over 23 years since FreshPorts started. Others must take over\neventually. I have started that process recently. There are several aspects to\nFreshPorts:\n\n  * FreeBSD admin (updating the OS and packages)\n\n  * front end code (website - mostly PHP)\n\n  * back end code (commit processing - Perl, Python, shell)\n\n  * database design (PostgreSQL).\n\nThe database does not change very often and requires little maintenance\ncompared to the applications and OS. The website pretty much runs itself. From\ntime to time, a change to the FreeBSD ports infrastructure breaks something or\nrequires a modification, but there is rarely any urgency to fix that. This is\nnot a huge time commitment. There is a lot of learning. While not a complex\napplication, FreshPorts is also not trivial.\n\nTo contribute, please join the\nhttps://lists.freshports.org/mailman/listinfo/freshports-coders mailing list\nand let us know what you would like to help with.\n\n### GCC on FreeBSD\n\nLinks: GCC Project URL: https://gcc.gnu.org/ GCC 10 release series URL:\nhttps://gcc.gnu.org/gcc-10/ GCC 11 release series URL:\nhttps://gcc.gnu.org/gcc-11/ GCC 12 release series URL:\nhttps://gcc.gnu.org/gcc-12/ GCC 13 release series URL:\nhttps://gcc.gnu.org/gcc-13/\n\nContact: Lorenzo Salvadore <salvadore@FreeBSD.org>\n\nUpdating GCC default version to 13 is finally finished. Thanks to Antoine\nBrodin who ran the exp-runs and to all other developers and ports maintainers\ninvolved.\n\nAs promised in the preceding report, the next goal is to reduce the number of\nopen bugs for GCC ports. Some work on existing bugs has already started.\n\nIn particular, lang/gcc14-devel has long stayed out of date due to some issues\nwith building the port without any BOOTSTRAP option. Thanks to the help of\nother developers and contributors (a special thank to Mark Millard), I noticed\nthat according to the official documentation building GCC without bootstrap\nrequires a working GCC binary and thus I switched lang/gcc14-devel to require\nthat a BOOTSTRAP option is set. However it has later been stated that\nbootstrapping GCC using clang and libc++ is officially supported. But it has\nalso been stated that this is not a high priority.\n\nAt the moment lang/gcc14-devel is the only GCC port requiring a BOOTSTRAP\noption to be set. The plan is to have all GCC ports for versions greater or\nequal than 14 (i.e. future GCC ports) to require such an option: even if\nbuilding without bootstrap is more or less officially supported, being low\npriority for upstream it increases the burden of maintaining GCC ports for low\nresults. In case lower versions start to have issues building without\nbootstrap, I am going to require bootstrap for those as well.\n\n### Valgrind: port to arm64 on its way\n\nLinks: Valgrind Home Page URL: https://www.valgrind.org/ Valgrind News URL:\nhttps://www.valgrind.org/docs/manual/dist.news.html arm64 port URL:\nhttps://github.com/paulfloyd/freebsdarm64_valgrind\n\nContact: Paul Floyd <pjfloyd@wanadoo.fr>\n\nThe major news, as per the title, is that a port to FreeBSD arm64 (or aarch64)\nis now ready. The next steps are to get it reviewed and pushed upstream.\n\nValgrind 3.23 is due out at the end of April 2024 and devel/valgrind will be\nupdated shortly after that.\n\ndevel/valgrind-devel will get an update as soon as I have pushed the changes\nfor arm64.\n\n\\--track-fds=yes now checks for and warns about attempts to close a file\ndescriptor more than once. Handling of closefrom has been improved to use this\nfeature.\n\nThere are some important fixes for FreeBSD 15, in particular handling the new\nlibsys.\n\nHere is a list of smaller bugfixes:\n\n  * Support for FreeBSD 13.3 has been added.\n\n  * Added a redirect for reallocarray.\n\n  * Several fixes for aio* functions.\n\n  * Added a redirect for memccpy.\n\n  * There is a fix for _umtx_op OP_ROBUST_LISTS.\n\n  * Added redirects for C23 free_sized and free_aligned_sized.\n\n  * Correctly propagate the ELF stack protection flags to the guest stack that Valgrind synthesizes.\n\n  * Fixes for --sanity-level-3 and above (only used for Valgrind self-testing at runtime).\n\n  * Several fixes to checking done for semctl.\n\n  * Fixed argument checking for utrace.\n\n  * Fixed argument checking for clock_nanosleep.\n\n## Third Party Projects\n\nMany projects build upon FreeBSD or incorporate components of FreeBSD into\ntheir project. As these projects may be of interest to the broader FreeBSD\ncommunity, we sometimes include brief updates submitted by these projects in\nour quarterly report. The FreeBSD project makes no representation as to the\naccuracy or veracity of any claims in these submissions.\n\n### Containers and FreeBSD: Pot, Potluck and Potman\n\nLinks: Pot organization on GitHub URL: https://github.com/bsdpot\n\nContact: Luca Pizzamiglio (Pot) <pizzamig@FreeBSD.org> Contact: Bretton Vine\n(Potluck) <bv@honeyguide.eu> Contact: Michael Gmelin (Potman)\n<grembo@FreeBSD.org>\n\nPot is a jail management tool that also supports orchestration through Nomad.\nPotluck aims to be to FreeBSD and Pot what Dockerhub is to Linux and Docker: a\nrepository of Pot flavours and complete container images for usage with Pot\nand in many cases Nomad.\n\nDuring this quarter, there were no new Pot releases.\n\nPotluck saw quite some activity though. Not only have the images been rebuilt\nfor FreeBSD 14, but also the new Adminer container has been submitted by\nfirst-time contributor Sidicer. Additionally a large number of additional\nfeatures, updates and fixes have been committed to containers like HAProxy-\nConsul, Grafana, PostgreSQL-Patroni, or Prometheus.\n\nFor the Mastodon container, a blog post has been published explaining how to\nuse it to run your own instance.\n\nAs always, feedback and patches are welcome.\n\nSponsors: Nikulipe UAB, Honeyguide Group\n\nLast modified on: April 25, 2024 by Lorenzo Salvadore\n\nLegal Notices | \u00a9 1995-2024 The FreeBSD Project All rights reserved. The mark FreeBSD is a registered trademark of The FreeBSD Foundation and is used by The FreeBSD Project with the permission of The FreeBSD Foundation. Contact\n\n", "frontpage": false}
