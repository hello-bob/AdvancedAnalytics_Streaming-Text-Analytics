{"aid": "40167654", "title": "Publish Python Packages to PyPI", "url": "https://simonwillison.net/2024/Jan/16/python-lib-pypi/", "domain": "simonwillison.net", "votes": 1, "user": "tosh", "posted_at": "2024-04-26 10:26:23", "comments": 0, "source_title": "Publish Python packages to PyPI with a python-lib cookiecutter template and GitHub Actions", "source_text": "Publish Python packages to PyPI with a python-lib cookiecutter template and\nGitHub Actions\n\n# Simon Willison\u2019s Weblog\n\nSubscribe\n\n## Publish Python packages to PyPI with a python-lib cookiecutter template and\nGitHub Actions\n\n16th January 2024\n\nI use cookiecutter to start almost all of my Python projects. It helps me\nquickly generate a skeleton of a project with my preferred directory structure\nand configured tools.\n\nI made some major upgrades to my python-lib cookiecutter template today.\nHere\u2019s what it can now do to help you get started with a new Python library:\n\n  * Create a pyproject.toml file configured for use with setuptools. In my opinion this is the pattern with the current lowest learning curve\u2014I wrote about that in detail in this TIL.\n  * Add a skeleton README and an Apache 2.0 LICENSE file.\n  * Create your_package/__init__.py for your code to go in.\n  * Create tests/test_your_package.py with a skeleton test.\n  * Include pytest as a test dependency.\n  * Configure GitHub Actions with two workflows in .github/workflows\u2014one for running the tests against Python 3.8 through 3.12, and one for publishing releases of your package to PyPI.\n\nThe changes I made today are that I switched from setup.py to pyproject.toml,\nand I made a big improvement to how the publishing workflow authenticates with\nPyPI.\n\n#### Publishing to PyPI with Trusted Publishing #\n\nMy previous version of this template required you to jump through quite a few\nhoops to get PyPI publishing to work. You needed to create a PyPI token that\ncould publish a new package, then paste that token into a GitHub Actions\nsecret, then publish the package, and then disable that token and create a new\none dedicated to just updating this package in the future.\n\nThe new version is much simpler, thanks to PyPI\u2019s relatively new Trusted\nPublishers mechanism.\n\nTo publish a new package, you need to sign into PyPI and create a new \u201cpending\npublisher\u201d. Effectively you tell PyPI \"My GitHub repository myname/name-of-\nrepo should be allowed to publish packages with the name name-of-package\".\n\nHere\u2019s that form for my brand new datasette-test library, the first library I\npublished using this updated template:\n\nThen create a release on GitHub, with a name that matches the version number\nfrom your pyproject.toml. Everything else should Just Work.\n\nI wrote more about Trusted Publishing in this TIL.\n\n#### Creating a package using a GitHub repository template #\n\nThe most time consuming part of this project was getting my GitHub repository\ntemplate to work properly.\n\nThere are two ways to use my cookiecutter template. You can use the\ncookiecutter command-line tool like this:\n\n    \n    \n    pipx install cookiecutter cookiecutter gh:simonw/python-lib # Answer a few questions here\n\nBut a more fun and convenient option is to use my GitHub repository template,\nsimonw/python-lib-template-repository.\n\nThis lets you fill in a form on GitHub to create a new repository which will\nthen execute the cookiecutter template for you and update itself with the\nresult.\n\nYou can see an example of a repository created using this template at\ndatasette/datasette-test.\n\n#### Adding it all together #\n\nThere are quite a lot of moving parts under the scenes here, but the end\nresult is that anyone can now create a Python library with test coverage,\nGitHub CI and release automation by filling in a couple of forms and clicking\nsome buttons.\n\nFor more details on how this all works, and how it\u2019s evolved over time:\n\n  * A cookiecutter template for writing Datasette plugins from June 2020 describes my first experiments with cookiecutter\n  * Dynamic content for GitHub repository templates using cookiecutter and GitHub Actions from August 2021 describes my earliest attempts at using GitHub repository templates for this\n  * How to build, test and publish an open source Python library is a ten minute talk I gave at PyGotham in November 2021. It describes setup.py in detail, which is no longer my preferred approach.\n\nPosted 16th January 2024 at 9:59 pm \u00b7 Follow me on Mastodon or Twitter or\nsubscribe to my newsletter\n\n## More recent articles\n\n  * Weeknotes: Llama 3, AI for Data Journalism, llm-evals and datasette-secrets - 23rd April 2024\n  * Options for accessing Llama 3 from the terminal using LLM - 22nd April 2024\n  * AI for Data Journalism: demonstrating what we can do with this stuff right now - 17th April 2024\n  * Three major LLM releases in 24 hours (plus weeknotes) - 10th April 2024\n  * Building files-to-prompt entirely using Claude 3 Opus - 8th April 2024\n  * Running OCR against PDFs and images directly in your browser - 30th March 2024\n  * llm cmd undo last git commit - a new plugin for LLM - 26th March 2024\n  * Building and testing C extensions for SQLite with ChatGPT Code Interpreter - 23rd March 2024\n  * Claude and ChatGPT for ad-hoc sidequests - 22nd March 2024\n  * Weeknotes: the aftermath of NICAR - 16th March 2024\n\nThis is Publish Python packages to PyPI with a python-lib cookiecutter\ntemplate and GitHub Actions by Simon Willison, posted on 16th January 2024.\n\nPart of series My open source process\n\n  9. The Perfect Commit - Oct. 29, 2022, 8:41 p.m.\n  10. Coping strategies for the serial project hoarder - Nov. 26, 2022, 3:47 p.m.\n  11. Things I've learned about building CLI tools in Python - Sept. 30, 2023, 12:12 a.m.\n  12. Publish Python packages to PyPI with a python-lib cookiecutter template and GitHub Actions - Jan. 16, 2024, 9:59 p.m.\n\ngithub 122 projects 372 pypi 22 python 920 githubactions 42 cookiecutter 7\n\nNext: Talking about Open Source LLMs on Oxide and Friends\n\nPrevious: What I should have said about the term Artificial Intelligence\n\n  * Source code\n  * \u00a9\n  * 2002\n  * 2003\n  * 2004\n  * 2005\n  * 2006\n  * 2007\n  * 2008\n  * 2009\n  * 2010\n  * 2011\n  * 2012\n  * 2013\n  * 2014\n  * 2015\n  * 2016\n  * 2017\n  * 2018\n  * 2019\n  * 2020\n  * 2021\n  * 2022\n  * 2023\n  * 2024\n\n", "frontpage": false}
