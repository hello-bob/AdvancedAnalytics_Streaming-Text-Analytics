{"aid": "40202387", "title": "Building a Product Discovery Platform with Real-Time Analytics Using the Dub API", "url": "https://dub.co/blog/product-discovery-platform", "domain": "dub.co", "votes": 1, "user": "steventey", "posted_at": "2024-04-29 18:52:17", "comments": 0, "source_title": "Building a Product Discovery Platform with Real-time Analytics using the Dub API \u2013 Dub.co", "source_text": "Building a Product Discovery Platform with Real-time Analytics using the Dub\nAPI \u2013 Dub.co\n\nLog inSign Up\n\nEngineeringApril 29, 2024\n\n# Building a Product Discovery Platform with Real-time Analytics using the Dub\nAPI\n\nLearn how we built OSS Gallery \u2013 a crowdsourced list of the best open-source\nprojects on the web \u2013 using Dub's API for real-time click analytics.\n\nProduct discovery platforms like Product Hunt and Betalist have become popular\ndestinations for tech enthusiasts to discover new tools and resources. Every\nday, thousands of new products are submitted to these platforms, which in turn\ngenerates millions of outbound clicks to the products' websites.\n\nUsually, these platforms rely on product analytics tools like Segment,\nAmplitude, or Mixpanel to track these clicks and other user interactions.\nHowever, there are several limitations with these tools:\n\n  1. Latency: These tools are more suited for generating data reports for internal use and are not optimized for user-facing analytics. As a result, their APIs have painstakingly slow response times.\n  2. No real-time support: Most analytics tools have a delay of a few minutes to a few hours before the data is available via their API.\n  3. Poor DX: These tools are generally not developer friendly \u2013 poor documentation, little to no code samples, and lack of support for modern frameworks like React or TypeScript.\n\nIn this article, we'll show you how you can leverage Dub's API to integrate\nreal-time user-facing analytics into your products \u2013 using OSS Gallery as a\nreal-world example.\n\n## What is OSS Gallery?\n\nOSS Gallery is a crowdsourced list of the best open-source projects on the\nweb. It's a platform for you to discover new open-source tools, libraries, and\nresources that can help you build better software.\n\nSteven Tey\n\n@steventey\n\n\u00b7\n\nApr 24\n\nLink to tweet\n\nIntroducing my new open-source side project: oss.gallery It's a crowdsourced\nlist of the best open-source projects on the web. Best part? It's dogfoods\n@dubdotco's API to create short links for each project page + display real-\ntime click analytics for them \ud83d\udcc8\n\n902\n\n87\n\nWe built OSS Gallery to showcase the capabilities of Dub's API for building\nreal-time user-facing analytics. With Dub's API, we were able to track\noutgoing clicks from OSS Gallery to a project's GitHub repository + website\nand display those clicks in real-time on the project page.\n\nHere's an example of how this works on our very own OSS Gallery page:\n\nAs you can see, clicks to our website are tracked and displayed in real-time\nin a nice time-series chart. This provides users with instant feedback on the\npopularity of a project and helps developers understand how their projects are\nbeing discovered.\n\n## How we built OSS Gallery\n\nHere's a high-level overview of the tech stack we used:\n\n  1. Dub's TypeScript SDK: Link creation, click tracking, and real-time analytics.\n  2. Tremor: Beautiful time-series charts\n  3. Next.js: Server Actions + Form Actions (zero API routes)\n  4. Vercel: Serverless Postgres + Deployment\n\nThe codebase is fully open-source as well \u2013 feel free to take a look at our\nimplementation:\n\ndubinc/oss-gallery\n\nA crowdsourced list of the best open-source projects on the internet. Built\nwith the Dub TypeScript SDK.\n\n400\n\nStars\n\n25\n\nForks\n\nPrefer using a REST API instead? Check out the Dub API reference for more\ninformation.\n\n## Part 1: Obtain a Dub API key + Workspace ID\n\nTo get started, you'll need to obtain a Dub API key. You can do this by\nsigning up for a free account and navigate to Account Settings > API Keys to\ngenerate a new API key.\n\nOnce you generate a key, you can save it in your .env file as DUB_API_KEY.\n\nNext, you'll need to create a workspace in Dub and obtain the workspace ID.\nHere are some helpful guides to get you started:\n\n  1. How to create a workspace on Dub\n  2. How to get your workspace ID on Dub\n\n## Part 2: Programmatically creating and editing links\n\nWith the Dub API key and workspace ID in hand, you can now start creating and\nediting links programmatically via the Dub API. Here's a simple example using\nDub's TypeScript SDK:\n\n    \n    \n    const { shortLink } = await dub.links.create({ url: \"https://github.com/dubinc/dub\", // here, we pass the unique link ID from our database as the external ID // to let us easily update / retrieve analytics for the link later externalId: \"lnk_xxxxxxxxxxxx\", }); console.log(shortLink); // https://go.oss.gallery/kj23naD\n\nYou can view the full code snippet above on GitHub.\n\nYou might've noticed that we're passing an externalId to the dub.links.create\nmethod. This is a unique identifier that you can use to associate the\ngenerated short link with an entity inside your database \u2013 in our case, a\nproject's link on OSS Gallery.\n\nBy setting the externalId, we can then easily update the link or retrieve\nanalytics for it (more on this in Part 3).\n\nLet's take a look at how we can edit the link using the dub.links.update\nmethod:\n\n    \n    \n    // updating the link's URL using the link's unique ID from our database await dub.links.update(`ext_${link.id}`, { url: \"https://github.com/dubinc/dub-node\", });\n\nAs you can see here, we are passing the link's unique ID from our database as\nthe external ID to the dub.links.update method. This allows us to update the\nlink's URL whenever the user updates it in their project settings.\n\nWhen passing the external ID to the dub.links.update method, make sure to\nprefix it with ext_ to signify that it's an external ID.\n\n## Part 3: Tracking clicks and displaying real-time analytics\n\nNow that we've created and edited links programmatically, the next step is to\ntrack clicks and display real-time analytics on the project page.\n\nThanks to the Dub API, all clicks to the short link are automatically tracked\nand stored in Dub's database. All we need to do is retrieve these analytics\nusing the dub.analytics.timeseries method:\n\n    \n    \n    const data = await dub.analytics.timeseries({ externalId: `ext_${link.id}`, interval: \"30d\", });\n\nThen, we can use a library like Tremor to display the analytics in a beautiful\ntime-series chart:\n\n    \n    \n    import { AreaChart } from \"@tremor/react\"; export default function AnalyticsChart({ data, }: { data: { start: string; clicks: number }[]; }) { return ( <AreaChart className=\"-ml-4 h-80\" data={data} index=\"start\" categories={[\"GitHub\"]} colors={[\"rose\"]} valueFormatter={nFormatter} // simple number formatter to yAxisWidth={60} showAnimation // animate the chart on load onValueChange={(v) => console.log(v)} /> ); }\n\nYou can view the full code snippet above on GitHub.\n\nAnd that's it! With just a few lines of code, we've integrated real-time user-\nfacing analytics into our product discovery platform, providing valuable\ninsights to the project creators on how their projects are being discovered.\n\n## Start building with the Dub API\n\nWe hope this article has inspired you to start building real-time analytics\nexperiences with the Dub API. Whether you're building a product discovery\nplatform like OSS Gallery or a simple link shortening service, Dub's API can\nhelp you track clicks and display real-time analytics with ease.\n\nNot sure where to start? Check out our TypeScript SDK docs and API reference\nto get started. We've also created a lightweight example project \u2013\naffectionately dubbed dublet \u2013 to help you get up and running quickly:\n\ndubinc/dublet\n\nMini link shortener built with the Dub Typescript SDK\n\n38\n\nStars\n\n2\n\nForks\n\nHave any questions? Feel free to send us an email or tweet at us \u2013 we'd love\nto help!\n\nWritten by\n\nSteven Tey\n\n@steventey\n\nRead more\n\n  * How to get #1 on Product Hunt \u2013 a step-by-step playbook\n\nOn March 21, we launched Dub.co on Product Hunt and won #1 Product of the\nMonth. Here's the step-by-step playbook of how we did it.\n\nMarch 25, 2024\n\n  * How Dub.co Became an Essential Marketing Tool for My YouTube Channel\n\nLearn more about how CodewithGuillaume (Guillaume Duhan), a YouTuber, uses\nDub.co to promote his videos and track analytics data.\n\nApril 9, 2024\n\n  * Building a Smart Datetime Picker \u2013 without using AI\n\nWe recently built a smart datetime picker that lets you enter any arbitrary\ntime interval in natural language and auto-magically converts it to the right\ndatetime format. Here's how we built it.\n\nApril 8, 2024\n\n  * Using Zod to validate Next.js API Route Handlers\n\nWe recently added Zod to our Next.js API route handlers to validate the\nrequest body and query parameters. Learn why and how we did this.\n\nMarch 27, 2024\n\n## Supercharge your marketing efforts\n\nSee why Dub.co is the link management infrastructure of choice for modern\nmarketing teams.\n\nStart for FreeGet a Demo\n\n### Amazon Link\n\nShortener\n\n### GitHub Link\n\nShortener\n\n### Spotify Link\n\nShortener\n\n### ChatGPT Link\n\nShortener\n\n### Amazon Link\n\nShortener\n\n### GitHub Link\n\nShortener\n\n### Spotify Link\n\nShortener\n\n### ChatGPT Link\n\nShortener\n\nDub.co Logo\n\nGiving modern marketing teams superpowers with short links that stand out.\n\n\u00a9 2024 Dub Technologies, Inc.\n\nTwitterGithubLinkedInYouTube\n\nLoading status...\n\n### Features\n\n  * Advanced Analytics\n  * Branded Links\n  * QR Codes\n  * Personalization\n  * Team Collaboration\n  * API\n\n### Product\n\n  * Blog\n  * Changelog\n  * Customers\n  * Pricing\n  * Enterprise\n  * Help Center\n\n### Compare\n\n  * Bitly\n  * Rebrandly\n  * Short.io\n\n### Legal\n\n  * Privacy\n  * Terms\n  * Abuse\n\n### Tools\n\n  * Spotify Link Shortener\n  * ChatGPT Link Shortener\n  * GitHub Link Shortener\n  * Amazon Link Shortener\n  * Metatags API\n  * Link Inspector\n  * QR Code API\n  * UTM Builder\n\n", "frontpage": false}
