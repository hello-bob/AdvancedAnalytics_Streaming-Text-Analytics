{"aid": "40245553", "title": "Azure SDK is over 500 MB and growing on each release", "url": "https://github.com/Azure/azure-sdk-for-python/issues/17801", "domain": "github.com/azure", "votes": 2, "user": "varun_chopra", "posted_at": "2024-05-03 08:53:10", "comments": 2, "source_title": "Azure SDK is over 500MB and growing on each release. \u00b7 Issue #17801 \u00b7 Azure/azure-sdk-for-python", "source_text": "Azure SDK is over 500MB and growing on each release. \u00b7 Issue #17801 \u00b7\nAzure/azure-sdk-for-python \u00b7 GitHub\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nAzure / azure-sdk-for-python Public\n\n  * Notifications\n  * Fork 2.7k\n  * Star 4.3k\n\nJump to bottom\n\n# Azure SDK is over 500MB and growing on each release. #17801\n\nOpen\n\nsodul opened this issue Apr 5, 2021 \u00b7 45 comments\n\nOpen\n\n# Azure SDK is over 500MB and growing on each release. #17801\n\nsodul opened this issue Apr 5, 2021 \u00b7 45 comments\n\nAssignees\n\nLabels\n\ncustomer-reported Issues that are reported by GitHub users external to the\nAzure organization. Mgmt This issue is related to a management-plane library.\nneeds-team-attention This issue needs attention from Azure service team or SDK\nteam Network question The issue doesn't require a change to the product in\norder to be resolved. Most issues start as that Service Attention This issue\nis responsible by Azure service team.\n\n## Comments\n\n###\n\nsodul commented Apr 5, 2021\n\nThe azure SDK is ridiculously large for reasons that I have a hard time\nunderstanding. We pip install it for our CI pipelines and the vast majority of\nthe size of our container is coming from the Azure SDK, in the SDK the network\ndirectory is taking almost half of the size and this is because there are 39\nversions of the SDK.I have never seen anyone doing such a strange approach to\nversion their API clients. I fail to understand why anyone would even want to\nuse the client from 2015 on a cloud product like Azure.\n\n    \n    \n    root@1bba10bd1500:~/.pyenv/versions/3.9.2/lib/python3.9/site-packages/azure/mgmt/network# du -shc * | grep M | sort -n 1.2M aio 2.4M v2015_06_15 3.3M v2016_09_01 3.5M v2016_12_01 3.7M v2017_03_01 4.4M v2017_06_01 4.4M v2017_08_01 4.9M v2017_09_01 5.1M v2017_10_01 5.1M v2017_11_01 5.1M v2018_01_01 5.7M v2018_02_01 6.5M v2018_04_01 6.6M v2018_06_01 6.9M v2018_07_01 8.3M v2018_08_01 8.4M v2018_10_01 8.6M v2018_11_01 8.8M v2018_12_01 9.0M v2019_02_01 9.5M v2019_04_01 10M v2019_06_01 11M v2019_07_01 11M v2019_08_01 11M v2019_09_01 11M v2019_11_01 11M v2019_12_01 12M v2020_03_01 12M v2020_04_01 13M v2020_05_01 13M v2020_06_01 13M v2020_07_01 13M v2020_08_01 259M total\n\nCan the default release only prove the latest version of the client libraries,\nor at least provide a 'lean' version of the SDK? This release model is\ncertainly not sustainable and is causing useless grief to your users.  \n---  \nThe text was updated successfully, but these errors were encountered:  \n  \nghost added needs-triage This is a new issue that needs to be triaged to the\nappropriate team. customer-reported Issues that are reported by GitHub users\nexternal to the Azure organization. question The issue doesn't require a\nchange to the product in order to be resolved. Most issues start as that\nlabels Apr 5, 2021\n\nkristapratico added Mgmt This issue is related to a management-plane library.\nNetwork Service Attention This issue is responsible by Azure service team. and\nremoved needs-triage This is a new issue that needs to be triaged to the\nappropriate team. labels Apr 5, 2021\n\n###\n\nghost commented Apr 5, 2021\n\nThanks for the feedback! We are routing this to the appropriate team for\nfollow-up. cc @aznetsuppgithub.  \n---  \n  \nMember\n\n###\n\nkristapratico commented Apr 5, 2021\n\nHi @sodul, thanks for the feedback, we'll investigate asap.  \n---  \n  \nsodul mentioned this issue Jun 21, 2021\n\nAzure-ci-core has strict dependencies on old 3rd party packages Azure/azure-\ncli#18548\n\nOpen\n\nMember\n\n###\n\njiasli commented Jun 22, 2021\n\nPreviously reported in #11149.  \n---  \n  \nAuthor\n\n###\n\nsodul commented Jun 23, 2021\n\nTo clarify #11149 is only about azure-mgmt-network which is the largest\ndirectory but the problem is present across the entire Azure SDK.I understand\nthe reasoning for the approach to keep everything for backward compatibility\nbut if you do have customers that point to the old versions then they should\npin their requirement versions to the old pypi.org releases of the Azure SDK,\nnot force everyone to keep a copy of everything around. How about providing\ntwo versions of the SDKs: one large with everything, one small with just the\nlatest version.  \n---  \n  \nmsyyc mentioned this issue Aug 2, 2021\n\nadd flag to combine operation groups into one file Azure/autorest.python#990\n\nClosed\n\n###\n\nnolaexe commented Aug 5, 2021\n\nHey, is there any update?  \n---  \n  \nAuthor\n\n###\n\nsodul commented Aug 5, 2021\n\nI wrote a script that we run after pip install. It detects the unused versions\nand this got us an azure folder shrink from ~ 680MB to ~ 280MB. It cannot go\nany lower because for some reason some of the objects model definitions from\nmultiple versions are merged together to make the final list that is then\nused. The script detects the versions that are used internally by the SDK and\npreserves them, making the script very safe to use.If there is interest I can\nopen source the script.  \n---  \n  \nsodul mentioned this issue Aug 5, 2021\n\nKapitan depends on azure.keyvault.v2016_10_01 explicitly kapicorp/kapitan#761\n\nOpen\n\nAuthor\n\n###\n\nsodul commented Aug 16, 2021 \u2022\n\nWe have released our script on GitHub. It does delete a good chunk of the API\nfolders but not all of it. With the script the Azure directory is now just\nunder 300MB instead of over 700MB. It is compatible with most, but not all,\nthird party packages, as long as they do not point to a version that is\ntrimmed.https://github.com/clumio-code/azure-sdk-trim  \n---  \n  \nmsyyc mentioned this issue Oct 20, 2021\n\n[Python] reduce size for azure-mgmt-network #21301\n\nClosed\n\n###\n\nKranthiPakala-MSFT commented Nov 1, 2021\n\n@kristapratico Following up to see if there is any update on this issue? -\nThank you  \n---  \n  \nkristapratico assigned lmazuel and msyyc Nov 2, 2021\n\nMember\n\n###\n\nlmazuel commented Nov 2, 2021\n\n@KranthiPakala-MSFT we are working on this, and there is ongoing discussion on\nthe issue to be sure we consider all possible impact of any decisions, and\nnobody would be broken by it.  \n---  \n  \n###\n\nlogachev commented Nov 9, 2021\n\n@lmazuel I think one old proposal that won't break anything is to release\nseparate azure-sdk-slim with only latest APIs (that are used by default) and\npossibly do something with comments (iirc, removing comments reduces the size\nby 30%)  \n---  \n  \nAuthor\n\n###\n\nsodul commented Nov 10, 2021\n\nRemoving non latest APIs, will remove about 60% of the disk space needed. A\nfurther design issues is that some of the API definitions import prior APIs in\norder to have a complete set of objects. I have no idea why these API\ndefinitions where designed this way but it is definitely not very good. I did\nnot think of the idea of stripping comments, which means that we could\nprobably extend azure-sdk-trim to remove comments and other useless\nwhitespace. There is probably a tool that 'compresses' python that we could\nrun. Of course we would not want to remove docstrings, they do help.  \n---  \n  \n###\n\nlogachev commented Nov 10, 2021\n\n@sodul Yeah, agreed. So far I saw only keyvault being broken by your tool\n(which should be fixed soon I guess #21623).I think there are actually 2\nscenarios we're talking about.. Development - I agree, comments & doc strings\nare useful. However, building production image - docstrings are unnecessary..\nThe only trick there is - need to preserve number of empty lines as a\nreplacement for a docstring comment to get same line numbers with exceptions.  \n---  \n  \nRAY-316 added the issue-addressed The Azure SDK team member assisting with\nthis issue believes it to be addressed and ready to close. label Dec 15, 2021\n\n###\n\nghost commented Dec 15, 2021\n\nHi @sodul. Thank you for opening this issue and giving us the opportunity to\nassist. We believe that this has been addressed. If you feel that further\ndiscussion is needed, please add a comment with the text \u201c/unresolve\u201d to\nremove the \u201cissue-addressed\u201d label and continue the conversation.  \n---  \n  \nAuthor\n\n###\n\nsodul commented Dec 15, 2021\n\n/unresolve  \n---  \n  \nghost added needs-team-attention This issue needs attention from Azure service\nteam or SDK team and removed issue-addressed The Azure SDK team member\nassisting with this issue believes it to be addressed and ready to close.\nlabels Dec 15, 2021\n\nlmazuel mentioned this issue Jan 9, 2023\n\nazure-mgmt-network is huge #11149\n\nClosed\n\nMember\n\n###\n\nlmazuel commented Feb 17, 2023\n\nHello, we have a new version of Network that de-duplicates models as well,\nthat we should be able to publish as a preview next week and brings network to\n5% of its initial size (while keeping full api-version support). We plan to\nleave it in preview for a week or two, and switch it to stable once we did\nenough testing. People using the latest api-version shouldn't see any\ndifference (or it's a bug to be clear). People using a specific api-version,\nmay have to change their code as we simplified the code structure (for\ninstance there is no more module named after an api-version). Breaking changes\nwill be detailed in changelog.  \n---  \n  \nContributor\n\n###\n\niscai-msft commented Feb 21, 2023 \u2022\n\n> Hello, we have a new version of Network that de-duplicates models as well,\n> that we should be able to publish as a preview next week and brings network\n> to 5% of its initial size (while keeping full api-version support). We plan\n> to leave it in preview for a week or two, and switch it to stable once we\n> did enough testing. People using the latest api-version shouldn't see any\n> difference (or it's a bug to be clear). People using a specific api-version,\n> may have to change their code as we simplified the code structure (for\n> instance there is no more module named after an api-version). Breaking\n> changes will be detailed in changelog.\n\nHere is the released version https://pypi.org/project/azure-mgmt-\nnetwork/23.0.0b2/. Please give it a try and let us know how it goes!If you\nhave any issues or questions, please create an issue in this repo and tag me.  \n---  \n  \nAuthor\n\n###\n\nsodul commented Mar 21, 2023\n\n@lmazuel @iscai-msft thank you for the effort with the Network part of the SDK\nbut I did a clean install with the latest azure cli (we use both the CLI and\nthe SDK in our CI/CD pipelines), azure-cli==2.46.0 and the azure folder has\nballooned to 1.3GB. Even after running azure-sdk-trim the size is 560MB.I did\ntry to install azure-mgmt-network==23.0.0b2 which shaved 35MB, but the rest of\nthe SDK is still massive and growing.\n\n    \n    \n    > du -shc * 528K appconfiguration 3.1M batch 177M cli 76K common 1.3M core 856K cosmos 1.2M data 380K datalake 1.3M graphrbac 1.0M identity 7.8M keyvault 152K loganalytics 259M mgmt 35M multiapi 32K profiles 392K storage 9.6M synapse 499M total\n\nCan we expect that the new release model will be applied to the rest of the\nSDK?  \n---  \n  \nContributor\n\n###\n\niscai-msft commented Mar 23, 2023\n\n@sodul yes the plan is to roll out this feature to the other sdks as well.\nWe'll keep this issue updated because this issue isn't specific to the network\nsdk. Thank you again for your patience  \n---  \n  \nrabin-io mentioned this issue Mar 27, 2023\n\nAdd Multi-Stage build Containerfile red-hat-storage/ocs-ci#7360\n\nMerged\n\nMember\n\n###\n\nmsyyc commented Mar 30, 2023\n\nhttps://pypi.org/project/azure-mgmt-network/23.0.0/ is released and its size\nis only 5% of last stable version.  \n---  \n  \nxiangyan99 assigned iscai-msft Mar 31, 2023\n\nMember\n\n###\n\nxiangyan99 commented Mar 31, 2023\n\n@iscai-msft is this one addressed?  \n---  \n  \nContributor\n\n###\n\niscai-msft commented Mar 31, 2023\n\n@xiangyan99 we've addressed network, but we're going to keep this issue open\nas we address our other large libraries, since this issue is not specific to\nnetwork  \n---  \n  \nContributor\n\n###\n\niscai-msft commented Apr 18, 2023\n\nupdating this issue to say that we have also released a preview version of\ncompute with a much smaller sdk size: https://pypi.org/project/azure-mgmt-\ncompute/29.2.0b2/  \n---  \n  \n###\n\nkapilt commented Jun 19, 2023\n\nas a user who uses many different azure apis, and also uses other cloud sdks,\nmy two cents is.I think this is a systemic issue owing to an sdk design\ndecision that needs to be revisited. azure sdks instead are generated across\nevery version of the underlying service api version, resulting in significant\nbloat as this issue notes. several other cloud provider sdks use runtime\nclient generation from service descriptor files, and as a result are orders of\nmagnitude smaller than azure sdks. attempts at piecemeal fixing this on a one\noff basis per package seem misguided (in two years two services have been\naddressed) and is unlikely to resolve anything holistically, as well as likely\nto regress over time as more service api versions are added back.is there any\nappetite for a new azure sdk that moves from static generation to runtime?  \n---  \n  \n###\n\nLawouach commented Jul 13, 2023 \u2022\n\nHello,I was struck by the size taken by azure dependencies. I was however\npleased to confirm the reduced size of the network package.\n\n> updating this issue to say that we have also released a preview version of\n> compute with a much smaller sdk size: https://pypi.org/project/azure-mgmt-\n> compute/29.2.0b2/\n\nBy \"much smaller\", you mean a tiny better smaller right @iscai-msft ? Because\nit's still more then 225Mb on disk. That's just huge and really a problem from\ndocker images size.In comparison, my next biggest dependency is botocore and\nits \"only\" 82Mb.  \n---  \n  \nMember\n\n###\n\njohanste commented Jul 17, 2023\n\nThere are pros and cons for runtime generation vs. shipping pre-generated\ncode. One of the main benefits of pre-generated code is typing and other IDE\nintegration points. Startup/load performance is generally better as well. One\nof the main downsides is, as is deservedly called out here, is package size.We\nare looking at ways to further reducing size while retaining the value that\ncodegen provides. The work done on the network and compute packages are\nintermediary steps, but I you are correct, it is primarily targeting the\nlargest packages with the most use.  \n---  \n  \nContributor\n\n###\n\niscai-msft commented Jul 18, 2023\n\n@Lawouach the beta version. The current public version of 30.0.0 is around 67\nMB, while the beta reduced size is 7.7 MB. cc @msyyc for when the compute\nreduced size package will GA.I'm not sure what the 225 MB refers to, it might\nbe the size of the entire SDK. Either way agree the entire Azure SDK is still\ndefinitely too large and we're actively working on reducing packages sizes for\nour SDKs, starting with the ones with the largest sizes and working our way\ndown. @msyyc is leading the charge on this.  \n---  \n  \n###\n\nLawouach commented Jul 20, 2023\n\nHi @iscai-msft and @johansteThanks for the swift feedback. It's appreciated.\nTo give a bit of context. I'm maintaining the Chaos Toolkit and a variety of\nits extensions. We have built Reliably on top of these to provide a friendly\nchaos engineering framework and product.I therefore bundled these extensions\nin a container image and it had become quite large once I introduced the\nchaostoolkit extension which brings the following Azure dependencies:\n\n    \n    \n    azure-mgmt-compute>=20.0 azure-mgmt-containerservice>=22.0 azure-mgmt-rdbms>=10.1 azure-mgmt-network>=21.0.1 azure-mgmt-storage>=21.0.0 azure-mgmt-resourcegraph>=8.0 azure-mgmt-web>=3.0 azure-mgmt-netapp>=9.0 azure-identity>=1.6 msrestazure>=0.6 azure-keyvault-secrets\n\nIndeed the 225 MB comes from the space taken by all of these on the image.I'm\nquite happy to see the direction of making the packages leaner overall!  \n---  \n  \n###\n\nkapilt commented Jul 21, 2023\n\nas another view point, azure packages add about 354mb of size to our docker\nimages (which also support 4 other cloud providers in a fraction of that\nsize). the current rate of package size improvements (2 in 2 years), means\nthere is timely no visible path to correction given the number of packages in\nthe azure ecosystem. and as service teams rev versions, these problems are\nlikely to reoccur in the 'corrected' packages.wrt to packages we're (cncf\ncloud custodian) currently using\n\n    \n    \n    azure-mgmt-authorization azure-mgmt-advisor azure-mgmt-apimanagement azure-mgmt-applicationinsights azure-mgmt-batch azure-mgmt-cognitiveservices azure-mgmt-cosmosdb azure-mgmt-costmanagement azure-mgmt-containerinstance azure-mgmt-compute azure-mgmt-cdn azure-mgmt-containerregistry azure-mgmt-containerservice azure-mgmt-databricks azure-mgmt-datalake-store azure-mgmt-datafactory azure-mgmt-dns azure-mgmt-eventgrid azure-mgmt-eventhub azure-mgmt-hdinsight azure-mgmt-iothub azure-mgmt-keyvault azure-mgmt-managementgroups azure-mgmt-network azure-mgmt-redhatopenshift azure-mgmt-resourcegraph azure-mgmt-resource azure-mgmt-rdbms azure-mgmt-search azure-mgmt-sql azure-mgmt-storage azure-mgmt-subscription azure-mgmt-web azure-mgmt-logic azure-storage-blob azure-storage-queue azure-cosmosdb-table applicationinsights azure-functions azure-graphrbac adal azure-storage-file azure-mgmt-policyinsights azure-mgmt-monitor azure-cosmos azure-mgmt-redis azure-keyvault-secrets azure-keyvault-keys azure-keyvault-certificates azure-identity azure-keyvault azure-storage-file-share azure-mgmt-msi azure-mgmt-servicefabric azure-mgmt-trafficmanager azure-mgmt-frontdoor azure-mgmt-security azure-mgmt-servicebus azure-mgmt-appplatform azure-mgmt-recoveryservices\n\n@johanste re dynamic gen, ide integration points can be had via other methods\n(typing files etc). re startup time, the runtime generation is typically\ncached, and lazy/amortized. most folks are aren't creating clients at import\ntime versus runtime. the current static generation pattern also feels anti\nconsumption, the more azure you use, the worse the problem is. and its not\njust package size, its an explosion on the dependency graph and supply chain\nvalidation due to the package count as well.sadly I don't see a runtime style\nopenapi client extant, so the lift on exploring this is larger then I'd like.  \n---  \n  \njiasli mentioned this issue Jul 24, 2023\n\nazure-cli 2.50.0 pins subscriptions to v2019_11_01 Azure/azure-cli#26966\n\nOpen\n\n###\n\nLawouach commented Aug 1, 2023\n\nFollowing up on this conversation. From Azure/azure-cli#26966 (comment):\n\n> The recommended installation method is to follow the official document\n> https://learn.microsoft.com/en-us/cli/azure/install-azure-cli to install\n> pre-built packages, i.e. MSI, DEB, RPM and docker image, instead of from\n> PyPI or source code.\n\nFrom my perspective, this approach is broken when it comes to Azure libraries.\nI build my supply chain around the Python package ecosystem. I can understand\nthe CLI can be installed via native distribution package managers. But libs\nshould always default to being installed in their own right via Pypi.  \n---  \n  \nMember\n\n###\n\njohanste commented Aug 1, 2023\n\nMy apologies for the late response - I was hoping to communicate the official\nplan from our perspective, but vacations came in the way. This is what I\nintend for the team to do:\n\n  * Expand the \"generic\" azure management library (this is either going to be a azure-mgmt-resources or a new library) - including documentation/illustrations on how to call arbitrary actions on a resource. This allows a size sensitive application to not include any per-resource-provider metadata (which is what makes the library so large today). In the first phase, it may not have great IDE/typing integration.\n  * Investigate shipping separate type stubs. Initially for the generic azure management library.\n\n  \n---  \n  \nMember\n\n###\n\njohanste commented Aug 1, 2023\n\n> Following up on this conversation. From Azure/azure-cli#26966 (comment):\n>\n\n>> The recommended installation method is to follow the official document\nhttps://learn.microsoft.com/en-us/cli/azure/install-azure-cli to install pre-\nbuilt packages, i.e. MSI, DEB, RPM and docker image, instead of from PyPI or\nsource code.\n\n>\n> From my perspective, this approach is broken when it comes to Azure\n> libraries. I build my supply chain around the Python package ecosystem. I\n> can understand the CLI can be installed via native distribution package\n> managers. But libs should always default to being installed in their own\n> right via Pypi.\n\nAgreed.  \n---  \n  \n###\n\nLawouach commented Aug 1, 2023\n\nHey @johanste and everyone in this thread. I really do appreciate the positive\nfeedback from your side that this is a recognized challenge. It's comforting\n:)  \n---  \n  \nAuthor\n\n###\n\nsodul commented Feb 7, 2024\n\nFor the record the overall size seems to have stabilized but due to the azure\nsdk not explicitly calling older APIs the trimming is less efficient. With\nazure-cli==2.57.0:\n\n    \n    \n    > azure_sdk_trim.py /Users/stephane/.pyenv/versions/3.12.1/lib/python3.12/site-packages/azure is using 1.2 GB. Detected az cli with 39 SDKs to keep. /Users/stephane/.pyenv/versions/3.12.1/lib/python3.12/site-packages/azure is now using 593.0 MB. Saved 592.3 MB.\n\nWe would love to see more progress on controlling the size here.  \n---  \n  \n###\n\ndry4ng commented Mar 9, 2024\n\nAzure is taking twice the disk size of all our packages combined. 10x the size\nof AWS libraries.  \n---  \n  \n###\n\ngithub-actions bot commented Apr 10, 2024\n\nHi @sodul, we deeply appreciate your input into this project. Regrettably,\nthis issue has remained inactive for over 2 years, leading us to the decision\nto close it. We've implemented this policy to maintain the relevance of our\nissue queue and facilitate easier navigation for new contributors. If you\nstill believe this topic requires attention, please feel free to create a new\nissue, referencing this one. Thank you for your understanding and ongoing\nsupport.  \n---  \n  \ngithub-actions bot closed this as not planned Won't fix, can't repro,\nduplicate, stale Apr 10, 2024\n\ngithub-actions bot locked and limited conversation to collaborators Apr 10,\n2024\n\nlmazuel reopened this Apr 10, 2024\n\nAzure unlocked this conversation Apr 10, 2024\n\nAuthor\n\n###\n\nsodul commented Apr 10, 2024 \u2022\n\nFor others we have now published the azure-sdk-trim tool to pypi.org to make\nit installable with a simple pip install azure-sdk-trim.\nhttps://pypi.org/project/azure-sdk-trim/This tool is NOT affiliated with\nMicrosoft or the Azure SDK maintainers.With azure-cli==2.59.0 the trimming\nstill helps a lot:\n\n    \n    \n    > azure-sdk-trim /home/user/.pyenv/versions/3.12.3/lib/python3.12/site-packages/azure is using 1.2 GB. Detected az cli with 39 SDKs to keep. /home/user/.pyenv/versions/3.12.3/lib/python3.12/site-packages/azure is now using 607.5 MB.  \n  \n---  \n  \nSign up for free to join this conversation on GitHub. Already have an account?\nSign in to comment\n\nLabels\n\ncustomer-reported Issues that are reported by GitHub users external to the\nAzure organization. Mgmt This issue is related to a management-plane library.\nneeds-team-attention This issue needs attention from Azure service team or SDK\nteam Network question The issue doesn't require a change to the product in\norder to be resolved. Most issues start as that Service Attention This issue\nis responsible by Azure service team.\n\n17 participants\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
