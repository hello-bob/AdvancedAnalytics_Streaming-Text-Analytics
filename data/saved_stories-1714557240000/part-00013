{"aid": "40219057", "title": "A CSS framework for recreating Windows 7 UI", "url": "https://khang-nd.github.io/7.css/", "domain": "khang-nd.github.io", "votes": 20, "user": "nomdep", "posted_at": "2024-05-01 02:58:39", "comments": 5, "source_title": "7.css", "source_text": "7.css - A CSS framework for recreating Windows 7 UI\n\nTweet Share Share Fork\n\n  * Intro\n  * Installation\n\n    * Scoping\n    * Tree-shaking\n  * Issues, Contributing, etc.\n\n# 7.css\n\nA design system for building faithful recreations of old UIs.\n\n## Intro\n\n7.css is a CSS framework for building interface components that look like\nWindows 7. It is built on top of the GUI backbone of XP.css, which is an\nextension of 98.css.\n\nMy First Program\n\nHello, world!\n\nThis framework relies on the usage of semantic HTML. To make a button, you'll\nneed to use a <button>. Input elements require labels. Tabs rely on the\nrole=\"tab\" attribute. This page will guide you through that process, but\naccessibility is a primary goal of this project.\n\nYou can override many of the styles of your elements while maintaining the\nappearance provided by this framework. Need more padding on your buttons? Go\nfor it. Need to add some color to your input labels? Be our guest.\n\nThis framework does not contain any JavaScript, it merely styles your HTML\nwith some CSS. This means 7.css is compatible with your frontend framework of\nchoice.\n\n## Installation / Usage\n\nThe fastest way to use 7.css is to import it from unpkg.\n\n    \n    \n    <link rel=\"stylesheet\" href=\"https://unpkg.com/7.css\">\n\nYou can also install 7.css from npm.\n\nInstallation\n\n    \n    \n    npm install 7.css\n\nUsage\n\n    \n    \n    import \"7.css/dist/7.css\";\n\n### Scoping\n\nIn case you need 7.css to coexist with another CSS/styling framework, you may\nuse the 7.scoped.css stylesheet instead to scope the styling within a win7\nclass.\n\nunpkg:\n\n    \n    \n    https://unpkg.com/7.css/dist/7.scoped.css\n\nor npm:\n\n    \n    \n    import \"7.css/dist/7.scoped.css\"\n\nThen in your code, wrap the component with .win7:\n\nAlso note that using the scoped stylesheet will eliminate the scrollbar\nstyling as well.\n\n### Tree-shaking\n\nIn case you only need the styling of certain components rather than the\ncomplete stylesheet as a whole, you may import them separately as below:\n\nunpkg:\n\n    \n    \n    https://unpkg.com/7.css/dist/gui/buttons.css https://unpkg.com/7.css/dist/gui/tabs.css\n\nor npm:\n\n    \n    \n    import \"7.css/dist/gui/buttons.css\" import \"7.css/dist/gui/tabs.css\"\n\nFor more components, see the published gui folder.\n\n## Components\n\n### Balloon\n\n> A balloon is a small pop-up window that informs users of a non-critical\n> problem or special condition in a control.\n>\n> \u2014 Microsoft Windows User Experience - Balloons\n\nA balloon or tooltip can be created using the role=\"tooltip\" attribute.\n\nA balloon is better known as tooltip in web development.\n\nA control may bind to a balloon with the aria-describedby attribute. You will\nneed to set up an event for the control to trigger the balloon.\n\nPress Backspace to dismiss\n\nTo change the position of the balloon, which subsequently change the placement\nof its tail, combine the respective vertical and horizontal classes:\n\n  * Vertical: .is-top / .is-bottom\n  * Horizontal: .is-left / .is-right\n\nThis balloon is positioned bottom right of the source control (default\nbehavior).\n\nThis balloon is positioned bottom left of the source control.\n\nThis balloon is positioned top left of the source control.\n\nThis balloon is positioned top right of the source control.\n\n### Button\n\n> A command button, also referred to as a push button, is a control that\n> causes the application to perform some action when the user clicks it.\n>\n> \u2014 Microsoft Windows User Experience p. 160\n\nA standard button measures 75px wide and 23px tall with 12px of horizontal\npadding by default. They are styled with 2 shades of gray as a vertical\ngradient.\n\nWhen buttons are clicked, the gray gradient is shifted to corresponding sky\nblues. The following button is simulated to be in the pressed (active) state.\n\nDisabled buttons have solid background and lighter border.\n\nButton focus is communicated with a dotted border, set 4px within the contents\nof the button. The following example is simulated to be focused.\n\nA default button (in Windows, hitting the Enter key in a dialog context\ntriggers the button) has a greenish-blue border and a light blue gradient\nshade.\n\n### CheckBox\n\n> A check box represents an independent or non-exclusive choice.\n>\n> \u2014 Microsoft Windows User Experience p. 167\n\nCheckboxes are represented with a sunken panel, populated with a \"check\" icon\nwhen selected, next to a label indicating the choice.\n\nNote: You must include a corresponding label after your checkbox, using the\n<label> element with a for attribute pointed at the id of your input. This\nensures the checkbox is easy to use with assistive technologies, on top of\nensuring a good user experience for all (navigating with the tab key, being\nable to click the entire label to select the box).\n\nCheckboxes can be selected and disabled with the standard checked and disabled\nattributes.\n\nWhen grouping inputs, wrap each input in a container with the field-row class.\nThis ensures a consistent spacing between inputs.\n\n### Collapse\n\n> Users can show or hide additional information including data, options, or\n> commands.\n>\n> \u2014 Microsoft Windows User Experience - Progressive Disclosure\n\nA collapsible section can be created using the elements details and summary.\n\nAdd an open attribute to expand the content by default.\n\n### Combobox\n\n> A combo box is a combination of a standard list box or a drop-down list and\n> an editable text box, thus allowing users to enter a value that isn't in the\n> list.\n>\n> \u2014 Microsoft Windows User Experience - Combo Boxes\n\nTo render a combo box, use a text input, a button, a parent ul, and children\nli together, wrapped inside a container element with the combobox class. For\naccessibility, follow the minimum requirements as below:\n\n  * Add a role=\"combobox\" attribute to the text input\n  * Add a role=\"listbox\" attribute to the ul\n  * Add a role=\"option\" attribute to each li\n  * Specify the relationship between the list box and the text box by combining the id of the listbox with the aria-owns attribute on the text input\n\n  * Facebook\n  * Amazon\n  * Apple\n  * Netflix\n  * Google\n\nFor more options of the list box, see the ListBox section.\n\n### Dropdown\n\n> A drop-down list box allows the selection of only a single item from a list.\n> In its closed state, the control displays the current value for the control.\n> The user opens the list to change the value.\n>\n> \u2014 Microsoft Windows User Experience p. 175\n\nDropdowns can be rendered by using the select and option elements.\n\nBy default, the first option will be selected. You can change this by giving\none of your option elements the selected attribute.\n\n### GroupBox\n\n> A group box is a special control you can use to organize a set of controls.\n> A group box is a rectangular frame with an optional label that surrounds a\n> set of controls.\n>\n> \u2014 Microsoft Windows User Experience p. 189\n\nA group box can be used by wrapping your elements with the fieldset tag. It\ncontains a sunken outer border and a raised inner border, resembling an\nengraved box around your controls.\n\nYou can provide your group with a label by placing a legend element within the\nfieldset.\n\n### ListBox\n\n> With a list box, users can select from a set of values presented in a list\n> that is always visible.\n>\n> \u2014 Microsoft Windows User Experience - List Boxes\n\nThere are 2 ways you can render a list box. The simple one is using the select\nelement with a multiple attribute specified.\n\nThe complex one is using a combination of the ul/li elements with the role\nattributes.\n\n  * Facebook\n  * Amazon\n  * Apple\n  * Netflix\n  * Google\n\nThe latter offers more flexibility over using a mere select element. Choose\nthe one that is more appropriate depending on your context or use case.\n\nTo add a drop shadow to the list box, use the has-shadow class. To add a\nhovering style on the list box items (using role attribute only), use the has-\nhover class.\n\n  * Facebook\n  * Amazon\n  * Apple\n  * Netflix\n  * Google\n\n### Navigation\n\nThe following components compose a complete navigation menu, also known as\nNavbar.\n\n#### Menu\n\n> Menus are hierarchical lists of commands or options available to users in\n> the current context.\n>\n> \u2014 Microsoft Windows User Experience - Menus\n\nA menu can be rendered using a composition of a parent ul and child items li,\nrole=\"menu\" and role=\"menuitem\" attributes must be specified on the ul and li\nrespectively.\n\nIf a menu item has a submenu, add an aria-haspopup=\"true\" attribute to it to\nrender a caret indicator.\n\nTo make the menu focusable, specify the tabindex attributes on the items.\nAlternatively, you can use an a to achieve the same.\n\n  * View\n  * Sort by\n\n    * Name\n    * Size\n    * Item type\n    * Date modified\n  * Refresh\n  * Paste\n  * Paste shortcut\n  * Screen resolution\n  * Gadgets\n  * Personalize\n\nBy default, the submenu is only shown when the linked item is focused/clicked.\nTo add the hovering/mouse-over trigger, you can add a can-hover class to the\nroot container.\n\nUse a has-divider class to make a horizontal line after the menu item. Disable\na menu item by placing an aria-disabled attribute on it.\n\nYou may associate a menu item with an icon by using the img element. (Icons\nprovided by Icons8)\n\n  * View\n  * Sort by\n\n    * Name\n    * Size\n    * Item type\n    * Date modified\n  * Refresh\n  * Paste\n  * Paste shortcut\n  * Screen resolution\n  * Gadgets\n  * Personalize\n\nTo render menu items that are options with bullets and checkmarks, use the\ncorresponding input type (radio or checkbox).\n\n#### MenuBar\n\n> A menu bar is a list of labeled menu categories typically located near the\n> top of a window.\n>\n> \u2014 Microsoft Windows User Experience - Menus\n\nA menu bar can be created in a similar manner to the menu, however, use a\nrole=\"menubar\" attribute in place of role=\"menu\".\n\n  * File\n  * Edit\n  * View\n  * Help\n\nCombining it with the Menu component, we will have a complete menu bar with\nthe associated menu dropdowns.\n\nTo accommodate an extra piece of info for a menu item (like a shortcut\nmnemonic) on the right side, nest it with an span element.\n\n  * File\n\n    * Open Ctrl+O\n    * Save Ctrl+S\n    * Save As... Ctrl+Shift+S\n    * Exit\n  * Edit\n\n    * Undo\n    * Copy\n    * Cut\n    * Paste\n    * Delete\n    * Find...\n    * Replace...\n    * Go to...\n  * View\n\n    * Zoom\n\n    * Status Bar\n  * Help\n\n    * View Help\n    * About\n\n### OptionButton\n\n> An option button, also referred to as a radio button, represents a single\n> choice within a limited set of mutually exclusive choices. That is, the user\n> can choose only one set of options.\n>\n> \u2014 Microsoft Windows User Experience p. 164\n\nOption buttons can be used via the radio type on an input element.\n\nOption buttons can be grouped by specifying a shared name attribute on each\ninput. Just as before: when grouping inputs, wrap each input in a container\nwith the field-row class to ensure a consistent spacing between inputs.\n\nOption buttons can also be checked and disabled with their corresponding HTML\nattributes.\n\n### ProgressBar\n\n> A common control that displays the progress of a particular operation as a\n> graphical bar.\n>\n> \u2014 Microsoft Windows User Experience Glossary\n\nProgress bars can be created with a div using role=\"progressbar\", and another\nnested div is required to make the inner bar.\n\nSpecify the width of the inner bar to indicate the progress.\n\nFor accessibility, you might want to specify the respective aria-* attributes.\nRefer to MDN for more information.\n\nTo indicate the progress bar in paused state, add a paused class.\n\nTo indicate the progress bar in error state, add an error class.\n\nTo animate the progress bar, add an animate class.\n\nTo create an indeterminate progress bar, add a marquee class and remove the\nnested div.\n\n### Scrollbar\n\n> A control that allows users to scroll the content of a window, either\n> vertically or horizontally.\n>\n> \u2014 Microsoft Windows User Experience Glossary\n\nTo override the browser scrollbar's system styling for a particular section,\nadd a has-scrollbar class to the container element.\n\nNote that this only works with WebKit-based browsers.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. In nibh massa,\nviverra non velit vitae, scelerisque venenatis risus. Sed posuere risus\ntellus, sit amet vehicula nunc venenatis ut. Nunc convallis augue eget odio\nimperdiet, eu consequat massa fringilla consectetur eleifend. Curabitur in\negestas justo, vel fermentum ante. Lorem ipsum dolor sit amet, consectetur\nelit. Cras ullamcorper non nibh et placerat. Nullam ornare lectus eget\nconsequat dignissim. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\nIn nibh massa, viverra non velit vitae, scelerisque venenatis risus. Sed\nposuere risus tellus, sit amet vehicula nunc venenatis ut. Nunc convallis\naugue eget odio imperdiet, eu consequat massa fringilla consectetur eleifend.\nCurabitur in egestas justo, vel fermentum ante. Lorem ipsum dolor sit amet,\nconsectetur elit. Cras ullamcorper non nibh et placerat. Nullam ornare lectus\neget consequat dignissim.\n\n### SearchBox\n\n> With a Search box, users can quickly locate specific objects or text within\n> a large set of data by filtering or highlighting matches.\n>\n> \u2014 Microsoft Windows User Experience - Search Boxes\n\nThere are 2 variants of the search box available.\n\nAn instant search, where the results are displayed immediately as the user\ntypes, can be rendered just by specifying a type=\"search\" attribute on an\ninput element:\n\nA regular search, where a search is performed when the user clicks the search\nbutton, requires a search input and a button wrapped inside a container a\ncontainer element with the class searchbox.\n\n### Slider\n\n> A slider, sometimes called a trackbar control, consists of a bar that\n> defines the extent or range of the adjustment and an indicator that shows\n> the current value for the control...\n>\n> \u2014 Microsoft Windows User Experience p. 146\n\nSliders can rendered by specifying a range type on an input element.\n\nYou can make use of the has-box-indicator class replace the default indicator\nwith a box indicator, furthermore the slider can be wrapped with a div using\nis-vertical to display the input vertically.\n\nNote: To change the length of a vertical slider, the input width and div\nheight.\n\n### Spinner\n\n> A spinner or loader, also referred as ProgressRing, is a type of progress\n> control to indicate that an operation is underway and its completion time is\n> unknown.\n\nTo render a spinner element, use either a spinner or a loader class. To\nanimate the spinner, add an animate class.\n\nFor accessibility, we use an aria-label attribute with a desired text to\ninform assistive technologies about the presence of the spinner.\n\n### Tabs\n\n> Tabs provide a way to present related information on separate labeled pages.\n>\n> \u2014 Microsoft Windows User Experience - Tabs\n\n### Creating tabs\n\nTo create a tab, use a menu element with role=\"tablist\". Then for the tab\ntitles, use a button with role=\"tab\", and set the aria-controls attribute to\nthe corresponding id of the element with role=\"tabpanel\".\n\nRead more at MDN Web docs - ARIA: tab role\n\n### More...\n\nThis tab contains a GroupBox\n\n### Disabling tabs\n\nSimply add a disabled attribute on the tab.\n\n### Justified tabs\n\nAdd the justified class to the tablist menu to make the tabs, well, justified.\n\n### Disabled Tab\n\nThis tab is disabled, so you should not be able to read this.\n\nA simplified template is as below:\n\nTab A is activeTab B is activeTab C is activeTab D is inactive\n\n### TextBox\n\n> A text box (also referred to as an edit control) is a rectangular control\n> where the user enters or edits text. It can be defined to support a single\n> line or multiple lines of text.\n>\n> \u2014 Microsoft Windows User Experience p. 181\n\nText boxes can rendered by specifying a text type on an input element. As with\ncheckboxes and radio buttons, you should provide a corresponding label with a\nproperly set for attribute, and wrap both in a container with the field-row\nclass.\n\nAdditionally, you can make use of the field-row-stacked class to position your\nlabel above the input instead of beside it.\n\nTo support multiple lines in the user's input, use the textarea element\ninstead.\n\n### TreeView\n\n> A tree view control is a special list box control that displays a set of\n> objects as an indented outline based on their logical hierarchical\n> relationship.\n>\n> \u2014 Microsoft Windows User Experience p. 178\n\nTo render a tree view, use an ul element with the tree-view class. The\nchildren of this list (li elements), can contain whatever you'd like.\n\n  * We can put\n  * \u2728 Whatever \u2728\n  * We want in here\n\nTo make this a tree, we can nest further ul elements (no class needed on\nthese). This will provide them with indentation to illustrate the hierarchical\nrelations of the tree.\n\nTo create collapsible sections, wrap child lists inside details elements.\n\n  * Table of Contents\n  * What is web development?\n  * CSS\n\n    * Selectors\n    * Specificity\n    * Properties\n  * HTML\n  * Special Thanks\n\nThe has-connector class may be used to render a dotted border to illustrate\nthe structure more clearly, and the has-collapse-button class to change the\nexpand/collapse carets to buttons.\n\n### Window\n\nThe following components illustrate how to build complete windows using 7.css.\n\n#### Title Bar\n\n> At the top edge of the window, inside its border, is the title bar (also\n> reffered to as the caption or caption bar), which extends across the width\n> of the window. The title bar identifies the contents of the window.\n>\n> \u2014 Microsoft Windows User Experience p. 118\n\n> Include command buttons associated with the common commands of the primary\n> window in the title bar. These buttons act as shortcuts to specific window\n> commands.\n>\n> \u2014 Microsoft Windows User Experience p. 122\n\nYou can build a complete title bar by making use of three classes, title-bar,\ntitle-bar-text, and title-bar-controls.\n\nA Title Bar\n\nWe make use of aria-label to render the Close button, to let assistive\ntechnologies know the intent of this button. You may also use \"Minimize\" and\n\"Maximize\" like so:\n\nA Title Bar\n\nA maximized Title Bar\n\nAlternatively, you can use the is-close, is-minimize, is-maximize, is-restore\nclasses to target the respective controls for your styling preference.\n\nTo give our title bar a home, we wrap it in a window container. This provides\na drop shadow to it. We can freely resize the window by specifying a width in\nthe container style.\n\nA complete window\n\nPlace an active class either on the window container or the title bar itself\nto enable the active styles for the controls.\n\nA complete window\n\n#### Window body\n\n> Every window has a boundary that defines its shape.\n>\n> \u2014 Microsoft Windows User Experience p. 118\n\nTo draw the contents of the window, we use the window-body class under the\ntitle bar. You may use the has-space class to add some padding to the window\nbody.\n\nA window with contents\n\nThere's so much room for activities!\n\nAnother window with contents\n\nSet your listening preferences\n\nYou create the content for each tab by using an article tag.\n\n#### Status Bar\n\n> A status bar is a special area within a window, typically the bottom, that\n> displays information about the current state of what is being viewed in the\n> window or any other contextual information, such as keyboard state.\n>\n> \u2014 Microsoft Windows User Experience p. 146\n\nYou can render a status bar with the status-bar class, and status-bar-field\nfor every child text element.\n\nA Window With A Status Bar\n\nThere are just so many possibilities:\n\n  * A Task Manager\n  * A Notepad\n  * Or even a File Explorer!\n\nPress F1 for help\n\nSlide 1\n\nCPU Usage: 14%\n\n#### Glass frame & Color\n\n> The glass window frames are a striking new aspect of the Microsoft Windows\n> aesthetic, aiming to be both attractive and lightweight. These translucent\n> frames give windows an open, less intrusive appearance, helping users focus\n> on content and functionality rather than the interface surrounding it.\n>\n> \u2014 Microsoft Windows User Experience - Glass window frames\n\nYou can produce this \"striking aspect\" of the window with a glass class. The\nwindow frame then becomes translucent, the background is blurred behind the\nwindow.\n\nA glass window frame\n\nThe background behind is blurred.\n\nIf you want to override the default color of the window, you can specify the\nbackground-color attribute in the before pseudo element and the title-bar\nunder the same parent class as window.\n\nA violet window frame\n\nYou can change the window color just as simple.\n\nA glass violet window frame\n\nAnd even the glass window frame as well.\n\n#### Dialog Box\n\n> A dialog box is a secondary window that allows users to perform a command,\n> asks users a question, or provides users with information or progress\n> feedback.\n>\n> \u2014 Microsoft Windows User Experience - Dialog Boxes\n\nWithout JavaScript, a dialog box can be triggered by utilizing the URL\nfragment of an a element (denoted by the # sign), targeting a corresponding\ndialog box element with the matching id.\n\nFor accessibility, define the role=\"dialog\" attribute on the element.\nAdditionally, label the dialog using the aria-labelledby attribute, with the\nvalue pointing to the id of the title bar's text element.\n\nOpen Dialog\n\nProblem Diagnostics\n\n## Identifying your problem...\n\n## Issues, Contributing, etc.\n\n7.css is MIT licensed. Refer to the GitHub issues page to report any issue in\nthe code.\n\nStarted as a clone of XP.css, 7.css is a fun project I worked on in my free\ntime to enhance my tech skills.\n\nConsider starring this project if it is useful to you in some way or if you\nalso share the love for Windows 7 with me ;)\n\n", "frontpage": true}
