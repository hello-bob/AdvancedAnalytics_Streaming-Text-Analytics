{"aid": "40051350", "title": "Show HN: Schemax \u2013 Maximise your Kafka schema compatibility", "url": "https://github.com/steffen-karlsson/schema-compatibility-ui", "domain": "github.com/steffen-karlsson", "votes": 1, "user": "hr-swk", "posted_at": "2024-04-16 13:00:51", "comments": 0, "source_title": "GitHub - steffen-karlsson/schema-compatibility-ui: Open-Source Web UI for Schema Registry to validate compatibility", "source_text": "GitHub - steffen-karlsson/schema-compatibility-ui: Open-Source Web UI for\nSchema Registry to validate compatibility\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nsteffen-karlsson / schema-compatibility-ui Public\n\n  * Notifications\n  * Fork 0\n  * Star 5\n\nOpen-Source Web UI for Schema Registry to validate compatibility\n\n### License\n\nApache-2.0 license\n\n5 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# steffen-karlsson/schema-compatibility-ui\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nsteffen-karlssonBetter error handling on wrong avro schema (#1)af3366e \u00b7\n\n## History\n\n51 Commits  \n  \n### .mvn/wrapper\n\n|\n\n### .mvn/wrapper\n\n| Adding mvn wrapper  \n  \n### api\n\n|\n\n### api\n\n| Better error handling on wrong avro schema (#1)  \n  \n### app\n\n|\n\n### app\n\n| Added styling  \n  \n### .editorconfig\n\n|\n\n### .editorconfig\n\n| Initial project  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| First working version  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Initial commit  \n  \n### Makefile\n\n|\n\n### Makefile\n\n| Adding make files and updating readme  \n  \n### README.md\n\n|\n\n### README.md\n\n| Adding support section to readme  \n  \n### example.png\n\n|\n\n### example.png\n\n| Adding example image to readme  \n  \n### mvnw\n\n|\n\n### mvnw\n\n| Initial project  \n  \n### mvnw.cmd\n\n|\n\n### mvnw.cmd\n\n| Initial project  \n  \n### pom.xml\n\n|\n\n### pom.xml\n\n| Rewritten to factory pattern also supporting protobuf and json and us...  \n  \n## Repository files navigation\n\nVersatile, fast and lightweight web UI for validating schema compatibility\nlevels in Confluent Schema Registry.\n\n## Description\n\nThis application serves as a versatile web user interface. It is designed to\nvalidate schema compatibility levels, primarily focusing on the Confluent\nSchema Registry.\n\nThe application is characterized by its speed, ensuring quick responses and\nefficient operations. This makes it an ideal tool for developers and teams\nworking in fast-paced environments.\n\nDespite its comprehensive functionality, the application remains lightweight.\nIt does not consume excessive system resources, ensuring that it can run\nsmoothly even on systems with limited capabilities.\n\nIn addition to the Confluent Schema Registry, the application is also\ncompatible with other schema registries. This broad compatibility makes it a\nflexible tool that can be integrated into a variety of development workflows.\n\n### Support\n\nSchema Types:\n\n  * Avro\n  * Protobuf\n  * JSON\n\nCompatibility Levels:\n\nCompatibility Level| Changes allowed| Check| Upgrade first  \n---|---|---|---  \nBACKWARD| \\- Delete fields - Add optional fields| Last version| Consumers  \nFORWARD| \\- Add fields - Delete optional fields-| Last version| Producers  \nFULL| \\- Add optional fields - Delete optional fields| Last version| Any order  \nNONE| \\- All changes are accepted| Disabled| Depends  \n  \n### Example\n\n## Build\n\nTo build the full application including autogenerated code from OpenAPI, run\nthe following command in the root of the repository. This will also execute\ntests.\n\n    \n    \n    make build\n\nThe build command will generate a fat jar with backend and front-end included\nin one, which can be run using Java.\n\n    \n    \n    java -jar api/target/schemax-<version>.jar\n\nIt is also possible to run it without executing tests:\n\n    \n    \n    make build-no-test\n\n## Docker\n\nTo build the Docker image, run the following command in the root of the\nrepository.\n\n    \n    \n    make build-docker\n\n## About\n\nOpen-Source Web UI for Schema Registry to validate compatibility\n\n### Resources\n\nReadme\n\n### License\n\nApache-2.0 license\n\nActivity\n\n### Stars\n\n5 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * TypeScript 59.8%\n  * Java 35.1%\n  * Makefile 2.6%\n  * HTML 1.7%\n  * Other 0.8%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
