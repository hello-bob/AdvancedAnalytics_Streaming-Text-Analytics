{"aid": "40167002", "title": "Popover API Lands in Baseline", "url": "https://web.dev/blog/popover-api", "domain": "web.dev", "votes": 1, "user": "feross", "posted_at": "2024-04-26 08:17:29", "comments": 0, "source_title": "Popover API lands in Baseline | Blog | web.dev", "source_text": "Popover API lands in Baseline | Blog | web.dev\n\nweb.dev uses cookies from Google to deliver and enhance the quality of its\nservices and to analyze traffic. Learn more.\n\n  * English\n  * Deutsch\n  * Espa\u00f1ol \u2013 Am\u00e9rica Latina\n  * Fran\u00e7ais\n  * Indonesia\n  * Italiano\n  * Polski\n  * Portugu\u00eas \u2013 Brasil\n  * Ti\u1ebfng Vi\u1ec7t\n  * T\u00fcrk\u00e7e\n  * \u0420\u0443\u0441\u0441\u043a\u0438\u0439\n  * \u05e2\u05d1\u05e8\u05d9\u05ea\n  * \u0627\u0644\u0639\u0631\u0628\u064a\u0651\u0629\n  * \u0641\u0627\u0631\u0633\u06cc\n  * \u0939\u093f\u0902\u0926\u0940\n  * \u09ac\u09be\u0982\u09b2\u09be\n  * \u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\n  * \u4e2d\u6587 \u2013 \u7b80\u4f53\n  * \u4e2d\u6587 \u2013 \u7e41\u9ad4\n  * \u65e5\u672c\u8a9e\n  * \ud55c\uad6d\uc5b4\n\nSign in\n\n  * On this page\n  * Creating popovers\n  * Popover versus modal dialog\n\n    * The modal <dialog> element\n    * The [popover] attribute\n  * Conclusion and further reading\n\n  * Home\n  * Blog\n\nWas this helpful?\n\n# Popover API lands in Baseline\n\nbookmark_borderbookmark Stay organized with collections Save and categorize\ncontent based on your preferences.\n\n  * On this page\n  * Creating popovers\n  * Popover versus modal dialog\n\n    * The modal <dialog> element\n    * The [popover] attribute\n  * Conclusion and further reading\n\nUna Kravets\n\nCelebration: This web feature is now available in all three major browser\nengines, and becomes Baseline Newly Available as of April 16, 2024.\n\nIt's happening! One of the features I am most hyped about has just landed\nacross all modern browsers and is officially a part of Baseline 2024. And this\nfeature is the Popover API. Popover provides so many awesome primitives and\ndeveloper affordances for building layered interfaces like tooltips, menus,\nteaching UIs, and more.\n\nBrowser Support\n\n  * 114\n  * 114\n  * 125\n  * 17\n\nSource\n\nSome quick highlights of popover capabilities include:\n\n  * Promotion to the top layer. Popovers will appear in the top layer above the rest of the page, so you don't have to play around with z-index.\n  * Light-dismiss functionality. Clicking outside of the popover area will close the popover and return focus.\n  * Default focus management. Opening the popover makes the next tab stop inside the popover.\n  * Accessible keyboard bindings. Hitting the esc key or double toggling will close the popover and return focus.\n  * Accessible component bindings. Connecting a popover element to a popover trigger semantically.\n\n## Creating popovers\n\nCreating popovers is quite straightforward. To use default values, all you\nneed is a button to trigger the popover, and an element to trigger.\n\n  * First, set a popoverattribute on the element which is going to be the popover.\n  * Then, add an unique id on the popover element.\n  * Finally, to connect the button to the popover, set the button's popovertargetto the value of the popover element's id.\n\nThis is shown in the following code:\n\n    \n    \n    <button popovertarget=\"my-popover\">Open Popover</button>\n    \n    <div id=\"my-popover\" popover> <p><p>I am a popover with more information. Hit <kbd>esc</kbd> or click away to close me.<p></p> </div>\n\nA basic example of using the popover attribute.\n\nTo have more granular control over the popover, you can explicitly set types\nof popovers. For example, using a bare popover attribute with no value is the\nsame as popover=\"auto\". The auto value enables light-dismiss behavior and\nautomatically closes other popovers. Use popover=\"manual\" and you will need to\nadd a close button, manual popovers don't close other popovers or allow users\nto dismiss the popover by clicking away in the UI. You create a manual popover\nusing the following:\n\n    \n    \n    <button popovertarget=\"my-popover\" class=\"trigger-btn\"> Open Popover </button>\n    \n    <div id=\"my-popover\" popover=manual> <p>I am a popover with more information. Hit the close button or toggle to close me.<p> <button class=\"close-btn\" popovertarget=\"my-popover\" popovertargetaction=\"hide\"> <span aria-hidden=\"true\">\u274c</span> <span class=\"sr-only\">Close</span> </button> </div>\n\nAn example of a manual popover.Note: There is a third type of popover,\npopover=\"hint\" which has been discussed in standards bodies but not yet\nimplemented. This value would enable the opening of popovers that don't close\nother popovers, while still allowing light-dismiss. popover=\"hint\" is useful\nfor tooltips and other ephemeral layers interfaces.\n\n## Popover versus modal dialog\n\nYou may be wondering if you need popover when dialog exists, and the answer\nis: you might not.\n\nIt's important to note that the popover attribute does not provide semantics\non its own. And while you can now build modal dialog-like experiences using\npopover, there are a few key differences between the two:\n\n### The modal <dialog> element\n\n  * Opened with dialog.showModal().\n  * Closed with dialog.close().\n  * Makes the rest of the page inert.\n  * Does not support light-dismiss behavior.\n  * You can style the open state with the [open] attribute.\n  * Semantically represents an interactive component that blocks interaction with the rest of the page.\n\n### The [popover] attribute\n\n  * Can be opened with a declarative invoked (popovertarget).\n  * Closed with popovertarget (auto popover) or popovertargetaction=hide (manual popover).\n  * Does not make the rest of the page inert.\n  * Supports light-dismiss behavior.\n  * You can style the open state with the ::popover-open pseudo-class.\n  * No inherent semantics.\n\nNote: Dialog was shipped well before popover and many lessons were learned.\nOne of which is how nice it is to declaratively open and close popovers with\nan invoker. To resolve this, the invoketarget property is being discussed and\nprototyped for a more declarative dialog toggle trigger, much like with\npopover.\n\n## Conclusion and further reading\n\nThere are many exciting features that popover brings to the platform. To learn\nmore about this API, including more on the accessibility of the feature, and\ndocumentation regarding the feature set, here is some recommended reading for\nfurther information:\n\n  * Semantics and the popover attribute: what to use when? by Hidde de Vries\n  * On popover accessibility: what the browser does and doesn't do by Hidde de Vries\n  * MDN documentation on popover\n\nWas this helpful?\n\nExcept as otherwise noted, the content of this page is licensed under the\nCreative Commons Attribution 4.0 License, and code samples are licensed under\nthe Apache 2.0 License. For details, see the Google Developers Site Policies.\nJava is a registered trademark of Oracle and/or its affiliates.\n\nLast updated 2024-04-25 UTC.\n\n", "frontpage": false}
