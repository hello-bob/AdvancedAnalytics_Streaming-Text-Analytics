{"aid": "40211388", "title": "React.dev?Uwu=True", "url": "https://react.dev/?uwu=true", "domain": "react.dev", "votes": 1, "user": "bundie", "posted_at": "2024-04-30 14:38:44", "comments": 0, "source_title": "React", "source_text": "React\n\nStream React Conf on May 15-16.\n\nLearn more.\n\n# React\n\nThe library for web and native user interfaces\n\nLearn ReactAPI Reference\n\n## Create user interfaces from components\n\nReact lets you build user interfaces out of individual pieces called\ncomponents. Create your own React components like Thumbnail, LikeButton, and\nVideo. Then combine them into entire screens, pages, and apps.\n\n### Video.js\n\n    \n    \n    function Video({ video }) {\n    \n    return (\n    \n    <div>\n    \n    <Thumbnail video={video} />\n    \n    <a href={video.url}>\n    \n    <h3>{video.title}</h3>\n    \n    <p>{video.description}</p>\n    \n    </a>\n    \n    <LikeButton video={video} />\n    \n    </div>\n    \n    );\n    \n    }\n\n### My video\n\nVideo description\n\nWhether you work on your own or with thousands of other developers, using\nReact feels the same. It is designed to let you seamlessly combine components\nwritten by independent people, teams, and organizations.\n\n## Write components with code and markup\n\nReact components are JavaScript functions. Want to show some content\nconditionally? Use an if statement. Displaying a list? Try array map().\nLearning React is learning programming.\n\n### VideoList.js\n\n    \n    \n    function VideoList({ videos, emptyHeading }) {\n    \n    const count = videos.length;\n    \n    let heading = emptyHeading;\n    \n    if (count > 0) {\n    \n    const noun = count > 1 ? 'Videos' : 'Video';\n    \n    heading = count + ' ' + noun;\n    \n    }\n    \n    return (\n    \n    <section>\n    \n    <h2>{heading}</h2>\n    \n    {videos.map(video =>\n    \n    <Video key={video.id} video={video} />\n    \n    )}\n    \n    </section>\n    \n    );\n    \n    }\n\n## 3 Videos\n\n### First video\n\nVideo description\n\n### Second video\n\nVideo description\n\n### Third video\n\nVideo description\n\nThis markup syntax is called JSX. It is a JavaScript syntax extension\npopularized by React. Putting JSX markup close to related rendering logic\nmakes React components easy to create, maintain, and delete.\n\n## Add interactivity wherever you need it\n\nReact components receive data and return what should appear on the screen. You\ncan pass them new data in response to an interaction, like when the user types\ninto an input. React will then update the screen to match the new data.\n\n### SearchableVideoList.js\n\n    \n    \n    import { useState } from 'react';\n    \n    function SearchableVideoList({ videos }) {\n    \n    const [searchText, setSearchText] = useState('');\n    \n    const foundVideos = filterVideos(videos, searchText);\n    \n    return (\n    \n    <>\n    \n    <SearchInput\n    \n    value={searchText}\n    \n    onChange={newText => setSearchText(newText)} />\n    \n    <VideoList\n    \n    videos={foundVideos}\n    \n    emptyHeading={`No matches for \u201c${searchText}\u201d`} />\n    \n    </>\n    \n    );\n    \n    }\n\nexample.com/videos.html\n\n# React Videos\n\nA brief history of React\n\n## 5 Videos\n\n### React: The Documentary\n\nThe origin story of React\n\n### Rethinking Best Practices\n\nPete Hunt (2013)\n\n### Introducing React Native\n\nTom Occhino (2015)\n\n### Introducing React Hooks\n\nSophie Alpert and Dan Abramov (2018)\n\n### Introducing Server Components\n\nDan Abramov and Lauren Tan (2020)\n\nYou don\u2019t have to build your whole page in React. Add React to your existing\nHTML page, and render interactive React components anywhere on it.\n\nAdd React to your page\n\n## Go full-stack with a framework\n\nReact is a library. It lets you put components together, but it doesn\u2019t\nprescribe how to do routing and data fetching. To build an entire app with\nReact, we recommend a full-stack React framework like Next.js or Remix.\n\n### confs/[slug].js\n\n    \n    \n    import { db } from './database.js';\n    \n    import { Suspense } from 'react';\n    \n    async function ConferencePage({ slug }) {\n    \n    const conf = await db.Confs.find({ slug });\n    \n    return (\n    \n    <ConferenceLayout conf={conf}>\n    \n    <Suspense fallback={<TalksLoading />}>\n    \n    <Talks confId={conf.id} />\n    \n    </Suspense>\n    \n    </ConferenceLayout>\n    \n    );\n    \n    }\n    \n    async function Talks({ confId }) {\n    \n    const talks = await db.Talks.findAll({ confId });\n    \n    const videos = talks.map(talk => talk.video);\n    \n    return <SearchableVideoList videos={videos} />;\n    \n    }\n\nexample.com/confs/react-conf-2021\n\n## 19 Videos\n\nReact Conf\n\n### React 18 Keynote\n\nThe React Team\n\nReact Conf\n\n### React 18 for App Developers\n\nShruti Kapoor\n\nReact Conf\n\n### Streaming Server Rendering with Suspense\n\nShaundai Person\n\nReact Conf\n\n### The First React Working Group\n\nAakansha Doshi\n\nReact Conf\n\n### React Developer Tooling\n\nBrian Vaughn\n\nReact Conf\n\n### React without memo\n\nXuan Huang (\u9ec4\u7384)\n\nReact Conf\n\n### React Docs Keynote\n\nRachel Nabors\n\nReact Conf\n\n### Things I Learnt from the New React Docs\n\nDebbie O'Brien\n\nReact Conf\n\n### Learning in the Browser\n\nSarah Rainsberger\n\nReact Conf\n\n### The ROI of Designing with React\n\nLinton Ye\n\nReact Conf\n\n### Interactive Playgrounds with React\n\nDelba de Oliveira\n\nReact Conf\n\n### Re-introducing Relay\n\nRobert Balicki\n\nReact Conf\n\n### React Native Desktop\n\nEric Rozell and Steven Moyes\n\nReact Conf\n\n### On-device Machine Learning for React Native\n\nRoman R\u00e4dle\n\nReact Conf\n\n### React 18 for External Store Libraries\n\nDaishi Kato\n\nReact Conf\n\n### Building Accessible Components with React 18\n\nDiego Haz\n\nReact Conf\n\n### Accessible Japanese Form Components with React\n\nTafu Nakazaki\n\nReact Conf\n\n### UI Tools for Artists\n\nLyle Troxell\n\nReact Conf\n\n### Hydrogen + React 18\n\nHelen Lin\n\nReact is also an architecture. Frameworks that implement it let you fetch data\nin asynchronous components that run on the server or even during the build.\nRead data from a file or a database, and pass it down to your interactive\ncomponents.\n\nGet started with a framework\n\n## Use the best from every platform\n\nPeople love web and native apps for different reasons. React lets you build\nboth web apps and native apps using the same skills. It leans upon each\nplatform\u2019s unique strengths to let your interfaces feel just right on every\nplatform.\n\nexample.com\n\n#### Stay true to the web\n\nPeople expect web app pages to load fast. On the server, React lets you start\nstreaming HTML while you\u2019re still fetching data, progressively filling in the\nremaining content before any JavaScript code loads. On the client, React can\nuse standard web APIs to keep your UI responsive even in the middle of\nrendering.\n\n1:53 PM\n\n#### Go truly native\n\nPeople expect native apps to look and feel like their platform. React Native\nand Expo let you build apps in React for Android, iOS, and more. They look and\nfeel native because their UIs are truly native. It\u2019s not a web view\u2014your React\ncomponents render real Android and iOS views provided by the platform.\n\nWith React, you can be a web and a native developer. Your team can ship to\nmany platforms without sacrificing the user experience. Your organization can\nbridge the platform silos, and form teams that own entire features end-to-end.\n\nBuild for native platforms\n\n## Upgrade when the future is ready\n\nReact approaches changes with care. Every React commit is tested on business-\ncritical surfaces with over a billion users. Over 100,000 React components at\nMeta help validate every migration strategy.\n\nThe React team is always researching how to improve React. Some research takes\nyears to pay off. React has a high bar for taking a research idea into\nproduction. Only proven approaches become a part of React.\n\nRead more React news\n\nLatest React News\n\n## React 19 Beta\n\nApril 25, 2024\n\n## React 19 Beta Upgrade Guide\n\nApril 25, 2024\n\n## React Labs: February 2024\n\nFebruary 15, 2024\n\n## React Canaries: Incremental Feature Rollout\n\nMay 3, 2023\n\nRead more React news\n\n## Join a community of millions\n\nYou\u2019re not alone. Two million developers from all over the world visit the\nReact docs every month. React is something that people and teams can agree on.\n\nThis is why React is more than a library, an architecture, or even an\necosystem. React is a community. It\u2019s a place where you can ask for help, find\nopportunities, and meet new friends. You will meet both developers and\ndesigners, beginners and experts, researchers and artists, teachers and\nstudents. Our backgrounds may be very different, but React lets us all create\nuser interfaces together.\n\n## Welcome to the React community\n\nGet Started\n\n\u00a92024\n\nLogo by@sawaratsuki1004\n\nLearn React\n\nQuick Start\n\nInstallation\n\nDescribing the UI\n\nAdding Interactivity\n\nManaging State\n\nEscape Hatches\n\nAPI Reference\n\nReact APIs\n\nReact DOM APIs\n\nCommunity\n\nCode of Conduct\n\nMeet the Team\n\nDocs Contributors\n\nAcknowledgements\n\nMore\n\nBlog\n\nReact Native\n\nPrivacy\n\nTerms\n\n", "frontpage": false}
