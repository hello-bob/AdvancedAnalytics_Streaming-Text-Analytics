{"aid": "40143523", "title": "What's new in security for Ubuntu 24.04 LTS", "url": "https://ubuntu.com/blog/whats-new-in-security-for-ubuntu-24-04-lts", "domain": "ubuntu.com", "votes": 1, "user": "zscoops", "posted_at": "2024-04-24 12:23:50", "comments": 0, "source_title": "What\u2019s new in security for Ubuntu 24.04 LTS? | Ubuntu", "source_text": "What\u2019s new in security for Ubuntu 24.04 LTS? | Ubuntu\n\nSkip to main content\n\nCanonical Ubuntu\n\n  * Menu\n\n  * Canonical\n\nGet to know Canonical, the company behind the products.\n\n  * Ubuntu\n\nThe world's favourite Linux OS for servers, desktops and IoT.\n\n  * Ubuntu Pro\n\nOne subscription for security maintenance, support, FIPS and other compliance\ncertifications.\n\n  * Snapcraft\n\nThe app store for Linux: secure packages and ultra-reliable updates.\n\n  * LXD\n\nA pure-container hypervisor. Run system containers and VMs at scale.\n\n  * MAAS\n\nBuild a bare metal cloud with super fast server provisioning.\n\n  * OpenStack\n\nUpgrades, maintenance, support, and fully managed options for long-term, low-\ncost infra.\n\n  * Ceph\n\nSoftware-defined storage that lowers your total cost of ownership.\n\n  * Kubernetes\n\nApp portability for K8s on VMware, Amazon, Azure, Google, Oracle, IBM and bare\nmetal.\n\n  * Juju\n\nDeploy, integrate and manage applications at any scale, on any infrastructure.\n\nAlso from Canonical\n\n* Anbox Cloud\n\nStream Android applications to any device.\n\n* Launchpad\n\nThe software collaboration platform behind Ubuntu.\n\n* Ubuntu on public clouds\n\nOptimised Ubuntu for public clouds.\n\n* Multipass\n\nSpin up Ubuntu VMs on Windows, Mac and Linux.\n\n* Cloud-init\n\nControl and customise your cloud instances.\n\n* Landscape\n\nSystems management and security patching for Ubuntu.\n\n* Netplan\n\nSimplify and standardise complex network configuration.\n\n* Charmed Kubeflow\n\nAI and MLOps at any scale, on any cloud.\n\n* MicroCloud\n\nDeploy a fully functional cloud in minutes.\n\nAbout\n\n  * Canonical\n  * Press centre\n  * Careers\n  * Blog\n  * Documentation\n  * Resources\n  * Partners\n  * Contact us\n\nBlog\n\nYour submission was sent successfully! Close\n\nYou have successfully unsubscribed! Close\n\nThank you for signing up for our newsletter! In these regular emails you will\nfind the latest updates about Ubuntu and upcoming events where you can meet\nour team.Close\n\n# What\u2019s new in security for Ubuntu 24.04 LTS?\n\n### Alex Murray\n\non 24 April 2024\n\n  * Share on:\n  * Facebook\n  * Twitter\n  * LinkedIn\n\nTags: Security , Ubuntu , Ubuntu 24.04 LTS\n\nWe\u2019re excited about the upcoming Ubuntu 24.04 LTS release, Noble Numbat. Like\nall Ubuntu releases, Ubuntu 24.04 LTS comes with 5 years of free security\nmaintenance for the main repository. Support can be expanded for an extra 5\nyears, and to include the universe repository, via Ubuntu Pro. Organisations\nlooking to keep their systems secure without needing a major upgrade can also\nget the Legacy Support add-on to expand that support beyond the 10 years.\nCombined with the enhanced security coverage provided by Ubuntu Pro and Legacy\nSupport, Ubuntu 24.04 LTS provides a secure foundation on which to develop and\ndeploy your applications and services in an increasingly risky environment. In\nthis blog post, we will look at some of the enhancements and security features\nincluded in Noble Numbat, building on those available in Ubuntu 22.04 LTS.\n\n## Unprivileged user namespace restrictions\n\nUnprivileged user namespaces are a widely used feature of the Linux kernel,\nproviding additional security isolation for applications, and are often\nemployed as part of a sandbox environment. They allow an application to gain\nadditional permissions within a constrained environment, so that a more\ntrusted part of an application can then use these additional permissions to\ncreate a more constrained sandbox environment within which less trusted parts\ncan then be executed. A common use case is the sandboxing employed by modern\nweb browsers, where the (trusted) application itself sets up the sandbox where\nit executes the untrusted web content. However, by providing these additional\npermissions, unprivileged user namespaces also expose additional attack\nsurfaces within the Linux kernel. There has been a long history of (ab)use of\nunprivileged user namespaces to exploit various kernel vulnerabilities. The\nmost recent interim release of Ubuntu, 23.10, introduced the ability to\nrestrict the use of unprivileged user namespaces to only those applications\nwhich legitimately require such access. In Ubuntu 24.04 LTS, this feature has\nboth been improved to cover additional applications both within Ubuntu and\nfrom third parties, and to allow better default semantics of the feature. For\nUbuntu 24.04 LTS, the use of unprivileged user namespaces is then allowed for\nall applications but access to any additional permissions within the namespace\nare denied. This allows more applications to more better gracefully handle\nthis default restriction whilst still protecting against the abuse of user\nnamespaces to gain access to additional attack surfaces within the Linux\nkernel.\n\n## Binary hardening\n\nModern toolchains and compilers have gained many enhancements to be able to\ncreate binaries that include various defensive mechanisms. These include the\nability to detect and avoid various possible buffer overflow conditions as\nwell as the ability to take advantage of modern processor features like branch\nprotection for additional defence against code reuse attacks.\n\nThe GNU C library, used as the cornerstone of many applications on Ubuntu,\nprovides runtime detection of, and protection against, certain types of buffer\noverflow cases, as well as certain dangerous string handling operations via\nthe use of the _FORTIFY_SOURCE macro. FORTIFY_SOURCE can be specified at\nvarious levels providing increasing security features, ranging from 0 to 3.\nModern Ubuntu releases have all used FORTIFY_SOURCE=2 which provided a solid\nfoundation by including checks on string handling functions like sprintf(),\nstrcpy() and others to detect possible buffer overflows, as well as format-\nstring vulnerabilities via the %n format specifier in various cases. Ubuntu\n24.04 LTS enables additional security features by increasing this to\nFORTIFY_SOURCE=3. Level three greatly enhances the detection of possible\ndangerous use of a number of other common memory management functions\nincluding memmove(), memcpy(), snprintf(), vsnprintf(), strtok() and\nstrncat(). This feature is enabled by default in the gcc compiler within\nUbuntu 24.04 LTS, so that all packages in the Ubuntu archive which are\ncompiled with gcc, or any applications compiled with gcc on Ubuntu 24.04 LTS\nalso receive this additional protection.\n\nThe Armv8-M hardware architecture (provided by the \u201carm64\u201d software\narchitecture on Ubuntu) provides hardware-enforced pointer authentication and\nbranch target identification. Pointer authentication provides the ability to\ndetect malicious stack buffer modifications which aim to redirect pointers\nstored on the stack to attacker controlled locations, whilst branch target\nidentification is used to track certain indirect branch instructions and the\npossible locations which they can target. By tracking such valid locations,\nthe processor can detect possible malicious jump-oriented programming attacks\nwhich aim to use existing indirect branches to jump to other gadgets within\nthe code. The gcc compiler supports these features via the -mbranch-protection\noption. In Ubuntu 24.04 LTS, the dpkg package now enables -mbranch-\nprotection=standard, so that all packages within the Ubuntu archive enable\nsupport for these hardware features where available.\n\n## AppArmor 4\n\nThe aforementioned unprivileged user namespace restrictions are all backed by\nthe AppArmor mandatory access control system. AppArmor allows a system\nadministrator to implement the principle of least authority by defining which\nresources an application should be granted access to and denying all others.\nAppArmor consists of a userspace package, which is used to define the security\nprofiles for applications and the system, as well as the AppArmor Linux\nSecurity Module within the Linux kernel which provides enforcement of the\npolicies. Ubuntu 24.04 LTS includes the latest AppArmor 4.0 release, providing\nsupport for many new features, such as specifying allowed network addresses\nand ports within the security policy (rather than just high level protocols)\nor various conditionals to allow more complex policy to be expressed. An\nexciting new development provided by AppArmor 4 in Ubuntu 24.04 LTS is the\nability to defer access control decisions to a trusted userspace program. This\nallows for quite advanced decision making to be implemented, by taking into\naccount the greater context available within userspace or to even interact\nwith the user / system administrator in a real-time fashion. For example, the\nexperimental snapd prompting feature takes advantage of this work to allow\nusers to exercise direct control over which files a snap can access within\ntheir home directory. Finally, within the kernel, AppArmor has gained the\nability to mediate access to user namespaces as well as the io_uring\nsubsystem, both of which have historically provided additional kernel attack\nsurfaces to malicious applications.\n\n## Disabling of old TLS versions\n\nThe use of cryptography for private communications is the backbone of the\nmodern internet. The Transport Layer Security protocol has provided\nconfidentiality and integrity to internet communications since it was first\nstandardised in 1999 with TLS 1.0. This protocol has undergone various\nrevisions since that time to introduce additional security features and avoid\nvarious security issues inherent in the earlier versions of this standard.\nGiven the wide range of TLS versions and options supported by each, modern\ninternet systems will use a process of auto-negotiation to select an\nappropriate combination of protocol version and parameters when establishing a\nsecure communications link. In Ubuntu 24.04 LTS, TLS 1.0, 1.1 and DTLS 1.0 are\nall forcefully disabled (for any applications that use the underlying openssl\nor gnutls libraries) to ensure that users are not exposed to possible TLS\ndowngrade attacks which could expose their sensitive information.\n\n## Upstream Kernel Security Features\n\nLinux kernel v5.15 was used as the basis for the Linux kernel in the previous\nUbuntu 22.04 LTS release. This provided a number of kernel security features\nincluding core scheduling, kernel stack randomisation and unprivileged BPF\nrestrictions to name a few. Since that time, the upstream Linux kernel\ncommunity has been busy adding additional kernel security features. Ubuntu\n24.04 LTS includes the v6.8 Linux kernel which provides the following\nadditional security features:\n\n### Intel shadow stack support\n\nModern Intel CPUs support an additional hardware feature aimed at preventing\ncertain types of return-oriented programming (ROP) and other attacks that\ntarget the malicious corruption of the call stack. A shadow stack is a\nhardware enforced copy of the stack return address that cannot be directly\nmodified by the CPU. When the processor returns from a function call, the\nreturn address from the stack is compared against the value from the shadow\nstack \u2013 if the two differ, the process is terminated to prevent a possible ROP\nattack. Whilst compiler support for this feature has been enabled for\nuserspace packages since Ubuntu 19.10, it has not been able to be utilised\nuntil it was also supported by the kernel and the C library. Ubuntu 24.04 LTS\nincludes this additional support for shadow stacks to allow this feature to be\nenabled when desired by setting the GLIBC_TUNABLES=glibc.cpu.hwcaps=SHSTK\nenvironment variable.\n\n### Secure virtualisation with AMD SEV-SNP and Intel TDX\n\nConfidential computing represents a fundamental departure from the traditional\nthreat model, where vulnerabilities in the complex codebase of privileged\nsystem software like the operating system, hypervisor, and firmware pose\nongoing risks to the confidentiality and integrity of both code and data.\nLikewise, unauthorised access by a malicious cloud administrator could\njeopardise the security of your virtual machine (VM) and its environment.\nBuilding on the innovation of Trusted Execution Environments at the silicon\nlevel, Ubuntu Confidential VMs aim to restore your control over the security\nassurances of your VMs.\n\nFor the x86 architecture, both AMD and Intel processors provide hardware\nfeatures (named AMD SEV SNP and Intel TDX respectively) to support running\nvirtual machines with memory encryption and integrity protection. They ensure\nthat the data contained within the virtual machine is inaccessible to the\nhypervisor and hence the infrastructure operator. Support for using these\nfeatures as a guest virtual machine was introduced in the upstream Linux\nkernel version 5.19.\n\nThanks to Ubuntu Confidential VMs, a user can make use of compute resources\nprovided by a third party whilst maintaining the integrity and confidentiality\nof their data through the use of memory encryption and other features. On the\npublic cloud, Ubuntu offers the widest portfolio of confidential VMs. These\nbuild on the innovation of both the hardware features, with offerings\navailable across Microsoft Azure, Google Cloud and Amazon AWS.\n\nFor enterprise customers seeking to harness confidential computing within\ntheir private data centres, a fully enabled software stack is essential. This\nstack encompasses both the guest side (kernel and OVMF) and the host side\n(kernel-KVM, QEMU, and Libvirt). Currently, the host-side patches are not yet\nupstream. To address this, Canonical and Intel have forged a strategic\ncollaboration to empower Ubuntu customers with an Intel-optimised TDX Ubuntu\nbuild. This offering includes all necessary guest and host patches, even those\nnot yet merged upstream, starting with Ubuntu 23.10 and extending into 24.04\nand beyond. The complete TDX software stack is accessible through this github\nrepository.\n\nThis collaborative effort enables our customers to promptly leverage the\nsecurity assurances of Intel TDX. It also serves to narrow the gap between\nsilicon innovation and software readiness, a gap that grows as Intel continues\nto push the boundaries of hardware innovation with 5th Gen Intel Xeon scalable\nprocessors and beyond.\n\n### Strict compile-time bounds checking\n\nSimilar to hardening of binaries within the libraries and applications\ndistributed in Ubuntu, the Linux kernel itself gained enhanced support for\ndetecting possible buffer overflows at compile time via improved bounds\nchecking of the memcpy() family of functions. Within the kernel, the\nFORTIFY_SOURCE macro enables various checks in memory management functions\nlike memcpy() and memset() by checking that the size of the destination object\nis large enough to hold the specified amount of memory, and if not will abort\nthe compilation process. This helps to catch various trivial memory management\nissues, but previously was not able to properly handle more complex cases such\nas when an object was embedded within a larger object. This is quite a common\npattern within the kernel, and so the changes introduced in the upstream 5.18\nkernel version to enumerate and fix various such cases greatly improves this\nfeature. Now the compiler is able to detect and enforce stricter checks when\nperforming memory operations on sub-objects to ensure that other object\nmembers are not inadvertently overwritten, avoiding an entire class of\npossible buffer overflow vulnerabilities within the kernel.\n\n## Wrapping up\n\nOverall, the vast range of security improvements that have gone into Ubuntu\n24.04 LTS greatly improve on the strong foundation provided by previous Ubuntu\nreleases, making it the most secure release to date. Additional features\nwithin both the kernel, userspace and across the distribution as a whole\ncombine to address entire vulnerability classes and attack surfaces. With up\nto 12 years of support, Ubuntu 24.04 LTS provides the best and most secure\nfoundation to develop and deploy Linux services and applications. Expanded\nSecurity Maintenance, kernel livepatching and additional services are all\nprovided to Ubuntu Pro subscribers to enhance the security of their Ubuntu\ndeployments.\n\n### Talk to us today\n\nInterested in running Ubuntu in your organisation?\n\n##### Newsletter signup\n\n### Related posts\n\n#### DISA publishes STIG for Ubuntu 22.04 LTS\n\nIntroduction DISA, the Defense Information Systems Agency, has published their\nSecurity Technical Implementation Guide (STIG) for Ubuntu 22.04 LTS. The\nSTIG...\n\n#### Canonical presence at Qualcomm DX Summit @Hannover Messe\n\nAt the world\u2019s leading industrial trade fair, companies from the mechanical\nengineering, electrical engineering and digital industries as well as the\nenergy...\n\n#### Canonical Delivers Secure, Compliant Cloud Solutions for Google\nDistributed Cloud\n\nToday, Canonical is thrilled to announce our expanded collaboration with\nGoogle Cloud to provide Ubuntu images for Google Distributed Cloud. This\npartnership...\n\nBack to top\n\n\u00a9 2024 Canonical Ltd. Ubuntu and Canonical are registered trademarks of\nCanonical Ltd.\n\nGo to the top of the page\n\n", "frontpage": false}
