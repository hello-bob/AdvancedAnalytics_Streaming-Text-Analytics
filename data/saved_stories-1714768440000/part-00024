{"aid": "40246307", "title": "OpenBSD \u2013 OpenSMTPD table protocol changes, now with the backstory", "url": "https://www.undeadly.org/cgi?action=article;sid=20240503110540", "domain": "undeadly.org", "votes": 1, "user": "peter_hansteen", "posted_at": "2024-05-03 11:06:12", "comments": 0, "source_title": "OpenSMTPD table protocol changes, now with the backstory", "source_text": "OpenSMTPD table protocol changes, now with the backstory\n\nOpenBSD Journal\n\n# OpenSMTPD table protocol changes, now with the backstory\n\nContributed by Peter N. M. Hansteen on 2024-05-03 from the tables, we deliver\ndept.\n\nRegular readers will be aware that OpenBSD ships with its own mail server\nimplementation, OpenSMTPD in its base system.\n\nIn a recent message to the tech@ mailing list, Omar Polo (op@) asked for\ncomments or oks for a patches implementing a change of table protocols. A\nlittle later, Gilles Chehade (gilles@) posted the backstory to the\nmisc@opensmtpd.org mailing list with the backstory for this change.\n\nThe message follows in full below (apparently the otherwise fine marc.info\narchive site no longer archives the list):\n\n>\n>     Date: Fri, 03 May 2024 08:22:03 +0000 From: gilles@poolp.org To:\n> misc@opensmtpd.org Subject: smtpd: change the table protocol Hello, This is\n> a copy of a mail I sent to OpenBSD hackers a few days ago so you are aware\n> of work being done on OpenSMTPD by Omar Polo. ~~~ TL;DR: proposal to change\n> table backends wire protocol to one that's closer to filters, it has proven\n> to work for years now, comes with many benefits and it is a very trivial\n> change that we can pull in a handful of hours:\n> https://tmp.omarpolo.com/smtpd-tables.7.html\n\n>\n>     Longer mail with historical context. A long time ago, OpenSMTPD shipped\n> with two table backends for its table API: file and db. Then we started\n> seeing a need for ldap and SQLite, so we wrote backends for them and since\n> we had aldap.[ch] and SQLite in base this wasn't really a problem. Then we\n> started seeing a need for mySQL and postgreSQL which became problematic\n> because we didn't want OpenSMTPD to ship with backends that couldn't be\n> built in base out of the box, but also because if we had to fix a bug in\n> table_mysql, it meant we had to do an OpenSMTPD release to provide the fix\n> for portable users. To solve this, we introduced the \"procexec\" API, a mean\n> for OpenSMTPD to spawn tables in a separate process with socketpairs in\n> place to perform lookups and obtain results via imsg. This made it possible\n> to release table backends separately as standalone programs, without\n> limitations to their dependencies and without requiring releases to be\n> synchronised. Table backends were releases as part of OpenSMTPD-extras, and\n> we could do several releases of it in the timespan of a single OpenSMTPD\n> release. Later, we did the same for filters, it turned out to be much more\n> complex and we failed so hard our first attempts that we reverted and waited\n> two years to make a new proposal. That new proposal replaced imsg with an\n> stdio line-based protocol which was much simpler for us to implement in the\n> daemon and it had the benefit that users could easily interact with it to\n> handle use-cases we didn't care about using the languages they wanted. I\n> have seen some filters in awk, rust, C, golang, Perl, Python, ... users are\n> happy with the simple API and we didn't have to handle exotic use-cases in\n> the daemon, which is good. Recently there's been a few contributions to\n> table-ldap in OpenSMTPD-extras, the first one in years, and I think that the\n> fact table backends still use \"procexec\" is a reason why we can't rely on\n> the community to contribute: you can't just read a line, parse it and reply,\n> instead you need to know how imsg works, you need to understand non-blocking\n> async I/O and you can't start a table backend of your own in a preferred\n> language... so unless one of us does the work, it stales (I wrote table_ldap\n> ... I don't even use or care for ldap). A while back I told eric@ we could\n> switch tables to a filter-like protocol, he agreed, but we never got to do\n> it. Recently, as op@ began contributing more and more, I told him about that\n> idea again and my 3-steps plan to switch to it: 1- implement a table_stdio\n> backend which translates imsg protocol to stdio protocol 2- convert all\n> table backends to the new protocol 3- move the table_stdio code in smtpd so\n> we no longer need table_stdio These are all trivial changes and op@ actually\n> already implemented 1- and 2-, we'd like to start the work on 3- considering\n> that all of this project is easy: we're changing the wire protocol but the\n> table API remains 100% the same from OpenSMTPD and filters perspective. The\n> new table protocol is identical to the smtpd-filters(7) protocol (draft by\n> op@), it is readable in HTML at the following link and I've included the man\n> page at end of mail: https://tmp.omarpolo.com/smtpd-tables.7.html The\n> operations are exactly the same as with imsg, and since the imsg protocol\n> already made results available as serialised strings, we already parse them\n> from string to structs, and we'll re-use the same code. The change is mainly\n> in not encapsulating them in imsg packets. ~~~ Note that we're past this as\n> of today: 1- table_stdio was implemented as a PoC: -\n> https://github.com/OpenSMTPD/table-stdio 2- all table backends from\n> OpenSMTPD-extras were converted to the new interface: -\n> https://github.com/OpenSMTPD/table-socketmap -\n> https://github.com/OpenSMTPD/table-passwd -\n> https://github.com/OpenSMTPD/table-ldap -\n> https://github.com/OpenSMTPD/table-sqlite -\n> https://github.com/OpenSMTPD/table-redis -\n> https://github.com/OpenSMTPD/table-postgres -\n> https://github.com/OpenSMTPD/table-mysql 3- Omar has sent a mail to tech@\n> with the diff to integrate protocol in smtpd: -\n> https://marc.info/?l=openbsd-tech&m=171439783225288&w=2 There you go, now\n> you know !\n\nReply\n\n## Latest Articles\n\n  * Fri, May 03\n\n    * 11:05 OpenSMTPD table protocol changes, now with the backstory (0)\n  * Fri, Apr 26\n\n    * 08:33 Passphrase timeout for disk decryption at boot added (potential battery lifesaver) (5)\n  * Wed, Apr 24\n\n    * 04:35 Game of Trees 0.98 released (3)\n  * Tue, Apr 23\n\n    * 05:25 pfctl(8) and systat(8) to display fragment reassembly statistics (0)\n  * Thu, Apr 18\n\n    * 05:05 Coming soon to a -current system near you: parallel raw IP input (0)\n  * Wed, Apr 17\n\n    * 05:33 In -current, default write format for tar(1) changed to \"pax\" (17)\n  * Wed, Apr 10\n\n    * 18:50 OpenSMTPD 7.5.0p0 Released (2)\n  * Tue, Apr 09\n\n    * 04:49 20 years since \"and we're just starting\": undeadly.org turns 20 (2024-04-09) (13)\n  * Fri, Apr 05\n\n    * 06:16 OpenBSD 7.5 released (3)\n\n## Credits\n\nCopyright \u00a9 2004-2008 Daniel Hartmeier. All rights reserved. Articles and\ncomments are copyright their respective authors, submission implies license to\npublish on this web site. Contents of the archive prior to April 2nd 2004 as\nwell as images and HTML templates were copied from the fabulous original\ndeadly.org with Jose's and Jim's kind permission. This journal runs as CGI\nwith httpd(8) on OpenBSD, the source code is BSD licensed. undeadly\n\\Un*dead\"ly\\, a. Not subject to death; immortal. [Obs.]\n\n", "frontpage": false}
