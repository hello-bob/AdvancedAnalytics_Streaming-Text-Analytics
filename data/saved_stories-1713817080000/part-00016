{"aid": "40113950", "title": "The Jitter Bug Part 2", "url": "https://hackerfactor.com/blog/index.php?/archives/1029-The-Jitter-Bug-Part-2.html", "domain": "hackerfactor.com", "votes": 1, "user": "dabacaba", "posted_at": "2024-04-22 13:01:57", "comments": 0, "source_title": "The Jitter Bug Part 2 - The Hacker Factor Blog", "source_text": "The Jitter Bug Part 2 - The Hacker Factor Blog\n\nThe Hacker Factor Blog Running with scissors Home Blog Swag\n\n### About\n\nDr. Neal Krawetz writes The Hacker Factor Blog. Follow him on Mastodon.\n\n### Popular Posts\n\n\u2022 How Not to do Image Analysis Part I and Part II \u2022 Looks Like It \u2022 Body By\nVictoria \u2022 Direct Deposit, Direct Withdrawl \u2022 Point-of-Sale Vulnerabilities\n\n### Tools\n\n\u2022 FotoForensics: Test your own photos. \u2022 Hintfo: View metadata. \u2022 Gender\nGuesser: Use your words.\n\n### Links\n\nSecurity Internet Storm Center Krebs on Security Bruce Schneier Tao Security\n\nImages Photo Stealers Awkward Family Photos Unsplash\n\nDebunking News iMediaEthics Poynter\n\nDebunking Politics FactCheck PolitiFact\n\nDebunking Other Snopes Math with Bad Drawings\n\n### Calendar\n\n\u00ab| April '24| \u00bb  \n---|---|---  \nS| M| T| W| T| F| S  \n1| 2| 3| 4| 5| 6  \n7| 8| 9| 10| 11| 12| 13  \n14| 15| 16| 17| 18| 19| 20  \n21| 22| 23| 24| 25| 26| 27  \n28| 29| 30  \n  \n### Archives\n\n  * April 2024\n  * March 2024\n  * February 2024\n  * Recent...\n  * Older...\n\n### Feeds\n\n  * RSS 1.0 feed\n  * RSS 2.0 feed\n\n### Categories\n\n  * Conferences\n  * Copyright\n  * Financial\n  * Forensics\n  * Authentication\n  * FotoForensics\n  * Image Analysis\n  * IoT\n  * Mass Media\n  * Network\n  * Honeypot\n  * Tor\n  * Phones\n  * Politics\n  * Privacy\n  * Programming\n  * AI\n  * Security\n  * Terrorists\n  * Travel\n  * Unfiction\n  * [Other]\n\nAll categories\n\n# The Jitter Bug Part 2\n\n## Sunday, 21 April 2024\n\nLast February, I wrote about a really bad bug that was randomly crashing my\nCPUs. With a virtual machine (VM) environment, if one CPU crashes then the VM\ncan continue running while crippled. When the last CPU crashes, the VM is dead\nand needs to be restarted.\n\nThis had been going on for nearly a year. I ended up building a huge\nmonitoring infrastructure that could notify me when a problem developed. While\nit tried to catch the root cause, it only got close enough to narrow down the\ncause.\n\nAt the time, I had found one thing that could consistently trigger the\nproblem: fwupd, the firmware update daemon. I have no idea why the Ubuntu\ndevelopers think this needs to run multiple times per day, and I see no reason\nit should be running at all on a production server environment. (Production\nenvironments should never have updates applied on an arbitrary schedule. And\nthe same goes for 'snap', but that's a different story.)\n\nDisabling fwupd made the system significantly more stable. I went for nearly 3\nmonths without a crash. I thought the problem was solved, until the crashes\nreturned with a vengeance! I was suddenly seeing hard crashes every few days.\n\n### More Symptoms\n\nAfter removing fwupd, the crashes vanished. They were gone for months, but\nreappeared again on 2024-03-24. That's one day after I did a typical software\nupdate. On 2024-03-23, I used 'apt update ; apt upgrade' to apply the latest\npatches. None of these were kernel or driver patches. None of these should\nhave made the system unstable.\n\nHowever, now that the system was even less stable than before, I was able to\nwrite a simple stress-test script that could force a CPU crash. The script:\n\n>\n>     curl -s 'https://nordvpn.com/ovpn/' | html2text -nobs | grep '\\.nordvpn\\.com' | awk '{print $2}' | while read i ; do host \"$i\" done\n\nThis code does a few thousand hostname lookups. It comes from part of my \"IP\nreputation\" check. At FotoForensics, people who use NordVPN are over 80% more\nlikely to violate my terms of service; usually it's porn or ID cards. My\nsolution? Block all NordVPN exit points since it's a bad neighborhood.\n\nUnfortunately, NordVPN doesn't publish their list of node IP addresses. But,\nthey do publish their list by hostname! This script retrieves the list of\nhostnames and converts each one to an IP address. The script currently\ngenerates about 6,100 hostname lookups.\n\nWith the current instability on my servers, this script was causing a CPU\nfailure within the first 1,000 lookups. Every CPU would be hung before the\nscript finished.\n\n### Reporting the Bug\n\nXen is the hypervisor I use for managing the VMs. Since I was only seeing this\non my Xen servers, I reported it to the Xen security team. Along with the\nscript, I included a copy of the CPU failure from dmesg, and a description of\nmy environment (seen with Ubuntu 20.04, kernels 5.4.0-135-generic through\n5.4.0-174-generic and probably a lot more).\n\nIncredibly, I got back a response within 10 hours. One of the developers said\nthat it really sounds like a kernel paging bug that he had previously patched\nand submitted to the kernel developers!\n\nFirst: The paging bug. CPUs load memory to run on. What if two CPUs are using\nthe same memory page, and then one CPU finishes and unloads the page? The\nother CPU ends up trying to use unallocated memory, causing a CPU crash.\nSometimes the crash is recoverable, while other times it requires a reboot to\nfix. As the developer noted:\n\n> If I'm right the issue you are seeing is not really a Xen specific one, even\n> if it is easier to reproduce when running as a Xen PV guest. The issue\n> should be handled by the kernel security team or by the one of your\n> distribution.\n\nSecond: The patch. He had submitted the fix back in 2022 and it was in the\n5.10 kernel, so 5.10 or later should work. The problem is, I was using 5.4, so\nit didn't have the fix. He sent a request to the kernel team to backport the\nfix to 5.4. However, the backport hasn't happened yet. Given my urgency, I\ndecided to not wait around for the patch to propagate through the kernel team\nand then the Ubuntu team for a public release.\n\n### Patching Servers\n\nI have four separate hardware servers:\n\n  1. One is for critical production, like FotoForensics.\n  2. One is for non-critical production, like my mail server.\n  3. One is for pre-production testing. Nothing gets moved to production until it passes the pre-production testing.\n  4. And the last one is a hot-spare in case of a hardware failure.\n\nAll of them are configured the same way and experiencing the same random CPU\ncrashing.\n\nLast year, I tried updating the kernel on my pre-production server from 5.4 to\n5.10. The update was a disaster. While the basic kernel update worked, Xen\nrefused to start any VMs. I fought with it for half a day, then gave up. (If\nyou thought debugging a bad kernel upgrade was difficult, wait until you try\nto roll-back to a previous kernel. That ate up a few more hours.)\n\nNow that I believe that a fix exists in the 5.10 kernel (and later), I decided\nto revisit the kernel-upgrade issue. What I found:\n\n  * Updating from 5.4.x to 5.4.y, like 5.4.0-152 to 5.4.0-177, worked fine.\n  * Updating from 5.4.x to 5.10.y or 5.15.z claimed to succeed and dom0 (the Xen server) would boot properly, but the server could not spawn any VMs. The error messages from Xen were uninformative (to me).\n\nThat's when I looked a little closer at what I had installed. I did the\nupgrade using:\n\n>\n>     sudo apt update ; sudo apt upgrade sudo apt install linux-\n> image-5.15.0-103-generic\n\nThe first command updates all basic software on the system. The second command\nbrings in the new kernel and related dependencies. However, it turns out that\nit's missing one dependency: linux-modules-extra-5.15.0-103-generic. The\n\"extra\" modules are required for Xen to run properly.\n\nAs far as I can tell, if you have the extra modules installed then upgrading a\nminor version, such as from 5.4.x to 5.4.y, will also update the extra\nmodules. But if you jump major versions, such as from 5.4 to 5.10 or 5.15,\nthen it won't automatically bring in the latest extra modules. You need to\nspecify it yourself.\n\nI manually installed linux-modules-extra-5.15.0-103-generic and didn't even\nneed to reboot the server. Xen immediately started to work. And best of all,\nmy stress script doesn't cause any CPU crashes. This really looks like it\nfixed the problem!\n\n### New Update Path\n\nMy previous update procedure was to just install the necessary updates, apply\nany kernel patches, and perform some basic end-to-end testing to make sure\neverything worked. My new update procedure for the kernel has changed a little\nand has many more steps:\n\n  1. Identify the kernel that you want to use. Refer to https://endoflife.date/linux and find a kernel that is LTS (long term support) and currently supported. In this case, I was using 5.4 (support ends 31-Dec-2025) and I switched to 5.15 (support ends 31-Oct-2026).\n\nI want to emphasize that, even though 5.4 is supposed to still have long term\nsupport, it is missing this critical patch. If you are using the 5.4 kernel,\nthen update now to 5.10 or later!\n\n  2. Update the current system: sudo apt update ; sudo apt upgrade\n  3. Look for the latest kernel image. Keep in mind, these are sorted by strings and not version numbers, so \"-99\" is at the bottom of the listing, while \"-100\" is newer and in the middle of the listing: apt-cache search linux-image-5.15.0 | grep -v nvidia | grep generic | sort (I'm suing the generic kernel and not the nvidia version; select whatever is appropriate for your needs.)\n  4. Install all of the kernel parts. Don't assume dependencies. For example, if I decided on 5.15.0-103-generic, then I'd use: sudo apt install linux-headers-5.15.0-103-generic linux-image-5.15.0-103-generic linux-modules-5.15.0-103-generic linux-modules-extra-5.15.0-103-generic linux-tools-5.15.0-103-generic\n  5. Reboot and wait. My rack-mount servers are not known for their startup speed; they take about 5 minutes to reboot. Set a timer, walk away, and don't panic. (Even though it always takes 5 minutes, if you don't walk away, then that 5 minutes feels like 30 minutes.)\n  6. Double-check. After it boots, login and check the OS version: uname -r You should see \"5.15.0-103-generic\" (or whatever version you installed).\n  7. Check Xen. I have some VMs setup at auto-start (/etc/xen/auto/). They should startup within a minute of the OS being up and running. The \"xl list\" command should show them running. sudo xl list\n  8. DO NOT REMOVE THE OLD KERNEL YET! The domu VMs are still using it!\n  9. Now I can update each VM. On dom0 (the Xen server), edit the VM configuration file (/etc/xen/auto/*.cfg) and update the path to the kernel and ramdisk so that it matches the new kernel version.\n  10. Login to each VM and issue a shutdown (sudo shutdown -h now). Don't use 'reboot' because that will continue using the old kernel. You need to completely shutdown the entire VM before using the new kernel.\n  11. When it's shutdown ('xl list' shows it isn't running anymore), use dom0 to recreate the server: sudo xl create /etc/xen/auto/whaterver.cfg If the paths are correct, then it will startup with the latest kernel. (It usually takes my servers less than 20 seconds to start.)\n  12. After the VM is up, double check it. Login to the VM and run 'uname -r'. You should see the new kernel.\n  13. After every VM is updated, it is safe to remove the old kernel from dom0. (I usually keep 3-5 previous kernel versions on the system, just in case I ever need to panic-boot a previous kernel. In 20 years, I've only needed to do this once.)\n\nI know this is a lot of steps, but I couldn't find it documented anywhere. And\nsince it caused me problems for a year, I thought I should at least document\nit in my public technical notebook (i.e., my blog). I hope other people find\nthis useful.\n\nRead more about Programming | Comments (2) | Direct Link\n\nComments\n\n#1 Thomas on 2024-04-21 17:01 (Reply)\n\nHi Neal,\n\nFirst of all, thanks for writing this blog! I've been subscribed for a long\nwhile now and learned a lot of interesting things over the years.\n\nI'm not entirely sure if you are aware, but generally you would want to\ninstall the 'meta' package(s)^1 for the Linux kernel, instead of manually\nselecting the kernel version. These meta packages automatically track the\nlatest kernel version (for your current Ubuntu version), even over larger\nversion increments. When you update to a later Ubuntu release, these will\nautomatically keep your kernel up to date without going through all (or some\nof) these hoops.\n\n[1] https://packages.ubuntu.com/source/jammy/linux-meta\n\n#1.1 Dr. Neal Krawetz (Homepage) on 2024-04-21 17:31 (Reply)\n\nHi Thomas,\n\nYeah! I thought the meta packages would bring in everything, but they don't\nseem it do it when upgrading between major versions (5.4 to 5.10 or 5.15).\n\nIf the meta packages worked, then I wouldn't have had this problem.\n\nOr maybe it's because I'm using focal and not jammy? (I'm planning on trying\nto move to 24.04 when it comes out in another week.) I typically do every\nother LTS version since major updates are major efforts when upgrading\nproduction systems.\n\nAdd Comment\n\nCopyright 2002-2024 Hacker Factor. All rights reserved.\n\n", "frontpage": false}
