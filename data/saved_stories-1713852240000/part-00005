{"aid": "40118466", "title": "Tutorial: Extracting structured data from websites using Groq and Firecrawl", "url": "https://github.com/mendableai/firecrawl/blob/main/tutorials/data-extraction-using-llms.mdx", "domain": "github.com/mendableai", "votes": 1, "user": "nickca", "posted_at": "2024-04-22 19:47:11", "comments": 0, "source_title": "firecrawl/tutorials/data-extraction-using-llms.mdx at main \u00b7 mendableai/firecrawl", "source_text": "firecrawl/tutorials/data-extraction-using-llms.mdx at main \u00b7\nmendableai/firecrawl \u00b7 GitHub\n\n## Navigation Menu\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nmendableai / firecrawl Public\n\n  * Notifications\n  * Fork 120\n  * Star 1.4k\n\n/\n\n# data-extraction-using-llms.mdx\n\n## Latest commit\n\nnickscamara\n\nUpdate data-extraction-using-llms.mdx\n\nApr 22, 2024\n\nb33133f \u00b7 Apr 22, 2024Apr 22, 2024\n\n## History\n\nHistory\n\n92 lines (66 loc) \u00b7 3.36 KB\n\n/\n\n# data-extraction-using-llms.mdx\n\n## File metadata and controls\n\n92 lines (66 loc) \u00b7 3.36 KB\n\nRaw\n\n# Extract website data using LLMs\n\nLearn how to use Firecrawl and Groq to extract structured data from a web page\nin a few lines of code. With Groq fast inference speeds and firecrawl\nparellization, you can extract data from web pages super fast.\n\n## Setup\n\nInstall our python dependencies, including groq and firecrawl-py.\n\n    \n    \n    pip install groq firecrawl-py\n\n## Getting your Groq and Firecrawl API Keys\n\nTo use Groq and Firecrawl, you will need to get your API keys. You can get\nyour Groq API key from here and your Firecrawl API key from here.\n\n## Load website with Firecrawl\n\nTo be able to get all the data from a website page and make sure it is in the\ncleanest format, we will use FireCrawl. It handles by-passing JS-blocked\nwebsites, extracting the main content, and outputting in a LLM-readable format\nfor increased accuracy.\n\nHere is how we will scrape a website url using Firecrawl. We will also set a\npageOptions for only extracting the main content (onlyMainContent: True) of\nthe website page - excluding the navs, footers, etc.\n\n    \n    \n    from firecrawl import FirecrawlApp # Importing the FireCrawlLoader url = \"https://about.fb.com/news/2024/04/introducing-our-open-mixed-reality-ecosystem/\" firecrawl = FirecrawlApp( api_key=\"fc-YOUR_FIRECRAWL_API_KEY\", ) page_content = firecrawl.scrape_url(url=url, # Target URL to crawl params={ \"pageOptions\":{ \"onlyMainContent\": True # Ignore navs, footers, etc. } }) print(page_content)\n\nPerfect, now we have clean data from the website - ready to be fed to the LLM\nfor data extraction.\n\n## Extraction and Generation\n\nNow that we have the website data, let's use Groq to pull out the information\nwe need. We'll use Groq Llama 3 model in JSON mode and pick out certain fields\nfrom the page content.\n\nWe are using LLama 3 8b model for this example. Feel free to use bigger models\nfor improved results.\n\n    \n    \n    import json from groq import Groq client = Groq( api_key=\"gsk_YOUR_GROQ_API_KEY\", # Note: Replace 'API_KEY' with your actual Groq API key ) # Here we define the fields we want to extract from the page content extract = [\"summary\",\"date\",\"companies_building_with_quest\",\"title_of_the_article\",\"people_testimonials\"] completion = client.chat.completions.create( model=\"llama3-8b-8192\", messages=[ { \"role\": \"system\", \"content\": \"You are a legal advisor who extracts information from documents in JSON.\" }, { \"role\": \"user\", # Here we pass the page content and the fields we want to extract \"content\": f\"Extract the following information from the provided documentation:\\Page content:\\n\\n{page_content}\\n\\nInformation to extract: {extract}\" } ], temperature=0, max_tokens=1024, top_p=1, stream=False, stop=None, # We set the response format to JSON object response_format={\"type\": \"json_object\"} ) # Pretty print the JSON response dataExtracted = json.dumps(str(completion.choices[0].message.content), indent=4) print(dataExtracted)\n\n## And Voila!\n\nYou have now built a data extraction bot using Groq and Firecrawl. You can now\nuse this bot to extract structured data from any website.\n\nIf you have any questions or need help, feel free to reach out to us at\nFirecrawl.\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
