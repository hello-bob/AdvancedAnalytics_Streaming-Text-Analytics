{"aid": "40097264", "title": "Think Like a Git", "url": "https://think-like-a-git.net/", "domain": "think-like-a-git.net", "votes": 2, "user": "g4zj", "posted_at": "2024-04-20 13:34:10", "comments": 0, "source_title": "Think Like (a) Git", "source_text": "Home // Think Like (a) Git\n\n# Think Like (a) Git\n\n### A Guide for the Perplexed\n\n  * Home\n  * TL;DR\n  * Resources\n  * HALP!\n  * Changelog\n\n# Git shouldn't be so hard to learn.\n\nWhen you're just getting started, something as straightforward as a merge can\nbe terrifying. It can take a long time to really become comfortable using some\nof Git's more advanced features. (It took me a year or two.)\n\nOnce people achieve some level of Git enlightenment, they tend to make\nstatements of the form 'Git gets a lot easier once you realize X' -- but that\ndoesn't do much for people staring up Git's steep learning curve.\n\nMy goal with this site is to help you, Dear Reader, understand what those smug\nbastards are talking about.\n\nLet's get started, shall we?\n\n  * About This Site\n    * Who This Site Is For\n    * What This Site Will Try to Teach You\n    * Why This Site?\n    * About the Author\n  * Git Makes More Sense When You Understand X\n    * Example 1: Kent Beck\n    * Example 2: Git for Ages 4 and Up\n    * Example 3: Homeomorphic Endofunctors\n    * Example 4: LSD and Chainsaws\n    * The Internet Talks Back!\n  * Graph Theory\n    * Seven Bridges of K\u00f6nigsberg\n    * Places To Go, and Ways to Get There\n    * Nodes and Edges\n    * Attaching Labels to Nodes\n    * Attaching Labels to Edges\n    * Directed Versus Undirected Graphs\n    * Reachability\n  * Graphs and Git\n    * Visualizing Your Git Repository\n    * References\n    * The Reference Reference\n    * Making Sense of the Display\n    * Garbage Collection\n  * Experimenting With Git\n    * References Make Commits Reachable\n    * My Humble Beginnings\n    * Branches as Savepoints\n    * Use Your Targeting Computer, Luke\n  * Testing Out Merges\n    * The Scout Pattern\n    * The Savepoint Pattern\n    * Black Belt Merging\n  * Rebase From the Ground Up\n    * Cherry-Picking Explained\n    * Using 'git cherry-pick' to Simulate 'git rebase'\n    * A Helpful Mnemonic for 'git rebase' Arguments\n  * The End\n\nThink Like (a) Git copyright \u00a9 2011-2017 Sam Livingston-Gray is licensed under\na Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nOriginal template \u00a9 2011 \u00b7 Vectors Community Theme \u00b7 All Rights Reserved\n\n", "frontpage": false}
