{"aid": "40051826", "title": "An Untrustworthy TLS Certificate in Browsers (2022)", "url": "https://www.schneier.com/blog/archives/2022/11/an-untrustworthy-tls-certificate-in-browsers.html", "domain": "schneier.com", "votes": 4, "user": "thunderbong", "posted_at": "2024-04-16 13:49:37", "comments": 0, "source_title": "An Untrustworthy TLS Certificate in Browsers - Schneier on Security", "source_text": "An Untrustworthy TLS Certificate in Browsers - Schneier on Security\n\n# Schneier on Security\n\n### Search\n\nPowered by DuckDuckGo\n\n### Subscribe\n\nHomeBlog\n\n## An Untrustworthy TLS Certificate in Browsers\n\nThe major browsers natively trust a whole bunch of certificate authorities,\nand some of them are really sketchy:\n\n> Google\u2019s Chrome, Apple\u2019s Safari, nonprofit Firefox and others allow the\n> company, TrustCor Systems, to act as what\u2019s known as a root certificate\n> authority, a powerful spot in the internet\u2019s infrastructure that guarantees\n> websites are not fake, guiding users to them seamlessly.\n>\n> The company\u2019s Panamanian registration records show that it has the identical\n> slate of officers, agents and partners as a spyware maker identified this\n> year as an affiliate of Arizona-based Packet Forensics, which public\n> contracting records and company documents show has sold communication\n> interception services to U.S. government agencies for more than a decade.\n>\n> [...]\n>\n> In the earlier spyware matter, researchers Joel Reardon of the University of\n> Calgary and Serge Egelman of the University of California at Berkeley found\n> that a Panamanian company, Measurement Systems, had been paying developers\n> to include code in a variety of innocuous apps to record and transmit users\u2019\n> phone numbers, email addresses and exact locations. They estimated that\n> those apps were downloaded more than 60 million times, including 10 million\n> downloads of Muslim prayer apps.\n>\n> Measurement Systems\u2019 website was registered by Vostrom Holdings, according\n> to historic domain name records. Vostrom filed papers in 2007 to do business\n> as Packet Forensics, according to Virginia state records. Measurement\n> Systems was registered in Virginia by Saulino, according to another state\n> filing.\n\nMore details by Reardon.\n\nCory Doctorow does a great job explaining the context and the general security\nissues.\n\nEDITED TO ADD (11/10): Slashdot thread.\n\nTags: browsers, certificates, TLS, trust\n\nPosted on November 10, 2022 at 9:18 AM \u2022 29 Comments\n\n  * Two clicks for more privacy: The Facebook Like button will be enabled once you click here. No data is loaded from Facebook until you enable the button. Click the [i] button for more information.\n\nnot connected to Facebook\n\n  * Two clicks for more privacy: The Tweet button will be enabled once you click here. No data is loaded from Twitter until you enable the button. Click the [i] button for more information.\n\nnot connected to Twitter\n\n  * If you click to activate the share buttons, data will be loaded from a third party, allowing them to track your visit to schneier.com. For more details click the [i] button.\n\n### Comments\n\nClive Robinson \u2022 November 10, 2022 9:52 AM\n\n@ Bruce, ALL,\n\nRe : CA\u2019s\n\n> \u201cand some of them are really sketchy:\u201d\n\nOnly some?\n\nMost western nations like America, Australia... etc have legislation \u201cto\ncompell\u201d in one way or abother.\n\nOthers have placed staff in CA\u2019s or by financial manipulation (RSA) have\ngained sympathetic help.\n\nBut mostly, due to the cut-throat nature of the business most CA\u2019s have cut\nback not just security staff but security systems, thus they are in effectct a\n\u201cpush over\u201d even for \u201cscript-kiddy\u201d like attackers.\n\nThe real cause of the problem and why it\u2019s so easy to get security credentials\nthat are at best highly questionable is as I mention from time to time,\n\n\u201cHierarchical Trust Systems\u201d\n\nIn fact any and all Hierarchical poeer structures are by definition \u201ccorrupt\u201d.\nDue to the way power gets vested in the very top of the pyramid and every\nhuman has \u201ca price\u201d, every system \u201ca vulnerability\u201d...\n\nYet we do not do research to get rid of hierarchies,\n\n\u201cWhy?\u201d\n\nAre we complicitly corrupt?\n\nClive Robinson \u2022 November 10, 2022 10:42 AM\n\n@ Bruce, ALL,\n\nRe : The dificulties.\n\n> \u201cCory Doctorow does a great job explaining the context and the general\n> security issues.\u201d\n\nLong story short, all information security is built out of a single foundation\nsome call it a \u201cShared Secret\u201d others call it a \u201cRoot of Trust\u201d.\n\nThe primary requirment of a \u201cRoot of Trust\u201d is not actually that it remains a\n\u201csecret\u201d but that it remains \u201cunguessable\u201d thus \u201cunknown\u201d. To see the\ndistiction all Public Key Certificates contain as a minimum two \u201cRoots of\nTrust\u201d as Primary numbers that are multiplied together. It\u2019s the\n\u201cmultiplication in a prime field\u201d that \u2013hopefully\u2013 keeps either Prime from\nbecoming \u201cknown\u201d to an attacker.\n\nThus the question of how to find \u201cunguessable\u201d numbers falls to what we chose\nto call \u201cTrue Random Generators\u201d(TRNG / TRBG) of numbers or individual\nbits[1].\n\nYou could call TRNG\u2019s the fundemental problem of \u201cinformation security\u201d as\nthat is effectively what they are.\n\nThis has been discused a few times over the years on this blog, one such was\nnearly a decade ago when similar PKcert issues arose,\n\nhttps://www.schneier.com/blog/archives/2013/09/new_nsa_leak_sh.html/#comment-204119\n\nFrom the discussion you can find earlier refrences to earlier discussions on\nTRNGs on this blog as they go back a near decade before that.\n\nAs far as I\u2019m aware this was the first place on the Internet where open\nconversations on TRNGs their strengths, weaknesses and darn right failings\nhappened so freely with so much exchange of information.\n\n[1] To a computer all numbers are \u201cintegers\u201d that may or may not have some\nstructure. Such structure is generally described in \u201cAbstract Data Types\u201d, the\nbase of which is a \u201cbit\u201d that then get aggregated into larger sets known\ninformally as \u201cbag of bits\u201d.\n\nPeter Pearson \u2022 November 10, 2022 12:55 PM\n\nSo, can we finally get some attention on the need for users to vet their\nbrowsers\u2019 root certificate databases? I understand that Google and Mozilla\nneed to include the Elbonian Post Office\u2019s root certificate in order to\nprovide a smooth experience for their Elbonian users, but to the vast majority\nof users, that certificate is much more a threat than a blessing.\n\n\\- \u2022 November 10, 2022 2:57 PM\n\n@Peter Pearson:\n\n\u201cSo, can we finally get some attention on the need for users to vet their\nbrowsers\u2019 root certificate databases?\u201d\n\nMaybe we should first get the browser developers to make it easy for ordinary\nusers/people to do so, instead of needing a Doctorate in meta-gymnastics.\n\nYou would almost think that Apple\u2019s Safari, Firefox, and Google\u2019s Chrome\ndevelopers have very much gone out of there way to make what should be a\nsimple task difficult.\n\nMakes you wonder why they would do that, and who gains by it, certainly not\nthe ordinary users/people of their products.\n\nJonKnowsNothing \u2022 November 10, 2022 3:35 PM\n\n@All\n\nI have often wondered why my browser or system has to be pre-loaded with\nbloatware designed for countries I will never visit, the languages I don\u2019t\nread, write or understand or any of a number of \u201clocalization\u201d schemes that\nare useful only in the certain locales. Same with downloadable fonts and an\nentire list of stuff that is context specific.\n\nIt\u2019s appeared to be a \u201cdeliberately stupid\u201d scheme to expose a device to ez-pz\ncompromise. (1)\n\nIf you \u201cfollow the money\u201d version of dots there is only one path...\n\n===\n\n1) One excuse is that the devices are mfg in one place and distributed\nglobally. So they have to include every possible configuration but they leave\nall the leftovers afterward. Just in case you take a crash course in Etruscan\nor want to flip over to Babylonian.\n\nFazal Majid \u2022 November 10, 2022 7:32 PM\n\nAnd then you have companies like Comodo or Symantec that are Too Big To Fail\nand were kept on the list despite repeated violations.\n\nlurker \u2022 November 10, 2022 8:59 PM\n\n@- \u2022 , a Doctorate in meta-gymnastics.\n\nNope, just a bit of experience sifting through gizzard contents. So I find my\nbrowser\u2019s Cert. store: Q1, what\u2019s XYZ doing in there?; Q2, what will break if\nI remove it?\n\nTed \u2022 November 10, 2022 10:20 PM\n\nI\u2019d almost like to have a diagram showing all the connections in the article.\nThere\u2019s something intriguing under every rock and around every corner.\n\nIs Mozilla the only one with questions? Apple, any thoughts? I see Apple\nappears to have three TrustCor certs.\n\n\u201cAvailable trusted root certificates for Apple operating systems\u201d\nhttps://support.apple.com/en-us/HT209143\n\nSurely this won\u2019t be the last we hear about this... all of it... is so spooky.\n\n\u201cThe researchers speculated that the system is only used against high-value\ntargets within short windows of time.\u201d\n\nI may inadvertently start checking out website CA\u2019s just out of sheer\ncuriosity.\n\nGert-Jan \u2022 November 11, 2022 6:05 AM\n\nI\u2019m running a firewall on my computer. Whenever a \u201cnew\u201d application tries to\naccess the internet, the firewall prompts me to allow or deny this.\n\nIt would be a nice security improvement (setting) if web browsers did the same\nthing for root certificates.\n\nWhen I go to my banking website, which is normally vouched for by DigiCert\nGlobal Root CA, and all of a sudden my browser would ask me if it is okay to\ntrust GUANG DONG CERTIFICATE AUTHORITY CO.,LTD., I would think twice before I\nwould clik the Trust button...\n\nIn other words, why not make the list of root certificate providers and opt-in\nfeature?\n\nThis wouldn\u2019t solve all the problems, but it would reduce the attack surface\nsubstantially.\n\nRowena \u2022 November 11, 2022 9:26 AM\n\n@ lurker,\n\n> Nope, just a bit of experience sifting through gizzard contents. So I find\n> my browser\u2019s Cert. store: Q1, what\u2019s XYZ doing in there?; Q2, what will\n> break if I remove it?\n\nIn my experience, it\u2019s more like \u201chere\u2019s a list of 200 authorities, shown 6 at\na time, and how the hell do I remove them without like 600 separate clicks?\u201d\n\u201cAh, Firefox supports multi-select\u201d, one might think. Nope; if you select the\nwhole range, you\u2019ll have selected folders, and that disables the Edit Trust\nbutton. Those who meticulously de-select the folders may be surprised to find\nthat the Edit Trust button then opens about 150 separate dialogs, one after\nanother. It\u2019s moot anyway, \u2019cause one can\u2019t see the trust settings on the\nAuthorities list, and stuff will sneak into there at every (likely automatic)\nupdate.\n\nThe \u201creal\u201d way to disable the built-in authorities in Firefox or Chromium, for\nthose wondering, is to make sure the browser can\u2019t load the actual \u201cnssckbi\u201d\nlibrary. On an ELF platform, replace it with a real and empty ELF library;\nusing the \u201cbwrap\u201d tool, a.k.a. bubblewrap, is the easiest way, \u2019cause some\nbrowsers can get past $LD_PRELOAD unless you hook the dlopen() function. You\ncan then add your own authorities\u2014or individual certificate exceptions, which\nI recommend for sensitive contexts such as banking profiles. (You\u2019ll find, by\nthe way, that Chromium tries to validate something signed by \u201cGoogle Trust\nServices\u201d several times before you load any page, even if you think you\u2019ve\nblocked all Google telemetry etc. and configured URLAllowlist and URLBlocklist\nvery strictly.)\n\nlurker \u2022 November 11, 2022 2:32 PM\n\n@Rowena\n\nOf course finding the Cert.Store is only half the fun. Like the Cookie Store,\nand Img.Cache, these days browsers wrap it up in a SQLite.db to discourage\nsticky fingers. FF describes some as Builtin Object Token and some as Software\nSecurity Device??\n\nAnd why do some confidently set an expiry date 30 years out? while gmail are\ncurrently rolling over a new cert every 14 days?\n\nRowena \u2022 November 11, 2022 8:18 PM\n\nlurker, I\u2019m not too familiar with the format of the certificate store, but I\nknow \u201ccertutil\u201d is the command-line tool to work with it. It is... not user-\nfriendly, especially when trying to edit an existing database. But if you save\na bunch of TLS server certificates (in Firefox, click the lock, \u201cconnection\nsecure\u201d, \u201cmore information\u201d, then \u201cPEM (cert)\u201d beside \u201cDownload:\u201d), there\u2019s a\ntool on Github to generate a cert_override.txt that can be dropped into a\nFirefox profile directory. Or for Chromium, run for each certificate:\n\ncat foo.pem | openssl x509 -pubkey | openssl pkey -pubin -outform der | openssl dgst -sha256 -binary | base64\n\nThen prepend \u201c\u2013ignore-certificate-errors-spki-list=\u201d to each hash and add\nthese as command-line options.\n\nIt\u2019s easy enough to script other of these to auto-generate, on browser\nstartup, from a PEM directory stored in git. No SQL hackery required, though\nperhaps one could do similarly for a bunch of CA certificates and use certutil\nto re-create an NSS database from scratch each time (as I imply above, it\u2019s\neasier to delete the old one than try to fix it). Probably a libnssckbi.so\ncould be generated too; or to be a bit more clever, use a DLL constructor\nfunction to populate the list on dlopen. Debian-derived distributions keep a\nbunch of PEM certificates at /etc/ssl/certs that could be used for this\npurpose (and will ask before adding CAs there, if configured to do that);\nOpenSSL uses it but for some reason the packaged Firefox and Chromium don\u2019t.\n\nkeiner \u2022 November 12, 2022 2:51 AM\n\nI tried on several installs to remove the Trustcor Certs from Firefox\n(106.0.5) following these instructions:\n\nhttps://www.ssl.com/how-to/remove-root-certificate-firefox/\n\nAfter restarting Firfox the Cets are back again!\n\nThis is not sane...\n\nkeiner \u2022 November 12, 2022 3:04 AM\n\nPS: ...even deleting cert8.db and cert9.db from the FF folder won\u2019t help...\n\nRowena \u2022 November 12, 2022 10:12 AM\n\nkeiner, I don\u2019t know why those instructions didn\u2019t work. Based on the state of\nthe user interface, I suspect it\u2019s not a part of Firefox that gets a lot of\nattention from programmers and testers. Deleting the profile\u2019s security\ndatabase, though, is the exact wrong thing to do, because that\u2019s where the\noverrides of the default trust settings would be stored. Any certificate\nthat\u2019s built in (to nssckbi) and not seen in the profile will simply be re-\nimported and re-trusted at the next startup. Therefore, you also can\u2019t expect\na \u201cdeleted\u201d/distrusted certificate to disappear from your list. It\u2019ll be there\nforever, but when you click \u201cEdit Trust\u201d, the checkboxes should be clear,\nindicating it\u2019s not trusted for any purpose.\n\nThe certutil manual page says cert8.db, key3.db, and secmod.db are \u201clegacy\u201d\ndatabases, while cert9.db, key4.db, and pkcs11.txt are their SQLite\nreplacements (yes, it says that about the .txt file too). It\u2019s odd that you\nhave both present. You could try deleting the legacy set only.\n\nDenton Scratch \u2022 November 13, 2022 6:28 AM\n\nEvery country that has electronic ID also needs its own CA to sign that ID.\nAnd every country whose autocratic leader wants to appeal to nationalism has\nto have its own CA. And then there are all the countries that (for justifiable\nreasons) want to offer their citizens certs that aren\u2019t controlled overseas.\n\nFor example, I don\u2019t need any root certificates that are issued in Turkey; the\nTurkish government has form for mishandling certificates. I don\u2019t need EV\ncertificates at all; hardly anyone serves them any more.\n\nI wish these \u201ccertificate managers\u201d gave you a link to good information about\nwhy each certificate is included in the browser. If that information is\npresented only in Hungarian, for example, I can delete it. But even if you\ngoogle the CA, you have to drill down to learn that root certificate X is\nactually issued by some low-rent Japanese TV manufacturer, or whatever.\n\nMost people could manage most of the time with nothing but the LetsEncrypt\nroots. And I wish they\u2019d loosen-up on self-signed certificates; I never\nunderstood why the browsers got so arsey about them. They could just pop up a\nwarning; something like \u201cThis site is protected by a self-signed certificate;\nproceed at your own risk [more info]\u201d. And then TOFU.\n\nPerhaps national CAs could be part of a locale bundle; so if you install the\nFinnish locale, then and only then do you get the Finnish national CA\u2019s roots.\n\nAnd I\u2019d like to seee the browsers immediately evict from their root bundles\nany CA that has the slightest whiff of scandal hanging over it. They are\nterribly slow to evict even CAs that have been convicted of crimes, or have\nbeen hacked. Then a couple of years later, they reappear with no prominent\nannouncement. Of course, the browsers run certification programmes for CAs;\nyou have to pay to be certified, so there\u2019s a profit to be made there for the\nbrowser vendors (and the CAs who pay would also prefer that users not be able\nto easily edit their CA lists).\n\nA neat feature would be the ability to import a \u201csafe\u201d CA list, published by\ne.g. the EFF.\n\nIt\u2019s too bad that CACert got ejected; they had better processes than the\ncommercial vendors, but their privacy processes and their use of Web Of Trust\nwere incompatible with the browsers\u2019 CA certification rules (i.e. the rules\nwere wrong).\n\nClive Robinson \u2022 November 13, 2022 8:02 AM\n\n@ Denton Scratch, ALL,\n\nRe : Wrong rules who\u2019s at fault.\n\nYou note of CACert being ejected,\n\n> \u201cincompatible with the browsers\u2019 CA certification rules (i.e. the rules were\n> wrong).\u201d\n\nSo the questions that naturally arise are who set the rules? And why they set\nthem the way they did?\n\nIn the past I\u2019ve tried finding out those answers, and it appears to be that\n\u201cmoney talks\u201d is the primary answer, most notable of the visable suppliers of\nwhich being Google...\n\nSo as you also note,\n\n> \u201cthe CAs who pay would also prefer that users not be able to easily edit\n> their CA lists\u201d\n\nWould suggest one reason, why browser cert DB\u2019s are near impossible for\nordinary users to manage. But I suspect there are other more shall we say\n\u201ccompelling\u201d reasons at play such is the nature of politics.\n\nAs @- said above,\n\n> \u201cMaybe we should first get the browser developers to make it easy for\n> ordinary users/people to do so, instead of needing a Doctorate in meta-\n> gymnastics.\u201d\n\nWhich most of the following comments mainly suggest would be a very good\nidea...\n\nI do like your EFF idea, but I\u2019m not sure they would with the way politics and\nUS legislation works...\n\nlurker \u2022 November 13, 2022 2:43 PM\n\n@Denton Scratch, Keiner, All\n\nre not wanting any certs issued in Elbonia, or only needing locale certs for\nGodwana,\n\nUnfortunately it\u2019s called the World Wide Web. eg. I found a couple of odd\nChinese certs in my FireFox, and thought they might have been added during my\ntravels in those parts of the internet, but FF never asked me. It\u2019s been a few\nyears now since I last used Safari, but it always used to pop up a dialog for\nunknown certs (iirc):\n\n> Site XYZ wants to use an untrusted cerificate. [View Certificate] Do you\n> wish to use this certificate? [Deny] [Use this Once] [Use permanently]\n\nAnd when necessary it used the same dialog replacing \u201cuntrusted\u201d with \u201cself-\nsigned\u201d.\n\nFirefox is not my daily browser, but it does allow in Settings > Privacy &\nSecurity > Certificates for the user to not trust individual certificates.\n\nSo I did a slash and burn exercise: disconnect internet rm -R ~/.mozilla\n~/.cache/mozilla /tmp/mozilla_username sudo rm -R /etc/ca-\ncerttificates/mozilla verify Firefox has no stored certificates restart\n\nFirefox had repopulated itself with 135 items, Builtin Object Tokens and\nSoftware Security Devices. So it seems you can use forks and soap[1] to adjust\nyour personal trust in bad certificates, but you can never remove them.\n\n[1] more metagymnastics:\nhttps://en.wikipedia.org/wiki/The_Hunting_of_the_Snark\n\nRowena \u2022 November 13, 2022 3:16 PM\n\nI posted a reply to keiner yesterday, and it\u2019s still held up in moderation.\nWith regards to lurker\u2019s message also, \u201cdeleting\u201d a few certificate\nauthorities is really not what you want to do\u2014nor what the \u201cdelete\u201d button\nactually does. You actually want to store non-default trust settings for some\nCAs, or remove all the CAs.\n\nAny certificates not in your Firefox user profile, but found in nssckbi, will\nbe re-added to the profile at startup, with default trust settings. So you\neither knock out nssckbi entirely, or you deal with them being forever in your\nlist\u2014but not necessarily trusted. Click on whichever one you tried to delete\nand look at the checkboxes; if they\u2019re clear, the operation worked.\n\n(As noted previously, though, there\u2019s no way to see a cert\u2019s trust settings\nwithout clicking on it, and there are like a hundred and fifty to check.\nKnocking out nssckbi and starting from scratch may seem crazy, but it\u2019s really\nthe more reasonable and maintainable long-term option. Especially if you\u2019re\nalready maintaining a list in /etc/ssl and can hack up a simple shell script.)\n\nlurker \u2022 November 13, 2022 7:48 PM\n\nMozilla try to explain why they do what they do, https://www.mozilla.org/en-\nUS/about/governance/policies/security-group/certs/policy/\n\nAnother example of meta-gymnastics.\nhttps://forum.palemoon.org/viewtopic.php?f=3&t=26797&p=214696&hilit=ca+cert#p214696\n\nkeiner \u2022 November 14, 2022 3:26 AM\n\n@Rowena: Thanks for explaining, then the text in the Firefox Settings (\u201cDelete\nor distrust...\u201d) is at least ambigous (or may I say deceptive?).\n\nI removed trust from the three Trustcor certs for the start...\n\nGG \u2022 November 15, 2022 5:47 AM\n\nHas any abusive cert be signed by them be seen in the wild?\n\nIt may be that the country or company is untrustworthy, but unless they\nactually break the CAB Forum rules, they can be trusted, right?\n\nIsn\u2019t that the whole point of the CAB Forum?\n\nRowena \u2022 November 15, 2022 11:29 AM\n\n@ GG,\n\n> Has any abusive cert be signed by them be seen in the wild?\n\nNo, at least not by anyone who recognized it and was willing and able to\nreport it. If there were proof, it would certainly have been mentioned in the\nbug report and stories.\n\n> It may be that the country or company is untrustworthy, but unless they\n> actually break the CAB Forum rules, they can be trusted, right?\n\nAnyone \u201ccan be\u201d trusted, and this certificate is trusted, in the sense that\npeople rely on them for security. In principle, they can simultaneously be\nuntrustworthy.\n\n> Isn\u2019t that the whole point of the CAB Forum?\n\nYes, the CAB Forum does determine which certificates are \u201ctrusted\u201d in the\nsense of \u201ctrusted systems\u201c. That\u2019s mostly because, back in the 1990s, nobody\nhad a more practical idea. Given the semi-illegal status of strong\ncryptography, and the niche status of SSL, browser makers couldn\u2019t really\nforce all the domain registries and registrars to handle it, for example. And\nS/MIME email cryptography would have been even more impractical if we\u2019d had to\nconvince every email provider to support it.\n\nC S \u2022 November 16, 2022 5:44 PM\n\nBurn it all to the ground. The basic foundation of SSL is broken, and we need\nto reboot the trust model completely.\n\nThis would not mean dumping the technical parts of the certs thankfully, and a\nworkable solution could probably be tacked together with yet ANOTHER txt\nrecord in your (Hopefully now signed) DNS records.\n\nBut much like a Allowed senders list for your mail domain, you should be able\nto designate the CA\u2019s your organization actually uses, and automatically\nreject any CA issuing certs not on that list.\n\nOtherwise the idea of SSL is logically broken.\n\nThis isn\u2019t new, people here and other places have literally been talking about\nthis for decades. What hasn\u2019t happend is action. Instead of putting a stake in\nthe heart of the problem, Google and others started stapling individual certs\ninternally to their apps and libraries. It staved of some active attacks, but\nat the cost of leaving the entire internet permanently vulnerable to forged\ncerts from technically valid CA\u2019s.\n\nClearly, based on history, many of these CA\u2019s should trigger a warning prompt,\nbut it would be better if the code that runs the internet was smart enough to\nlet he Saudi or North Korean CA sign code or certs in it\u2019s scope of influence\nand warn about certs signed by their CA in other scopes. Also to autoreject\ncerts issued by a valid CA for scopes that are declaring a specific CA.\n\nWhile I hate to lean on DNS as the glue for this, people are familiar with it,\nand it will make it hard to permanently lock an organization to an old CA as\nlong as they still control their domain registration, which generally does not\nrequire them to have a working SSL/CA relationship to clean up.\n\nRowena \u2022 November 16, 2022 10:16 PM\n\n@ C S,\n\n> a workable solution could probably be tacked together with yet ANOTHER txt\n> record in your (Hopefully now signed) DNS records.\n>\n> But much like a Allowed senders list for your mail domain, you should be\n> able to designate the CA\u2019s your organization actually uses, and\n> automatically reject any CA issuing certs not on that list.\n\nYou\u2019re pretty much describing DNS Certification Authority Authorization, and\nthe CA/Browser Forum has mandated it for all certificate authorities (in most\ncircumstances) since 2017.\n\nI see no CA/B requirement for anyone to validate DNSSEC, though. A CA is\nallowed to treat a lookup failure as permission to issue if, among other\nthings, there\u2019s no \u201cDNSSEC validation chain to the ICANN root\u201d. But the RFC\nspecifically says DNSSEC is \u201cnot required\u201d, and in the absence of lookup\nfailure, the CA/B rules say nothing on the matter. This is clearly ridiculous.\nAny CA relying on unsigned DNS data should be required to validate and store\n(for future audits) the DNSSEC opt-out(s) covering that data. Any CA relying\non signed data should be required to validate and store the entire chain of\nsuch data.\n\nRowena \u2022 November 17, 2022 4:03 PM\n\nToday in sketchy certificate authority news: e-Tegra, a Turkish CA, was using\ndefault credentials for some publically-accessible administration pages.\nHelpfully, the site told visitors which name and password to use. A different\nsection of their website allowed anyone to create their own admin account\u2014with\nno verification, of course\u2014to look at things such as pictures of people\u2019s\npassports.\n\nThe linked page references the \u201cCA/B Forum Network Security Guidelines\u201d. In\nfact, CA/B claim these to be requirements (not guidelines), despite several\n\u201cSHOULD\u201d statements and other escape clauses. Oddly, since this account was\naccessible outside a \u201cSecure Zone\u201d, the rules only required an 8-character\npassword; whereas had access been properly restricted, it would\u2019ve required\n12. That seems backwards, although I think the accessibility outside the\nsecure zone was, itself, a breach.\n\nWhat\u2019s the CA/B policy for handling a failure to meet requirements,\nparticularly in such an egregious case? It seems like something that should be\non their site; and given that it\u2019s happened before, should be accompanied by\nsome kind of history of additions, breaches, and removals. Maybe it\u2019s buried\nin e-mail archives or meeting minutes, but I\u2019m not seeing anything obvious.\n\nlurker \u2022 November 17, 2022 5:56 PM\n\n@Rowena, \u201cWhat\u2019s the CA/B policy for handling a failure?\u201d\n\nDoes it matter what the policy is if no action is ever taken against\nviolators? To see any change on the ground will need a few hands chopped off\nat noon on Friday in the town square (or a Europeanised equivalent). Otherwise\nit\u2019s just more waffle, like the technical foundations of the internet built on\n\u201cRequests For Comments\u201d.\n\nRowena \u2022 November 17, 2022 6:24 PM\n\n@ lurker,\n\n> Does it matter what the policy is if no action is ever taken against\n> violators?\n\nWhen I wrote \u201chistory of ... breaches, and removals\u201d, that was my intended\nsubtext. I know stuff like this has happened before, and I recall some \u201ctoo\nbig to fail\u201d events that made the CA/B look quite toothless. But I was\nexpecting to find some pretense of consequences for failure; maybe some record\nof them having deleted a CA with no global significance, like Turktrust.\n\n(I don\u2019t recall exactly what happened with Turktrust, DuckDuckGo doesn\u2019t find\nmuch, and they\u2019ve got no Wikipedia page. I don\u2019t see it in Firefox\u2019s default\nlist; but with no search feature, only a tiny box in which to view the list,\nand an unclear sort order, I can\u2019t easily be sure they\u2019re not present.)\n\nChris \u2022 November 23, 2022 4:18 PM\n\nThe best improvement I can think of is to have a set of CAs for each country.\nSo a site with a url ending .uk could only be certified by a CA in the UK and\nsubject to UK law. A site ending .ca would need a Canadian CA, etc.\n\nSites ending .us, .gov or .mil would need a CA in the USA. But .com would have\nto be a \u201cfree fire zone\u201d for any CA. As would other top level domains not tied\nto any specific country.\n\nThis should make things safer for people who are not very security conscious\n(nearly everyone not a security expert).\n\nSubscribe to comments on this entry\n\n## Leave a comment Cancel reply\n\n\u2190 Defeating Phishing-Resistant Multifactor Authentication NSA Over-\nsurveillance \u2192\n\nSidebar photo of Bruce Schneier by Joe MacInnis.\n\nPowered by WordPress Hosted by Pressable\n\n### About Bruce Schneier\n\nI am a public-interest technologist, working at the intersection of security,\ntechnology, and people. I've been writing about security issues on my blog\nsince 2004, and in my monthly newsletter since 1998. I'm a fellow and lecturer\nat Harvard's Kennedy School, a board member of EFF, and the Chief of Security\nArchitecture at Inrupt, Inc. This personal website expresses the opinions of\nnone of those organizations.\n\n### Related Entries\n\n  * Class-Action Lawsuit against Google's Incognito Mode\n  * Licensing AI Engineers\n  * Chatbots and Human Conversation\n  * OpenAI Is Not Training on Your Dropbox Documents -- Today\n  * AI and Trust\n  * Messaging Service Wiretap Discovered through Expired TLS Cert\n\n### Featured Essays\n\n  * The Value of Encryption\n  * Data Is a Toxic Asset, So Why Not Throw It Out?\n  * How the NSA Threatens National Security\n  * Terrorists May Use Google Earth, But Fear Is No Reason to Ban It\n  * In Praise of Security Theater\n  * Refuse to be Terrorized\n  * The Eternal Value of Privacy\n  * Terrorists Don't Do Movie Plots\n\nMore Essays\n\n### Blog Archives\n\n  * Archive by Month\n  * 100 Latest Comments\n\n#### Blog Tags\n\n  * 3d printers\n  * 9/11\n  * A Hacker's Mind\n  * Aaron Swartz\n  * academic\n  * academic papers\n  * accountability\n  * ACLU\n  * activism\n  * Adobe\n  * advanced persistent threats\n  * adware\n  * AES\n  * Afghanistan\n  * air marshals\n  * air travel\n  * airgaps\n  * al Qaeda\n  * alarms\n  * algorithms\n  * alibis\n  * Amazon\n  * Android\n  * anonymity\n  * Anonymous\n  * antivirus\n  * Apache\n  * Apple\n  * Applied Cryptography\n  * artificial intelligence\n\nMore Tags\n\n### Latest Book\n\nMore Books\n\n", "frontpage": false}
