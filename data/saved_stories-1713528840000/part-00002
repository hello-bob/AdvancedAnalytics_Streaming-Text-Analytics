{"aid": "40082330", "title": "Easings", "url": "https://easings.net/", "domain": "easings.net", "votes": 1, "user": "belter", "posted_at": "2024-04-19 00:49:38", "comments": 0, "source_title": "Easing Functions Cheat Sheet", "source_text": "Easing Functions Cheat Sheet\n\n# Easing Functions Cheat Sheet\n\nEasing functions specify the rate of change of a parameter over time.\n\nObjects in real life don\u2019t just start and stop instantly, and almost never\nmove at a constant speed. When we open a drawer, we first move it quickly, and\nslow it down as it comes out. Drop something on the floor, and it will first\naccelerate downwards, and then bounce back up after hitting the floor.\n\nThis page helps you choose the right easing function.\n\nOpen Source\n\nHelp translate site to your language\n\neaseInSine\n\neaseOutSine\n\neaseInOutSine\n\neaseInQuad\n\neaseOutQuad\n\neaseInOutQuad\n\neaseInCubic\n\neaseOutCubic\n\neaseInOutCubic\n\neaseInQuart\n\neaseOutQuart\n\neaseInOutQuart\n\neaseInQuint\n\neaseOutQuint\n\neaseInOutQuint\n\neaseInExpo\n\neaseOutExpo\n\neaseInOutExpo\n\neaseInCirc\n\neaseOutCirc\n\neaseInOutCirc\n\neaseInBack\n\neaseOutBack\n\neaseInOutBack\n\neaseInElastic\n\neaseOutElastic\n\neaseInOutElastic\n\neaseInBounce\n\neaseOutBounce\n\neaseInOutBounce\n\nAll easings\n\nx\n\nt\n\nCSS\n\nIn CSS, the transition and animation properties allow you to specify an easing\nfunction.\n\n    \n    \n    .block { transition: transform 0.6s ; }\n\nEdit on cubic-bezier.com.\n\nIn CSS, this function can be implemented using @keyframes:\n\nPostCSS\n\nIn PostCSS, the easing function is much easier to describe. There is a plugin\npostcss-easings that takes the transition information from that site.\n\n    \n    \n    .block { transition: transform 0.6s ; }\n\nThat declaration is converted to the one described above.\n\nUnfortunately, the easing function cannot be set with any PostCSS plugin. Can\nbe done with @keyframes, see above.\n\nGradient\n\nIt is possible to draw a gradient using postcss-easing-gradients.\n\n    \n    \n    .block { background: linear-gradient( to bottom, #1473e6, , #247b5e ); }\n\nMath function\n\nBelow you see the code of this easing function written in TypeScript. The\nvariable x represents the absolute progress of the animation in the bounds of\n0 (beginning of the animation) and 1 (end of animation).\n\n    \n    \n    function (x: number): number {\n    \n    }\n\nBelow you see the code of this easing function written in TypeScript. The\nvariable x represents the absolute progress of the animation in the bounds of\n0 (beginning of the animation) and 1 (end of animation).\n\n    \n    \n    function (x: number): number {\n    \n    }\n\nCheck easing for changes:\n\nThis function:\n\nThis function\n\nLinear function:\n\nLinear function\n\nAndrey Sitnik and Ivan Solovev\n\n", "frontpage": false}
