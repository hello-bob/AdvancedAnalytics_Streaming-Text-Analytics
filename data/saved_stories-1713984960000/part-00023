{"aid": "40143127", "title": "Rick Altherr on the Microarch Club", "url": "https://microarch.club/episodes/110/", "domain": "microarch.club", "votes": 2, "user": "hasheddan", "posted_at": "2024-04-24 11:39:50", "comments": 0, "source_title": "110: Rick Altherr | Microarch Club", "source_text": "110: Rick Altherr | Microarch Club\n\n# 110: Rick Altherr\n\nDate: 2024-04-24\n\nDuration: 02:16:38\n\nRick Altherr joins to talk about working on hardware performance analysis\ntools at Apple during the PowerPC to x86 transition, building flight control\nsoftware for internet satellites at Google, discovering vulnerabilities in\nbaseboard management controllers, and much more. We also spend an extended\nportion of the conversation on Rick\u2019s current work in quantum computing,\nincluding comparing and contrasting with classical computing, and examining\nsome of the challenges of interfacing with these machines today.\n\nRick\u2019s Site: https://www.kc8apf.net/\n\nRick on LinkedIn: https://www.linkedin.com/in/mxshift/\n\nRick on Mastodon: https://social.treehouse.systems/@mxshift\n\nRick on GitHub: https://github.com/mx-shift\n\nRick\u2019s Mentoring Sign-Up: https://calendly.com/mxshift\n\n### Show Notes\n\n  * Welcome Rick (00:01:45)\n  * Rick on On the Metal Podcast (00:02:02)\n\n    * https://oxide.computer/podcasts/on-the-metal/rick-altherr\n  * The Amp Hour Podcast (00:02:12)\n\n    * https://theamphour.com/357-an-interview-with-rick-altherr/\n  * Introduction to Computing (00:02:44)\n  * Growing up in a Family of Auto Mechanics (00:03:01)\n  * Wurlitzer Hope-Jones Unit Orchestra (00:03:18)\n\n    * https://www.netoa.org.uk/organ/what-is-a-wurlitzer-theatre-pipe-organ/)\n    * https://en.wikipedia.org/wiki/Robert_Hope-Jones\n  * Hanging out in the Computer Store (00:04:17)\n  * Intel 80286 (00:04:38)\n\n    * https://en.wikipedia.org/wiki/Intel_80286\n  * Working at the Local ISP (00:05:03)\n  * Choosing Computer Science over Computer Engineering (00:05:34)\n  * Intel 8086 (00:05:54)\n\n    * https://en.wikipedia.org/wiki/Intel_8086\n  * Intel 80386 (i386) (00:06:12)\n\n    * https://en.wikipedia.org/wiki/I386\n  * BASIC (00:06:19)\n\n    * https://en.wikipedia.org/wiki/BASIC\n  * Exposure to Computing Growing Up in the Midwest (00:06:40)\n  * QBasic (00:06:57)\n\n    * https://en.wikipedia.org/wiki/QBasic\n  * DOS (00:06:59)\n\n    * https://en.wikipedia.org/wiki/DOS\n  * Cisco CCNA Courses (00:08:17)\n\n    * https://www.cisco.com/site/us/en/learn/training-certifications/certifications/enterprise/ccna/index.html\n  * TI Calculators (00:09:20)\n\n    * https://en.wikipedia.org/wiki/Comparison_of_Texas_Instruments_graphing_calculators\n  * Decision to Study Computer Science (00:10:35)\n  * Computer Science Curriculum at University of Cincinnati (00:12:19)\n\n    * https://ceas.uc.edu/academics/departments/computer-science.html\n  * Nathanael Huffman on the Microarch Club (00:13:04)\n\n    * https://microarch.club/episodes/100/\n  * Co-Op Program at University of Cincinnati (00:13:06)\n\n    * https://www.uc.edu/co-op.html\n  * Getting an Internship at Apple (00:13:27)\n  * Working on Performance Analysis at Apple (00:16:24)\n  * Hardware Performance Counters (00:16:38)\n\n    * https://en.wikipedia.org/wiki/Hardware_performance_counter\n  * PowerPC 970 (00:16:39)\n\n    * https://en.wikipedia.org/wiki/PowerPC_970\n  * Writing the IBM Performance Counter Documentation (00:17:11)\n  * Power Mac G5 (00:17:30)\n\n    * https://en.wikipedia.org/wiki/Power_Mac_G5\n  * Out of Order Processor (00:17:37)\n\n    * https://en.wikipedia.org/wiki/Out-of-order_execution\n  * CHUD Tools (00:18:03)\n\n    * https://en.wikipedia.org/wiki/Apple_Developer_Tools#Computer_Hardware_Understanding_Development_Tools)\n    * https://developer.apple.com/library/archive/documentation/Performance/Conceptual/PerformanceOverview/PerformanceTools/PerformanceTools.html\n  * C.H.U.D. (1984) (00:18:51)\n\n    * https://en.wikipedia.org/wiki/C.H.U.D.\n  * Apple Transition from PowerPC to x86 (00:19:51)\n\n    * https://en.wikipedia.org/wiki/Mac_transition_to_Intel_processors\n  * Migrating Tooling to x86 (00:20:56)\n  * Cycle Accurate Simulation (00:21:27)\n\n    * https://retrocomputing.stackexchange.com/questions/1191/what-exactly-is-a-cycle-accurate-emulator\n  * Endianness (00:22:13)\n\n    * https://en.wikipedia.org/wiki/Endianness\n  * Beginning of iPhone Development (00:22:28)\n  * ARM (00:22:34)\n\n    * https://en.wikipedia.org/wiki/ARM_architecture_family\n  * Secrecy at Apple (00:22:59)\n  * Working with Adobe on Photoshop (00:25:05)\n  * Rock Band Performance Bug (00:25:30)\n\n    * https://en.wikipedia.org/wiki/Rock_Band\n  * System X (G5 Supercomputing Cluster) (00:26:10)\n\n    * https://en.wikipedia.org/wiki/System_X_(supercomputer)\n  * Apple Instruments (00:27:50)\n\n    * https://en.wikipedia.org/wiki/Instruments_(software)\n  * Decision to Join Google (00:28:11)\n  * Analyzing Performance of Single Machine vs. Data Center Scale Systems (00:29:23)\n  * Internal Tooling at Google (00:30:35)\n  * Google Server System Software (00:31:35)\n  * Matt Godbolt on the Microarch Club (00:32:21)\n\n    * https://microarch.club/episodes/101/\n  * Micro-Optimizations at Google Scale (00:32:34)\n  * Google Search Auto-Complete (00:33:06)\n  * CPU Scheduler Bug (00:33:43)\n\n    * https://en.wikipedia.org/wiki/Scheduling_(computing)\n  * Allocating Unused PCIe Pins for USB (00:34:13)\n\n    * https://en.wikipedia.org/wiki/PCI_Express\n  * SR-IOV (00:34:38)\n\n    * https://en.wikipedia.org/wiki/Single-root_input/output_virtualization\n  * MR-IOV (00:35:04)\n\n    * https://www.embedded.com/using-multi-root-mr-pcie-to-extend-nextgen-multi-host-storage-server-switch-fabrics/\n  * Open Compute Project (00:35:41)\n\n    * https://www.opencompute.org/\n  * OpenBMC (00:35:48)\n\n    * https://www.openbmc.org/\n  * Barreleye G2 (00:35:53)\n  * Zaius (00:35:56)\n\n    * https://github.com/opencomputeproject/zaius-barreleye-g2\n  * IBM Power 8 (00:36:00)\n\n    * https://en.wikipedia.org/wiki/POWER8\n  * Baseband Management Controller (BMC) (00:36:14)\n\n    * https://www.techtarget.com/searchnetworking/definition/baseboard-management-controller\n  * Google Server Architecture (00:37:56)\n  * Server Architecture Mirrors Organizational Responsibilities (00:38:14)\n  * Intelligent Platform Management Interface (IPMI) (00:38:51)\n\n    * https://en.wikipedia.org/wiki/Intelligent_Platform_Management_Interface\n  * Lights Out Management (00:40:15)\n\n    * https://en.wikipedia.org/wiki/Out-of-band_management\n  * ipmitool (00:41:08)\n\n    * https://github.com/ipmitool/ipmitool\n  * Redfish (00:41:31)\n\n    * https://en.wikipedia.org/wiki/Redfish_(specification)\n  * BMCs Outside of the Data Center (00:42:01)\n  * Active Management Technology (AMT) (00:43:05)\n\n    * https://en.wikipedia.org/wiki/Intel_Active_Management_Technology\n  * Working on Flight Control Software at Google (00:44:18)\n  * Building Low Earth Orbit (LEO) Satellite Internet (00:45:10)\n\n    * https://en.wikipedia.org/wiki/Low_Earth_orbit\n  * Starlink (00:45:22)\n\n    * https://www.starlink.com/\n  * Spatial Temporal Software Defined Network (00:47:28)\n  * Project Loon (00:47:58)\n\n    * https://x.company/projects/loon/\n  * Why Satellite Internet Didn\u2019t Work at Google (00:48:25)\n  * Collision Avoidance in Space (00:49:53)\n  * Architecture of an Internet Satellite (00:50:37)\n  * Firmware Update Process for Satellites (00:52:05)\n  * Working on Open Source FPGA Tooling (00:53:09)\n\n    * https://f4pga.org/\n  * The Aspeed / Nuvoton BMC Duopoly (00:54:29)\n\n    * https://www.aspeedtech.com/)\n    * https://www.nuvoton.com/\n  * Google Axion Arm Processors (00:55:25)\n\n    * https://cloud.google.com/blog/products/compute/introducing-googles-new-arm-based-cpu\n  * Bart Sano (00:55:35)\n\n    * https://www.linkedin.com/in/bart-sano-90954/\n  * Tim Ansell (00:56:00)\n\n    * https://www.linkedin.com/in/mithro/\n  * Reverse Engineering FPGA Chips (00:56:45)\n  * prjxray (00:56:56)\n\n    * https://github.com/f4pga/prjxray\n  * Claire Wolf (00:57:03)\n\n    * https://www.clairexen.net/\n  * Verilog (00:57:45)\n\n    * https://en.wikipedia.org/wiki/Verilog\n  * Xilinx 7 Series FPGAs (00:58:53)\n\n    * https://docs.amd.com/v/u/en-US/7-series-product-selection-guide\n  * Modern Hardware Description Languages (HDL) (00:59:12)\n\n    * https://en.wikipedia.org/wiki/Hardware_description_language\n  * Symbiflow (00:59:35)\n\n    * https://github.com/SymbiFlow\n  * Whitequark (01:00:13)\n\n    * https://github.com/whitequark\n  * Amaranth HDL (01:00:15)\n\n    * https://github.com/amaranth-lang/amaranth\n  * SystemVerilog (01:00:46)\n\n    * https://en.wikipedia.org/wiki/SystemVerilog\n  * Yosys (01:01:20)\n\n    * https://github.com/YosysHQ/yosys\n  * nextpnr (01:01:21)\n\n    * https://github.com/YosysHQ/nextpnr\n  * Decision to Leave Google (01:01:42)\n  * Getting Involved in Hardware and Firmware Security (01:02:47)\n  * Aurora Attacks (01:03:41)\n\n    * https://en.wikipedia.org/wiki/Operation_Aurora\n  * How Do You Know That Hardware Can Be Trusted? (01:04:52)\n  * OpenTitan (01:05:31)\n\n    * https://opentitan.org/\n  * Root of Trust (RoT) (01:05:39)\n\n    * https://www.rambus.com/blogs/hardware-root-of-trust/\n  * How Project Titan Works (01:06:16)\n\n    * https://research.google/pubs/a-vendor-agnostic-root-of-trust-for-measurement/\n  * UEFI Secure Boot (01:06:33)\n\n    * https://access.redhat.com/articles/5254641\n  * Intel Boot Guard (01:06:39)\n\n    * https://www.intel.com/content/dam/www/central-libraries/us/en/documents/below-the-os-security-white-paper.pdf\n  * First Instruction Integrity (01:06:43)\n\n    * https://dl.acm.org/doi/pdf/10.1145/3380774.3382016\n  * Prevention vs. Detection vs. Remediation (01:07:34)\n  * Serial Peripheral Interface (SPI) (01:08:15)\n\n    * https://en.wikipedia.org/wiki/Serial_Peripheral_Interface\n  * SPI Speed (01:09:53)\n  * Trusted Platform Module (TPM) (01:10:26)\n\n    * https://en.wikipedia.org/wiki/Trusted_Platform_Module\n  * Research vs. Engineering (01:10:58)\n  * Eclypsium (01:11:17)\n\n    * https://eclypsium.com/\n  * Security Research Business Model (01:12:40)\n  * USBAnywhere (01:14:54)\n\n    * https://github.com/eclypsium/USBAnywhere\n  * USB Emulation (01:16:07)\n  * USB On-the-Go (OTG) (01:16:22)\n\n    * https://en.wikipedia.org/wiki/USB_On-The-Go\n  * Small Computer System Interface (SCSI) (01:17:52)\n\n    * https://en.wikipedia.org/wiki/SCSI\n  * WebSocket (01:18:15)\n\n    * https://en.wikipedia.org/wiki/WebSocket\n  * Java Native Interface (JNI) (01:18:50)\n\n    * https://en.wikipedia.org/wiki/Java_Native_Interface\n  * ami (01:19:17)\n\n    * https://www.ami.com/\n  * Vertiv (01:19:19)\n\n    * https://www.vertiv.com/\n  * Facedancer (01:20:11)\n\n    * https://github.com/greatscottgadgets/facedancer\n  * Reception to USBAnywhere (01:21:18)\n  * Joining Oxide Computer Company (01:23:40)\n\n    * https://oxide.computer/\n  * Jessie Frazelle (01:24:44)\n\n    * https://jessfraz.com/\n  * Bryan Cantrill (01:24:55)\n\n    * https://en.wikipedia.org/wiki/Bryan_Cantrill\n  * Open Compute Project as a Product (01:27:20)\n  * Oxide\u2019s Alternative to a Traditional BMC (01:28:23)\n\n    * https://oxide.computer/podcasts/oxide-and-friends/1084759\n  * Rack Scale Computing (01:29:59)\n\n    * https://oxide.computer/podcasts/oxide-and-friends/1231631\n  * Ignition FPGA (01:30:48)\n  * FPGA and Microcontrollers on the Oxide Server Board (01:31:25)\n  * NXP LPC55S69 (01:33:40)\n\n    * https://www.nxp.com/products/processors-and-microcontrollers/arm-microcontrollers/general-purpose-mcus/lpc5500-arm-cortex-m33/high-efficiency-arm-cortex-m33-based-microcontroller-family:LPC55S6x\n  * Discovering Vulnerabilities in the Root of Trust (01:34:13)\n\n    * https://oxide.computer/blog/exploiting-undocumented-hardware-blocks-in-the-lpc55s69)\n    * https://oxide.computer/blog/another-vulnerability-in-the-lpc55s69-rom\n  * Decapping (01:34:43)\n\n    * https://en.wikipedia.org/wiki/Decapping\n  * Physically Unclonable Function (PUF) (01:35:14)\n\n    * https://en.wikipedia.org/wiki/Physical_unclonable_function\n  * Reverse Engineering ROM (01:36:47)\n\n    * https://ghidra-sre.org/\n  * Vulnerability Disclosure (01:37:44)\n  * DefCon Talk (01:37:55)\n\n    * https://youtu.be/eKKgaGbcq4o\n  * Dumping and Analyzing ROM (01:38:24)\n  * Joining IONQ (01:39:56)\n\n    * https://ionq.com/\n  * How Quantum Computing Works (01:40:47)\n  * quantum.country Tutorial (01:42:22)\n\n    * https://quantum.country/\n  * Quantum Mechanics (01:42:39)\n\n    * https://en.wikipedia.org/wiki/Quantum_mechanics\n  * Qubits (01:42:57)\n\n    * https://en.wikipedia.org/wiki/Qubit\n  * Bloch Sphere (01:43:12)\n\n    * https://en.wikipedia.org/wiki/Bloch_sphere\n  * Unit Sphere (01:43:35)\n\n    * https://en.wikipedia.org/wiki/Unit_sphere\n  * Quantum Computing Theory vs. Practice (01:45:05)\n  * Current State of Quantum Computers (01:45:22)\n  * Relay Computers (01:45:48)\n\n    * https://en.wikichip.org/wiki/relay_computer\n  * Vacuum Tubes (01:45:50)\n\n    * https://en.wikipedia.org/wiki/Vacuum-tube_computer\n  * Williams Tubes (01:45:54)\n\n    * https://en.wikipedia.org/wiki/Williams_tube\n  * Mercury Delay Lines (01:45:57)\n\n    * https://en.wikipedia.org/wiki/Delay-line_memory\n  * Transmons (01:46:06)\n\n    * https://en.wikipedia.org/wiki/Transmon\n  * Trapped Ions (01:46:09)\n\n    * https://en.wikipedia.org/wiki/Trapped-ion_quantum_computer\n  * Using Binary in Classical Computing (01:46:34)\n  * Ytterbium (01:47:06)\n\n    * https://en.wikipedia.org/wiki/Ytterbium\n  * IONQ Learning Resources (01:49:45)\n\n    * https://ionq.com/technology)\n    * https://ionq.com/resources/glossary\n  * Entanglement (01:51:08)\n\n    * https://spectrum.ieee.org/what-is-quantum-entanglement\n  * Q Gate (01:51:43)\n\n    * https://en.wikipedia.org/wiki/Quantum_logic_gate\n  * Teleportation (01:54:26)\n\n    * https://en.wikipedia.org/wiki/Quantum_teleportation\n  * Instruction Set of Quantum Computers (01:56:32)\n  * Comparison to VLIW Processors (01:59:40)\n\n    * https://en.wikipedia.org/wiki/Very_long_instruction_word\n  * Quantum Error Correction (QEC) (02:01:28)\n\n    * https://en.wikipedia.org/wiki/Quantum_error_correction\n  * Hybrid Quantum Computing (02:02:09)\n\n    * https://ionq.com/resources/what-is-hybrid-quantum-computing\n  * Experience of Using Quantum Computers Today (02:07:45)\n  * Qiskit (02:08:50)\n\n    * https://www.ibm.com/quantum/qiskit\n  * AWS Braket (02:08:56)\n\n    * https://aws.amazon.com/braket/\n  * Mentorship (02:10:42)\n\n    * https://calendly.com/mxshift\n  * Sharing Work Publicly (02:13:23)\n\n    * https://youtu.be/qV3KnpuRdQk\n  * 99% Invisible Podcast (02:14:48)\n\n    * https://99percentinvisible.org/\n\n### Transcript\n\nComing soon.\n\n\u00a9 Copyright 2024 Microarch Club\n\n", "frontpage": false}
