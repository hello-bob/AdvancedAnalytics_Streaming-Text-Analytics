{"aid": "40164261", "title": "OAuth and OIDC Implementation in SQL", "url": "https://github.com/lovasoa/SQLpage/tree/main/examples/single%20sign%20on%20with%20openid%20connect", "domain": "github.com/lovasoa", "votes": 2, "user": "lovasoa", "posted_at": "2024-04-25 23:19:38", "comments": 0, "source_title": "SQLpage/examples/single sign on with openid connect at main \u00b7 lovasoa/SQLpage", "source_text": "SQLpage/examples/single sign on with openid connect at main \u00b7 lovasoa/SQLpage\n\u00b7 GitHub\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nlovasoa / SQLpage Public\n\n  * Notifications\n  * Fork 48\n  * Star 783\n\n/\n\n# single sign on with openid connect\n\n/\n\n## Directory actions\n\n## More options\n\n## Directory actions\n\n## More options\n\n## Latest commit\n\nlovasoa\n\ninitial oidc example\n\nApr 25, 2024\n\n2abcb77 \u00b7 Apr 25, 2024Apr 25, 2024\n\n## History\n\nHistory\n\n/\n\n# single sign on with openid connect\n\n/\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n### parent directory\n\n..  \n  \n### sqlpage/migrations\n\n|\n\n### sqlpage/migrations\n\n| initial oidc example| Apr 25, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| initial oidc example| Apr 25, 2024  \n  \n### docker-compose.yaml\n\n|\n\n### docker-compose.yaml\n\n| initial oidc example| Apr 25, 2024  \n  \n### index.sql\n\n|\n\n### index.sql\n\n| initial oidc example| Apr 25, 2024  \n  \n### keycloak-configuration.json\n\n|\n\n### keycloak-configuration.json\n\n| initial oidc example| Apr 25, 2024  \n  \n### oidc_login.sql\n\n|\n\n### oidc_login.sql\n\n| initial oidc example| Apr 25, 2024  \n  \n### oidc_logout.sql\n\n|\n\n### oidc_logout.sql\n\n| initial oidc example| Apr 25, 2024  \n  \n### oidc_redirect_handler.sql\n\n|\n\n### oidc_redirect_handler.sql\n\n| initial oidc example| Apr 25, 2024  \n  \n## README.md\n\n# SQLPage OIDC Implementation Demo\n\nThis project demonstrates how to implement OpenID Connect (OIDC)\nauthentication in a SQLPage application.\n\nOIDC is an authentication protocol that allows users to authenticate with a\nthird-party identity provider and then access applications without having to\nlog in again. This is useful for single sign-on (SSO) scenarios where users\nneed to access multiple applications with a single set of credentials. OIDC\ncan be used to implement a \"Login with Google\" or \"Login with Facebook\" button\nin your application, since these providers support the OIDC protocol.\n\nSQLPage currently doesn't have a native OIDC implementation, but you can\nimplement OIDC authentication in your SQLPage yourself. This project provides\na basic implementation of OIDC authentication in a SQLPage application, using\nKeycloak as the OIDC provider.\n\n## Running the Demo\n\nTo run the demo, you just need docker and docker-compose installed on your\nmachine. Then, run the following commands:\n\n    \n    \n    docker-compose up\n\nThis will start a Keycloak server and a SQLPage server. You can access the\nSQLPage application at http://localhost:8080.\n\nThe credentials for the demo are:\n\n  * Username: demo\n  * Password: demo\n\nThe credentials to the keycloak admin console accessible at\nhttp://localhost:8180 are admin/admin.\n\n## Configuration\n\nIf you want to use this implementation in your own SQLPage application, with a\ndifferent OIDC provider, here are the steps you need to follow:\n\n  1. Create an OIDC application in your OIDC provider (e.g., Keycloak). You will need to provide the following information:\n\n  * Redirect URI: This is the URL of your SQLPage application, followed by /oidc_redirect_handler.sql. For example, https://example.com/oidc_redirect_handler.sql.\n  * Client ID: This is a unique identifier for your application. You will need to provide this value to your SQLPage application as an environment variable.\n  * Client type (public or confidential). For this implementation, you should use confidential (sometimes called web application, server-side, or backend).\n  * Client secret: This is a secret key that is used to authenticate your application with the OIDC provider. You will need to provide this value to your SQLPage application as an environment variable.\n\n  2. You need to replace the following placeholders in the oidc_redirect_handler.sql file with your actual values:\n\n  * http://keycloak:8181/realms/sqlpage_demo/protocol/openid-connect/: Replace this with the base URL of your OIDC implementation.\n  * http://localhost:8080/: Replace this with the URL of your application.\n\nYou also need to set the following environment variables:\n\n  * OIDC_CLIENT_ID: The client ID of your OIDC application.\n  * OIDC_CLIENT_SECRET: The client secret of your OIDC application.\n\n## Overview\n\nThe main logic is contained in the oidc_redirect_handler.sql file. This script\nhandles the OIDC redirect after the user has authenticated with the OIDC\nprovider. It performs the following steps:\n\n  1. Checks if the oauth_state cookie matches the state parameter in the query string. This is a security measure to prevent CSRF attacks. If the states do not match, the user is redirected to the login page.\n\n  2. Exchanges the authorization code for an access token. This is done by making a POST request to the OIDC provider's token endpoint. The request includes the authorization code, the redirect URI, and the client ID and secret.\n\n  3. If the access token cannot be obtained, the user is redirected to the login page.\n\n## References\n\n  * An accessible explanation of OIDC: https://annotate.dev/p/hello-world/learn-oauth-2-0-by-building-your-own-oauth-client-U2HaZNtvQojn4F\n  * OpenID Connect\n  * Authorization Code Flow\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
