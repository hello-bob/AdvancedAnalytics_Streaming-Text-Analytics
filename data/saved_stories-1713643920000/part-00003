{"aid": "40097159", "title": "The Checkbox Software Engineer", "url": "https://brunokiafuka.substack.com/p/the-checkbox-software-engineer-7172d6f00bcb", "domain": "brunokiafuka.substack.com", "votes": 1, "user": "brunokiafuka", "posted_at": "2024-04-20 13:16:49", "comments": 0, "source_title": "The checkbox Software Engineer", "source_text": "The checkbox Software Engineer - by Bruno Kiafuka\n\n# BK's Essays\n\nShare this post\n\n#### The checkbox Software Engineer\n\nbrunokiafuka.substack.com\n\n#### Discover more from BK's Essays\n\nBeyond coding, sharing tips and tricks for SWEs to make an impact.\n\nContinue reading\n\nSign in\n\n# The checkbox Software Engineer\n\nBruno Kiafuka\n\nJul 08, 2020\n\nShare this post\n\n#### The checkbox Software Engineer\n\nbrunokiafuka.substack.com\n\nShare\n\nPhoto by Jessica Lewis on Unsplash\n\nFirstly, I want to clarify that I don't consider myself a sound software\nengineer, even though I learned how to write computer programs in high school.\nAbout three years ago, I landed my first job as a software engineer in a small\nstart-up company in South Africa. That same year, people started calling me\neither software [engineer, developer, etc...] or whatever else.\n\nAs a result of working in a start-up that developed a solution for outside\ncustomers, I was expected to get things done. Although I moved jobs, the story\nremained the same. Eventually, I realized that my job was to get things done,\nand most of the time, I got them done quickly.\n\nOne day, in November of last year, I read an interesting article titled \"The\nProduct-Minded Software Engineer\" by Gergely Orosz. It drastically changed my\nway of viewing my job as a Software Engineer. In this blog post, the author\nstated many interesting points that I wish everyone who builds software would\nthink about.\n\n##\n\nThe Checkboxes\n\nBut why the title, you may ask? The answer is that we all eventually become\npeople who check boxes and mark them as done to secure our monthly income.\nThis may apply to other jobs as well.\n\nMost of the time, as an engineer, you will get called by your managers or team\nleaders, who will assign you a task, explain to you their expectations (most\nof which come from clients), and give you time to complete it. Then, you will\nsay yes without asking the intent of the job. You will go and perform the task\nand wait for the next one, and the cycle repeats itself.\n\nYou may feel like you are growing because you completed 10x more tasks this\nweek than the previous week, you got 100+ commits in a month, and you are done\nwith your checklist. But you may not realize that you trapped yourself in an\naddictive cycle of ticking off boxes.\n\n###\n\nThe Problems\n\nAfter being there, I realized that checking the boxes alone was feeding my\nimpostor syndrome more and more, as I was constantly in the mindset of \"it is\nworking, don't touch it, move to the next one.\" It was fun and exciting to\nalways get kudos due to the number of tasks I was checking on my \"to-do list.\"\nYet, I found some problems with this:\n\n1\\. Doing things because they have to be done without understanding the reason\nfor their existence\n\nAll software engineers can relate. Many times, we are asked to change or add\nfunctionality to a system and just go and build, being unable to differentiate\nwhy it is needed vs. why I am building it. You might be building an\nunnecessary feature because the client or project owner said so, and in the\nend, you will be asked to remove it because it was not needed.\n\n2\\. Being a false solution provider\n\nDo software engineers know what their job means? Let's remember the job\ndescription. When you constantly tick off boxes, you will think that you are\nproviding solutions, yet you are simply pleasing the asker.\n\n3\\. Building things that you don't understand\n\nThis one complements my first point. The overall beauty of any job is being\nable to provide solutions to a specific group of people, and it is sad\nsometimes to see that the solution providers don't take some time to\nunderstand what we are trying to solve, thinking that if it is done, it is\ndone. The small boxes we tick off every day add up to a bigger one, which is\nour contribution to the outside world, and not knowing what you are solving\nfor can lead to future failure.\n\n4\\. Poor solution\n\nYou are ticking off things, but is the overall picture important? Many of us\nget called to meetings and are given the project scope, and then we get the\nfeature list and start implementing. As the other points above state, small\ntasks add up to a bigger one; the feature list you get will add up to an\nentire software system, web app, you name it.\n\nYet you can deliver it on time and within scope, and everyone is clapping,\netc.... forgetting that you don't know who you will build it for and if it is\nneeded to use x approach instead of y approach. So you built a poor solution\nthat you would also not prefer to use.\n\nIn conclusion, I believe that all software engineers should know a bit of\nproduct mindset because everything has a lifecycle and needs to tell a story\nfor those who will use your solutions. Ticking boxes alone may prevent you\nfrom understanding what you are doing. When we are assigned tasks or requests,\nwe need to always be able to analyze and understand who we are solving for,\nwhy the solution is needed, and what it is that we are creating. If we aren't\nsure and unable to answer these questions, we are just ticking off boxes.\n\nSoftware engineering is more than simply writing a nice feature. It is about\nuser experience and constant solution creation. Everyone should do things only\nwhen they understand the intent of the request.\n\n> I constantly say that building software is an art, and sound artists know\n> what story they are trying to tell.\n\nHappy hacking!\n\n### Subscribe to BK's Essays\n\nBy Bruno Kiafuka \u00b7 Launched 2 years ago\n\nBeyond coding, sharing tips and tricks for SWEs to make an impact.\n\nShare this post\n\n#### The checkbox Software Engineer\n\nbrunokiafuka.substack.com\n\nShare\n\nComments\n\nThink twice, code once!\n\nThink before you code\n\n21 hrs ago \u2022\n\nBruno Kiafuka\n\n1\n\nShare this post\n\n#### Think twice, code once!\n\nbrunokiafuka.substack.com\n\nTrack your growth\n\nGetting into the habit of journaling your progress\n\nApr 5 \u2022\n\nBruno Kiafuka\n\n3\n\nShare this post\n\n#### Track your growth\n\nbrunokiafuka.substack.com\n\n1\n\nReady for more?\n\n\u00a9 2024 Bruno Kiafuka\n\nPrivacy \u2219 Terms \u2219 Collection notice\n\nStart WritingGet the app\n\nSubstack is the home for great culture\n\nShare\n\n## Create your profile\n\n## Only paid subscribers can comment on this post\n\nAlready a paid subscriber? Sign in\n\n#### Check your email\n\nFor your security, we need to re-authenticate you.\n\nClick the link we sent to , or click here to sign in.\n\n", "frontpage": false}
