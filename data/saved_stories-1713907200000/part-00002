{"aid": "40132927", "title": "WireGuard FreeBSD VNET Jail", "url": "https://eldapper.wordpress.com/2024/04/13/wireguard-vnet-jail/", "domain": "eldapper.wordpress.com", "votes": 1, "user": "vermaden", "posted_at": "2024-04-23 15:18:36", "comments": 0, "source_title": "WireGuard VNET jail", "source_text": "WireGuard VNET jail \u2013 ElDapper\n\nSkip to content\n\n# ElDapper\n\nmake things as simple as possible\n\n# WireGuard VNET jail\n\nCreating the Jail:\n\nI created the jail using Bastille like this:\n\nbastille create -V wirevnet 14.0-RELEASE 0.0.0.0 bge1\n\nInitially, I assigned the IP address \u201c0.0.0.0\u201d to the jail. Then, using\n\nbastille cmd wirevnet ifconfig,\n\nI retrieved the Ethernet address and utilized it to create a static\nreservation on the router.\n\nConfiguring Hostname and SSH:\n\nNext, I assign it a hostname and enable SSH. Then, I create my user account\n[eldapper] using \u2018adduser\u2019 and use \u2018ssh-copy-id\u2019 to add the public key. For\nsecurity remove the password using \u2018pw mod user [eldapper] -w no\u2019. Finally I\nedit the sshd_config and harden it a bit.\n\nAdvertisement\n\nPrivacy Settings\n\n# cat /etc/ssh/sshd_config\n\n    \n    \n    PasswordAuthentication no KbdInteractiveAuthentication no UsePAM yes\n\n## Configuration:\n\n# cat /etc/rc.conf\n\n    \n    \n    ifconfig_e0b_bastille5_name=\"vnet0\" #ifconfig_vnet0=\"SYNCDHCP \" ifconfig_vnet0=\"inet 192.168.1.254/24 up\" defaultrouter=\"192.168.1.254\" hostname=\"wirevnet.eldapper.com\" gateway_enable=\"YES\" # SSH sshd_enable=\"YES\" ## wireguard server wireguard_interfaces=\"wg0\" wireguard_enable=\"YES\" ## wireguard-ui wireguard_ui_enable=\"YES\" wgui_enable=\"YES\" ## pf firewall pf_enable=\"YES\" pf_rules=\"/etc/pf.conf\"\n\n#### Firewall\n\nOn the router create a redirect rule for the Wireguard Listen Port: 51820 to\nthe jail\u2019s IP: 192.168.1.254.\n\n#### Kernel Module\n\nWireguard kernel module: On the host ensure that the if_wg kernel module is\nloaded automatically during system boot.\n\nAdvertisement\n\nPrivacy Settings\n\nkld_list=\"if_wg\"\n\nThen allow the module on the jail: for the loaded module to pass through the\njail you need to edit the jail.conf by adding allow.sysvipc;\n\n# cat /usr/local/bastille/jails/wirevnet/jail.conf\n\n    \n    \n    wirevnet { devfs_ruleset = 13; enforce_statfs = 2; exec.clean; exec.consolelog = /var/log/bastille/wirevnet_console.log; exec.start = '/bin/sh /etc/rc'; exec.stop = '/bin/sh /etc/rc.shutdown'; host.hostname = wirevnet; mount.devfs; mount.fstab = /usr/local/bastille/jails/wirevnet/fstab; path = /usr/local/bastille/jails/wirevnet/root; securelevel = 2; osrelease = 14.0-RELEASE; # Allow loading kernel modules allow.sysvipc; vnet; vnet.interface = e0b_bastille5; exec.prestart += \"jib addm bastille5 bge1\"; exec.prestart += \"ifconfig e0a_bastille5 description \\\"vnet host interface for Bastille jail wirevnet\\\"\"; exec.poststop += \"jib destroy bastille5\";\n\n#### Gateway & NAT\n\nPacket forwarding and NAT must be enabled on the FreeBSD server if we wish to\nroute and forward our VPN client packets. Modifying /etc/rc.conf enables\npacket forwarding\n\ngateway_enable=\"YES\n\nThe gateway_enable=\"YES\" setting in FreeBSD\u2019s /etc/rc.conf file enables the\nsystem to act as a network gateway, allowing it to forward packets between\ninterfaces. If your host system is configured as a gateway and you want your\njail to also act as a gateway, you should enable gateway_enable=\"YES\" in the\njail\u2019s /etc/rc.conf as well.\n\nAdvertisement\n\nPrivacy Settings\n\nEnabling gateway_enable=\"YES\" in the jail\u2019s /etc/rc.conf is necessary if you\nwant the jail to perform tasks like packet forwarding, NAT (Network Address\nTranslation), or routing between different network interfaces within the jail.\n\n### wireguard, wireguard-ui, wgui daemons\n\n#### Install wireguard tools\n\nWireguardtools-1.0.20210914_3 Fast, modern and secure VPN Tunnel\n\npkg install wireguard-tools\n\n##### Enable wireguard\n\n    \n    \n    ## wireguard server wireguard_interfaces=\"wg0\" wireguard_enable=\"YES\"\n\n#### Download wireguard-ui\n\nhttps://github.com/ngoduykhanh/wireguard-ui\n\nReleases: https://github.com/ngoduykhanh/wireguard-ui/releases\n\n##### Install wireguard-ui\n\n    \n    \n    mkdir -p /usr/local/etc/wireguard-ui/ wget -c https://github.com/ngoduykhanh/wireguard-ui/releases/download/v0.6.2/wireguard-ui-v0.6.2-freebsd-amd64.tar.gz -O - | tar -xz -C /usr/local/etc/wireguard-ui/\n\n##### # tree -a /usr/local/etc/wireguard-ui/\n\n    \n    \n    \u251c\u2500\u2500 db \u2502 \u251c\u2500\u2500 clients \u2502 \u251c\u2500\u2500 server \u2502 \u2502 \u251c\u2500\u2500 global_settings.json \u2502 \u2502 \u251c\u2500\u2500 hashes.json \u2502 \u2502 \u251c\u2500\u2500 interfaces.json \u2502 \u2502 \u2514\u2500\u2500 keypair.json \u2502 \u251c\u2500\u2500 users \u2502 \u2502 \u2514\u2500\u2500 admin.json \u2502 \u2514\u2500\u2500 wake_on_lan_hosts \u251c\u2500\u2500 env \u2514\u2500\u2500 wireguard-ui\n\n##### Create a wireguard-ui Startup Script\n\n# cat /usr/local/etc/rc.d/wireguard-ui\n\n    \n    \n    #!/bin/sh # # PROVIDE: wireguard_ui # REQUIRE: DAEMON # KEYWORD: shutdown # # Add the following lines to /etc/rc.conf to enable wireguard_ui: # # wireguard_ui_enable=\"YES\" # . /etc/rc.subr name=\"wireguard_ui\" rcvar=wireguard_ui_enable procname=\"/usr/local/etc/wireguard-ui/wireguard-ui\" pidfile=\"/var/run/wireguard_ui.pid\" wireguard_ui_chdir=\"/usr/local/etc/wireguard-ui\" wireguard_ui_env_file=\"/usr/local/etc/wireguard-ui/env\" command=\"/usr/sbin/daemon\" command_args=\" -s notice -p ${pidfile} -f ${procname} ${wireguard_ui_env_file}\" stop_postcmd=\"wireguard_ui_poststop\" wireguard_ui_poststop() { rm -f $pidfile } load_rc_config ${name} : ${wireguard_ui_enable=\"NO\"} : ${wireguard_ui_pidfile=\"/var/run/${name}.pid\"} run_rc_command \"$1\"\n\nchmod +x /usr/local/etc/rc.d/wireguard-ui\n\nAdvertisement\n\nPrivacy Settings\n\nadd to /etc/rc.conf: wireguard_ui_enable=\"YES\"\n\n##### Create Environment Variables file and configure it\n\n    \n    \n    #!/usr/local/bin/bash WGUI_USERNAME=\"admin\" WGUI_PASSWORD=\"1password\" SMTP_HOSTNAME=\"smtp.somemailserver.com\" SMTP_PORT=\"587\" SMTP_USERNAME=\"eldapper@somemailserver.com\" SMTP_PASSWORD=\"1234\" SMTP_NO_TLS_CHECK=\"true\" SMTP_AUTH_TYPE=\"LOGIN\" EMAIL_FROM_NAME=\"WireGuard-UI\" EMAIL_FROM_ADDRESS=\"eldapper@somemailserver.com\" WGUI_DNS=\"192.168.1.2,192.168.1.3\" WGUI_CONFIG_FILE_PATH=\"/usr/local/etc/wireguard/wg0.conf\" WGUI_SERVER_INTERFACE_ADDRESSES=\"10.10.100.0/24\"\n\n### wireguard restart daemon\n\nAfter installing and enabling the service you can reach the ui at port 5000\n\nhttp://192.168.1.254:5000\n\nIn WireGuard, adding new clients requires restarting the server to apply the\nchanges. However, WireGuard-UI in FreeBSD lacks this functionality. To address\nthis, I\u2019ve wrote a simple daemon to monitor changes in the\n\u2018/usr/local/etc/wireguard/wg0.conf\u2019 configuration file. For the script to work\nwe need inotifywait first:\n\npkg install inotify-tools\n\n# cat /usr/local/etc/rc.d/wgui\n\n    \n    \n    #!/bin/sh # # PROVIDE: wgui # REQUIRE: DAEMON # KEYWORD: shutdown # # Add the following lines to /etc/rc.conf to enable wgui: # # wgui_enable=\"YES\" # . /etc/rc.subr name=\"wgui\" rcvar=wgui_enable procname=\"/usr/local/etc/wgui/wgui\" pidfile=\"/var/run/wgui.pid\" #wgui_chdir=\"/usr/local/opt/wgui/\" command=\"/usr/sbin/daemon\" command_args=\"-P ${pidfile} ${procname}\" stop_cmd=\"${name}_stop\" stop_postcmd=\"${name}_poststop\" wgui_stop() { if [ -f $pidfile ]; then echo \"Stopping wgui.\" kill $(cat $pidfile) echo \"Stopped wgui.\" else echo \"wgui is not running.\" exit 0 fi } wgui_poststop() { rm -f $pidfile } load_rc_config ${name} : ${wgui_enable=\"NO\"} : ${wgui_pidfile=\"/var/run/${name}.pid\"} run_rc_command \"$1\"\n\n# cat /usr/local/etc/wgui/wgui\n\n    \n    \n    #!/bin/sh PATH=\"$PATH:/usr/local/bin\" while inotifywait -e modify -e create /usr/local/etc/wireguard/; do wg-quick down wg0 wg-quick up wg0 done\n\nAfter adding the script and making it executable chmod +x\n/usr/local/etc/wgui/wgui we enable it:\n\nAdvertisement\n\nPrivacy Settings\n\nwgui_enable=\"YES\"\n\n#### pf firewall\n\nOn the jail I configured pf like this:\n\n# cat /etc/pf.conf\n\n    \n    \n    wireguard_clients=\"10.10.100.0/24\" wanint=\"vnet0\" wg_ports=\"{51821}\" set skip on lo0 nat on $wanint inet from $wireguard_clients to any -> $wanint pass in on $wanint proto udp from any to $wanint port $wg_ports pass in on $wanint proto tcp from any to $wanint port 22 keep state pass out quick pass in on wg0 from any to any\n\n### Share this:\n\n  * Twitter\n  * Facebook\n\nLike Loading...\n\neldapper\n\nApril 13, 2024\n\nFreeBSD, Wireguard\n\ncybersecurity, security, vpn\n\n\u2190 Installing FreeBSD 14.0 on a 2013 Mac Pro\n\n### One response to \u201cWireGuard VNET jail\u201d\n\n  1. Valuable News \u2013 2024/04/22 | vermaden\n\nApril 22, 2024 at 5:29 am\n\n[...] WireGuard VNET Jail.\nhttps://eldapper.wordpress.com/2024/04/13/wireguard-vnet-jail/ [...]\n\nLikeLiked by 1 person\n\nReply\n\n### Leave a comment Cancel reply\n\nBlog at WordPress.com.\n\nLoading Comments...\n\n  * Comment\n  * Reblog\n  * Subscribe Subscribed\n\n    * ElDapper\n    * Already have a WordPress.com account? Log in now.\n\n  * Privacy\n  *     * ElDapper\n    * Edit Site\n    * Subscribe Subscribed\n    * Sign up\n    * Log in\n    * Copy shortlink\n    * Report this content\n    * View post in Reader\n    * Manage subscriptions\n    * Collapse this bar\n\n%d\n\nDesign a site like this with WordPress.com\n\nGet started\n\n", "frontpage": false}
