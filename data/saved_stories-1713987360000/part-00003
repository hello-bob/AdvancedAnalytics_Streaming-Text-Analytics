{"aid": "40144202", "title": "Covalent: Simplifying Cloud HPC for Computational Chemistry", "url": "https://www.covalent.xyz/computational-chemistry-using-cloud-hpc/", "domain": "covalent.xyz", "votes": 1, "user": "elliotmac", "posted_at": "2024-04-24 13:34:08", "comments": 0, "source_title": "Computational Chemistry using Cloud HPC", "source_text": "Computational Chemistry using Cloud HPC - Covalent\n\nSkip to content\n\n# Computational Chemistry using Cloud HPC\n\nHow-To\n\nApril 22, 2024\n\nHigh-Performance Computing (HPC) is essential for tasks like battery\nsimulation or drug development modeling in industries like material science\nand biopharmaceutical research. These fields rely on HPC for its precision and\npower. However, moving these tasks to the cloud, while beneficial for\nscalability, introduces challenges in resource management, data handling, and\nperformance consistency. Covalent Cloud offers a fully Pythonic and backend-\nagnostic approach to creating and managing high-compute workflows, allowing\nresearchers to concentrate on addressing complex scientific problems without\ngetting entangled in the technicalities of cloud computing and script\nmanagement.\n\nLet\u2019s dive into a computational chemistry example for molecular modeling,\nspecifically calculating the nitrogen bond energy, using Covalent Cloud.\nCalculating the single point energy is common exercise in material science\nthat also scales well when analyzing other complex systems.\n\n## Adapting High Performance Computing Workflows to Cloud\n\nIn traditional cloud settings, the initial step often involves creating a\nDocker image to set up the required environment. This can be a time-consuming\nand intricate process. Covalent Cloud, however, simplifies this setup\nsignificantly.\n\nComputational chemistry using cloud high performance compute and Covalent\n\nUsers can create an environment directly from their Python notebook. For\nexample, to install [ase](<https://wiki.fysik.dtu.dk/ase/>) and\n[openmpi](<https://www.open-mpi.org/>) from conda, all you need to do is:\n\n    \n    \n    import covalent_cloud as cc cc.create_env(name=\"dft\", pip=[\"ase\"], conda={\"channels\": [\"conda-forge\"], \"dependencies\": [\"openmpi\", \"openssh\", \"gpaw\"]})\n\nNext, we define a Python function to calculate energy.\n\n    \n    \n    from gpaw import GPAW import os def get_energy(system, calc_kwargs={'xc': 'PBE'}): download_and_install_paw_datasets() calc = GPAW(**calc_kwargs) system.set_calculator(calc) return system.get_potential_energy()\n\nTo run this function on the cloud HPC, Covalent Cloud provides intuitive\nprimitives to transform the function into an efficient cloud-ready workflow.\nThis is achieved through decorators that wrap individual tasks and combine\nthem into a coherent workflow:\n\n    \n    \n    import covalent as ct #import the open source covalent @ct.lattice(executor=low_compute, workflow_executor=low_compute) def calculate_energy(systems,executor,calculator_kwargs={}): result=[] # Convert get_energy into covalent task get_energy_electron=ct.electron(get_energy,executor=executor) for system in systems: #simply loop in python to create workflows result.append(get_energy_electron(system,calculator_kwargs)) return result\n\nThe decorators ensure that each task, now called an \u2018electron\u2019, is adapted for\ncloud execution and managed by the specified \u2018executor\u2019 resource. The beauty\nof Covalent Cloud lies in its ability to abstract the complexity of cloud\nresource definition and management, enabling researchers to focus on their\ncore computational tasks. For executing the workflow, Covalent Cloud allows\nusers to define high-performance task-dependent compute resources with ease:\n\n    \n    \n    low_compute = cc.CloudExecutor(env=\"dft\", num_cpus=1, memory=\"1GB\", time_limit=\"1 hour\") high_compute = cc.CloudExecutor(env=\"dft\", num_cpus=32, memory=\"4GB\", time_limit=\"3 hours\") # or GPUs high_compute = cc.CloudExecutor(env=\"dft\", num_cpus=32, memory=\"4GB\", gpu_type=\"h100\",num_gpus=8)\n\nThis flexibility in specifying resources caters to the varying demands of\ndifferent tasks in research, which typically would involve allocating and\nmanaging various compute queues or bare metal machines on the cloud.\n\nWhen it\u2019s time to run the calculations, invoking the workflow is as\nstraightforward as:\n\n    \n    \n    calc_id = cc.dispatch(calculate_energy)(systems=molecules, executor=high_compute, calculator_kwargs=calculation_parameters)\n\nIn the background, Covalent Cloud manages resource allocation (across its vast\narray of clouds), container and data management, and parallel execution while\nensuring real-time status updates and logs are accessible via a user\ninterface. This is particularly vital for computations that run for extended\nperiods, where monitoring and managing can be complex. In addition, Covalent\nCloud automatically parallelizes independent calculations in the workflow,\nsignificantly enhancing efficiency by running them concurrently. For long-\nduration tasks, researchers have the convenience of asynchronously accessing\nresults from any computer, anytime, using just the dispatch ID.\n\n    \n    \n    result = cc.get_result(calc_id, wait=True) print(f\"Total time taken: {(result.end_time - result.start_time).total_seconds() / 60:.3} minutes\") # Total time taken: 1.202 minutes\n\n## Results\n\nIn this case, completing 30 DFT calculations for nitrogen gas single-point\nenergy in just over a minute showcases Covalent Cloud\u2019s capability to rapidly\nscale up to nearly 960 compute cores, providing quick access to high-level\ncomputing power while paying just for the serverless high compute usage\n(approximately $2.88 to complete).\n\nThis example only scratches the surface of what\u2019s possible with Covalent\nCloud. For instance, Covalent Cloud introduces primitives like re-dispatch,\nallowing users to effortlessly relaunch workflows with their own parameters\nand resources using just the dispatch ID. This eliminates the need for setting\nup environments or other preliminary tasks, significantly streamlining the\nprocess. Moreover, these workflows can be made available as APIs that are\nglobally accessible and scalable without worrying about infrastructure\ncomplexities. With Covalent Cloud, you can also experience the benefits of\nreal-time sharing of workflows. Imagine a scenario where a research leader can\nmonitor the progress of experiments live, facilitating a more integrated and\nefficient research environment.\n\nIn conclusion, while cloud-based High-Performance Computing offers immense\nbenefits, its complexity can often be a barrier. Covalent Cloud addresses this\nby simplifying the intricacies of cloud HPC. It enables researchers to focus\nmore on their scientific inquiries and less on the underlying computational\nchallenges. With its new paradigm for interacting with cloud HPC, Covalent\nCloud provides useful abstractions while still handing comprehensive control\nto users. This is reshaping the landscape of cloud-based high performance\ncomputing, making it more accessible and versatile for the ever-evolving\ndemands of scientific exploration and discovery.\n\nFor the full tutorial on how to run material science calculations on the\ncloud, see our tutorial.\n\nBack to All\n\n  * Open Source\n  * Docs\n  * Blog\n  * Jobs\n  * Contact us\n  * Privacy Policy\n  * Terms of Service\n\nSubscribe and stay tuned\n\nCovalent is maintained by the team at Agnostiq\n\nPrivacy Policy\n\n\u00a9 Agnostiq, all rights reserved\n\nWe use cookies on our website to give you the most relevant experience by\nremembering your preferences and repeat visits. By clicking \u201cAccept All\u201d, you\nconsent to the use of ALL the cookies. However, you may visit \"Cookie\nSettings\" to provide a controlled consent.\n\nCookie SettingsAccept All\n\nManage consent\n\n#### Privacy Overview\n\nThis website uses cookies to improve your experience while you navigate\nthrough the website. Out of these, the cookies that are categorized as\nnecessary are stored on your browser as they are essential for the working of\nbasic functionalities of the ...\n\nNecessary\n\nAlways Enabled\n\nNecessary cookies are absolutely essential for the website to function\nproperly. These cookies ensure basic functionalities and security features of\nthe website, anonymously.\n\nCookie| Duration| Description  \n---|---|---  \ncookielawinfo-checkbox-analytics| 11 months| This cookie is set by GDPR Cookie\nConsent plugin. The cookie is used to store the user consent for the cookies\nin the category \"Analytics\".  \ncookielawinfo-checkbox-functional| 11 months| The cookie is set by GDPR cookie\nconsent to record the user consent for the cookies in the category\n\"Functional\".  \ncookielawinfo-checkbox-necessary| 11 months| This cookie is set by GDPR Cookie\nConsent plugin. The cookies is used to store the user consent for the cookies\nin the category \"Necessary\".  \ncookielawinfo-checkbox-others| 11 months| This cookie is set by GDPR Cookie\nConsent plugin. The cookie is used to store the user consent for the cookies\nin the category \"Other.  \ncookielawinfo-checkbox-performance| 11 months| This cookie is set by GDPR\nCookie Consent plugin. The cookie is used to store the user consent for the\ncookies in the category \"Performance\".  \nviewed_cookie_policy| 11 months| The cookie is set by the GDPR Cookie Consent\nplugin and is used to store whether or not user has consented to the use of\ncookies. It does not store any personal data.  \n  \nFunctional\n\nFunctional cookies help to perform certain functionalities like sharing the\ncontent of the website on social media platforms, collect feedbacks, and other\nthird-party features.\n\nPerformance\n\nPerformance cookies are used to understand and analyze the key performance\nindexes of the website which helps in delivering a better user experience for\nthe visitors.\n\nAnalytics\n\nAnalytical cookies are used to understand how visitors interact with the\nwebsite. These cookies help provide information on metrics the number of\nvisitors, bounce rate, traffic source, etc.\n\nAdvertisement\n\nAdvertisement cookies are used to provide visitors with relevant ads and\nmarketing campaigns. These cookies track visitors across websites and collect\ninformation to provide customized ads.\n\nOthers\n\nOther uncategorized cookies are those that are being analyzed and have not\nbeen classified into a category as yet.\n\nSAVE & ACCEPT\n\n", "frontpage": false}
