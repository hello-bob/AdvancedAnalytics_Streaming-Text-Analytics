{"aid": "40280712", "title": "Changing Databases 5 Times in 48 Hours", "url": "https://dev.to/supabase/changing-databases-5-times-in-48-hours-boosted-our-launch-to-35000-views-1oc2", "domain": "dev.to", "votes": 1, "user": "davidcox143", "posted_at": "2024-05-06 23:38:44", "comments": 0, "source_title": "Changing Databases 5 Times in 48 Hours Boosted Our Launch to 35,000 Views", "source_text": "Changing Databases 5 Times in 48 Hours Boosted Our Launch to 35,000 Views -\nDEV Community\n\nSkip to content\n\nLog in Create account\n\n## DEV Community\n\nCopied to Clipboard\n\nShare to Twitter Share to LinkedIn Share to Reddit Share to Hacker News Share\nto Facebook Share to Mastodon\n\nReport Abuse\n\nDavid Cox for Supabase\n\nPosted on May 6\n\n# Changing Databases 5 Times in 48 Hours Boosted Our Launch to 35,000 Views\n\nThe way this story begins is about as wacky as its title. I started Integrated\nReasoning in 2021 to find out what would happen if arbitrary precision\nintegers could be used when solving knapsack problems (e.g. 9, 33, and 65 bit\nregisters). My thinking was that a flexible word size would make pseudo-\npolynomial time algorithms for solving knapsack problems more efficient. In\nshort, it does help, but the largest gains come from pipelining.\n\nFast-forward to mid-April 2024. We\u2019d just started developing IRX, an\noptimization-as-a-service platform, to serve as the interface to Integrated\nReasoning\u2019s hardware accelerated solvers. We planned a MVP that essentially\nmoved the experience of running open-source solvers like HiGHS from the\ncommand line into the browser. The selling point being that these processes\ncan take months or longer to complete, and not having to wrangle them would\nhelp our users focus on optimization instead of the infrastructure required to\nrun optimization.\n\nPushing logs in real-time from AWS to the browser was something I\u2019d never done\nbefore. I figured it was roughly similar to the problem of streaming text from\nan LLM, something I\u2019d never done before either, which has seen tons of recent\ndevelopment. On one hand, real-time log events might be overkill for an MVP.\nOn the other hand, rendering logs in real-time looks beautiful and would help\nus provide a user experience that\u2019s as smooth as the command line. We went for\nit.\n\nOur initial plan was to use Prisma Pulse to subscribe to Postgres writes\nwithin an edge function that sent each line of stdout from HiGHS, CBC, and\nSCIP to the browser using Vercel streaming responses. Other than its\ncomplexity, there were two major problems with this plan. Finding a managed\nPostgres instance that had the right combination of table replication\nfunctionality to satisfy the requirements of both Pulse and our backend was\nnon-trivial, resulting in the absurdity that is the first half of this\narticle\u2019s title. The cascade of events that stemmed from changing Postgres\nproviders five times in two days is still mind-blowing to me.\n\nThe domino effect began when Long (@beertocode) from Supabase reached out with\na challenge. He explained that he wants to give new people building with\nSupabase an extra push. If we build and launch with Supabase within two weeks,\nthey will use their supa-huge following on socials to make the launch a big\none. Challenge accepted, and challenge it was.\n\nSocial media opportunity is not usually part of the equation when evaluating\ndatabase options. However, our launch goal was to gather as much user feedback\nas possible, so it was a factor we couldn\u2019t ignore. Knowing almost nothing\nabout Supabase\u2019s product, I took an afternoon to read through all of their\ndocumentation. By that evening I had a completely different, much simpler,\nmental model for how to build IRX.\n\nSupabase\u2019s anonymous sign-in feature coupled with row level security meant\nthat people could use IRX on launch day without having to go through a\nregistration process. We\u2019re talking zero barrier to entry, which is something\nI didn\u2019t even think was possible in the seemingly never ending cycle of\n\u201ccreate another account and reset your password\u201d that is life in 2024.\n\nAnonymous sign-in proved extremely valuable to us by making it possible for\nnearly three hundred people to try solving mixed-integer programs with IRX on\nlaunch day \u2014 even if they had no idea what IRX was and were just playing\naround. We got incredible feedback from a wider variety of backgrounds than\nI\u2019d have ever imagined.\n\nThe second of the two problems with our approach to real-time log streaming\ndidn\u2019t present itself until after we\u2019d implemented the feature. Prisma Pulse\nhas a limit of at most 20 concurrent subscriptions per table. This limit\nwasn\u2019t obvious until a resource leak consumed our entire connection quota\ninstantaneously. Capping out at 20 concurrent users would not have made for a\ngood launch and time was really ticking.\n\nWe were still debugging streaming when Long Tweeted us at the three hour mark\n\ud83d\ude05. Fortunately by this point I\u2019d read everything there is to read about\nSupabase, including their quota table for realtime events, which supports\n10,000 concurrent clients out of the box. Making the switch was easy, largely\nthanks to Supabase\u2019s TypeScript type generation.\n\nOther than some back pressure issues, we managed to ship real-time log\nstreaming for three solvers running simultaneously on potentially different\nspot instances.\n\n(IRX internal infrastructure diagrams by @baykovr)\n\nLong put it best:\n\nWhat\u2019s really crazy is that I signed up for Resend because of their Supabase\nintegration. Their founder @zenorocha blew up our Twitter a few days before\nthe launch, adding another 16,000 views to our launch week traffic with a\nsingle tweet.\n\nHere\u2019s my sketch of IRX\u2019s infrastructure on the day of the launch:\n\nWe freaking launched. Thank you for the challenge Supabase!\n\n## Top comments (3)\n\nSubscribe\n\nFor further actions, you may consider blocking this person and/or reporting\nabuse\n\n## Read next\n\n### Container Security Risks and Best Practices\n\nshah-angita - May 6\n\n### Git Rebase vs Git Merge: A Comprehensive Guide\n\nSharif Ahmed - May 6\n\n### Learning the Artwork of Gaming Startup: Creating Your Supreme Gaming\nSanctuary\n\nNickguy19 - May 6\n\n### InnOlympics Hackathon 2024\n\nBrent V - May 6\n\nSupabase\n\nBuild in a weekend. Scale to millions.\n\nStart your project\n\n### More from Supabase\n\nSupabase Security Advisor & Performance Advisor\n\n#webdev #programming #productivity #opensource\n\nSupabase Storage: now supports the S3 protocol\n\n#webdev #programming #devops #opensource\n\nSupabase Auth now supports Anonymous Sign-ins\n\n#webdev #programming #opensource #softwaredevelopment\n\nDEV Community \u2014 A constructive and inclusive social network for software\ndevelopers. With you every step of your journey.\n\n  * Home\n  * Podcasts\n  * Videos\n  * Tags\n  * DEV Help\n  * Forem Shop\n  * Advertise on DEV\n  * DEV Showcase\n  * About\n  * Contact\n  * Guides\n  * Software comparisons\n\n  * Code of Conduct\n  * Privacy Policy\n  * Terms of use\n\nBuilt on Forem \u2014 the open source software that powers DEV and other inclusive\ncommunities.\n\nMade with love and Ruby on Rails. DEV Community \u00a9 2016 - 2024.\n\nWe're a place where coders share, stay up-to-date and grow their careers.\n\nLog in Create account\n\n", "frontpage": false}
