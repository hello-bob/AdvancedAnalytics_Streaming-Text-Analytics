{"aid": "40050894", "title": "Show HN: Monotone \u2013 bottomless embeddable storage for events (GA)", "url": "https://monotone.studio", "domain": "monotone.studio", "votes": 2, "user": "pmwkaa", "posted_at": "2024-04-16 11:58:22", "comments": 0, "source_title": "Storage for Sequential data", "source_text": "monotone. | Embeddable Cloud-Native Storage for events and time-series data.\n\nmonotone.\n\nDocs\n\nPricing\n\nContact us\n\nStore and manage events and time-series data locally or on top of S3, with\nseamless, low-latency access directly within your application.\n\nSlack\n\nGitHub\n\nStorage for Sequential data\n\nWe designed a modern embeddable data storage from the ground up precisely for\nsequential workloads, such as append write and range scans .\n\nSequential workloads are typical of the wide variety of modern use cases: IoT,\nevents, time series, crypto, blockchain, finance, monitoring, logs collection,\nand Kafka-style processing.\n\nUsing Monotone, you can create high-performance serverless solutions for\nstorage and processing data directly within your application.\n\nAutomatic Range Partitioning\n\nAutomatically partition data by range or time intervals (min/max).\nTransparently create partitions on write. Automatically or manually refresh\npartitions on disk or cloud after being updated. Automatically exclude\nunrelated partitions during reading.\n\nTransparent Compression\n\nCompress and recompress partitions automatically on refresh (or partition\nmove). Allow different compression types and compression level settings.\nEverything is done transparently without blocking readers and writers.\n\nTransparent Encryption\n\nEncrypt and decrypt partitions automatically on refresh, partition move, or\nread. Compatible with compression and done transparently.\n\nMultiple Storages\n\nCreate logical storage to store data on different storage devices. Set\ndifferent storage settings, such as compression, encryption, associated cloud,\netc. Create or drop storage online. Extend disk space by adding new storage\nwithout downtime.\n\nManually or automatically move partitions between storages. Compaction on the\nmove can be automatically done to change settings.\n\nData Tiering\n\nCreate data policies involving several storages to separate hot and cold data.\nDefine a pipeline to specify where partitions are created and when they need\nto be moved or dropped. This can be done automatically or manually.\n\nCloud Storage\n\nAssociate storage with the cloud for extensive and cheaper storage.\nTransparently access partitions on the cloud. Automate the lifecycle of\npartitions for the cloud using a Pipeline.\n\nYou can automatically or manually handle updates by reuploading partitions to\nthe cloud, downloading or uploading partitions, moving partitions between\nlocal storage and the cloud, or moving partitions between different cloud\nservices.\n\nJoin us on Slack\n\nmonotone.\n\nstudio\n\nProduct\n\nCompany\n\nContact us\n\nAbout\n\nDocs\n\nGitHub\n\nLatest Release\n\nPricing\n\nCopyright \u00a9 2024 Monotone\n\nmonotone.\n\ngithub\n\nStore and manage events and time-series data locally or on top of S3, with\nseamless, low-latency access directly within your application.\n\nStorage for Sequential data\n\nWe designed a modern embeddable data storage from the ground up precisely for\nsequential workloads, such as append write and range scans .\n\nSequential workloads are typical of the wide variety of modern use cases: IoT,\nevents, time series, crypto, blockchain, finance, monitoring, logs collection,\nand Kafka-style processing.\n\nUsing Monotone, you can create high-performance serverless solutions for\nstorage and processing data directly within your application.\n\nAutomatic Range Partitioning\n\nAutomatically partition data by range or time intervals (min/max).\nTransparently create partitions on write. Automatically or manually refresh\npartitions on disk or cloud after being updated. Automatically exclude\nunrelated partitions during reading.\n\nTransparent Compression\n\nCompress and recompress partitions automatically on refresh (or partition\nmove). Allow different compression types and compression level settings.\nEverything is done transparently without blocking readers and writers.\n\nTransparent Encryption\n\nEncrypt and decrypt partitions automatically on refresh, partition move, or\nread. Compatible with compression and done transparently.\n\nMultiple Storages\n\nCreate logical storage to store data on different storage devices. Set\ndifferent storage settings, such as compression, encryption, associated cloud,\netc. Create or drop storage online. Extend disk space by adding new storage\nwithout downtime.\n\nManually or automatically move partitions between storages. Compaction on the\nmove can be automatically done to change settings.\n\nData Tiering\n\nCreate data policies involving several storages to separate hot and cold data.\nDefine a pipeline to specify where partitions are created and when they need\nto be moved or dropped. This can be done automatically or manually.\n\nCloud Storage\n\nAssociate storage with the cloud for extensive and cheaper storage.\nTransparently access partitions on the cloud. Automate the lifecycle of\npartitions for the cloud using a Pipeline.\n\nYou can automatically or manually handle updates by reuploading partitions to\nthe cloud, downloading or uploading partitions, moving partitions between\nlocal storage and the cloud, or moving partitions between different cloud\nservices.\n\nJoin us on Slack\n\nProduct\n\nCompany\n\nContact us\n\nGitHub\n\nLatest Release\n\nAbout\n\nPricing\n\nDocs\n\nmonotone.\n\n", "frontpage": false}
