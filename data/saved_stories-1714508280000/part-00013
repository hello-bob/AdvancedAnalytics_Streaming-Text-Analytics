{"aid": "40210662", "title": "Everyone agrees zero trust is good but no one correctly implements it", "url": "https://goauthentik.io/blog/2023-11-15-everyone-agrees-zero-trust-is-good-but/", "domain": "goauthentik.io", "votes": 1, "user": "nickwritesit", "posted_at": "2024-04-30 13:16:30", "comments": 0, "source_title": "Everyone agrees zero trust is good but no one correctly implements it", "source_text": "Everyone agrees zero trust is good but no one correctly implements it | authentik\n\nSkip to main content\n\n# Everyone agrees zero trust is good but no one correctly implements it\n\nNovember 15, 2023 \u00b7 12 min read\n\nJens Langhammer\n\nCTO at Authentik Security Inc\n\n> authentik is an open source Identity Provider that unifies your identity\n> needs into a single platform, replacing Okta, Active Directory, and auth0.\n> Authentik Security is a public benefit company building on top of the open\n> source project.\n\nBuzzwords are the scourge of the tech industry \u2013 reviled by developers, pushed\nby vendors, and commanded by executives.\n\nAll too often, a buzzword is the first signal of rain (or worse): Marketers\nhave created a trend; vendors are using the trend to explain why you need to\nbuy their software right now; executives are worried about a problem they\ndidn\u2019t know existed before they read that Gartner report; and the downpour\nrains on developers.\n\n\u201cImplement zero trust!\u201d\n\n\u201cWhy aren\u2019t we shifting left?\u201d\n\n\u201cAre we resilient? Well, can we get more resilient?\u201d\n\nAfter a while, buzzwords start to look like trojan horses, and the invading\narmy feels like a swarm of tasks that will result in little reward or\nrecognition. It\u2019s tempting to retreat to cynicism and to ignore every TermTM\nthat comes your way.\n\nBut this can be risky. For better or worse, good ideas inevitably get branded,\nand if you want to keep up, you need to see past the branding \u2013 even if it\ninvolves stripping away the marketing fluff to see the nugget of an idea\nwithin.\n\nThere\u2019s no better example of this than zero trust. In this post, we\u2019ll briefly\nexplore the term's history, explain how it became such an untrustworthy\nbuzzword, and argue that thanks to a few advancements (mainly Wireguard), zero\ntrust will soon go from buzzword to reality.\n\n## Zero trust: An idea ahead of its time\n\nIdeas tend to emerge at inconvenient moments.\n\nSometimes, there are innovators who think so far ahead that people can\u2019t keep\nup (think Van Gogh), and sometimes, everyone understands the idea, but few can\nimplement it \u2013 sometimes for quite a while.\n\nZero trust falls into the latter category, and in the past decade, the term\u2019s\npopularity has outpaced its real-world implications.\n\n### A brief history of zero trust\n\nThe term \u201czero trust\u201d originated in Stephen Marsh\u2019s 1994 doctoral thesis\n\u201cFormalising Trust as a Computational Concept.\u201d The thesis is complex and\nstretches far beyond sheer computing concerns (Marsh wrote it for his doctoral\nprogram in philosophy).\n\nA decade and a half later, John Kindervag revived the term in 2010 while\nwriting articles for Forrester Research. Around the same time, in 2009, Google\ndebuted BeyondCorp, an implementation of numerous zero-trust concepts. This is\nwhen we see the emergence of what we know as zero trust today.\n\nZero trust is simultaneously a critique of the traditional security mindset\nand a gesture at a new framework.\n\nThe argument is that the previous mindset is, essentially, a veneer of\nstrength over a fundamentally brittle defense. Traditional security systems\nfollow a perimeter-based structure and a \u201ctrust but verify\u201d philosophy. Users\nand endpoints within an organization\u2019s perimeter are granted implicit trust,\nmeaning that malicious internal actors and stolen credentials can cause\nsignificant damage.\n\nIf your company has an office, that means a breach can start when people\naccess the network, and if your company is virtual, that means a breach can\nopen as soon as people start logging into things they shouldn\u2019t.\n\nThe zero trust model instead eliminates implicit trust and, as the name\nimplies, trust altogether. The framework is \u201czero trust\u201d because it considers\ntrust a vulnerability. In zero trust, all users are authenticated, authorized,\nand continuously validated before gaining or maintaining access to systems,\napplications, and data.\n\nIn the traditional model, there\u2019s one seemingly strong but ultimately brittle\nbarrier; in the zero trust model, trust is never given, and validation is\ncontinuous.\n\n### So, why didn\u2019t zero trust take off?\n\nZero trust, when you think about it, is fairly intuitive, and its advantages\nare clear. Despite that, zero trust didn\u2019t take off in 2010.\n\nWhen the zero trust model emerged, it had clear advantages, and many security\nexperts agreed on its value. But practical realities meant that many\norganizations couldn\u2019t adopt it.\n\nAt the time, when many enterprises were still shifting software to the cloud\nand before remote work became truly normal, many organizations thought\nperimeter-based security worked well enough. Leaders could read a Forrester\npaper on zero trust, find it interesting, and agree in theory but not feel\ncompelled to rebuild their entire security system.\n\nSecurity concerns already suffer from a \u201cBut it won\u2019t happen to me\u201d effect,\nand the prospect of making a huge investment for the sake of an abstract\nbenefit (the ROI of not getting a breach, maybe) was hard to calculate.\n\nVendors didn\u2019t make these calculations easier. When it debuted, zero trust was\nmore an abstract idea than a practical methodology, and security vendors did\nlittle to clarify things. Most vendors were not ready for zero trust at all,\nand even those that claimed to be couldn\u2019t integrate and interoperate well\nbecause the ecosystem wasn\u2019t mature yet.\n\nNIST (National Institute of Standards and Technologies), which published Zero\nTrust Architecture in 2020, agreed, writing, \u201cDuring the technology survey, it\nbecame apparent that no one vendor offers a single solution that will provide\nzero trust.\u201d They argued, too, that because there\u2019s \u201cno single solution\u201d for\nzero trust, \u201cIt is impossible to have a single protocol or framework that\nenables an enterprise to move to a ZTA.\u201d\n\nWe\u2019re in an awkward spot. Everyone agrees zero trust is good but few know how\nto implement it. Vendors have coalesced around zero trust messaging, but few\ncan actually meet the promises on their landing pages. Many companies that\nclaim to be zero trust aren\u2019t, and many companies that haven\u2019t thought much\nabout zero trust have almost stumbled into it.\n\n## Zero trust for the \u201czero trust\u201d buzzword\n\nIn the decade after the \u201czero trust\u201d concept was popularized, adoption proved\nso difficult that the term began to resemble a nearly meaningless buzzword.\n\nUntil NIST defined the term better in their above-mentioned Zero Trust\nArchitecture article in 2020, there was no clear definition. Without clarity,\nit was hard for any developer, security engineer, or business leader to verify\na vendor's claim that their solution was truly zero-trust. (And that\u2019s not\neven considering whether one solution could claim to offer zero trust at all).\n\nGiven the hype and the lack of clarity, many vendors, marketers, and \u201cthought\nleaders\u201d pushed zero-trust products that were, at best, partial solutions.\nThis push created a lot of cynicism amongst developers and security engineers.\n\nAs Den Jones, CSO at Banyan Security, writes, \u201cthe level of marketing BS,\u201d\nincluding frameworks, papers, and more, became overwhelming: \u201cMy concern now\nis that there\u2019s an overwhelming amount of information related to zero trust,\nso much so that people struggle to decipher it into something meaningful,\nsomething that actually solves their problems.\u201d\n\nThis isn\u2019t the first time hype and vendor pitches outpaced reality, but it was\nparticularly troublesome because zero trust, the concept, was too good to\ndismiss, and zero trust, the products, were too lacking to evaluate and adopt.\n\nThe source of the problem is a terminology problem: Zero trust is more like a\nframework or methodology than a single solution, meaning almost every zero\ntrust vendor is and was exaggerating.\n\nAnd because zero trust depended on the rise of cloud and SaaS products, it\nalso resembled a parallel paradigm shift that depended on those other shifts\nand, at the same time, superseded any given product.\n\nThe move to SaaS, for example, created a lot of incidental zero trust security\njust because so many resources and tools moved to the browser and behind login\npages. People who\u2019d never thought about zero trust effectively implemented\nzero trust (at least partially) by having employees log in to Jira, Slack,\nGmail, AWS, etc., every day.\n\nZero trust stumbled forward while the term lagged behind. A glance at Google\nTrends illustrates the narrative.\n\nGoogle Trends shows that the search volume for zero trust increased way after\nthe term originated but before the methodology really became practical. And\nnow, search volume is flagging just as the full zero trust model becomes\nrealistic.\n\n## How Wireguard makes zero trust achievable\n\nWireguard, started by Jason Donenfield in 2015, points to a future where zero\ntrust is finally achievable and when the term can exceed its current buzzword\nnature.\n\nWireguard, at its most basic, is a simple, fast, modern VPN that uses cutting-\nedge cryptography to make it more secure than IPsec (the current standard\nnetwork protocol suite). As the Wireguard site says, \u201cIt is currently under\nheavy development, but already it might be regarded as the most secure,\neasiest to use, and simplest VPN solution in the industry.\u201d\n\nAccording to research, WireGuard is about 15% faster than OpenVPN in normal\nconditions and 56% faster when OpenVPN is using its TCP mode. Numerous VPN\nproviders have adopted the Wireguard protocol, including NordVPN, Surfshark,\nand IPVanish.\n\nThe company that best illustrates Wireguard\u2019s potential, however, is\nTailscale. Tailscale is a VPN service that provides mesh VPNs with remote\naccess and a site-to-site network. If you\u2019re frequently on Hacker News, you\u2019ve\nprobably seen their fantastic technical articles.\n\nIn one of those articles, Avery Pennarun, founder of Tailscale, writes,\n\u201c[Wireguard] is increasingly widely accepted as the future of secure VPN\nconnectivity.\u201d He has three main reasons:\n\n  * Wireguard is open source.\n  * Wireguard can run in a pure software VM and avoid hardware lock-in and bottlenecks.\n  * Wireguard supports a single cipher suite that is fast and secure but can work with the key exchange mechanisms you want to layer on top.\n\nUnlike the previous era of zero trust-adjacent vendors, the focus is shifting\nfrom an all-in-one zero trust solution to protocol-level technologies that\nenable a range of products that can, together, help companies pursue zero\ntrust.\n\nWith Wireguard, for example, vendors can build stateless VPNs that don\u2019t\nrequire an open, less secure connection. The customers of those vendors can\nthen build multi-hub networks that are much more secure.\n\n## Why it\u2019s finally time for zero trust\n\nWireguard is the leading edge cutting the way to zero trust, but a few other\nshifts are making the movement more necessary and practical.\n\nNIST, mentioned above, is removing ambiguity around zero trust and providing\nclear guidance. As companies shop for vendors purporting to offer or support\nzero trust solutions, they can rely on this guidance to question vendors, and\nvendors can use the guidance to clarify their positions.\n\nBig institutions, such as the United States Federal government, are pushing\nzero trust. In an executive order, for example, the White House wrote that the\nFederal government needed to \u201cadvance toward Zero Trust Architecture\u201d and that\nit would \u201cdevelop security principles governing Cloud Service Providers (CSPs)\nfor incorporation into agency modernization efforts.\u201d\n\nVendors are also catching up. With Tailscale, for example, companies can build\na zero trust architecture over time instead of lifting and shifting their\nentire security infrastructure. Curious companies can now pursue that\ncuriosity bit by bit.\n\nZero trust arose because of a few macro trends, as we covered above, but the\nkey ones\u2013cloud and SaaS\u2013have only become more dominant and more undeniable.\nSecurity isn\u2019t always the fastest-moving field, especially among enterprises,\nbut as more companies see success, even more companies will follow.\n\nFinally, different organizations are starting to reclaim zero trust,\ntranslating it from a buzzword to an organizing principle. Zero trust is\nreturning to its roots, again becoming an architecture that organizations\nbuild and assemble, not a single purchase.\n\nFor example, in a post about building software for a zero trust world,\nPalantir writes that \u201cPalantir is continuously looking for innovative ways to\nextend the Zero Trust paradigm, even if that requires radically re-thinking\nour infrastructure.\u201d Zero trust isn\u2019t a solution to be adopted but a paradigm\nto be pursued.\n\n## Incident by incident, zero trust will become inevitable\n\nEven still, the achievement of zero trust is likely to lag as organizations\ncontinue to rely on \u201cgood enough\u201d security practices. Now that many of the\nzero trust pieces are in place, however, adoption will rise more and more\nsteeply as more and more incidents demonstrate what zero trust could have\nprevented.\n\nFor example, code search provider Sourcegraph recently leaked tokens with\nlong-lasting high-permission access. Attackers relied on the implicit trust\nthese tokens granted, but a zero trust model wouldn\u2019t have allowed for\nimplicit trust at all.\n\nIn another example, a breach at Okta (not that one; this one) proved the\nlimits of a more ramshackle zero trust approach. The breach was embarrassing\nfor Okta (primarily because several clients, including BeyondTrust and\nCloudflare, noticed it first and alerted Okta), but Okta did manage to prevent\na worse breach. As we wrote, \u201cone layer of prevention succeeded when the\nhacker attempted to access the main internal Okta dashboard, but because Okta\nstill views dashboard access as a new sign-in, it prompted for MFA, thus\nthwarting the log-in attempt.\u201d\n\nThe two types of breaches above will drive further interest in zero trust. On\nthe one hand, we see companies fail because they are too trusting; on the\nother hand, we see other companies fail in some ways but prevent further\ndamage thanks to a few solid elements in their security postures. The\npotential becomes clear \u2013 if companies embrace zero trust, they can do even\nbetter.\n\nAs always, we look forward to hearing your thoughts! Send us an email at\nhello@goauthentik.io, or join us on on Github or Discord.\n\nTags:\n\n  * authentik\n  * zero trust\n  * Wireguard\n  * NIST\n  * Okta\n  * breaches\n  * SSO\n  * security\n  * identity provider\n  * authentication\n\n  * Zero trust: An idea ahead of its time\n\n    * A brief history of zero trust\n    * So, why didn\u2019t zero trust take off?\n  * Zero trust for the \u201czero trust\u201d buzzword\n  * How Wireguard makes zero trust achievable\n  * Why it\u2019s finally time for zero trust\n  * Incident by incident, zero trust will become inevitable\n\nSubscribe to authentik News\n\nDocumentation\n\n  * Documentation\n  * Integrations\n  * Developer Documentation\n  * Installations\n\nMore\n\n  * Jobs\n  * GitHub\n  * Discord\n\nLegal\n\n  * Terms & Conditions\n  * Privacy policy\n\nCopyright \u00a9 2024 Authentik Security Inc. Built with Docusaurus.\n\n", "frontpage": false}
