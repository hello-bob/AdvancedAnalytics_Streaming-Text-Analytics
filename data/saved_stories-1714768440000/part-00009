{"aid": "40246185", "title": "A portable Common Lisp toolkit for building inspectors", "url": "https://github.com/aartaka/trivial-inspect", "domain": "github.com/aartaka", "votes": 1, "user": "anonzzzies", "posted_at": "2024-05-03 10:43:50", "comments": 0, "source_title": "GitHub - aartaka/trivial-inspect: A portable Common Lisp toolkit for building inspectors", "source_text": "GitHub - aartaka/trivial-inspect: A portable Common Lisp toolkit for building\ninspectors\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\naartaka / trivial-inspect Public\n\n  * Notifications\n  * Fork 0\n  * Star 4\n\nA portable Common Lisp toolkit for building inspectors\n\n### License\n\nBSD-2-Clause license\n\n4 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# aartaka/trivial-inspect\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\naartakaInitial commit.May 2, 202482e9622 \u00b7 May 2, 2024May 2, 2024\n\n## History\n\n1 Commits  \n  \n### .github\n\n|\n\n### .github\n\n| Initial commit.| May 2, 2024  \n  \n### source\n\n|\n\n### source\n\n| Initial commit.| May 2, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Initial commit.| May 2, 2024  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Initial commit.| May 2, 2024  \n  \n### README.org\n\n|\n\n### README.org\n\n| Initial commit.| May 2, 2024  \n  \n### guix.scm\n\n|\n\n### guix.scm\n\n| Initial commit.| May 2, 2024  \n  \n### trivial-inspect.asd\n\n|\n\n### trivial-inspect.asd\n\n| Initial commit.| May 2, 2024  \n  \n## Repository files navigation\n\n# trivial-inspect\n\nA portable toolkit for building inspectors\n\ntrivial-inspect exposes a set of utils useful in building inspectors akin to\nstandard inspect and describe. The goal is to provide as much information as\npossible. Including the implementation-specific info.\n\n# Getting Started\n\nClone the Git repository:\n\n    \n    \n    git clone --recursive https://github.com/aartaka/trivial-inspect ~/common-lisp/\n\nAnd then load :trivial-inspect in the REPL:\n\n    \n    \n    (asdf:load-system :trivial-inspect) ;; or, if you use Quicklisp (ql:quickload :trivial-inspect)\n\nYou can also use the bundled guix.scm to install it on Guix.\n\n# APIs\n\nTwo main entry points of this library are fields:\n\n    \n    \n    (trivial-inspect:fields #'identity) ;; ((0 :self #<function identity>) (1 :id 1407351035) ;; (2 class-of #<sb-pcl:system-class common-lisp:function> #<function # {100A28547B}>) ;; (3 type-of compiled-function) (4 :name identity) (5 :arguments (sb-impl::thing)) ;; (6 compiled-function-p t) (7 :ftype (function # #)) ;; (8 :expression nil) ;; (9 lambda-list-keywords (&allow-other-keys &aux &body &environment &key sb-int:&more &optional &rest &whole)) ;; (10 call-arguments-limit 1073741824) (11 lambda-parameters-limit 1073741824)) (trivial-inspect:fields nil) ;; ((0 :self nil) (1 :id 1342177559) ;; (2 class-of #<built-in-class common-lisp:null> nil) ;; (3 type-of null) (4 length 0) ;; (5 symbol-name \"NIL\") (6 symbol-package #<package \"COMMON-LISP\">) ;; (7 :visibility :external #<function # {100CFF5F0B}>) ;; (8 symbol-value nil #<function # {100CFF5F2B}>) (9 symbol-plist nil)) (trivial-inspect:fields (find-class 'standard-object)) ;; ((0 :self #<standard-class common-lisp:standard-object>) (1 :id 68721940739) ;; (2 class-of #<standard-class common-lisp:standard-class> ;; #<function (lambda (trivial-inspect::new-value trivial-inspect::_) :in trivial-inspect:fields) {1003A7BAEB}>) ;; (3 :slot-definitions ;; (#<sb-mop:standard-effective-slot-definition sb-pcl::%type> #<sb-mop:standard-effective-slot-definition sb-pcl::source> ..)))\n\nand description:\n\n    \n    \n    (trivial-inspect:description #'+ t) ;; Compiled-function + (&REST NUMBERS) ;; : (&REST NUMBER) -> (VALUES NUMBER &OPTIONAL) ;; Return the sum of its arguments. With no args, returns 0. (trivial-inspect:description 'standard-class t) ;; Symbol STANDARD-CLASS (EXTERNAL to COMMON-LISP) [class] (trivial-inspect:description (find-class 'standard-class) t) ;; Standard-class #<STANDARD-CLASS COMMON-LISP:STANDARD-CLASS>\n\n## About\n\nA portable Common Lisp toolkit for building inspectors\n\n### Resources\n\nReadme\n\n### License\n\nBSD-2-Clause license\n\nActivity\n\n### Stars\n\n4 stars\n\n### Watchers\n\n2 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * Common Lisp 93.5%\n  * Scheme 6.5%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
