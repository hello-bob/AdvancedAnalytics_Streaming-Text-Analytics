{"aid": "40235031", "title": "A 21,565X performance improvement in linting GraphQL", "url": "https://grafbase.com/changelog/graphql-lint", "domain": "grafbase.com", "votes": 7, "user": "tomhoule", "posted_at": "2024-05-02 11:48:14", "comments": 0, "source_title": "Introducing graphql-lint and gqlint", "source_text": "Introducing graphql-lint and gqlint \u2013 Grafbase\n\n# Introducing graphql-lint and gqlint\n\n...\n\nYoav Lavi\n\n# Introducing graphql-lint and gqlint\n\nToday we're introducing a new open-source Rust based tool for the GraphQL\necosystem -\n\nWhen we started implementing our platform linter for GraphQL schemas, we\nnoticed that in contrast to the JavaScript and TypeScript ecosystems (where\nmany new tools are now written in Rust and greatly accelerate the developer\nfeedback loop and CI runtimes), there currently doesn't exist a widely adopted\nRust-native linter for GraphQL.\n\nTo this end we've decided to open-source and offer as a separate crate our\nGraphQL linting solution, graphql-lint and its CLI - gqlint.\n\nWe hope that by extending and allowing free using of this foundation the\nGraphQL ecosystem as a whole will benefit.\n\ngraphql-lint can lint an SDL schema in a few microseconds (25.953\u03bcs for\nexample, for our test schema benchmark) and would fit perfectly into scenarios\nlike a language server in the future for instant in-editor feedback. For a\nrough comparison, we benchmarked running a JS based linter (with a comparable\nconfiguration) in a relatively fast JS runtime at 559.7ms. That means you\ncould lint an SDL schema 21,565 times in the time it took to run the JS based\nlinter, or in other words, a 21,565X performance improvement.\n\nFor larger schemas (2533 LOC) we saw 454.79\u03bcs vs 698.4ms, a 1,535X\nimprovement.\n\nFor parsing the schema and producing an AST graphql-lint uses the great cynic-\nparser, make sure to check it out as well.\n\n## Currently supported rules\n\nOur first iteration of graphql-lint supports the following:\n\n  * Naming conventions\n\n    * Types: PascalCase\n\n      * Forbidden prefixes: \"Type\"\n      * Forbidden suffixes: \"Type\"\n    * Fields: camelCase\n    * Input values: camelCase\n    * Arguments: camelCase\n    * Directives: camelCase\n    * Enums: PascalCase\n\n      * Forbidden prefixes: \"Enum\"\n      * Forbidden suffixes: \"Enum\"\n    * Unions\n\n      * Forbidden prefixes: \"Union\"\n      * Forbidden suffixes: \"Union\"\n    * Enum values: SCREAMING_SNAKE_CASE\n    * Interfaces\n\n      * Forbidden prefixes: \"Interface\"\n      * Forbidden suffixes: \"Interface\"\n    * Query fields\n\n      * Forbidden prefixes: [\"query\", \"get\", \"list\"]\n      * Forbidden suffixes: \"Query\"\n    * Mutation fields\n\n      * Forbidden prefixes: [\"mutation\", \"put\", \"post\", \"patch\"]\n      * Forbidden suffixes: \"Mutation\"\n    * Subscription fields\n\n      * Forbidden prefixes: \"subscription\"\n      * Forbidden suffixes: \"Subscription\"\n  * Usage of the @deprecated directive requires specifying the reason argument\n\nFuture versions will bring with them additional rules and the ability to\nconfigure the linter.\n\n## Using graphql-lint\n\nTo add graphql-lint to your project, add the following to your Cargo.toml:\n\n    \n    \n    [dependencies] graphql-lint = \"0.1.3\"\n\nOr run cargo add graphql-lint in your project, and make use of the exported\nlint function as follows:\n\n    \n    \n    use graphql_lint::lint; fn main () { let schema = r#\" type Query { hello: String! } \"#; let violations = lint(schema).unwrap(); }\n\nThis usage will change as we add new features and configurability.\n\n## gqlint\n\ngqlint is a CLI that runs graphql-lint for command line use.\n\nYou can currently install it using cargo by running:\n\n    \n    \n    cargo install gqlint\n\nAnd use it as follows:\n\n    \n    \n    $ gqlint schema.graphql \u26a0\ufe0f [Warning]: directive 'WithDeprecatedArgs' should be renamed to 'withDeprecatedArgs' \u26a0\ufe0f [Warning]: argument 'ARG' on directive 'WithDeprecatedArgs' should be renamed to 'arg' \u26a0\ufe0f [Warning]: enum 'Enum_lowercase' should be renamed to 'EnumLowercase' \u26a0\ufe0f [Warning]: enum 'Enum_lowercase' has a forbidden prefix: 'Enum' \u26a0\ufe0f [Warning]: usage of directive 'deprecated' on enum 'Enum_lowercase' does not populate the 'reason' argument \u26a0\ufe0f [Warning]: value 'an_enum_member' on enum 'Enum_lowercase' should be renamed to 'AN_ENUM_MEMBER' \u26a0\ufe0f [Warning]: usage of directive 'deprecated' on enum value 'an_enum_member' on enum 'Enum_lowercase' does not populate the 'reason' argument \u26a0\ufe0f [Warning]: enum 'lowercase_Enum' should be renamed to 'LowercaseEnum' \u26a0\ufe0f [Warning]: enum 'lowercase_Enum' has a forbidden suffix: 'Enum' \u26a0\ufe0f [Warning]: value 'an_enum_member' on enum 'lowercase_Enum' should be renamed to 'AN_ENUM_MEMBER' \u26a0\ufe0f [Warning]: usage of directive 'deprecated' on enum value 'an_enum_member' on enum 'lowercase_Enum' does not populate the 'reason' argument \u26a0\ufe0f [Warning]: field 'getHello' on type 'Query' has a forbidden prefix: 'get' \u26a0\ufe0f [Warning]: field 'queryHello' on type 'Query' has a forbidden prefix: 'query' \u26a0\ufe0f [Warning]: field 'listHello' on type 'Query' has a forbidden prefix: 'list' \u26a0\ufe0f [Warning]: field 'helloQuery' on type 'Query' has a forbidden suffix: 'Query' \u26a0\ufe0f [Warning]: field 'putHello' on type 'Mutation' has a forbidden prefix: 'put' \u26a0\ufe0f [Warning]: field 'mutationHello' on type 'Mutation' has a forbidden prefix: 'mutation' \u26a0\ufe0f [Warning]: field 'postHello' on type 'Mutation' has a forbidden prefix: 'post' \u26a0\ufe0f [Warning]: field 'patchHello' on type 'Mutation' has a forbidden prefix: 'patch' \u26a0\ufe0f [Warning]: field 'helloMutation' on type 'Mutation' has a forbidden suffix: 'Mutation' \u26a0\ufe0f [Warning]: field 'subscriptionHello' on type 'Subscription' has a forbidden prefix: 'subscription' \u26a0\ufe0f [Warning]: field 'helloSubscription' on type 'Subscription' has a forbidden suffix: 'Subscription' \u26a0\ufe0f [Warning]: type 'TypeTest' has a forbidden prefix: 'Type' \u26a0\ufe0f [Warning]: usage of directive 'deprecated' on field 'name' on type 'TypeTest' does not populate the 'reason' argument \u26a0\ufe0f [Warning]: type 'TestType' has a forbidden suffix: 'Type' \u26a0\ufe0f [Warning]: type 'other' should be renamed to 'Other' \u26a0\ufe0f [Warning]: usage of directive 'deprecated' on scalar 'CustomScalar' does not populate the 'reason' argument \u26a0\ufe0f [Warning]: union 'UnionTest' has a forbidden prefix: 'Union' \u26a0\ufe0f [Warning]: usage of directive 'deprecated' on union 'UnionTest' does not populate the 'reason' argument \u26a0\ufe0f [Warning]: union 'TestUnion' has a forbidden suffix: 'Union' \u26a0\ufe0f [Warning]: interface 'GameInterface' has a forbidden suffix: 'Interface' \u26a0\ufe0f [Warning]: usage of directive 'deprecated' on field 'publisher' on interface 'GameInterface' does not populate the 'reason' argument \u26a0\ufe0f [Warning]: interface 'InterfaceGame' has a forbidden prefix: 'Interface' \u26a0\ufe0f [Warning]: usage of directive 'deprecated' on interface 'InterfaceGame' does not populate the 'reason' argument \u26a0\ufe0f [Warning]: usage of directive 'deprecated' on input 'TEST' does not populate the 'reason' argument \u26a0\ufe0f [Warning]: input value 'OTHER' on input 'TEST' should be renamed to 'other' \u26a0\ufe0f [Warning]: usage of directive 'deprecated' on input value 'OTHER' on input 'TEST' does not populate the 'reason' argument \u26a0\ufe0f [Warning]: type 'hello' should be renamed to 'Hello' \u26a0\ufe0f [Warning]: usage of directive 'deprecated' on type 'hello' does not populate the 'reason' argument \u26a0\ufe0f [Warning]: field 'Test' on type 'hello' should be renamed to 'test' \u26a0\ufe0f [Warning]: argument 'NAME' on field 'Test' on type 'hello' should be renamed to 'name' \u26a0\ufe0f [Warning]: type 'hello' should be renamed to 'Hello' \u26a0\ufe0f [Warning]: field 'GOODBYE' on type 'hello' should be renamed to 'goodbye'\n\n\u00a9 Grafbase, Inc.\n\n", "frontpage": false}
