{"aid": "40051168", "title": "Will C++ Become a Safe Language Like Rust and Others? \u2013 InfoQ", "url": "https://www.infoq.com/news/2024/04/cpp-memory-safety-sutter/", "domain": "infoq.com", "votes": 1, "user": "rbanffy", "posted_at": "2024-04-16 12:35:59", "comments": 0, "source_title": "Will C++ Become a Safe Language Like Rust and Others?", "source_text": "Will C++ Become a Safe Language Like Rust and Others? - InfoQ\n\n# Your choice regarding cookies on this site\n\nWe use cookies to optimise site functionality and give you the best possible\nexperience.\n\nBT\n\n## InfoQ Software Architects' Newsletter\n\nA monthly overview of things you need to know as an architect or aspiring\narchitects.\n\nView an example\n\nWe protect your privacy.\n\nFacilitating the Spread of Knowledge and Innovation in Professional Software\nDevelopment\n\n  * English edition\n  * Chinese edition\n  * Japanese edition\n  * French edition\n\nWrite for InfoQ\n\n#### Login with:\n\nGoogle Microsoft Twitter Facebook\n\n#### Don't have an InfoQ account?\n\nSign Up\n\nLogo - Back to homepage\n\nNews Articles Presentations Podcasts Guides\n\n### Topics\n\n### Helpful links\n\n  * About InfoQ\n  * InfoQ Editors\n  * Write for InfoQ\n  * About C4Media\n  * Diversity\n\n### Choose your language\n\n  * En\n  * \u4e2d\u6587\n  * \u65e5\u672c\n  * Fr\n\nInfoQ Dev Summit Boston\n\nDiscover transformative insights to level up your software development\ndecisions. Register now with early bird tickets.\n\nInfoQ Dev Summit Munich\n\nGet practical advice from senior developers to navigate your current dev\nchallenges. Register now with early bird tickets.\n\nQCon San Francisco\n\nLevel up your software skills by uncovering the emerging trends you should\nfocus on. Register now.\n\nThe Software Architects' Newsletter\n\nYour monthly guide to all the topics, technologies and techniques that every\nprofessional needs to know about. Subscribe for free.\n\nInfoQ Homepage News Will C++ Become a Safe Language Like Rust and Others?\n\nDevelopment\n\n# Will C++ Become a Safe Language Like Rust and Others?\n\nBookmarks\n\nApr 07, 2024 3 min read\n\nby\n\n  * Sergio De Simone\n\n#### InfoQ Article Contest\n\nShare your knowledge Win a ticket to a QCon event or an InfoQ Dev SummitFind\nout more\n\nIn a recent article, C++ expert and ISO C++ Committee Chair Herb Sutter\nexpressed his views about what it takes to make C++ a safe language in the\nguise of Rust and other memory-safe languages (MSLs). His recipes include\nrelying on tooling, as is the case with other MSLs, promoting safe language\nfeatures, pushing unsafe features behind compiler flags, and more.\n\nSutter's starting point is the recognition of the importance of C++ becoming\nsubstantially safer by addressing the four main memory safety-related\nvulnerability categories. In fact, out of a total of twelve memory safety-\nrelated categories, accounting for about 70% of all CVEs, four of them root in\nout-of-bounds reads, out-of-bounds writes, null pointer dereference, and\naccessing freed memory.\n\nAccording to Sutter, C++ already includes broad support for writing safe code\nand C++ literature has long identified key rules to apply to that aim. Yet, he\nbelieves, as a key language feature, C++ should strictly enforce those rules\nand make unsafe behavior available only if programmers explicitly opt out of\nstandard rules.\n\n> Enabling safety rules by default would not limit the language\u2019s power but\n> would require explicit opt-outs for non-standard practices, thereby reducing\n> inadvertent risks. And it could be evolved over time, which is important\n> because C++ is a living language and adversaries will keep changing their\n> attacks.\n\nSutter also describes a number of false problems and misconceptions, remarking\nhow most high-severity CVEs are not related to memory safety (although out-of-\nbound writes are the first culprit); that MSLs also have their share of CVEs;\nthat MSLs also rely on tooling like static analyzers and sanitizers, and\nothers. So, the end goal cannot be for C++ programs to become completely free\nof memory safety-related CVEs, to enforce memory safety without relying on\ntools, or to make C++ code formally provable.\n\nWith his article, Sutter revived a conversation about C++ memory safety\nsparked by a 2023 NSA Cybersecurity Information Sheet recommending moving away\nfrom C/C++ as well as other memory-unsafe languages.\n\nIn response to the NSA report, Bjarne Stroustrup expressed his view that C++\ncan be as safe as Rust without the latter's complexities:\n\n> The work on the C++ Core Guidelines specifically aims at delivering\n> statically guaranteed type-safe and resource-safe C++ for people who need\n> that without disrupting code bases that can manage without such strong\n> guarantees or introducing additional tool chains.\n\nHere, Stroustrup was implicitly hinting at work the ISO Committee is carrying\nout regarding C++ profiles, which aim at making it possible to gradually adopt\nsafer behavior and enforce it at compile-time.\n\n> A \"profile\" is a set of deterministic and portably enforceable subset of\n> rules (i.e., restrictions) that are designed to achieve a specific\n> guarantee. \"Deterministic\" means they require only local analysis and could\n> be implemented in a compiler (though they don't need to be). \"Portably\n> enforceable\" means they are like language rules, so programmers can count on\n> different enforcement tools giving the same answer for the same code.\n\nC++ profiles specifically encompass type safety, bounds safety, and lifetime\nsafety. According to Stroustrup, code that conforms to a profile is safe by\nconstruction for the safety guarantees covered in that profile.\n\nStroustrup's critique of the NSA report did not go unnoticed and received some\nwell-grounded criticism by Jimmy Hartzell, including the fact that C++ is not\nyet a memory-safe language and that areas like thread safety are not getting\nmuch consideration, whereas Rust already has many mechanisms related to it.\n\n> Now, even C++\u2019s systems niche is under threat, with Rust, a powerful memory-\n> safe programming language that avoids many of C++\u2019s problems. Now, even the\n> niches where C++ isn\u2019t at all \u201clegacy\u201d have a viable, memory-safe\n> alternative without a lot of the technical debt that C++ has.\n\nGoing back to Sutter's view, he also believes, as Stroustrup, that profiles\nare a key feature to make C++ safer and that 98% reduction in\ntype/bounds/initialization/lifetime CVEs in C++ code is feasible all while\npreserving C++ promise:\n\n> I don\u2019t want C++ to limit what I can express efficiently. I just want C++ to\n> let me enforce our already-well-known safety rules and best practices by\n> default, and make me opt out explicitly if that\u2019s what I want. Then I can\n> still use fully modern C++... just nicer.\n\nAt the end of his article, he suggests extensive and concrete directions the\nC++ ISO Committee could follow to reach the 98% goal. Do not miss it for the\nfull details.\n\n## About the Author\n\n#### Sergio De Simone\n\nSergio De Simone is a software engineer. Sergio has been working as a software\nengineer for over twenty five years across a range of different projects and\ncompanies, including such different work environments as Siemens, HP, and\nsmall startups. For the last 10+ years, his focus has been on development for\nmobile platforms and related technologies. He is currently working for BigML,\nInc., where he leads iOS and macOS development.\n\nShow moreShow less\n\n#### This content is in the Security topic\n\n##### Related Topics:\n\n  * Development\n\n### Development\n\nFollowers: 3579\n\n  * C++\n\n### C++\n\nFollowers: 116\n\n  * Rust\n\n### Rust\n\nFollowers: 373\n\n  * System Programming\n\n### System Programming\n\nFollowers: 80\n\n  * Security Vulnerabilities\n\n### Security Vulnerabilities\n\nFollowers: 33\n\n  * Security\n\n### Security\n\nFollowers: 671\n\n  * Safety\n\n### Safety\n\nFollowers: 5\n\n  * Compilers\n\n### Compilers\n\nFollowers: 15\n\n  * #### Popular in Development\n\n    * ##### QCon London: Meta Used Monolithic Architecture to Ship Threads in Only Five Months\n\n    * ##### GitHub Delivers Copilot Enterprise for Large Organizations\n\n    * ##### How Netflix Really Uses Java\n\n    * ##### AWS Batch Introduces Multi-Container Jobs for Large-Scale Simulations\n\n  * #### Related Sponsored Content\n\n    * ##### Designing Data Intensive Applications (By O'Reilly)\n\n    * ##### Kubernetes Cookbook: Building cloud native applications (By O'Reilly)\n\n    * ##### Ask the Expert: Building Intelligent Apps with Azure Kubernetes Service, Azure Functions, and Azure AI\n\n    * ##### Hazelcast Versus Redis: A Practical Comparison\n\n    * ##### Unblocking API Development: Leveraging Low-Code Solutions to Overcome Traditional Bottlenecks\n\n  * #### Popular across InfoQ\n\n    * ##### Will C++ Become a Safe Language Like Rust and Others?\n\n    * ##### QCon London: Meta Used Monolithic Architecture to Ship Threads in Only Five Months\n\n    * ##### Architecture Does Not Emerge - a Conversation with Tracy Bannon\n\n    * ##### Architecting for High Availability in the Cloud with Cellular Architecture\n\n    * ##### Architectures You\u2019ve Always Wondered About 2024 eMag\n\n    * ##### Java News Roundup: New JEP Candidates, Project Bisbane, Ktor Plugin Repository, JDKUpdater\n\n### Related Content\n\n  * ##### Cloudflare Open Sources Pingora, a Rust framework for Developing HTTP Proxies\n\nMar 21, 2024\n\n  * ##### How to Use Rust Procedural Macros to Replace Panic with syn\u2019s Fold\n\nMar 12, 2024\n\n  * Icon\n\n##### JavaScript: Empowered by Rust\n\nMar 04, 2024\n\n  * ##### Shadow API Detection for Google Cloud Environments in Preview\n\nApr 16, 2024\n\n  * ##### Java News Roundup: JobRunr 7.0, Introducing the Commonhaus Foundation, Payara Platform, Devnexus\n\nApr 15, 2024\n\n  * ##### Cloud Native Computing Foundation Graduation of CloudEvents: Q&A with Clemens Vasters\n\nApr 15, 2024\n\n  * ##### QCon London: Lessons Learned From Building LinkedIn\u2019s AI/ML Data Platform\n\nApr 15, 2024\n\n  * ##### Optimizing Adidas' Container Platform Using GitOps\n\nApr 13, 2024\n\n  * ##### AWS Batch Introduces Multi-Container Jobs for Large-Scale Simulations\n\nApr 13, 2024\n\n### Related Sponsored Content\n\n  * #### Single Page Application Security 101\n\nLearn how to solve the SPA security problem by exploring various web\narchitectures, threats, and a standards-based solution called The Token\nHandler Pattern. Upon reading, you will get a stronger understanding of web\nsecurity architecture design and the use of URLs and domains.\n\n  * #### Patterns for High-Performance Data Architecture Whitepaper\n\nThe scalability of infrastructure and how it accesses data becomes pivotal in\ndelivering a seamless user experience. This guide offers best practice\nrecommendations for a high-performance data architecture, with a focus on\nreducing data latency and enhancing scalability.\n\n### Related Content\n\n  * ##### Building a Platform to Gain an Unexpected Competitive Advantage: Ranbir Chawla at QCon London\n\nApr 12, 2024\n\n  * ##### How Lyft Leveraged iOS Live Activities to Enhance User Experience\n\nApr 12, 2024\n\n  * ##### Borderless Cloud at QCon London: Q&A with Adora Nwodo\n\nApr 12, 2024\n\n  * Icon\n\n##### Effective Performance Engineering at Twitter-Scale\n\nApr 12, 2024\n\n  * ##### QCon London: gRPC Migration Automation at LinkedIn\n\nApr 12, 2024\n\n  * ##### Adopting Agile by Increasing Psychological Safety in a Software Team\n\nApr 11, 2024\n\n### The InfoQ Newsletter\n\nA round-up of last week\u2019s content on InfoQ sent out every Tuesday. Join a\ncommunity of over 250,000 senior developers. View an example\n\nWe protect your privacy.\n\n  * Development\n\n    * ##### Will C++ Become a Safe Language Like Rust and Others?\n\n    * ##### Development Environment Manager Daytona Now Open Source\n\n    * ##### Practical Guide to Building an API Back End with Spring Boot - Version 2\n\n  * Architecture & Design\n\n    * ##### Cloud Native Computing Foundation Graduation of CloudEvents: Q&A with Clemens Vasters\n\n    * ##### QCon London: Lessons Learned From Building LinkedIn\u2019s AI/ML Data Platform\n\n    * ##### Building a Platform to Gain an Unexpected Competitive Advantage: Ranbir Chawla at QCon London\n\n  * Culture & Methods\n\n    * ##### Using Cognitive Science to Improve Developer Experience\n\n    * ##### Effective Performance Engineering at Twitter-Scale\n\n    * ##### Adopting Agile by Increasing Psychological Safety in a Software Team\n\n  * AI, ML & Data Engineering\n\n    * ##### Google Trains User Interface and Infographics Understanding AI Model ScreenAI\n\n    * ##### Large Language Models for Code by Loubna Ben Allal at QCon London\n\n    * ##### NVIDIA Announces Next-Generation AI Superchip Blackwell\n\n  * DevOps\n\n    * ##### Optimizing Adidas' Container Platform Using GitOps\n\n    * ##### Kubecost Launches Version 2.0 with Network Monitoring\n\n    * ##### Netflix Launches bpftop Aimed at Enhancing eBPF Performance Efficiency\n\n## The InfoQ Newsletter\n\nA round-up of last week\u2019s content on InfoQ sent out every Tuesday. Join a\ncommunity of over 250,000 senior developers. View an example\n\n  * Get a quick overview of content published on a variety of innovator and early adopter technologies\n  * Learn what you don\u2019t know that you don\u2019t know\n  * Stay up to date with the latest information from the topics you are interested in\n\nWe protect your privacy.\n\nJune 24 - 25, 2024 Actionable insights to clarify today's critical dev\npriorities.\n\nInfoQ Dev Summit Boston, is a two-day conference hosted by InfoQ, focusing on\nthe most critical technical decisions senior software developers face today.\nDeep-dive into 20+ technical talks and get transformative learnings from\nsenior software developers navigating Generative AI, security, modern web\napplications, and more. Register Now\n\nHome Create account QCon Conferences Events Write for InfoQ InfoQ Editors\nAbout InfoQ About C4Media Media Kit InfoQ Developer Marketing Blog Diversity\n\n#### Events\n\n  * ##### QCon London\n\nAPRIL 7-9, 2025\n\n  * ##### InfoQ Live Roundtable\n\nAPRIL 23, 2024\n\n  * ##### InfoQ Dev Summit Boston\n\nJUNE 24-25, 2024\n\n  * ##### InfoQ Dev Summit Munich\n\nSEPTEMBER 26-27, 2024\n\n  * ##### QCon San Francisco\n\nNOVEMBER 18-22, 2024\n\n#### Follow us on\n\nYoutube223K Followers\n\nLinkedin21K Followers\n\nRSS19K Readers\n\nX53.4k Followers\n\nFacebook21K Likes\n\nAlexaNew\n\n#### Stay in the know\n\nThe InfoQ Podcast Engineering Culture Podcast The Software Architects'\nNewsletter\n\nGeneral Feedback feedback@infoq.com Advertising sales@infoq.com Editorial\neditors@infoq.com Marketing marketing@infoq.com\n\nInfoQ.com and all content copyright \u00a9 2006-2024 C4Media Inc. Privacy Notice,\nTerms And Conditions, Cookie Policy\n\nBT\n\n", "frontpage": false}
