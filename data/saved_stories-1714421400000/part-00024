{"aid": "40197550", "title": "CrabGrab: Cross-platform screen-capturing crate for rust", "url": "https://github.com/AugmendTech/CrabGrab", "domain": "github.com/augmendtech", "votes": 2, "user": "thunderbong", "posted_at": "2024-04-29 12:44:08", "comments": 0, "source_title": "GitHub - AugmendTech/CrabGrab: \ud83e\udd80 \ud83d\udda5\ufe0f \ud83e\udd80", "source_text": "GitHub - AugmendTech/CrabGrab: \ud83e\udd80 \ud83d\udda5\ufe0f \ud83e\udd80\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nAugmendTech / CrabGrab Public\n\n  * Notifications\n  * Fork 3\n  * Star 91\n\n\ud83e\udd80 \ud83d\udda5\ufe0f \ud83e\udd80\n\n### License\n\n91 stars 3 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# AugmendTech/CrabGrab\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n6 Branches\n\n2 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nOutOfTheVoidMerge pull request #18 from\nAugmendTech/liam/windows_only_docs_rsApr 23, 2024aa08325 \u00b7 Apr 23, 2024Apr 23,\n2024\n\n## History\n\n136 Commits  \n  \n### .vscode\n\n|\n\n### .vscode\n\n| vscode settings| Apr 18, 2024  \n  \n### docs\n\n|\n\n### docs\n\n| update macos docs| Apr 23, 2024  \n  \n### examples\n\n|\n\n### examples\n\n| migrate objc_wrap to objc2 crate| Apr 22, 2024  \n  \n### spellcheck\n\n|\n\n### spellcheck\n\n| spellcheck| Apr 19, 2024  \n  \n### src\n\n|\n\n### src\n\n| macos docs hosted in repo| Apr 23, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Initial commit| Dec 28, 2023  \n  \n### Cargo.toml\n\n|\n\n### Cargo.toml\n\n| update version to 0.1.3| Apr 23, 2024  \n  \n### LICENSE-APACHE\n\n|\n\n### LICENSE-APACHE\n\n| Split licenses into two files| Apr 19, 2024  \n  \n### LICENSE-MIT\n\n|\n\n### LICENSE-MIT\n\n| Split licenses into two files| Apr 19, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| macos docs hosted in repo| Apr 23, 2024  \n  \n### update_doc_copy.ps1\n\n|\n\n### update_doc_copy.ps1\n\n| update macos docs and windows docs feature list| Apr 18, 2024  \n  \n### update_doc_copy.sh\n\n|\n\n### update_doc_copy.sh\n\n| add space to update_doc_copy to force pages workflow| Apr 19, 2024  \n  \n## Repository files navigation\n\n# CrabGrab \ud83e\udd80 \ud83d\udda5\ufe0f \ud83e\udd80\n\nA cross-platform screen-capturing crate for rust\n\nMacOS Documentation\n\nCapturing video from screens and applications can be very hard, and it's even\nworse when you want to do it in a cross-platform application. CrabGrab makes\nit easy to do continuous frame capture that can be used for individual\nscreenshots or for capturing video. It also includes common functionality\nneeded for enumerating screens and applications. You can get from a window to\na pixel buffer in just a few lines of code that will work on both Windows and\nMacOS.\n\n    \n    \n    #[tokio::main] async fn main() { let token = match CaptureStream::test_access(false) { Some(token) => token, None => CaptureStream::request_access(false).await.expect(\"Expected capture access\") }; let filter = CapturableContentFilter { windows: None, displays: true }; let content = CapturableContent::new(filter).await.unwrap(); let config = CaptureConfig::with_display(content.displays().next().unwrap(), CapturePixelFormat::Bgra8888); let mut stream = CaptureStream::new(token, config, |stream_event| { // The stream_event here could be a video frame or audio frame println!(\"result: {:?}\", stream_event); }).unwrap(); std::thread::sleep(Duration::from_millis(2000)); stream.stop().unwrap(); }\n\nWith CrabGrab, you can build things like:\n\n  1. An AI assistant that can see your screen. A fully functional AI assistant built on top of CrabGrab can be seen in the open source Snippy project.\n\n  2. A screen recording tool like the Augmend client.\n\n## Features:\n\n  * Screen and window capture supported\n  * Compatible with multiple GPU APIs:\n\n    * Wgpu\n    * DX11\n    * DXGI\n    * Metal\n    * IOSurface\n  * Easy frame bitmap generation\n  * Platform specific extension features\n  * Screenshot facility\n  * Sound capture (WIP)\n\n## Examples\n\nFor a full application example, check out Snippy, an AI assistant built on top\nof CrabGrab.\n\nSmall examples showing how to use the CrabGrab crate can be found at\ncrabgrab/examples. You can run the examples from the repository:\n\ncargo run --example <example_name>\n\nNote that feature examples will require that feature:\n\ncargo run --example <example name> \\--feature <feature name>\n\n## MacOS Docs\n\nUnfortuantely due to our dependence on metal-rs, building docs for macos\ndoesn't work on docs.rs, since they use linux containers. As a workaround, we\nhost macos documentation in this repository - link above.\n\n## Contributions\n\nAll contributions are welcome! We are actively working on this project and are\nlooking to expand the capabilities including sound capture, Linux support, and\nperformance improvements.\n\n## About\n\n\ud83e\udd80 \ud83d\udda5\ufe0f \ud83e\udd80\n\n### Resources\n\nReadme\n\n### License\n\nActivity\n\nCustom properties\n\n### Stars\n\n91 stars\n\n### Watchers\n\n5 watching\n\n### Forks\n\n3 forks\n\nReport repository\n\n## Releases\n\n2 tags\n\n## Packages 0\n\nNo packages published\n\n## Contributors 3\n\n  * OutOfTheVoid William Taylor\n  * TimMisiak Tim Misiak\n  * dbish Diamond Bishop\n\n## Languages\n\n  * Rust 99.8%\n  * Other 0.2%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
