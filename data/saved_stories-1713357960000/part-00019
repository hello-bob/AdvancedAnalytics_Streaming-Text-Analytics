{"aid": "40060346", "title": "The OneJoker Project", "url": "https://lcrocker.github.io/onejoker/", "domain": "lcrocker.github.io", "votes": 1, "user": "dvt", "posted_at": "2024-04-17 04:14:24", "comments": 0, "source_title": "OneJoker Project", "source_text": "OneJoker Project\n\n## Card game tools\n\nFree software tools for writing card games and simulations in C, C++, Java,\nand Python.\n\n  * RandLib on GitHub\n  * RandLib documentation\n  * CardLib on GitHub\n  * CardLib documentation\n  * Downloads\n  * Other resources\n\nProject maintained by Lee Daniel Crocker\n\nCC-0: To the extent possible under law, I, Lee Daniel Crocker waive all\ncopyright and related or neighboring rights to all creative works original to\nme.\n\n# The OneJoker Project\n\nOneJoker is a collection of code and other resources for writing card games\nand simulations. Currently this includes:\n\n  * RandLib: A library of state-of-the-art algorithms for generating and using pseudo-random numbers. Can be used by people just needing a good PRNG or by people developing PRNGs to provide all the necessary accompanying code and tests without extra work.\n  * CardLib: A library of routines specific to card games and simulations. Includes things like shuffling decks, dealing hands, evaluating hands, and some high-powered combinatorics.\n\nBoth RandLib and CardLib are written in C, with binding code to allow them to\nbe used from C++, Python, and Java. C is my \u201cnative tongue\u201d, and best suited\nto code that needs to be balls-to-the-wall fast like code to simulate billions\nof hands of blackjack or poker. Python is my current mistress, and the first\ntool I reach for to get something done quickly. So being able to call the fast\nC routines from nice easy-to-write and easy-to-read Python gives me the best\nof both. Java I\u2019m pretty indifferent about, but it\u2019s popular (especially now\nwith the ascent of Android), I\u2019ve used it enough to be familiar with it, so I\nadded that binding. I\u2019d rather have my teeth pulled without anesthesia than\nwrite in C++, but having written the C code, writing a C++ wrapper is only a\nfew lines of code, so those masochists out there who use C++ (or who are\nforced to use it) can use the libraries too.\n\nI also do all the coding on Linux. Software development on Windows isn\u2019t quite\nas painful as C++, but it\u2019s close. I even worked for the Evil Empire briefly\nback when they were an Empire\u2014now they\u2019re kind of the Evil Also-ran. But you\ncan use the libraries from Windows as well, because of a wonderful project\ncalled MinGW, which allows us Unix geeks to write software in a familiar\nenvironment that runs on Windows. I know nothing at all about Macs or\nObjective-C. If you want to port my libraries to Cheesy Cheetah or whatever\nthe lastest Apple OS is, you have my blessing, just not my my help. I hear\nit\u2019s vaguely Unix-y\u2014even some of my Linux brethren do their work on Macs\u2014so it\nmight not be that hard, but I just don\u2019t know.\n\nI plan to also upload things like card images, an Internet game server,\nexplanatory texts (maybe with an opinion or two), full sample programs, and\nother related things.\n\n", "frontpage": false}
