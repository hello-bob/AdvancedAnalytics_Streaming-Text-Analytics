{"aid": "40209922", "title": "Setting up linters in Gitlab CI for C++ and Groovy / Jenkins code", "url": "https://chezsoi.org/lucas/blog/setting-up-linters-in-gitlab-ci-for-c-and-groovy-jenkins-code.html", "domain": "chezsoi.org", "votes": 1, "user": "Lucas-C", "posted_at": "2024-04-30 11:45:42", "comments": 0, "source_title": "Setting up linters in Gitlab CI for C++ and Groovy / Jenkins code", "source_text": "Setting up linters in Gitlab CI for C++ and Groovy / Jenkins code\n\nLudochaordic\n\nFantaisies programatico-ludiques\n\n  * Search form\n\nLudochaordic\n\n# Setting up linters in Gitlab CI for C++ and Groovy / Jenkins code\n\nMon 15 April 2024 \ud83d\udd17 Lucas Cimon\n\nA very short blog post to share some minimal code snippets on how to quickly\nand easily setup Gitlab CI pipelines to run static code analysis tools on C++\ncode and Jenkins pipelines (or any Groovy code). Linting C++ code with clang-\ntidy clang-tidy is a clang-based C++ linter tool that ...\n\nA very short blog post to share some minimal code snippets on how to quickly\nand easily setup Gitlab CI pipelines to run static code analysis tools on C++\ncode and Jenkins pipelines (or any Groovy code).\n\n## Linting C++ code with clang-tidy\n\n> clang-tidy is a clang-based C++ linter tool that can identify and auto-fix\n> some programming errors, like style violations, interface misuse, or bugs\n> that can be deduced via static analysis.\n    \n    \n    cpp-linter: # No need to specify the next line if your default Docker image is already an alpine: image: alpine:3.17 script: - apk add clang-extra-tools - find . -name '*.cpp' -exec clang-tidy --fix {} \\; | tee clang-tidy.log # Fail the job if errors were found: - ! grep \"Found compiler error\" clang-tidy.log rules: # Executing for every commit on the main branch where C++ files were modified: - if: $CI_PIPELINE_SOURCE == \"push\" && $CI_COMMIT_BRANCH == \"main\" changes: - \"*.cpp\" - \"**/*.cpp\" # Executing for every commit in a non-draft merge request where C++ files were modified - if: $CI_PIPELINE_SOURCE == \"merge_request_event\" && $CI_MERGE_REQUEST_TITLE !~ /^Draft:.*$/ changes: - \"*.cpp\" - \"**/*.cpp\"\n\nYou should also initiate a .clang-tidy configuration file like this:\n\n    \n    \n    Checks: '*,-llvmlibc-*' WarningsAsErrors: '*'\n\nThis default file is a strict starting point: it enables all rules, except the\nones specific to LLVM, and treat all warnings as errors. You can then add\n-${ruleName} to the Checks entry in this file to disable some checks. Check\nthe clang-tidy documentation for more details about rules and suppressing\nerrors & warnings using code comments.\n\nYou can also generate an exhaustive .clang-tidy configuration file, with an\nextra CheckOptions field listing all default values for rules parameters, by\nrunning this command:\n\n    \n    \n    clang-tidy -checks='*,-llvmlibc-*' -warnings-as-errors='*' -dump-config > .clang-tidy\n\n## Linting Groovy / Jenkins code with CodeNarc\n\n> CodeNarc analyzes Groovy code for defects, bad practices, inconsistencies,\n> style issues and more.\n\nIt can be used to perform static code analysis on Jenkins pipelines.\n\nBecause executing CodeNarc from the command-line is not so simple, I find it\neasier to use Gradle and its dedicated plugin to execute CodeNarc:\n\n    \n    \n    groovy-linter: image: gradle:8.7 script: - gradle check rules: # Executing for every commit on the main branch where C++ files were modified: - if: $CI_PIPELINE_SOURCE == \"push\" && $CI_COMMIT_BRANCH == \"main\" changes: - \"*.groovy\" - \"**/*.groovy\" # Executing for every commit in a non-draft merge request where Groovy files were modified - if: $CI_PIPELINE_SOURCE == \"merge_request_event\" && $CI_MERGE_REQUEST_TITLE !~ /^Draft:.*$/ changes: - \"*.groovy\" - \"**/*.groovy\"\n\nYou will also need a build.gradle file in the directory where the gradle\ncommand is executed:\n\n    \n    \n    plugins { id 'groovy' id 'codenarc' } repositories { jcenter() // Required if you have Jenkins dependencies: maven { url('https://repo.jenkins-ci.org/public/') } } def codeNarcVersion = '3.4.0' dependencies { // CodeNarc must added there, or you will get a ClassNotFoundException: codenarc group: 'org.codenarc', name: 'CodeNarc', version: codeNarcVersion codenarc group: 'org.jenkins-ci.plugins', name: 'plugin', version: '4.79' } sourceSets { main { groovy { // Specify the relative paths to the directories containing your .groovy files: srcDirs = ['.'] } } } codenarc { configFile = file('./codenarc_rules.groovy') toolVersion = codeNarcVersion reportFormat = 'text' } // The two following blocks allow to display the CodeNarc report in the console: // ( this recipe comes from this SO answer: https://stackoverflow.com/a/36899862/636849 ) task codenarcConsoleReport { doLast { println file(\"${codenarc.reportsDir}/main.txt\").text } } codenarcMain { finalizedBy codenarcConsoleReport compilationClasspath = sourceSets.main.compileClasspath + sourceSets.main.output //+ files('../relative/path/to/shared/lib/dir') } // You can optionnally disable the Groovy compilation step, to execute faster: compileGroovy.enabled = false\n\nAnd finally you can initialize a configuration file for the linter, named\ncodenarc_rules.groovy:\n\nThe details for all rules can be found there: codenarc.org/codenarc-rule-\nindex.html\n\nlang:en \u2022 gitlab \u2022 gitlab-ci \u2022 pipeline \u2022 c++ \u2022 groovy \u2022 gradle \u2022 jenkins \u2022\nllvm \u2022 linter \u2022 static-code-analysis \u2022 continuous-integration \u2022 configuration\n\u2022 prog\n\n#### No Comments Yet\n\nType Comment Here (at least 3 chars)\n\nLucas Cimon Saint-Mathurin-sur-LoireFrance\n\nSoftware engineer. Tabletop RPG writer. Love libre software, and especially\nPython \ud83d\udc0d. Currently working for oui.sncf @Nantes\n\n  * Pages\n  * Bienvenue\n  * Cr\u00e9ations de jeux de r\u00f4le\n  * Mes jeux de r\u00f4le favoris\n  * Images sous licences libres\n  * Je soutiens\n  * Open-Source\n  * Slides\n  * Net-Art\n  * Mentions l\u00e9gales\n  * D\u00e9couvertes vid\u00e9oludiques\n  * Gopher access (beta)\n\n## Ubiquity\n\n### Syndication\n\nATOM Shaarli\n\n## En ce moment je lis\n\n### \ud83e\udd23\n\nPourquoi les vaches ferment-elles les yeux pendant la traite de lait ?\n\n## Avatars\n\n### Blogroll\n\n  * Justin Mason's Weblog\n  * Neal Krawetz Hacker Factor Blog\n  * Shaarli de sebsauvage\n  * Hugin & Munin\n  * Radio R\u00f4liste\n  * C'est pas du jeu de r\u00f4le\n  * Trop Long ; Pas Lu !\n  * Le blog de Gulix\n  * Le blog de JeePee\n  * Le Fix di6dent\n  * ptgptb\n  * The Indie RPG Pipeline\n  * Derri\u00e8re le paravent de Greg Pogorzelski\n  * Oglaf\n  * Blog BD de Boulet\n  * Warpdoor\n  * AlphaBetaGamer\n  * Free Game Planet\n  * OuJeViPo\n  * Du papier et des jeux\n  * J.P. Villain (Access42) @Twitter\n  * Blog de David Larlet\n  * No Limit Secu\n  * LinuxFR\n  * Framablog\n  * Reflets.info\n  * Tristan Nitot\n  * Blog de Victor Stinner\n  * Rhizome.org\n  * Du Monde Dans l'Objectif\n  * Galerie d'Elliot Jolivet aka Tense\u00ef\n  * Galerie d'Elodie Olivier\n  * Les bocaux-mondes de Laure Coignard\n  * Renard'eau\n\nPowered by Pelican. Theme mg thanks to Luca Chiricozzi\n\n  * Pages\n  * Bienvenue\n  * Cr\u00e9ations de jeux de r\u00f4le\n  * Mes jeux de r\u00f4le favoris\n  * Images sous licences libres\n  * Je soutiens\n  * Open-Source\n  * Slides\n  * Net-Art\n  * Mentions l\u00e9gales\n  * D\u00e9couvertes vid\u00e9oludiques\n  * Gopher access (beta)\n  * Ubiquity\n  * Syndication\n\nATOM Shaarli\n\n  * En ce moment je lis\n  * Blogroll\n  * Justin Mason's Weblog\n  * Neal Krawetz Hacker Factor Blog\n  * Shaarli de sebsauvage\n  * Hugin & Munin\n  * Radio R\u00f4liste\n  * C'est pas du jeu de r\u00f4le\n  * Trop Long ; Pas Lu !\n  * Le blog de Gulix\n  * Le blog de JeePee\n  * Le Fix di6dent\n  * ptgptb\n  * The Indie RPG Pipeline\n  * Derri\u00e8re le paravent de Greg Pogorzelski\n  * Oglaf\n  * Blog BD de Boulet\n  * Warpdoor\n  * AlphaBetaGamer\n  * Free Game Planet\n  * OuJeViPo\n  * Du papier et des jeux\n  * J.P. Villain (Access42) @Twitter\n  * Blog de David Larlet\n  * No Limit Secu\n  * LinuxFR\n  * Framablog\n  * Reflets.info\n  * Tristan Nitot\n  * Blog de Victor Stinner\n  * Rhizome.org\n  * Du Monde Dans l'Objectif\n  * Galerie d'Elliot Jolivet aka Tense\u00ef\n  * Galerie d'Elodie Olivier\n  * Les bocaux-mondes de Laure Coignard\n  * Renard'eau\n\n", "frontpage": false}
