{"aid": "40131133", "title": "ARM Lab VM 2.0", "url": "https://azeria-labs.com/lab-vm-2-0/", "domain": "azeria-labs.com", "votes": 4, "user": "plurby", "posted_at": "2024-04-23 12:25:54", "comments": 0, "source_title": "Lab VM 2.0", "source_text": "Lab VM 2.0 | Azeria Labs\n\n  * ARM Assembly\n\n    * Part 1: Introduction to ARM Assembly\n    * Part 2: ARM Data Types and Registers\n    * Part 3: ARM Instruction Set\n    * Part 4: Memory Instructions: LDR/STR\n    * Part 5: Load and Store Multiple\n    * Part 6: Conditional Execution and Branching\n    * Part 7: Stack and Functions\n    * Assembly Basics Cheatsheet\n  * Online Assembler\n  * Exploitation\n\n    * Writing ARM Shellcode\n    * TCP Bind Shell in Assembly (ARM 32-bit)\n    * TCP Reverse Shell in Assembly (ARM 32-bit)\n    * Process Memory and Memory Corruption\n    * Stack Overflows (Arm32)\n    * Return Oriented Programming (Arm32)\n    * Stack Overflow Challenges\n    * Process Continuation Shellcode\n    * Glibc Heap \u2013 malloc\n    * Glibc Heap \u2013 free, bins, tcache\n    * Part 1: Heap Exploit Development\n    * Part 2: Heap Overflows and the iOS Kernel\n    * Part 3: Grooming the iOS Kernel Heap\n  * Lab Environment\n\n    * ARM Lab VM 1.0\n    * ARM Lab VM 2.0\n    * Debugging with GDB and GEF\n    * Emulate Raspberry Pi with QEMU\n    * Running Arm Binaries on x86 with QEMU-User\n    * Emulating Arm Firmware\n  * TrustZone Research\n\n    * TEEs and Arm TrustZone\n    * Trustonic\u2019s Kinibi TEE\n  * Self-Improvement\n\n    * Deep Work & The 30-Hour Method\n    * Paradox of Choice\n    * The Process of Mastering a Skill\n  * About\n\n  * ARM Assembly\n\n    * Part 1: Introduction to ARM Assembly\n    * Part 2: ARM Data Types and Registers\n    * Part 3: ARM Instruction Set\n    * Part 4: Memory Instructions: LDR/STR\n    * Part 5: Load and Store Multiple\n    * Part 6: Conditional Execution and Branching\n    * Part 7: Stack and Functions\n    * Assembly Basics Cheatsheet\n  * Online Assembler\n  * Exploitation\n\n    * Writing ARM Shellcode\n    * TCP Bind Shell in Assembly (ARM 32-bit)\n    * TCP Reverse Shell in Assembly (ARM 32-bit)\n    * Process Memory and Memory Corruption\n    * Stack Overflows (Arm32)\n    * Return Oriented Programming (Arm32)\n    * Stack Overflow Challenges\n    * Process Continuation Shellcode\n    * Glibc Heap \u2013 malloc\n    * Glibc Heap \u2013 free, bins, tcache\n    * Part 1: Heap Exploit Development\n    * Part 2: Heap Overflows and the iOS Kernel\n    * Part 3: Grooming the iOS Kernel Heap\n  * Lab Environment\n\n    * ARM Lab VM 1.0\n    * ARM Lab VM 2.0\n    * Debugging with GDB and GEF\n    * Emulate Raspberry Pi with QEMU\n    * Running Arm Binaries on x86 with QEMU-User\n    * Emulating Arm Firmware\n  * TrustZone Research\n\n    * TEEs and Arm TrustZone\n    * Trustonic\u2019s Kinibi TEE\n  * Self-Improvement\n\n    * Deep Work & The 30-Hour Method\n    * Paradox of Choice\n    * The Process of Mastering a Skill\n  * About\n\nArm Lab VM 2.0\n\nThe new Lab VM 2.0 contains\n\n  * QEMU emulated Armv7 environment ready to start\n  * Two different Tenda router firmware versions (AC6 and AC15)\n  * All scripts necessary to start the firmware emulation (firmware emulation tutorial here)\n  * Useful tools like GEF and Ropper\n  * Two small Arm exploitation challenges to learn the basics of bypassing XN (tutorial on stack overflows)\n\nDownload Lab VM via Google Drive\n\nPassword for the Zip file: azerialabs\n\nAccount credentials: user/user\n\n### Lab Fundamentals\n\n  * ARM Lab VM 1.0\n  * ARM Lab VM 2.0\n  * Running Arm Binaries on x86 with QEMU-User\n  * Debugging with GDB Introduction\n  * Emulate Raspberry Pi with QEMU\n  * Emulating Arm Firmware\n\nTwitter: @Fox0x01 and @azeria_labs\n\n### New ARM Assembly Cheat Sheet\n\nPoster Digital\n\n\u00a9 2017-2022 Azeria LabsTM | All Rights Reserved.\n\n", "frontpage": false}
