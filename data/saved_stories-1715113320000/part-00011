{"aid": "40284263", "title": "Patterns of Scalable, Reliable, and Performant Large-Scale Systems", "url": "https://github.com/binhnguyennus/awesome-scalability", "domain": "github.com/binhnguyennus", "votes": 1, "user": "redbell", "posted_at": "2024-05-07 11:17:51", "comments": 0, "source_title": "GitHub - binhnguyennus/awesome-scalability: The Patterns of Scalable, Reliable, and Performant Large-Scale Systems", "source_text": "GitHub - binhnguyennus/awesome-scalability: The Patterns of Scalable,\nReliable, and Performant Large-Scale Systems\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nbinhnguyennus / awesome-scalability Public\n\n  * Notifications\n  * Fork 5.6k\n  * Star 53.4k\n\nThe Patterns of Scalable, Reliable, and Performant Large-Scale Systems\n\n### License\n\nMIT license\n\n53.4k stars 5.6k forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# binhnguyennus/awesome-scalability\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nbinhnguyennusScaling AI/ML Infrastructure at UberApr 25, 2024a37bea0 \u00b7 Apr 25,\n2024Apr 25, 2024\n\n## History\n\n1,181 Commits  \n  \n### .github\n\n|\n\n### .github\n\n| Update FUNDING.yml| Sep 13, 2019  \n  \n### CODE_OF_CONDUCT.md\n\n|\n\n### CODE_OF_CONDUCT.md\n\n| Create CODE_OF_CONDUCT.md| Mar 22, 2019  \n  \n### CONTRIBUTING.md\n\n|\n\n### CONTRIBUTING.md\n\n| Create CONTRIBUTING.md| Dec 27, 2017  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Create LICENSE| Mar 22, 2019  \n  \n### README.md\n\n|\n\n### README.md\n\n| Scaling AI/ML Infrastructure at Uber| Apr 25, 2024  \n  \n### SECURITY.md\n\n|\n\n### SECURITY.md\n\n| Create SECURITY.md| May 23, 2019  \n  \n### _config.yml\n\n|\n\n### _config.yml\n\n| Set theme jekyll-theme-modernist| Jan 22, 2020  \n  \n### logo.png\n\n|\n\n### logo.png\n\n| Consistent Logo| Jan 22, 2020  \n  \n## Repository files navigation\n\nAn updated and organized reading list for illustrating the patterns of\nscalable, reliable, and performant large-scale systems. Concepts are explained\nin the articles of prominent engineers and credible references. Case studies\nare taken from battle-tested systems that serve millions to billions of users.\n\n#### If your system goes slow\n\n> Understand your problems: scalability problem (fast for a single user but\n> slow under heavy load) or performance problem (slow for a single user) by\n> reviewing some design principles and checking how scalability and\n> performance problems are solved at tech companies. The section of\n> intelligence are created for those who work with data and machine learning\n> at big (data) and deep (learning) scale.\n\n#### If your system goes down\n\n> \"Even if you lose all one day, you can build all over again if you retain\n> your calm!\" - Thuan Pham, former CTO of Uber. So, keep calm and mind the\n> availability and stability matters!\n\n#### If you are having a system design interview\n\n> Look at some interview notes and real-world architectures with completed\n> diagrams to get a comprehensive view before designing your system on\n> whiteboard. You can check some talks of engineers from tech giants to know\n> how they build, scale, and optimize their systems. Good luck!\n\n#### If you are building your dream team\n\n> The goal of scaling team is not growing team size but increasing team output\n> and value. You can find out how tech companies reach that goal in various\n> aspects: hiring, management, organization, culture, and communication in the\n> organization section.\n\n#### Community power\n\n> Contributions are greatly welcome! You may want to take a look at the\n> contribution guidelines. If you see a link here that is no longer maintained\n> or is not a good fit, please submit a pull request!\n\n> Many long hours of hard work have gone into this project. If you find it\n> helpful, please share on Facebook, on Twitter, on Weibo, or on your chat\n> groups! Knowledge is power, knowledge shared is power multiplied. Thank you!\n\n## Content\n\n  * Principle\n  * Scalability\n  * Availability\n  * Stability\n  * Performance\n  * Intelligence\n  * Architecture\n  * Interview\n  * Organization\n  * Talk\n  * Book\n\n## Principle\n\n  * Lessons from Giant-Scale Services - Eric Brewer, UC Berkeley & Google\n  * Designs, Lessons and Advice from Building Large Distributed Systems - Jeff Dean, Google\n  * How to Design a Good API & Why it Matters - Joshua Bloch, CMU & Google\n  * On Efficiency, Reliability, Scaling - James Hamilton, VP at AWS\n  * Principles of Chaos Engineering\n  * Finding the Order in Chaos\n  * The Twelve-Factor App\n  * Clean Architecture\n  * High Cohesion and Low Coupling\n  * Monoliths and Microservices\n  * CAP Theorem and Trade-offs\n  * CP Databases and AP Databases\n  * Stateless vs Stateful Scalability\n  * Scale Up vs Scale Out: Hidden Costs\n  * ACID and BASE\n  * Blocking/Non-Blocking and Sync/Async\n  * Performance and Scalability of Databases\n  * Database Isolation Levels and Effects on Performance and Scalability\n  * The Probability of Data Loss in Large Clusters\n  * Data Access for Highly-Scalable Solutions: Using SQL, NoSQL, and Polyglot Persistence\n  * SQL vs NoSQL\n  * SQL vs NoSQL - Lesson Learned at Salesforce\n  * NoSQL Databases: Survey and Decision Guidance\n  * How Sharding Works\n  * Consistent Hashing\n  * Consistent Hashing: Algorithmic Tradeoffs\n  * Don\u2019t be tricked by the Hashing Trick\n  * Uniform Consistent Hashing at Netflix\n  * Eventually Consistent - Werner Vogels, CTO at Amazon\n  * Cache is King\n  * Anti-Caching\n  * Understand Latency\n  * Latency Numbers Every Programmer Should Know\n  * The Calculus of Service Availability\n  * Architecture Issues When Scaling Web Applications: Bottlenecks, Database, CPU, IO\n  * Common Bottlenecks\n  * Life Beyond Distributed Transactions\n  * Relying on Software to Redirect Traffic Reliably at Various Layers\n  * Breaking Things on Purpose\n  * Avoid Over Engineering\n  * Scalability Worst Practices\n  * Use Solid Technologies - Don\u2019t Re-invent the Wheel - Keep It Simple!\n  * Simplicity by Distributing Complexity\n  * Why Over-Reusing is Bad\n  * Performance is a Feature\n  * Make Performance Part of Your Workflow\n  * The Benefits of Server Side Rendering over Client Side Rendering\n  * Automate and Abstract: Lessons at Facebook\n  * AWS Do's and Don'ts\n  * (UI) Design Doesn\u2019t Scale - Stanley Wood, Design Director at Spotify\n  * Linux Performance\n  * Building Fast and Resilient Web Applications - Ilya Grigorik\n  * Accept Partial Failures, Minimize Service Loss\n  * Design for Resiliency\n  * Design for Self-healing\n  * Design for Scaling Out\n  * Design for Evolution\n  * Learn from Mistakes\n\n## Scalability\n\n  * Microservices and Orchestration\n\n    * Domain-Oriented Microservice Architecture at Uber\n    * Service Architecture (3 parts: Domain Gateways, Value-Added Services, BFF) at SoundCloud\n    * Container (8 parts) at Riot Games\n    * Containerization at Pinterest\n    * Evolution of Container Usage at Netflix\n    * Dockerizing MySQL at Uber\n    * Testing of Microservices at Spotify\n    * Docker in Production at Treehouse\n    * Microservice at SoundCloud\n    * Operate Kubernetes Reliably at Stripe\n    * Cross-Cluster Traffic Mirroring with Istio at Trivago\n    * Agrarian-Scale Kubernetes (3 parts) at New York Times\n    * Nanoservices at BBC\n    * PowerfulSeal: Testing Tool for Kubernetes Clusters at Bloomberg\n    * Conductor: Microservices Orchestrator at Netflix\n    * Docker Containers that Power Over 100.000 Online Shops at Shopify\n    * Microservice Architecture at Medium\n    * From bare-metal to Kubernetes at Betabrand\n    * Kubernetes at Tinder\n    * Kubernetes at Quora\n    * Kubernetes Platform at Pinterest\n    * Microservices at Nubank\n    * Payment Transaction Management in Microservices at Mercari\n    * Service Mesh at Snap\n    * GRIT: Protocol for Distributed Transactions across Microservices at eBay\n    * Rubix: Kubernetes at Palantir\n    * CRISP: Critical Path Analysis for Microservice Architectures at Uber\n  * Distributed Caching\n\n    * EVCache: Distributed In-memory Caching at Netflix\n    * EVCache Cache Warmer Infrastructure at Netflix\n    * Memsniff: Robust Memcache Traffic Analyzer at Box\n    * Caching with Consistent Hashing and Cache Smearing at Etsy\n    * Analysis of Photo Caching at Facebook\n    * Cache Efficiency Exercise at Facebook\n    * tCache: Scalable Data-aware Java Caching at Trivago\n    * Pycache: In-process Caching at Quora\n    * Reduce Memcached Memory Usage by 50% at Trivago\n    * Caching Internal Service Calls at Yelp\n    * Estimating the Cache Efficiency using Big Data at Allegro\n    * Distributed Cache at Zalando\n    * Application Data Caching from RAM to SSD at NetFlix\n    * Tradeoffs of Replicated Cache at Skyscanner\n    * Avoiding Cache Stampede at DoorDash\n    * Location Caching with Quadtrees at Yext\n    * Video Metadata Caching at Vimeo\n    * Scaling Redis at Twitter\n    * Scaling Job Queue with Redis at Slack\n    * Moving persistent data out of Redis at Github\n    * Storing Hundreds of Millions of Simple Key-Value Pairs in Redis at Instagram\n    * Redis at Trivago\n    * Optimizing Redis Storage at Deliveroo\n    * Memory Optimization in Redis at Wattpad\n    * Redis Fleet at Heroku\n    * Solving Remote Build Cache Misses (2 parts) at SoundCloud\n    * Ratings & Reviews (2 parts) at Flipkart\n    * Prefetch Caching of Items at eBay\n    * Cross-Region Caching Library at Wix\n    * Improving Distributed Caching Performance and Efficiency at Pinterest\n    * Standardize and Improve Microservices Caching at DoorDash\n    * HTTP Caching and CDN\n\n      * Zynga Geo Proxy: Reducing Mobile Game Latency at Zynga\n      * Google AMP at Cond\u00e9 Nast\n      * A/B Tests on Hosting Infrastructure (CDNs) at Deliveroo\n      * HAProxy with Kubernetes for User-facing Traffic at SoundCloud\n      * Bandaid: Service Proxy at Dropbox\n      * Service Workers at Slack\n      * CDN Services at Spotify\n  * Distributed Locking\n\n    * Chubby: Lock Service for Loosely Coupled Distributed Systems at Google\n    * Distributed Locking at Uber\n    * Distributed Locks using Redis at GoSquared\n    * ZooKeeper at Twitter\n    * Eliminating Duplicate Queries using Distributed Locking at Chartio\n  * Distributed Tracking, Tracing, and Measuring\n\n    * Zipkin: Distributed Systems Tracing at Twitter\n    * Improve Zipkin Traces using Kubernetes Pod Metadata at SoundCloud\n    * Canopy: Scalable Distributed Tracing & Analysis at Facebook\n    * Pintrace: Distributed Tracing at Pinterest\n    * XCMetrics: All-in-One Tool for Tracking Xcode Build Metrics at Spotify\n    * Real-time Distributed Tracing at LinkedIn\n    * Tracking Service Infrastructure at Scale at Shopify\n    * Distributed Tracing at HelloFresh\n    * Analyzing Distributed Trace Data at Pinterest\n    * Distributed Tracing at Uber\n    * JVM Profiler: Tracing Distributed JVM Applications at Uber\n    * Data Checking at Dropbox\n    * Tracing Distributed Systems at Showmax\n    * osquery Across the Enterprise at Palantir\n    * StatsD at Etsy\n    * StatsD at DoorDash\n  * Distributed Scheduling\n\n    * Distributed Task Scheduling (3 parts) at PagerDuty\n    * Building Cron at Google\n    * Distributed Cron Architecture at Quora\n    * Chronos: A Replacement for Cron at Airbnb\n    * Scheduler at Nextdoor\n    * Peloton: Unified Resource Scheduler for Diverse Cluster Workloads at Uber\n    * Fenzo: OSS Scheduler for Apache Mesos Frameworks at Netflix\n    * Airflow - Workflow Orchestration\n\n      * Airflow at Airbnb\n      * Airflow at Pandora\n      * Airflow at Robinhood\n      * Airflow at Lyft\n      * Airflow at Drivy\n      * Airflow at Grab\n      * Airflow at Adobe\n      * Auditing Airflow Job Runs at Walmart\n      * MaaT: DAG-based Distributed Task Scheduler at Alibaba\n      * boundary-layer: Declarative Airflow Workflows at Etsy\n  * Distributed Monitoring and Alerting\n\n    * Unicorn: Remediation System at eBay\n    * M3: Metrics and Monitoring Platform at Uber\n    * Athena: Automated Build Health Management System at Dropbox\n    * Vortex: Monitoring Server Applications at Dropbox\n    * Nuage: Cloud Management Service at LinkedIn\n    * Telltale: Application Monitoring at Netflix\n    * ThirdEye: Monitoring Platform at LinkedIn\n    * Periskop: Exception Monitoring Service at SoundCloud\n    * Securitybot: Distributed Alerting Bot at Dropbox\n    * Monitoring System at Alibaba\n    * Real User Monitoring at Dailymotion\n    * Alerting Ecosystem at Uber\n    * Alerting Framework at Airbnb\n    * Alerting on Service-Level Objectives (SLOs) at SoundCloud\n    * Job-based Forecasting Workflow for Observability Anomaly Detection at Uber\n    * Monitoring and Alert System using Graphite and Cabot at HackerEarth\n    * Observability (2 parts) at Twitter\n    * Distributed Security Alerting at Slack\n    * Real-Time News Alerting at Bloomberg\n    * Data Pipeline Monitoring System at LinkedIn\n    * Monitoring and Observability at Picnic\n  * Distributed Security\n\n    * Approach to Security at Scale at Dropbox\n    * Aardvark and Repokid: AWS Least Privilege for Distributed, High-Velocity Development at Netflix\n    * LISA: Distributed Firewall at LinkedIn\n    * Secure Infrastructure To Store Bitcoin In The Cloud at Coinbase\n    * BinaryAlert: Real-time Serverless Malware Detection at Airbnb\n    * Scalable IAM Architecture to Secure Access to 100 AWS Accounts at Segment\n    * OAuth Audit Toolbox at Indeed\n    * Active Directory Password Blacklisting at Yelp\n    * Syscall Auditing at Scale at Slack\n    * Athenz: Fine-Grained, Role-Based Access Control at Yahoo\n    * WebAuthn Support for Secure Sign In at Dropbox\n    * Security Development Lifecycle at Slack\n    * Unprivileged Container Builds at Kinvolk\n    * Diffy: Differencing Engine for Digital Forensics in the Cloud at Netflix\n    * Detecting Credential Compromise in AWS at Netflix\n    * Scalable User Privacy at Spotify\n    * AVA: Audit Web Applications at Indeed\n    * TTL as a Service: Automatic Revocation of Stale Privileges at Yelp\n    * Enterprise Key Management at Slack\n    * Scalability and Authentication at Twitch\n    * Edge Authentication and Token-Agnostic Identity Propagation at Netflix\n    * Hardening Kubernetes Infrastructure with Cilium at Palantir\n    * Improving Web Vulnerability Management through Automation at Lyft\n    * Clock Skew when Syncing Password Payloads at Drobbox\n  * Distributed Messaging, Queuing, and Event Streaming\n\n    * Cape: Event Stream Processing Framework at Dropbox\n    * Brooklin: Distributed Service for Near Real-Time Data Streaming at LinkedIn\n    * Samza: Stream Processing System for Latency Insighs at LinkedIn\n    * Bullet: Forward-Looking Query Engine for Streaming Data at Yahoo\n    * EventHorizon: Tool for Watching Events Streaming at Etsy\n    * Qmessage: Distributed, Asynchronous Task Queue at Quora\n    * Cherami: Message Queue System for Transporting Async Tasks at Uber\n    * Dynein: Distributed Delayed Job Queueing System at Airbnb\n    * Timestone: Queueing System for Non-Parallelizable Workloads at Netflix\n    * Messaging Service at Riot Games\n    * Debugging Production with Event Logging at Zillow\n    * Cross-platform In-app Messaging Orchestration Service at Netflix\n    * Video Gatekeeper at Netflix\n    * Scaling Push Messaging for Millions of Devices at Netflix\n    * Delaying Asynchronous Message Processing with RabbitMQ at Indeed\n    * Benchmarking Streaming Computation Engines at Yahoo\n    * Improving Stream Data Quality With Protobuf Schema Validation at Deliveroo\n    * Scaling Email Infrastructure at Medium\n    * Real-time Messaging at Slack\n    * Event Stream Database at Nike\n    * Event Tracking System at Udemy\n    * Event-Driven Messaging\n\n      * Domain-Driven Design at Alibaba\n      * Domain-Driven Design at Weebly\n      * Domain-Driven Design at Moonpig\n      * Scaling Event Sourcing for Netflix Downloads\n      * Scaling Event-Sourcing at Jet.com\n      * Event Sourcing (2 parts) at eBay\n      * Event Sourcing at FREE NOW\n      * Scalable content feed using Event Sourcing and CQRS patterns at Brainly\n    * Pub-Sub Messaging\n\n      * Pulsar: Pub-Sub Messaging at Scale at Yahoo\n      * Wormhole: Pub-Sub System at Facebook\n      * MemQ: Cloud Native Pub-Sub System at Pinterest\n      * Pub-Sub in Microservices at Netflix\n    * Kafka - Message Broker\n\n      * Kafka at LinkedIn\n      * Kafka at Pinterest\n      * Kafka at Trello\n      * Kafka at Salesforce\n      * Kafka at The New York Times\n      * Kafka at Yelp\n      * Kafka at Criteo\n      * Kafka on Kubernetes at Shopify\n      * Kafka on PaaSTA: Running Kafka on Kubernetes at Yelp (2 parts)\n      * Migrating Kafka's Zookeeper with No Downtime at Yelp\n      * Reprocessing and Dead Letter Queues with Kafka at Uber\n      * Chaperone: Audit Kafka End-to-End at Uber\n      * Finding Kafka throughput limit in infrastructure at Dropbox\n      * Cost Orchestration at Walmart\n      * InfluxDB and Kafka to Scale to Over 1 Million Metrics a Second at Hulu\n      * Scaling Kafka to Support Data Growth at PayPal\n    * Stream Data Deduplication\n\n      * Exactly-once Semantics with Kafka\n      * Real-time Deduping at Tapjoy\n      * Deduplication at Segment\n      * Deduplication at Mail.Ru\n      * Petabyte Scale Data Deduplication at Mixpanel\n  * Distributed Logging\n\n    * Logging at LinkedIn\n    * Scalable and Reliable Log Ingestion at Pinterest\n    * High-performance Replicated Log Service at Twitter\n    * Logging Service with Spark at CERN Accelerator\n    * Logging and Aggregation at Quora\n    * Collection and Analysis of Daemon Logs at Badoo\n    * Log Parsing with Static Code Analysis at Palantir\n    * Centralized Application Logging at eBay\n    * Enrich VPC Flow Logs at Hyper Scale to provide Network Insight at Netflix\n    * BookKeeper: Distributed Log Storage at Yahoo\n    * LogDevice: Distributed Data Store for Logs at Facebook\n    * LogFeeder: Log Collection System at Yelp\n    * DBLog: Generic Change-Data-Capture Framework at Netflix\n  * Distributed Searching\n\n    * Search Architecture at Instagram\n    * Search Architecture at eBay\n    * Search Architecture at Box\n    * Search Discovery Indexing Platform at Coupang\n    * Universal Search System at Pinterest\n    * Improving Search Engine Efficiency by over 25% at eBay\n    * Indexing and Querying Telemetry Logs with Lucene at Palantir\n    * Query Understanding at TripAdvisor\n    * Search Federation Architecture at LinkedIn (2018)\n    * Search at Slack\n    * Search and Recommendations at DoorDash\n    * Stability and Scalability for Search at Twitter\n    * Search Service at Twitter (2014)\n    * Autocomplete Search (2 parts) at Traveloka\n    * Data-Driven Autocorrection System at Canva\n    * Adapting Search to Indian Phonetics at Flipkart\n    * Nautilus: Search Engine at Dropbox\n    * Galene: Search Architecture of LinkedIn\n    * Manas: High Performing Customized Search System at Pinterest\n    * Sherlock: Near Real Time Search Indexing at Flipkart\n    * Nebula: Storage Platform to Build Search Backends at Airbnb\n    * ELK (Elasticsearch, Logstash, Kibana) Stack\n\n      * Predictions in Real Time with ELK at Uber\n      * Building a scalable ELK stack at Envato\n      * ELK at Robinhood\n      * Scaling Elasticsearch Clusters at Uber\n      * Elasticsearch Performance Tuning Practice at eBay\n      * Improve Performance using Elasticsearch Plugins (2 parts) at Tinder\n      * Elasticsearch at Kickstarter\n      * Log Parsing with Logstash and Google Protocol Buffers at Trivago\n      * Fast Order Search using Data Pipeline and Elasticsearch at Yelp\n      * Moving Core Business Search to Elasticsearch at Yelp\n      * Sharding out Elasticsearch at Vinted\n      * Self-Ranking Search with Elasticsearch at Wattpad\n      * Vulcanizer: a library for operating Elasticsearch at Github\n  * Distributed Storage\n\n    * In-memory Storage\n\n      * MemSQL Architecture - The Fast (MVCC, InMem, LockFree, CodeGen) And Familiar (SQL)\n      * Optimizing Memcached Efficiency at Quora\n      * Real-Time Data Warehouse with MemSQL on Cisco UCS\n      * Moving to MemSQL at Tapjoy\n      * MemSQL and Kinesis for Real-time Insights at Disney\n      * MemSQL to Query Hundreds of Billions of Rows in a Dashboard at Pandora\n    * Object Storage\n\n      * Scaling HDFS at Uber\n      * Reasons for Choosing S3 over HDFS at Databricks\n      * File System on Amazon S3 at Quantcast\n      * Image Recovery at Scale Using S3 Versioning at Trivago\n      * Cloud Object Store at Yahoo\n      * Ambry: Distributed Immutable Object Store at LinkedIn\n      * Dynamometer: Scale Testing HDFS on Minimal Hardware with Maximum Fidelity at LinkedIn\n      * Hammerspace: Persistent, Concurrent, Off-heap Storage at Airbnb\n      * MezzFS: Mounting Object Storage in Media Processing Platform at Netflix\n      * Magic Pocket: In-house Multi-exabyte Storage System at Dropbox\n  * Relational Databases\n\n    * Building and Deploying MySQL Raft at Meta\n    * MySQL for Schema-less Data at FriendFeed\n    * MySQL at Pinterest\n    * PostgreSQL at Twitch\n    * Scaling MySQL-based Financial Reporting System at Airbnb\n    * Scaling MySQL at Wix\n    * MaxScale (MySQL) Database Proxy at Airbnb\n    * Switching from Postgres to MySQL at Uber\n    * Handling Growth with Postgres at Instagram\n    * Scaling the Analytics Database (Postgres) at TransferWise\n    * Updating a 50 Terabyte PostgreSQL Database at Adyen\n    * Scaling Database Access for 100s of Billions of Queries per Day at PayPal\n    * Minimizing Read-Write MySQL Downtime at Yelp\n    * Migrating MySQL from 5.6 to 8.0 at Facebook\n    * Migration from HBase to MyRocks at Quora\n    * Replication\n\n      * MySQL Parallel Replication (4 parts) at Booking.com\n      * Mitigating MySQL Replication Lag and Reducing Read Load at Github\n      * Read Consistency with Database Replicas at Shopify\n      * Black-Box Auditing: Verifying End-to-End Replication Integrity between MySQL and Redshift at Yelp\n      * Partitioning Main MySQL Database at Airbnb\n      * Herb: Multi-DC Replication Engine for Schemaless Datastore at Uber\n    * Sharding\n\n      * Sharding MySQL at Pinterest\n      * Sharding MySQL at Twilio\n      * Sharding MySQL at Square\n      * Sharding MySQL at Quora\n      * Sharding Layer of Schemaless Datastore at Uber\n      * Sharding & IDs at Instagram\n      * Sharding Postgres at Notion\n      * Solr: Improving Performance for Batch Indexing at Box\n      * Geosharded Recommendations (3 parts) at Tinder\n      * Scaling Services with Shard Manager at Facebook\n    * Presto the Distributed SQL Query Engine\n\n      * Presto at Pinterest\n      * Presto Infrastructure at Lyft\n      * Presto at Grab\n      * Engineering Data Analytics with Presto and Apache Parquet at Uber\n      * Data Wrangling at Slack\n      * Presto in Big Data Platform on AWS at Netflix\n      * Presto Auto Scaling at Eventbrite\n      * Speed Up Presto with Alluxio Local Cache at Uber\n  * NoSQL Databases\n\n    * Key-Value Databases\n\n      * DynamoDB at Nike\n      * DynamoDB at Segment\n      * DynamoDB at Mapbox\n      * Manhattan: Distributed Key-Value Database at Twitter\n      * Sherpa: Distributed NoSQL Key-Value Store at Yahoo\n      * HaloDB: Embedded Key-Value Storage Engine at Yahoo\n      * MPH: Fast and Compact Immutable Key-Value Stores at Indeed\n      * Venice: Distributed Key-Value Database at Linkedin\n    * Columnar Databases\n\n      * Cassandra\n\n        * Cassandra at Instagram\n        * Storing Images in Cassandra at Walmart\n        * Storing Messages with Cassandra at Discord\n        * Scaling Cassandra Cluster at Walmart\n        * Scaling Ad Analytics with Cassandra at Yelp\n        * Scaling to 100+ Million Reads/Writes using Spark and Cassandra at Dream11\n        * Moving Food Feed from Redis to Cassandra at Zomato\n        * Benchmarking Cassandra Scalability on AWS at Netflix\n        * Service Decomposition at Scale with Cassandra at Intuit QuickBooks\n        * Cassandra for Keeping Counts In Sync at SoundCloud\n        * Cassandra Driver Configuration for Improved Performance and Load Balancing at Glassdoor\n        * cstar: Cassandra Orchestration Tool at Spotify\n      * HBase\n\n        * HBase at Salesforce\n        * HBase in Facebook Messages\n        * HBase in Imgur Notification\n        * Improving HBase Backup Efficiency at Pinterest\n        * HBase at Xiaomi\n      * Redshift\n\n        * Redshift at GIPHY\n        * Redshift at Hudl\n        * Redshift at Drivy\n    * Document Databases\n\n      * eBay: Building Mission-Critical Multi-Data Center Applications with MongoDB\n      * MongoDB at Baidu: Multi-Tenant Cluster Storing 200+ Billion Documents across 160 Shards\n      * Migrating Mongo Data at Addepar\n      * The AWS and MongoDB Infrastructure of Parse (acquired by Facebook)\n      * Migrating Mountains of Mongo Data at Addepar\n      * Couchbase Ecosystem at LinkedIn\n      * SimpleDB at Zendesk\n      * Espresso: Distributed Document Store at LinkedIn\n    * Graph Databases\n\n      * FlockDB: Distributed Graph Database at Twitter\n      * TAO: Distributed Data Store for the Social Graph at Facebook\n      * Akutan: Distributed Knowledge Graph Store at eBay\n  * Time Series Databases\n\n    * Beringei: High-performance Time Series Storage Engine at Facebook\n    * MetricsDB: TimeSeries Database for storing metrics at Twitter\n    * Atlas: In-memory Dimensional Time Series Database at Netflix\n    * Heroic: Time Series Database at Spotify\n    * Roshi: Distributed Storage System for Time-Series Event at SoundCloud\n    * Goku: Time Series Database at Pinterest\n    * Scaling Time Series Data Storage (2 parts) at Netflix\n    * Druid - Real-time Analytics Database\n\n      * Druid at Airbnb\n      * Druid at Walmart\n      * Druid at eBay\n      * Druid at Netflix\n  * Distributed Repositories, Dependencies, and Configurations Management\n\n    * DGit: Distributed Git at Github\n    * Stemma: Distributed Git Server at Palantir\n    * Configuration Management for Distributed Systems at Flickr\n    * Git Repository at Microsoft\n    * Solve Git Problem with Large Repositories at Microsoft\n    * Single Repository at Google\n    * Scaling Infrastructure and (Git) Workflow at Adyen\n    * Dotfiles Distribution at Booking.com\n    * Secret Detector: Preventing Secrets in Source Code at Yelp\n    * Managing Software Dependency at Scale at LinkedIn\n    * Merging Code in High-velocity Repositories at LinkedIn\n    * Dynamic Configuration at Twitter\n    * Dynamic Configuration at Mixpanel\n    * Dynamic Configuration at GoDaddy\n  * Scaling Continuous Integration and Continuous Delivery\n\n    * Continuous Integration Stack at Facebook\n    * Continuous Integration with Distributed Repositories and Dependencies at Netflix\n    * Continuous Integration and Deployment with Bazel at Dropbox\n    * Continuous Deployments at BuzzFeed\n    * Screwdriver: Continuous Delivery Build System for Dynamic Infrastructure at Yahoo\n    * CI/CD at Betterment\n    * CI/CD at Brainly\n    * Scaling iOS CI with Anka at Shopify\n    * Scaling Jira Server at Yelp\n    * Auto-scaling CI/CD cluster at Flexport\n\n## Availability\n\n  * Resilience Engineering: Learning to Embrace Failure\n\n    * Resilience Engineering with Project Waterbear at LinkedIn\n    * Resiliency against Traffic Oversaturation at iHeartRadio\n    * Resiliency in Distributed Systems at GO-JEK\n    * Practical NoSQL Resilience Design Pattern for the Enterprise at eBay\n    * Ensuring Resilience to Disaster at Quora\n    * Site Resiliency at Expedia\n    * Resiliency and Disaster Recovery with Kafka at eBay\n    * Disaster Recovery for Multi-Region Kafka at Uber\n  * Failover\n\n    * The Evolution of Global Traffic Routing and Failover\n    * Testing for Disaster Recovery Failover Testing\n    * Designing a Microservices Architecture for Failure\n    * ELB for Automatic Failover at GoSquared\n    * Eliminate the Database for Higher Availability at American Express\n    * Failover with Redis Sentinel at Vinted\n    * High-availability SaaS Infrastructure at FreeAgent\n    * MySQL High Availability at GitHub\n    * MySQL High Availability at Eventbrite\n    * Business Continuity & Disaster Recovery at Walmart\n  * Load Balancing\n\n    * Introduction to Modern Network Load Balancing and Proxying\n    * Top Five (Load Balancing) Scalability Patterns\n    * Load Balancing infrastructure to support more than 1.3 billion users at Facebook\n    * DHCPLB: DHCP Load Balancer at Facebook\n    * Katran: Scalable Network Load Balancer at Facebook\n    * Deterministic Aperture: A Distributed, Load Balancing Algorithm at Twitter\n    * Load Balancing with Eureka at Netflix\n    * Edge Load Balancing at Netflix\n    * Zuul 2: Cloud Gateway at Netflix\n    * Load Balancing at Yelp\n    * Load Balancing at Github\n    * Consistent Hashing to Improve Load Balancing at Vimeo\n    * UDP Load Balancing at 500 pixel\n    * QALM: QoS Load Management Framework at Uber\n    * Traffic Steering using Rum DNS at LinkedIn\n    * Traffic Infrastructure (Edge Network) at Dropbox\n    * Intelligent DNS based load balancing at Dropbox\n    * Monitor DNS systems at Stripe\n    * Multi-DNS Architecture (3 parts) at Monday\n    * Dynamic Anycast DNS Infrastructure at Hulu\n  * Rate Limiting\n\n    * Rate Limiting for Scaling to Millions of Domains at Cloudflare\n    * Cloud Bouncer: Distributed Rate Limiting at Yahoo\n    * Scaling API with Rate Limiters at Stripe\n    * Distributed Rate Limiting at Allegro\n    * Ratequeue: Core Queueing-And-Rate-Limiting System at Twilio\n    * Quotas Service at Grab\n  * Autoscaling\n\n    * Autoscaling Pinterest\n    * Autoscaling Based on Request Queuing at Square\n    * Autoscaling Jenkins at Trivago\n    * Autoscaling Pub-Sub Consumers at Spotify\n    * Autoscaling Bigtable Clusters based on CPU Load at Spotify\n    * Autoscaling AWS Step Functions Activities at Yelp\n    * Scryer: Predictive Auto Scaling Engine at Netflix\n    * Bouncer: Simple AWS Auto Scaling Rollovers at Palantir\n    * Clusterman: Autoscaling Mesos Clusters at Yelp\n  * Availability in Globally Distributed Storage Systems at Google\n  * NodeJS High Availability at Yahoo\n  * Operations (11 parts) at LinkedIn\n  * Monitoring Powers High Availability for LinkedIn Feed\n  * Supporting Global Events at Facebook\n  * High Availability at BlaBlaCar\n  * High Availability at Netflix\n  * High Availability Cloud Infrastructure at Twilio\n  * Automating Datacenter Operations at Dropbox\n  * Globalizing Player Accounts at Riot Games\n\n## Stability\n\n  * Circuit Breaker\n\n    * Circuit Breaking in Distributed Systems\n    * Circuit Breaker for Scaling Containers\n    * Lessons in Resilience at SoundCloud\n    * Protector: Circuit Breaker for Time Series Databases at Trivago\n    * Improved Production Stability with Circuit Breakers at Heroku\n    * Circuit Breaker at Zendesk\n    * Circuit Breaker at Traveloka\n    * Circuit Breaker at Shopify\n  * Timeouts\n\n    * Fault Tolerance (Timeouts and Retries, Thread Separation, Semaphores, Circuit Breakers) at Netflix\n    * Enforce Timeout: A Reliability Methodology at DoorDash\n    * Troubleshooting a Connection Timeout Issue with tcp_tw_recycle Enabled at eBay\n  * Crash-safe Replication for MySQL at Booking.com\n  * Bulkheads: Partition and Tolerate Failure in One Part\n  * Steady State: Always Put Logs on Separate Disk\n  * Throttling: Maintain a Steady Pace\n  * Multi-Clustering: Improving Resiliency and Stability of a Large-scale Monolithic API Service at LinkedIn\n  * Determinism (4 parts) in League of Legends Server\n\n## Performance\n\n  * Performance Optimization on OS, Storage, Database, Network\n\n    * Improving Performance with Background Data Prefetching at Instagram\n    * Fixing Linux filesystem performance regressions at LinkedIn\n    * Compression Techniques to Solve Network I/O Bottlenecks at eBay\n    * Optimizing Web Servers for High Throughput and Low Latency at Dropbox\n    * Linux Performance Analysis in 60.000 Milliseconds at Netflix\n    * Live Downsizing Google Cloud Persistent Disks (PD-SSD) at Mixpanel\n    * Decreasing RAM Usage by 40% Using jemalloc with Python & Celery at Zapier\n    * Reducing Memory Footprint at Slack\n    * Continuous Load Testing at Slack\n    * Performance Improvements at Pinterest\n    * Server Side Rendering at Wix\n    * 30x Performance Improvements on MySQLStreamer at Yelp\n    * Optimizing APIs at Netflix\n    * Performance Monitoring with Riemann and Clojure at Walmart\n    * Performance Tracking Dashboard for Live Games at Zynga\n    * Optimizing CAL Report Hadoop MapReduce Jobs at eBay\n    * Performance Tuning on Quartz Scheduler at eBay\n    * Profiling C++ (Part 1: Optimization, Part 2: Measurement and Analysis) at Riot Games\n    * Profiling React Server-Side Rendering at HomeAway\n    * Hardware-Assisted Video Transcoding at Dailymotion\n    * Cross Shard Transactions at 10 Million RPS at Dropbox\n    * API Profiling at Pinterest\n    * Pagelets Parallelize Server-side Processing at Yelp\n    * Improving key expiration in Redis at Twitter\n    * Ad Delivery Network Performance Optimization with Flame Graphs at MindGeek\n    * Predictive CPU isolation of containers at Netflix\n    * Improving HDFS I/O Utilization for Efficiency at Uber\n    * Cloud Jewels: Estimating kWh in the Cloud at Etsy\n    * Unthrottled: Fixing CPU Limits in the Cloud (2 parts) at Indeed\n  * Performance Optimization by Tuning Garbage Collection\n\n    * Garbage Collection in Java Applications at LinkedIn\n    * Garbage Collection in High-Throughput, Low-Latency Machine Learning Services at Adobe\n    * Garbage Collection in Redux Applications at SoundCloud\n    * Garbage Collection in Go Application at Twitch\n    * Analyzing V8 Garbage Collection Logs at Alibaba\n    * Python Garbage Collection for Dropping 50% Memory Growth Per Request at Instagram\n    * Performance Impact of Removing Out of Band Garbage Collector (OOBGC) at Github\n    * Debugging Java Memory Leaks at Allegro\n    * Optimizing JVM at Alibaba\n    * Tuning JVM Memory for Large-scale Services at Uber\n    * Solr Performance Tuning at Walmart\n    * Memory Tuning a High Throughput Microservice at Flipkart\n  * Performance Optimization on Image, Video, Page Load\n\n    * Optimizing 360 Photos at Scale at Facebook\n    * Reducing Image File Size in the Photos Infrastructure at Etsy\n    * Improving GIF Performance at Pinterest\n    * Optimizing Video Playback Performance at Pinterest\n    * Optimizing Video Stream for Low Bandwidth with Dynamic Optimizer at Netflix\n    * Adaptive Video Streaming at YouTube\n    * Reducing Video Loading Time at Dailymotion\n    * Improving Homepage Performance at Zillow\n    * The Process of Optimizing for Client Performance at Expedia\n    * Web Performance at BBC\n  * Performance Optimization by Brotli Compression\n\n    * Boosting Site Speed Using Brotli Compression at LinkedIn\n    * Brotli at Booking.com\n    * Brotli at Treebo\n    * Deploying Brotli for Static Content at Dropbox\n    * Progressive Enhancement with Brotli at Yelp\n    * Speeding Up Redis with Compression at Doordash\n  * Performance Optimization on Languages and Frameworks\n\n    * Python at Netflix\n    * Python at scale (3 parts) at Instagram\n    * OCaml best practices (2 parts) at Issuu\n    * PHP at Slack\n    * Go at Trivago\n    * TypeScript at Etsy\n    * Kotlin for taming state at Etsy\n    * BPF and Go at Bumble\n    * Ruby on Rails at GitLab\n    * Rust in production at Figma\n    * Choosing a Language Stack at WeWork\n    * Switching from Go to Rust at Discord\n    * ASP.NET Core Performance Optimization at Agoda\n    * Data Race Patterns in Go at Uber\n\n## Intelligence\n\n  * Big Data\n\n    * Data Platform at Uber\n    * Data Platform at BMW\n    * Data Platform at Netflix\n    * Data Platform at Flipkart\n    * Data Platform at Coupang\n    * Data Platform at DoorDash\n    * Data Platform at Khan Academy\n    * Data Infrastructure at Airbnb\n    * Data Infrastructure at LinkedIn\n    * Data Infrastructure at GO-JEK\n    * Data Ingestion Infrastructure at Pinterest\n    * Data Analytics Architecture at Pinterest\n    * Data Orchestration Service at Spotify\n    * Big Data Processing (2 parts) at Spotify\n    * Big Data Processing at Uber\n    * Analytics Pipeline at Lyft\n    * Analytics Pipeline at Grammarly\n    * Analytics Pipeline at Teads\n    * ML Data Pipelines for Real-Time Fraud Prevention at PayPal\n    * Big Data Analytics and ML Techniques at LinkedIn\n    * Self-Serve Reporting Platform on Hadoop at LinkedIn\n    * Privacy-Preserving Analytics and Reporting at LinkedIn\n    * Analytics Platform for Tracking Item Availability at Walmart\n    * Real-Time Analytics for Mobile App Crashes using Apache Pinot at Uber\n    * HALO: Hardware Analytics and Lifecycle Optimization at Facebook\n    * RBEA: Real-time Analytics Platform at King\n    * AresDB: GPU-Powered Real-time Analytics Engine at Uber\n    * AthenaX: Streaming Analytics Platform at Uber\n    * Jupiter: Config Driven Adtech Batch Ingestion Platform at Uber\n    * Delta: Data Synchronization and Enrichment Platform at Netflix\n    * Keystone: Real-time Stream Processing Platform at Netflix\n    * Databook: Turning Big Data into Knowledge with Metadata at Uber\n    * Amundsen: Data Discovery & Metadata Engine at Lyft\n    * Maze: Funnel Visualization Platform at Uber\n    * Metacat: Making Big Data Discoverable and Meaningful at Netflix\n    * SpinalTap: Change Data Capture System at Airbnb\n    * Accelerator: Fast Data Processing Framework at eBay\n    * Omid: Transaction Processing Platform at Yahoo\n    * TensorFlowOnSpark: Distributed Deep Learning on Big Data Clusters at Yahoo\n    * CaffeOnSpark: Distributed Deep Learning on Big Data Clusters at Yahoo\n    * Spark on Scala: Analytics Reference Architecture at Adobe\n    * Experimentation Platform (2 parts) at Spotify\n    * Experimentation Platform at Airbnb\n    * Smart Product Platform at Zalando\n    * Log Analysis Platform at LINE\n    * Data Visualisation Platform at Myntra\n    * Building and Scaling Data Lineage at Netflix\n    * Building a scalable data management system for computer vision tasks at Pinterest\n    * Structured Data at Etsy\n    * Scaling a Mature Data Pipeline - Managing Overhead at Airbnb\n    * Spark Partitioning Strategies at Airbnb\n    * Scaling the Hadoop Distributed File System at LinkedIn\n    * Scaling Hadoop YARN cluster beyond 10,000 nodes at LinkedIn\n    * Scaling Big Data Access Controls at Pinterest\n  * Distributed Machine Learning\n\n    * Machine Learning Platform at Yelp\n    * Machine Learning Platform at Etsy\n    * Machine Learning Platform at Zalando\n    * Scaling AI/ML Infrastructure at Uber\n    * Recommendation System at Lyft\n    * Platform for Serving Recommendations at Etsy\n    * Infrastructure to Run User Forecasts at Spotify\n    * Aroma: Using ML for Code Recommendation at Facebook\n    * Flyte: Cloud Native Machine Learning and Data Processing Platform at Lyft\n    * LyftLearn: ML Model Training Infrastructure built on Kubernetes at Lyft\n    * Horovod: Open Source Distributed Deep Learning Framework for TensorFlow at Uber\n    * COTA: Improving Customer Care with NLP & Machine Learning at Uber\n    * Manifold: Model-Agnostic Visual Debugging Tool for Machine Learning at Uber\n    * Repo-Topix: Topic Extraction Framework at Github\n    * Concourse: Generating Personalized Content Notifications in Near-Real-Time at LinkedIn\n    * Altus Care: Applying a Chatbot to Platform Engineering at eBay\n    * PyKrylov: Accelerating Machine Learning Research at eBay\n    * Box Graph: Spontaneous Social Network at Box\n    * PricingNet: Pricing Modelling with Neural Networks at Skyscanner\n    * PinText: Multitask Text Embedding System at Pinterest\n    * SearchSage: Learning Search Query Representations at Pinterest\n    * Cannes: ML saves $1.7M a year on document previews at Dropbox\n    * Scaling Gradient Boosted Trees for Click-Through-Rate Prediction at Yelp\n    * Learning with Privacy at Scale at Apple\n    * Deep Learning for Image Classification Experiment at Mercari\n    * Deep Learning for Frame Detection in Product Images at Allegro\n    * Content-based Video Relevance Prediction at Hulu\n    * Moderating Inappropriate Video Content at Yelp\n    * Improving Photo Selection With Deep Learning at TripAdvisor\n    * Personalized Recommendations for Experiences Using Deep Learning at TripAdvisor\n    * Personalised Recommender Systems at BBC\n    * Machine Learning (2 parts) at Cond\u00e9 Nast\n    * Natural Language Processing and Content Analysis (2 parts) at Cond\u00e9 Nast\n    * Mapping the World of Music Using Machine Learning (2 parts) at iHeartRadio\n    * Machine Learning to Improve Streaming Quality at Netflix\n    * Machine Learning to Match Drivers & Riders at GO-JEK\n    * Improving Video Thumbnails with Deep Neural Nets at YouTube\n    * Quantile Regression for Delivering On Time at Instacart\n    * Cross-Lingual End-to-End Product Search with Deep Learning at Zalando\n    * Machine Learning at Jane Street\n    * Machine Learning for Ranking Answers End-to-End at Quora\n    * Clustering Similar Stories Using LDA at Flipboard\n    * Similarity Search at Flickr\n    * Large-Scale Machine Learning Pipeline for Job Recommendations at Indeed\n    * Deep Learning from Prototype to Production at Taboola\n    * Atom Smashing using Machine Learning at CERN\n    * Mapping Tags at Medium\n    * Clustering with the Dirichlet Process Mixture Model in Scala at Monsanto\n    * Map Pins with DBSCAN & Random Forests at Foursquare\n    * Forecasting at Uber\n    * Financial Forecasting at Uber\n    * Productionizing ML with Workflows at Twitter\n    * GUI Testing Powered by Deep Learning at eBay\n    * Scaling Machine Learning to Recommend Driving Routes at Pivotal\n    * Real-Time Predictions at DoorDash\n    * Machine Intelligence at Dropbox\n    * Machine Learning for Indexing Text from Billions of Images at Dropbox\n    * Modeling User Journeys via Semantic Embeddings at Etsy\n    * Automated Fake Account Detection at LinkedIn\n    * Building Knowledge Graph at Airbnb\n    * Core Modeling at Instagram\n    * Neural Architecture Search (NAS) for Prohibited Item Detection at Mercari\n    * Computer Vision at Airbnb\n    * 3D Home Backend Algorithms at Zillow\n    * Long-term Forecasts at Lyft\n    * Discovering Popular Dishes with Deep Learning at Yelp\n    * SplitNet Architecture for Ad Candidate Ranking at Twitter\n    * Jobs Filter at Indeed\n    * Architecting Restaurant Wait Time Predictions at Yelp\n    * Music Personalization at Spotify\n    * Deep Learning for Domain Name Valuation at GoDaddy\n    * Similarity Clustering to Catch Fraud Rings at Stripe\n    * Personalized Search at Etsy\n    * ML Feature Serving Infrastructure at Lyft\n    * Context-Specific Bidding System at Etsy\n    * Moderating Promotional Spam and Inappropriate Content in Photos at Scale at Yelp\n    * Optimizing Payments with Machine Learning at Dropbox\n    * Scaling Media Machine Learning at Netflix\n    * Similarity Engine at eBay\n\n## Architecture\n\n  * Tech Stack at Medium\n  * Tech Stack at Shopify\n  * Building Services (4 parts) at Airbnb\n  * Architecture of Evernote\n  * Architecture of Chat Service (3 parts) at Riot Games\n  * Architecture of League of Legends Client Update\n  * Architecture of Ad Platform at Twitter\n  * Architecture of API Gateway at Uber\n  * Architecture of API Gateway at Tinder\n  * Basic Architecture of Slack\n  * Lightweight Distributed Architecture to Handle Thousands of Library Releases at eBay\n  * Back-end at LinkedIn\n  * Back-end at Flickr\n  * Infrastructure (3 parts) at Zendesk\n  * Cloud Infrastructure at Grubhub\n  * Real-time Presence Platform at LinkedIn\n  * Settings Platform at LinkedIn\n  * Nearline System for Scale and Performance (2 parts) at Glassdoor\n  * Real-time User Action Counting System for Ads at Pinterest\n  * API Platform at Riot Games\n  * Games Platform at The New York Times\n  * Kabootar: Communication Platform at Swiggy\n  * Simone: Distributed Simulation Service at Netflix\n  * Seagull: Distributed System that Helps Running > 20 Million Tests Per Day at Yelp\n  * PriceAggregator: Intelligent System for Hotel Price Fetching (3 parts) at Agoda\n  * Phoenix: Testing Platform (3 parts) at Tinder\n  * Hexagonal Architecture at Netflix\n  * Architecture of Sticker Services at LINE\n  * Stack Overflow Enterprise at Palantir\n  * Architecture of Following Feed, Interest Feed, and Picked For You at Pinterest\n  * API Specification Workflow at WeWork\n  * Media Database at Netflix\n  * Member Transaction History Architecture at Walmart\n  * Sync Engine (2 parts) at Dropbox\n  * Ads Pacing Service at Twitter\n  * Rapid Event Notification System at Netflix\n  * Architectures of Finance, Banking, and Payment Systems\n\n    * Bank Backend at Monzo\n    * Trading Platform for Scale at Wealthsimple\n    * Core Banking System at Margo Bank\n    * Architecture of Nubank\n    * Tech Stack at TransferWise\n    * Tech Stack at Addepar\n    * Avoiding Double Payments in a Distributed Payments System at Airbnb\n    * Scaling Payments (3 parts) at Etsy\n    * Handles Millions of Digital Transactions Safely Everyday at Paytm\n    * Billing and Payment Platform at Grammarly\n\n## Interview\n\n  * Designing Large-Scale Systems\n\n    * My Scaling Hero - Jeff Atwood (a dose of Endorphins before your interview, JK)\n    * Software Engineering Advice from Building Large-Scale Distributed Systems - Jeff Dean\n    * Introduction to Architecting Systems for Scale\n    * Anatomy of a System Design Interview\n    * 8 Things You Need to Know Before a System Design Interview\n    * Top 10 System Design Interview Questions\n    * Top 10 Common Large-Scale Software Architectural Patterns in a Nutshell\n    * Cloud Big Data Design Patterns - Lynn Langit\n    * How NOT to design Netflix in your 45-minute System Design Interview?\n    * API Best Practices: Webhooks, Deprecation, and Design\n  * Explaining Low-Level Systems (OS, Network/Protocol, Database, Storage)\n\n    * The Precise Meaning of I/O Wait Time in Linux\n    * Paxos Made Live \u2013 An Engineering Perspective\n    * How to do Distributed Locking\n    * SQL Transaction Isolation Levels Explained\n  * \"What Happens When... and How\" Questions\n\n    * Netflix: What Happens When You Press Play?\n    * Monzo: How Peer-To-Peer Payments Work\n    * Transit and Peering: How Your Requests Reach GitHub\n    * How Spotify Streams Music\n\n## Organization\n\n  * Engineering Levels at SoundCloud\n  * Engineering Roles at Palantir\n  * Engineering Career Framework at Dropbox\n  * Scaling Engineering Teams at Twitter\n  * Scaling Decision-Making Across Teams at LinkedIn\n  * Scaling Data Science Team at GOJEK\n  * Scaling Agile at Zalando\n  * Scaling Agile at bol.com\n  * Lessons Learned from Scaling a Product Team at Intercom\n  * Hiring, Managing, and Scaling Engineering Teams at Typeform\n  * Scaling the Datagram Team at Instagram\n  * Scaling the Design Team at Flexport\n  * Team Model for Scaling a Design System at Salesforce\n  * Building Analytics Team (4 parts) at Wish\n  * From 2 Founders to 1000 Employees at Transferwise\n  * Lessons Learned Growing a UX Team from 10 to 170 at Adobe\n  * Five Lessons from Scaling at Pinterest\n  * Approach Engineering at Vinted\n  * Using Metrics to Improve the Development Process (and Coach People) at Indeed\n  * Mistakes to Avoid while Creating an Internal Product at Skyscanner\n  * RACI (Responsible, Accountable, Consulted, Informed) at Etsy\n  * Four Pillars of Leading People (Empathy, Inspiration, Trust, Honesty) at Zalando\n  * Pair Programming at Shopify\n  * Distributed Responsibility at Asana\n  * Rotating Engineers at Zalando\n  * Experiment Idea Review at Pinterest\n  * Tech Migrations at Spotify\n  * Improving Code Ownership at Yelp\n  * Agile Code Base at eBay\n  * Agile Data Engineering at Miro\n  * Automated Incident Management through Slack at Airbnb\n  * Refactor Organization at BBC\n  * Code Review\n\n    * Code Review at Palantir\n    * Code Review at LINE\n    * Code Reviews at Medium\n    * Code Review at LinkedIn\n    * Code Review at Disney\n    * Code Review at Netlify\n\n## Talk\n\n  * Distributed Systems in One Lesson - Tim Berglund, Senior Director of Developer Experience at Confluent\n  * Building Real Time Infrastructure at Facebook - Jeff Barber and Shie Erlich, Software Engineer at Facebook\n  * Building Reliable Social Infrastructure for Google - Marc Alvidrez, Senior Manager at Google\n  * Building a Distributed Build System at Google Scale - Aysylu Greenberg, SDE at Google\n  * Site Reliability Engineering at Dropbox - Tammy Butow, Site Reliability Engineering Manager at Dropbox\n  * How Google Does Planet-Scale for Planet-Scale Infra - Melissa Binde, SRE Director for Google Cloud Platform\n  * Netflix Guide to Microservices - Josh Evans, Director of Operations Engineering at Netflix\n  * Achieving Rapid Response Times in Large Online Services - Jeff Dean, Google Senior Fellow\n  * Architecture to Handle 80K RPS Celebrity Sales at Shopify - Simon Eskildsen, Engineering Lead at Shopify\n  * Lessons of Scale at Facebook - Bobby Johnson, Director of Engineering at Facebook\n  * Performance Optimization for the Greater China Region at Salesforce - Jeff Cheng, Enterprise Architect at Salesforce\n  * How GIPHY Delivers a GIF to 300 Millions Users - Alex Hoang and Nima Khoshini, Services Engineers at GIPHY\n  * High Performance Packet Processing Platform at Alibaba - Haiyong Wang, Senior Director at Alibaba\n  * Solving Large-scale Data Center and Cloud Interconnection Problems - Ihab Tarazi, CTO at Equinix\n  * Scaling Dropbox - Kevin Modzelewski, Back-end Engineer at Dropbox\n  * Scaling Reliability at Dropbox - Sat Kriya Khalsa, SRE at Dropbox\n  * Scaling with Performance at Facebook - Bill Jia, VP of Infrastructure at Facebook\n  * Scaling Live Videos to a Billion Users at Facebook - Sachin Kulkarni, Director of Engineering at Facebook\n  * Scaling Infrastructure at Instagram - Lisa Guo, Instagram Engineering\n  * Scaling Infrastructure at Twitter - Yao Yue, Staff Software Engineer at Twitter\n  * Scaling Infrastructure at Etsy - Bethany Macri, Engineering Manager at Etsy\n  * Scaling Real-time Infrastructure at Alibaba for Global Shopping Holiday - Xiaowei Jiang, Senior Director at Alibaba\n  * Scaling Data Infrastructure at Spotify - Matti (Lepist\u00f6) Pehrs, Spotify\n  * Scaling Pinterest - Marty Weiner, Pinterest\u2019s founding engineer\n  * Scaling Slack - Bing Wei, Software Engineer (Infrastructure) at Slack\n  * Scaling Backend at Youtube - Sugu Sougoumarane, SDE at Youtube\n  * Scaling Backend at Uber - Matt Ranney, Chief Systems Architect at Uber\n  * Scaling Global CDN at Netflix - Dave Temkin, Director of Global Networks at Netflix\n  * Scaling Load Balancing Infra to Support 1.3 Billion Users at Facebook - Patrick Shuff, Production Engineer at Facebook\n  * Scaling (a NSFW site) to 200 Million Views A Day And Beyond - Eric Pickup, Lead Platform Developer at MindGeek\n  * Scaling Counting Infrastructure at Quora - Chun-Ho Hung and Nikhil Gar, SEs at Quora\n  * Scaling Git at Microsoft - Saeed Noursalehi, Principal Program Manager at Microsoft\n  * Scaling Multitenant Architecture Across Multiple Data Centres at Shopify - Weingarten, Engineering Lead at Shopify\n\n## A Piece of Cake\n\nRoses are red. Violets are blue. Ben likes sweet. Treat Ben a tiramisu? \ud83c\udf70\n\n## About\n\nThe Patterns of Scalable, Reliable, and Performant Large-Scale Systems\n\n### Topics\n\ncomputer-science lists devops distributed-systems machine-learning awesome\nweb-development programming big-data system backend architecture scalability\nresources design-patterns interview awesome-list interview-practice interview-\nquestions system-design\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\n### Code of conduct\n\nCode of conduct\n\n### Security policy\n\nSecurity policy\n\nActivity\n\n### Stars\n\n53.4k stars\n\n### Watchers\n\n1.8k watching\n\n### Forks\n\n5.6k forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Sponsor this project\n\n  * https://paypal.me/binhnguyennus\n\n## Packages 0\n\nNo packages published\n\n## Contributors 23\n\n\\+ 9 contributors\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
