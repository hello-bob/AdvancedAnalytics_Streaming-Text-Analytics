{"aid": "40072548", "title": "Respawn: Intelligent database cleaner for integration tests", "url": "https://github.com/jbogard/Respawn", "domain": "github.com/jbogard", "votes": 3, "user": "thunderbong", "posted_at": "2024-04-18 03:01:48", "comments": 0, "source_title": "GitHub - jbogard/Respawn: Intelligent database cleaner for integration tests", "source_text": "GitHub - jbogard/Respawn: Intelligent database cleaner for integration tests\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\njbogard / Respawn Public\n\n  * Notifications\n  * Fork 126\n  * Star 2.5k\n\nIntelligent database cleaner for integration tests\n\n### License\n\nApache-2.0 license\n\n2.5k stars 126 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# jbogard/Respawn\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n4 Branches\n\n18 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\njbogardMerge pull request #133 from jbogard/sqlclient-cveJan 19, 20242ad376d \u00b7\nJan 19, 2024Jan 19, 2024\n\n## History\n\n203 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| Starting SQL Local DB on builds| Jul 7, 2023  \n  \n### .nuget\n\n|\n\n### .nuget\n\n| 0.2| Oct 31, 2016  \n  \n### Respawn.DatabaseTests\n\n|\n\n### Respawn.DatabaseTests\n\n| Updating reference for CVEs| Jan 19, 2024  \n  \n### Respawn.UnitTests\n\n|\n\n### Respawn.UnitTests\n\n| Only allowing SQL adapter for the overload that takes a connection st...|\nJul 7, 2023  \n  \n### Respawn\n\n|\n\n### Respawn\n\n| Updating reference for CVEs| Jan 19, 2024  \n  \n### informix-server\n\n|\n\n### informix-server\n\n| Adding a message when the database is empty| Feb 14, 2023  \n  \n### .gitattributes\n\n|\n\n### .gitattributes\n\n| Respawn with SQL Server and Postgres support| Feb 19, 2015  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Adding support across all databases; adding informix back in the mix| Jan\n13, 2022  \n  \n### Build.ps1\n\n|\n\n### Build.ps1\n\n| Adding a message when the database is empty| Feb 14, 2023  \n  \n### Directory.Build.props\n\n|\n\n### Directory.Build.props\n\n| .NET Standard 2.1 and .NET 6| Jan 10, 2022  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Initial commit| Feb 19, 2015  \n  \n### Push.ps1\n\n|\n\n### Push.ps1\n\n| Adding github actions| Jun 30, 2020  \n  \n### README.md\n\n|\n\n### README.md\n\n| Fixing readme| Sep 30, 2022  \n  \n### Respawn.sln\n\n|\n\n### Respawn.sln\n\n| Fixing docs; fixes #66, fixes #100| Sep 30, 2022  \n  \n### docker-compose.yml\n\n|\n\n### docker-compose.yml\n\n| Adding support across all databases; adding informix back in the mix| Jan\n13, 2022  \n  \n### logo.png\n\n|\n\n### logo.png\n\n| Logo| Sep 27, 2017  \n  \n## Repository files navigation\n\n# Respawn\n\nRespawn is a small utility to help in resetting test databases to a clean\nstate. Instead of deleting data at the end of a test or rolling back a\ntransaction, Respawn resets the database back to a clean, empty state by\nintelligently deleting data from tables.\n\nTo use, create a Respawner and initialize with tables you want to skip, or\nschemas you want to keep/ignore:\n\n    \n    \n    var respawner = await Respawner.CreateAsync(connection, new RespawnerOptions { TablesToIgnore = new Table[] { \"sysdiagrams\", \"tblUser\", \"tblObjectType\", new Table(\"MyOtherSchema\", \"MyOtherTable\") }, SchemasToExclude = new [] { \"RoundhousE\" } });\n\nOr if you want to use a different database:\n\n    \n    \n    var respawner = await Respawner.CreateAsync(connection, new RespawnerOptions { SchemasToInclude = new [] { \"public\" }, DbAdapter = DbAdapter.Postgres });\n\nIn your tests, in the fixture setup, reset to a clean state:\n\n    \n    \n    await respawner.ResetAsync(\"MyConnectionStringName\");\n\nor if you're using a database besides SQL Server, pass an open DbConnection:\n\n    \n    \n    using (var conn = new NpgsqlConnection(\"ConnectionString\")) { await conn.OpenAsync(); await respawner.ResetAsync(conn); }\n\n## How does it work?\n\nRespawn examines the SQL metadata intelligently to build a deterministic order\nof tables to delete based on foreign key relationships between tables. It\nnavigates these relationships to build a DELETE script starting with the\ntables with no relationships and moving inwards until all tables are accounted\nfor.\n\nOnce this in-order list of tables is created in the CreateAsync factory, the\nRespawner object keeps this list of tables privately so that the list of\ntables and the order is only calculated once.\n\nIn your tests, you Reset your database before each test run. If there are any\ntables/schemas that you don't want to be cleared out, include these in the\nconfiguration of your RespawnerOptions.\n\nIn benchmarks, a deterministic deletion of tables is faster than truncation,\nsince truncation requires disabling or deleting foreign key constraints.\nDeletion results in easier test debugging/maintenance, as transaction\nrollbacks/post-test deletion still rely on that mechanism at the beginning of\neach test. If data comes in from another source, your test might fail.\nRespawning to a clean state assures you have a known starting point before\neach test.\n\n### Installing Respawn\n\nYou should install Respawn with NuGet:\n\n    \n    \n    Install-Package Respawn\n\nOr via the .NET Core CLI:\n\n    \n    \n    dotnet add package Respawn\n\nThis command from Package Manager Console will download and install Respawn.\n\n### Local development\n\nTo install and run local dependencies needed for tests, (PostgreSQL and MySQL)\ninstall Docker for Windows and from the command line at the solution root run:\n\n    \n    \n    docker-compose up -d\n\nThis will pull down the latest container images and run them. You can then run\nthe local build/tests.\n\n## About\n\nIntelligent database cleaner for integration tests\n\n### Resources\n\nReadme\n\n### License\n\nApache-2.0 license\n\nActivity\n\n### Stars\n\n2.5k stars\n\n### Watchers\n\n42 watching\n\n### Forks\n\n126 forks\n\nReport repository\n\n## Releases 9\n\nv6.2.1 Latest\n\nJan 19, 2024\n\n\\+ 8 releases\n\n## Packages 0\n\nNo packages published\n\n## Used by 4.6k\n\n\\+ 4,587\n\n## Contributors 24\n\n\\+ 10 contributors\n\n## Languages\n\n  * C# 99.0%\n  * Other 1.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
