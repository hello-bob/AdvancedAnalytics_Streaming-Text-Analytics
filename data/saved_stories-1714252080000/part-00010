{"aid": "40178628", "title": "Guide for Debian Maintainers", "url": "https://www.debian.org/doc/manuals/debmake-doc/index.en.html", "domain": "debian.org", "votes": 1, "user": "udev4096", "posted_at": "2024-04-27 09:32:58", "comments": 0, "source_title": "Guide for Debian Maintainers", "source_text": "Guide for Debian Maintainers\n\nGuide for Debian Maintainers  \n---  \n  \n# Guide for Debian Maintainers\n\n### Osamu Aoki\n\n<osamu@debian.org>\n\nCopyright \u00a9 2014-2021 Osamu Aoki\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nThis guide was made using the following previous documents as its reference:\n\n  * \u201cMaking a Debian Package (AKA the Debmake Manual)\u201d, copyright \u00a9 1997 Jaldhar Vyas.\n  * \u201cThe New-Maintainer\u2019s Debian Packaging Howto\u201d, copyright \u00a9 1997 Will Lowe.\n  * \u201cDebian New Maintainers\u2019 Guide\u201d, copyright \u00a9 1998-2002 Josip Rodin, 2005-2017 Osamu Aoki, 2010 Craig Small, and 2010 Rapha\u00ebl Hertzog.\n\nThe latest version of this guide should be available:\n\n  * in the debmake-doc package and\n  * at the Debian Documentation web site.\n\nAbstract\n\nThis \u201cGuide for Debian Maintainers\u201d (2023-11-10) tutorial guide describes the\nbuilding of the Debian package to ordinary Debian users and prospective\ndevelopers using the debmake command.\n\nThis guide focuses on the modern packaging style and comes with many simple\nexamples.\n\n  * POSIX shell script packaging\n  * Python3 script packaging\n  * C with Makefile/Autotools/CMake\n  * multiple binary packages with shared library etc.\n\nThis \u201cGuide for Debian Maintainers\u201d can be considered as the successor to the\n\u201cDebian New Maintainers\u2019 Guide\u201d.\n\nTable of Contents\n\nPreface\n\n1\\. Overview\n\n2\\. Prerequisites\n\n    \n\n2.1. People around Debian\n\n2.2. How to contribute\n\n2.3. Social dynamics of Debian\n\n2.4. Technical reminders\n\n2.5. Debian documentation\n\n2.6. Help resources\n\n2.7. Archive situation\n\n2.8. Contribution approaches\n\n2.9. Novice contributor and maintainer\n\n3\\. Tool Setups\n\n    \n\n3.1. Email address\n\n3.2. mc\n\n3.3. git\n\n3.4. quilt\n\n3.5. devscripts\n\n3.6. sbuild\n\n3.7. git-buildpackage\n\n3.8. HTTP proxy\n\n3.9. Private Debian repository\n\n3.10. Virtual machines\n\n3.11. Local network with virtual machines\n\n4\\. Simple Example\n\n    \n\n4.1. Packaging tarball\n\n4.2. Big picture\n\n4.3. What is debmake?\n\n4.4. What is debuild?\n\n4.5. Step 1: Get the upstream source\n\n4.6. Step 2: Generate template files with debmake\n\n4.7. Step 3: Modification to the template files\n\n4.8. Step 4: Building package with debuild\n\n4.9. Step 3 (alternative): Modification to the upstream source\n\n    \n\n4.9.1. Patch by diff -u\n\n4.9.2. Patch by dquilt\n\n4.9.3. Patch by dpkg-source --commit\n\n5\\. Basics\n\n    \n\n5.1. Packaging workflow\n\n    \n\n5.1.1. The debhelper package\n\n5.2. Historical perspective of Debian packaging practices\n\n5.3. Future perspective on Debian packaging practices\n\n5.4. Package name and version\n\n5.5. Native Debian package\n\n5.6. debian/rules\n\n    \n\n5.6.1. dh\n\n5.6.2. Simple debian/rules\n\n5.6.3. Customized debian/rules\n\n5.6.4. Variables for debian/rules\n\n5.6.5. Reproducible build\n\n5.7. debian/control\n\n    \n\n5.7.1. Split of a Debian binary package\n\n    \n\n5.7.1.1. debmake -b\n\n5.7.1.2. Package split scenario and examples\n\n5.7.1.3. The library package name\n\n5.7.2. Substvar\n\n5.7.3. binNMU safe\n\n5.8. debian/changelog\n\n5.9. debian/copyright\n\n5.10. debian/patches/*\n\n    \n\n5.10.1. dpkg-source -x\n\n5.10.2. dquilt and dpkg-source\n\n5.11. debian/upstream/signing-key.asc\n\n5.12. debian/watch and DFSG\n\n5.13. Other debian/* Files\n\n5.14. Customization of the Debian packaging\n\n5.15. Recording in VCS (standard)\n\n5.16. Recording in VCS (alternative)\n\n5.17. Building package without extraneous contents\n\n    \n\n5.17.1. Fix by debian/rules clean\n\n5.17.2. Fix using VCS\n\n5.17.3. Fix by extend-diff-ignore\n\n5.17.4. Fix by tar-ignore\n\n5.18. Upstream build systems\n\n    \n\n5.18.1. Autotools\n\n5.18.2. CMake\n\n5.18.3. Meson\n\n5.18.4. Python distutils\n\n5.19. Debugging information\n\n    \n\n5.19.1. New -dbgsym package (Stretch 9.0 and after)\n\n5.20. Library package\n\n    \n\n5.20.1. Library symbols\n\n5.20.2. Library transition\n\n5.21. debconf\n\n5.22. Multiarch\n\n    \n\n5.22.1. The multiarch library path\n\n5.22.2. The multiarch header file path\n\n5.22.3. The multiarch *.pc file path\n\n5.23. Compiler hardening\n\n5.24. Continuous integration\n\n5.25. Other new requirements\n\n5.26. Bootstrapping\n\n5.27. Bug reports\n\n6\\. debmake options\n\n    \n\n6.1. Shortcut options (-a, -i)\n\n    \n\n6.1.1. Python module\n\n6.2. Snapshot upstream tarball (-d, -t)\n\n6.3. debmake -cc\n\n6.4. debmake -k\n\n6.5. debmake -j\n\n6.6. debmake -x\n\n6.7. debmake -P\n\n6.8. debmake -T\n\n7\\. Tips\n\n    \n\n7.1. debdiff\n\n7.2. dget\n\n7.3. debc\n\n7.4. piuparts\n\n7.5. debsign\n\n7.6. dput\n\n7.7. bts\n\n7.8. git-buildpackage\n\n    \n\n7.8.1. gbp import-dscs --debsnap\n\n7.8.2. Upstream git repository\n\n7.9. dgit\n\n    \n\n7.9.1. Snapshot upstream tarball (alternative git deborig approach)\n\n7.10. chroot\n\n7.11. New Debian revision\n\n7.12. New upstream release\n\n    \n\n7.12.1. uupdate + tarball\n\n7.12.2. uscan\n\n7.12.3. gbp\n\n7.12.4. gbp + uscan\n\n7.13. 3.0 source format\n\n7.14. CDBS\n\n7.15. Build under UTF-8\n\n7.16. UTF-8 conversion\n\n7.17. Upload orig.tar.gz\n\n7.18. Skipped uploads\n\n7.19. Advanced packaging\n\n7.20. Other distros\n\n7.21. Debug\n\n8\\. More Examples\n\n    \n\n8.1. Cherry-pick templates\n\n8.2. No Makefile (shell, CLI)\n\n8.3. Makefile (shell, CLI)\n\n8.4. setup.py (Python3, CLI)\n\n8.5. Makefile (shell, GUI)\n\n8.6. setup.py (Python3, GUI)\n\n8.7. Makefile (single-binary package)\n\n8.8. Makefile.in + configure (single-binary package)\n\n8.9. Autotools (single-binary package)\n\n8.10. CMake (single-binary package)\n\n8.11. Autotools (multi-binary package)\n\n8.12. CMake (multi-binary package)\n\n8.13. Internationalization\n\n8.14. Details\n\nA. debmake(1) manpage\n\n    \n\nA.1. NAME\n\nA.2. SYNOPSIS\n\nA.3. DESCRIPTION\n\n    \n\nA.3.1. optional arguments:\n\nA.4. EXAMPLES\n\nA.5. HELPER PACKAGES\n\nA.6. CAVEAT\n\nA.7. DEBUG\n\nA.8. AUTHOR\n\nA.9. LICENSE\n\nA.10. SEE ALSO\n\nPreface  \n---\n\n", "frontpage": false}
