{"aid": "40104425", "title": "Feedmaker: Quickly generate an RSS feed from any website (2023)", "url": "https://www.kschaul.com/post/2023/04/16/feedmaker-quickly-generate-an-rss-feed-from-any-website/", "domain": "kschaul.com", "votes": 1, "user": "Tomte", "posted_at": "2024-04-21 09:58:11", "comments": 0, "source_title": "Kevin Schaul", "source_text": "Feedmaker: Quickly generate an RSS feed from any website - Kevin Schaul\n\n# Kevin Schaul\n\nVisual journalist/hacker\n\n# Feedmaker: Quickly generate an RSS feed from any website\n\n### April 16, 2023\n\nI\u2019ve been diverting much of my web browsing away from social media and towards\nRSS feeds, but there are so many sites that don\u2019t offer the feeds for the\ncontent I care about.\n\nToday I\u2019m sharing a side project called Feedmaker (Source on GitHub). It\u2019s a\nservice that lets you generate RSS feeds from websites in next to no time.\nJust figure out a couple CSS selectors and pass them as URL parameters. You\u2019ll\nget an RSS feed back.\n\nFor example, say I want a feed of the stories that hit the \u201cMost read\u201d section\nof the washingtonpost.com homepage. I open up the web inspector and figure out\na CSS selector that gets me the items for the feed.\n\nThis one works: div[data-link-group=\"most-read\"] h2\n\nThen I drop the URL and CSS selector into Feedmaker and hit test. The feed\nlooks good! Copy/paste the feed link into your RSS reader, and enjoy.\n\nThe app is quite simple, really. It\u2019s just a web scraper that is instructed by\nURL parameters. Right now, you must pass:\n\n  * url: URL to scrape\n  * selector_item: CSS selector for the items in your feed\n\nAnd you can optionally include:\n\n  * feed_title: What to call your feed\n  * selector_title (default: a): CSS selector to get the item\u2019s title\n  * selector_description: CSS selector to get the item\u2019s description\n  * selector_link (default: a): CSS selector to get the item\u2019s link\n  * get_items_metadata (default: false): Whether to visit each item\u2019s link to gather metadata\n\nIn the Washington Post example above, I\u2019ve asked Feedmaker to get each item\u2019s\nmetadata. This is how each item in the feed includes the description \u2013 which\nonly appears on washingtonpost.com for the first item.\n\nNot all feeds that I want include links. One of my favorite record stores\nlists recommended albums on their homepage. Feedmaker can turn that into an\nRSS feed too.\n\n(Don\u2019t be surprised if Feedmaker goes down. It\u2019s hosted on a free hobby fly.io\ninstance.)\n\nI\u2019ve found this tool quite useful to quickly build RSS feeds for exactly what\nI\u2019m interested in. Try it out and let me know what you think!\n\nTags: rss django\n\n", "frontpage": false}
