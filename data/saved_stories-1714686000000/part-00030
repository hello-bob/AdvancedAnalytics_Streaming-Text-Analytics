{"aid": "40235159", "title": "Distracting software engineers is much more harmful than you think", "url": "https://zaidesanton.substack.com/p/the-biggest-problem-in-todays-work", "domain": "zaidesanton.substack.com", "votes": 1, "user": "thunderbong", "posted_at": "2024-05-02 12:03:02", "comments": 0, "source_title": "Distracting software engineers is much more harmful than you think", "source_text": "Distracting software engineers is much more harmful than you think\n\n# Leading Developers\n\nShare this post\n\n#### Distracting software engineers is much more harmful than you think\n\nzaidesanton.substack.com\n\n#### Discover more from Leading Developers\n\nJoin 11,000+ software leaders for free weekly articles on managing and growing\na development team!\n\nOver 12,000 subscribers\n\nContinue reading\n\nSign in\n\n# Distracting software engineers is much more harmful than you think\n\n### Why software engineers MUST have no-distractions time\n\nAnton Zaides\n\nApr 30, 2024\n\n34\n\nShare this post\n\n#### Distracting software engineers is much more harmful than you think\n\nzaidesanton.substack.com\n\nShare\n\nI always knew that distractions in the workplace are harmful, but only after\nreading Deep Work by Cal Newport, did I understand how severe the problem is!\n\nOur work culture changed mainly for the better after COVID-19, but there were\nalso some negative changes - like an increase of 13.5% in the amount of\nmeetings per employee.\n\nSo why meetings and distractions are so terrible? And what can you do about\nit?\n\nToday I\u2019m going to cover:\n\n  1. What is Deep Work\n\n  2. Why it is so critical\n\n  3. So what\u2019s the big problem?\n\n  4. How can you create deep work time for your employees\n\n  5. How to become better at deep work - mastering the distractions\n\nJoin 12,100+ software leaders for weekly articles on leading a development\nteam\n\n#\n\nSo what is deep work?\n\nThe term was coined by Cal Newport, in the great Deep Work: Rules for Focused\nSuccess in a Distracted World book.\n\nDeep work is the kind of work that requires a big part of your brain power and\nusually gives some unique value. It can\u2019t be done while distracted! If you can\ndo a task during a Zoom call, it means it\u2019s NOT deep work.\n\nShallow Work is the opposite - things you can do without engaging 100% of your\nbrain. Things like answering Slack messages/emails, reviewing a document, and\nso on.\n\nSoftware engineering used to be a haven for people who enjoy deep work. There\nis a reason why some people still think that software engineers work alone\nwith their headphones in the basement.\n\nNowadays, it\u2019s becoming very hard to get those \u2018Deep Work\u2019 times.\n\n#\n\nWhy Deep Work is so critical\n\nWorking Deeply, is the only way to achieve the famous \u2018flow\u2019 state - AKA being\nin the zone.\n\nIn a 10-year study conducted by McKinsey, people reported being FIVE times\nmore productive in flow - meaning that if we could increase the time we spend\nin flow by 15-20%, overall workplace productivity would almost double.\n\nThere is a scientific explanation for that - that involves the releases of\nnorepinephrine, dopamine, endorphins, anandamide, and serotonin. All five\naffect performance.\n\nMore deep work time won\u2019t only improve the performance of your engineers but\nalso:\n\n  * Will help them make fewer mistakes, as they\u2019ll be less distracted.\n\n  * Support their work-life balance - they\u2019ll get more work done in less time, so more free time will be left.\n\n  * Improve their skills - only during those focused times the toughest challenges can be solved, and the biggest improvements to skills happen.\n\n#\n\nSo what\u2019s the problem?\n\nRemote work should have been an answer to this - no commute, fewer\ndistractions. In reality, only the first part is true.\n\nSince 2020, in addition to the 13.5% increase in total meetings, there has\nalso been a rise of 60% in remote meetings. The unsurprising part is that 92%\nof people say they multitask during those meetings - and I would guess the\nnumber is 100% for software engineers.\n\nThere are 2 main problems with that:\n\n###\n\n1\\. Work that should be Deep, becomes Shallow\n\nRemember the simple test we discussed above? If you can do it in a Zoom\nmeeting == it\u2019s shallow work.\n\nA great example is reviewing a PR. If you have a busy day filled with\nmeetings, when would be the best time to review it?\n\nDuring the meetings of course... But reviewing a big pull request should be\ndeep work! Same for bug fixes, or writing design documents.\n\nDoing those tasks during a meeting starts a horrible flywheel:\n\n  * The quality of the work gets poorer so more problems arise \u2192 more meetings are scheduled to address them.\n\n  * People are being distracted during meetings so no good decisions are taken \u2192 more meetings are scheduled...\n\nAnd it\u2019s not the fault of your multitasking engineers - it\u2019s the fault of your\nmeeting culture.\n\n###\n\n2\\. Engineers are not reaching the flow state\n\n> It takes 15 minutes just to get going and only by the 45-minute mark (!) you\n> will hit your peak.\n>\n> Every time you\u2019re distracted, that clock resets thanks to context switching.\n> And since the average employee is interrupted 31.6 times/day, that means\n> they\u2019re getting pulled out of their task work every 15 minutes, making it\n> impossibly difficult to attain a productive flow state.\n\nDo you understand the severity of the problem? 31(!!!) distractions in a day!\n\nIt was not just the time in meetings that is lost. Every distraction sets you\nback 15-45 minutes, leaving you by the end of the day with just 1-2 hours of\nproductive time in the BEST case scenario.\n\nI love this analogy, borrowed from this Reddit comment:\n\n> Imagine developers are like miners. digging is our job. Every time you have\n> a meeting, we need to pack our things, and get to the entrance of the mine\n> on time.\n>\n> After the meeting is finished, we need to walk alllll the way back to where\n> we were working, assuming we even remember the right path...\n>\n> So if you want us to get you some diamonds, LET US WORK IN PEACE.\n\nIn the famous \u201cMaker\u2019s Schedule, Manager\u2019s Schedule\u201d, Paul Graham wrote:\n\n> When you're operating on the maker's schedule, meetings are a disaster. A\n> single meeting can blow a whole afternoon, by breaking it into two pieces\n> each too small to do anything hard in.\n\nSoftware engineers need at least 4-5 hours of uninterrupted time a day, and\nit\u2019s our job as managers to provide it.\n\n#\n\nHow can we create deep work time\n\n###\n\nImprove the meeting culture at your company\n\nIt\u2019s not that hard to fix - you \u2018just\u2019 need to get all the managers to commit\nto basic rules:\n\n  1. Meetings should be effective - obvious right? But still rare... Have a clear agenda, and clear outcomes.\n\n  2. Have a fixed daily time for meetings - and leave big chunks of \u2018no-meetings\u2019 time. You can either do no-meeting days, or no-meeting hours, it depends on your organization. That\u2019s what worked for\n\n@Gregor Ojstersek\n\n:\n\n  3. Invite only people who are really needed - this is something that remote work is bad at - it has become too easy to just invite everyone. People think to themselves: \u201cWorst case, they\u2019ll multitask, and be available in case they are needed\u201d. This is an awful approach! Remember - you cannot achieve a flow state while multitasking.\n\n  4. Go async where you can - a big percentage of meetings can be Slack threads, or emails.\n\n###\n\nSet an example\n\nOnce you get the meetings under control, you can deal with the other\ninterruptions.\n\nThe best way to create a good culture is to cherish your own deep work time,\nand make sure your team respects it. I have to admit that I\u2019m still struggling\nwith this one - I schedule focus time in my calendar, and put on my\nheadphones, but I still sometimes check Slack and answer when interrupted.\n\nI know this sets a bad example for my team - deep work time should be sacred,\nand people should know it\u2019s completely acceptable to not be available in Slack\nfor a couple of hours.\n\n#\n\nHow do you become better at deep work?\n\nSo the meetings are under control, and nobody bothers you. Turns out deep work\nis STILL a hard skill to master.\n\nTo work deeply is to focus every bit of brain power on solving a problem.\nNewport\u2019s research shows that modern life changed our brains. Test yourself -\nhow long can you work without reaching for your phone, or visiting some\nwebsite?\n\nThe average American smartphone user reaches for their device 352 times per\nday\n\nNo distractions means \u2013 no emails, no Slack, no WhatsApp, no Instagram, no\nnotifications!\n\nWe need to teach our brains how to be patient again. When starting a deep work\nperiod, Newport suggests setting a target, something feasible but hard to\nachieve.\n\nFor example - let\u2019s say want to practice, and set aside 60 minutes for deep\nwork, to work on a specific programming task.\n\nAfter 20 minutes, you get stuck, but you have your \u2018non-deep\u2019 time (where you\ncan talk to people on Slack) only in 40 minutes. In this case - don\u2019t break\nthe deadline. Yes, even if it\u2019ll take you longer to solve that problem -\nyou\u2019ll reap the long-term benefits of training your brain.\n\nIf you are \u201cnothing-I-can-do-without-help\u2019\u2019 stuck (which should be very rare),\nyou can move the deadline closer (for example 20 minutes from now), but never\nbreak the focus time immediately.\n\nSlowly, you\u2019ll improve.\n\n#\n\nFinal words\n\nIf you do this one right, I\u2019m 100% sure your team will thank you.\n\nIt\u2019s up to you to create a culture that supports deep work, and respects\npeople\u2019s quiet times.\n\n###\n\nCal Newport\u2019s book recommendations\n\nIf you like the genre, you\u2019ll enjoy some of the books Newport suggests. For an\neasy way to save them, I created the list in BookWiz for you:\n\nCheckout Newport's suggestions\n\n###\n\nWhat I enjoyed reading this week\n\n  1. The unspoken skill of finesse by\n\n@Wes Kao\n\n\\- this one hit home. It\u2019s a crucial skill I\u2019m missing, Wes provided great\ntips on how to improve it. Crucial for managers!\n\n  2. 5 symptoms of a project with a tech-debt problem by\n\n@Bhavana\n\n. Simple checklist to see how bad is it in your company.\n\n  3. Earth AI by\n\n@Packy McCormick\n\n. Another amazing deep dive article, on a unique company, that combines mining\nwith AI.\n\n34 Likes\n\n\u00b7\n\n8 Restacks\n\n34\n\nShare this post\n\n#### Distracting software engineers is much more harmful than you think\n\nzaidesanton.substack.com\n\nShare\n\nComments\n\nImprove your SQL skills X2 in 5 minutes\n\nSQL for managers is an underrated skill\n\nFeb 13 \u2022\n\nAnton Zaides\n\n144\n\nShare this post\n\n#### Improve your SQL skills X2 in 5 minutes\n\nzaidesanton.substack.com\n\n22\n\nThe Guide to Stock Options conversations\n\nWhy every manager should talk to their employees about stock options\n\nMar 26 \u2022\n\nAnton Zaides\n\n38\n\nShare this post\n\n#### The Guide to Stock Options conversations\n\nzaidesanton.substack.com\n\n4\n\nHiring ONLY seniors is the worst policy in the software industry\n\nWhy you should hire a junior for your next open position\n\nJan 23 \u2022\n\nAnton Zaides\n\n60\n\nShare this post\n\n#### Hiring ONLY seniors is the worst policy in the software industry\n\nzaidesanton.substack.com\n\n16\n\nReady for more?\n\n\u00a9 2024 Anton Zaides\n\nPrivacy \u2219 Terms \u2219 Collection notice\n\nStart WritingGet the app\n\nSubstack is the home for great culture\n\nShare\n\n## Create your profile\n\n## Only paid subscribers can comment on this post\n\nAlready a paid subscriber? Sign in\n\n#### Check your email\n\nFor your security, we need to re-authenticate you.\n\nClick the link we sent to , or click here to sign in.\n\n", "frontpage": false}
