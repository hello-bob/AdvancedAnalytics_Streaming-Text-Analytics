{"aid": "40283838", "title": "JavaScript Decorator Tests", "url": "https://github.com/evanw/decorator-tests", "domain": "github.com/evanw", "votes": 1, "user": "msoad", "posted_at": "2024-05-07 09:46:44", "comments": 0, "source_title": "GitHub - evanw/decorator-tests", "source_text": "GitHub - evanw/decorator-tests\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nevanw / decorator-tests Public\n\n  * Notifications\n  * Fork 0\n  * Star 26\n\n26 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# evanw/decorator-tests\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nevanwupdate esbuild, add to test resultsMay 7, 2024128fc28 \u00b7 May 7, 2024May 7,\n2024\n\n## History\n\n24 Commits  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| initial commit| Nov 22, 2023  \n  \n### README.md\n\n|\n\n### README.md\n\n| update esbuild, add to test results| May 7, 2024  \n  \n### decorator-tests.js\n\n|\n\n### decorator-tests.js\n\n| update esbuild, add to test results| May 7, 2024  \n  \n### decorator-tests.ts\n\n|\n\n### decorator-tests.ts\n\n| update esbuild, add to test results| May 7, 2024  \n  \n### package-lock.json\n\n|\n\n### package-lock.json\n\n| update esbuild, add to test results| May 7, 2024  \n  \n### package.json\n\n|\n\n### package.json\n\n| update esbuild, add to test results| May 7, 2024  \n  \n### run.mjs\n\n|\n\n### run.mjs\n\n| update esbuild, add to test results| May 7, 2024  \n  \n### tsconfig.json\n\n|\n\n### tsconfig.json\n\n| initial commit| Nov 22, 2023  \n  \n## Repository files navigation\n\n# JavaScript Decorator Tests\n\nThis repo contains a single file with many behavioral tests for the upcoming\ndecorators feature in JavaScript. It's intended to be easy to use for testing\na given JavaScript implementation: just run the file decorator-tests.js and\nsee what console.log prints (although you may need to comment out some of the\ntests if your implementation emits code containing syntax errors, which\nTypeScript currently does). The source code for that file is in TypeScript\n(see decorator-tests.ts) to make authoring the tests easier (e.g. to catch\ntypos). I'm planning to use these tests to help me implement JavaScript\ndecorators for esbuild.\n\nSome caveats:\n\n  * The specification is still a work in progress, and may be outdated\n  * I'm not the author of the specification and I may have misinterpreted it\n  * Deviations from the specification by the tools below may be intentional\n  * The specification itself doesn't yet have good test coverage (see this and this)\n\nYou can use node run.mjs after npm install to run and update the tests below.\n\n## Test Results\n\n### esbuild (esbuild@0.21.0)\n\n\u2705 All checks passed\n\n### Babel (@babel/plugin-proposal-decorators@7.24.1)\n\nKnown issues:\n\n  * Decorators on anonymous classes can cause Babel to crash due to a compiler bug.\n  * References to the uninitialized class name within a decorator return undefined instead of throwing a ReferenceError.\n  * Babel throws Error instead of TypeError when addInitializer is used after decorationState.[[Finished]] is true.\n\n### TypeScript (typescript@5.4.5)\n\nKnown issues:\n\n  * In decorators of static fields and static accessors, the value of this appears to be incorrect.\n  * Using await within a decorator can cause TypeScript to emit invalid code containing a syntax error.\n  * References to the uninitialized class name within a decorator return undefined instead of throwing a ReferenceError.\n  * Class expressions incorrectly run some initializers multiple times due to a compiler bug.\n  * TypeScript doesn't prevent addInitializer from adding more initializers after decorationState.[[Finished]] is true.\n\n### SWC (@swc/core@1.4.17)\n\nKnown issues:\n\n  * SWC implements an older version of the specification from 2022 with outdated behavior.\n  * Generated code sometimes has syntax errors because SWC fails to transform certain decorators.\n  * Generated code sometimes has syntax errors caused by duplicate private names in the same class.\n\n## About\n\nNo description, website, or topics provided.\n\n### Resources\n\nReadme\n\nActivity\n\n### Stars\n\n26 stars\n\n### Watchers\n\n3 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * JavaScript 51.9%\n  * TypeScript 48.1%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
