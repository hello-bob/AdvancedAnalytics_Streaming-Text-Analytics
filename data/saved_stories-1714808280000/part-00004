{"aid": "40251511", "title": "Commodore 64 Theremin. (2022)", "url": "https://www.linusakesson.net/hardware/theremin/", "domain": "linusakesson.net", "votes": 2, "user": "fanf2", "posted_at": "2024-05-03 19:42:02", "comments": 0, "source_title": "C64 Theremin", "source_text": "C64 Theremin\n\nlinusakesson.net\n\n(show navigation)\n\n(hide navigation)\n\nNavigation  \n---  \nHome & news  \nRandom page  \nAll pages  \nDatabases  \n---  \nFortune cookies  \nSID themes  \n  \nPage collections  \n---  \nBlag  \nChip music  \nChipophone  \nGames  \nHardware projects  \nMusic downloads  \nObfuscated programming  \nPiano music  \nSane programming  \nScene productions  \nSID related pages  \nSoftware downloads  \nUnderhanded code  \nVideo clips  \n  \nFeatured pages  \n---  \n15 Years of Scene Spirit  \n\u00c5-machine  \nA Mind Is Born  \nAutosokoban  \nBach Forever  \nBlackbird  \nC64 Theremin  \nChipophone  \nChopin vs Flappy Bird  \nChuck Rock  \nCommodordion  \nComputers  \nCraft  \nCraverly Heights in Dialog  \nDatassettes  \nDial-a-SID  \nDialog  \nElements of Chip Music  \nEvolution of C64 games  \nFaking Fissile Material  \nFratres  \nGCR decoding on the fly  \nGlyptodont Live  \nGuitar Slinger  \nHanlon Fugue  \nHardsync  \nImpossible Bottle  \nIn Darkness Hope  \nKernighan's lever  \nLive at Fj\u00e4lldata  \nLunatico  \nMachine Yearning  \nMISC  \nMonti On The 'Bin  \nMusic For Microcontrollers  \nO Holy Night  \nParallelogram  \nPartita Prelude  \nPaulimba  \nPerpetual Fragility  \nPlatform Hopping  \nPoems for bugs  \nQwertuoso  \nReverberations  \nSafe VSP  \nSidreloc  \nSixtyforgan  \nSpindle v3  \nStein's Nocturne  \nStreaming  \nStripboard Cart  \nThree PC Pieces  \nThree PETSCII pieces  \nTTY demystified  \nUnity  \nVariation 18  \nVivaldi Summer Presto  \nVocalise  \nWatch Room  \nWe learn the nibbles  \nWings I've lost in dreams  \nZeugma  \n  \nFund my projects  \n---  \nPatreon  \nSteady  \nDon't miss  \n---  \nReverberations  \nForum  \n---  \nRegister  \nLog in  \nLatest comments  \nSyndication  \n---  \nRSS feed  \nFeedback  \n---  \nlinus@linusakesson.net  \n  \n# C64 Theremin\n\nThe Theremin is one of the earliest electronic instruments. It's played by\nmoving one's hands in front of two antennas: One controls pitch and the other\ncontrols volume.\n\nElectronically, the instrument works by monitoring the capacitance between its\nantennas and Earth and detecting the small increase that occurs when a human\nmoves closer. The amount of extra capacitance is inversely proportional to the\ndistance.\n\nI used a C64, two 555s, four resistors, a spoon, and a clamp to build a\nworking Theremin. In the video I try to explain how it works in layman's\nterms. What follows below is a more thorough description for those who want to\ndig deeper.\n\n## I, capacitor plate\n\nThe human body is, somewhat simplified, a volume of salt water surrounded by a\nthin layer of skin. Salt water conducts electricity. Large parts of the Earth\nalso conduct electricity\u2014the groundwater, certainly, but also the damp soil\nabove it. Even if you're standing in a dry place wearing rubber shoes, you're\nstill close enough to this huge subterranean conductor to be capacitively\ncoupled to it.\n\nThis means that ions (molecules with a charge) inside your body and inside the\nEarth can move around to create, for a short time, the illusion of an electric\ncurrent flowing across the gap between you. In reality, negative charges are\npiling up on one side of the gap, and positive charges on the other, holding\neach other in place with the electromagnetic force. When there's no more room\nfor charged particles\u2014when the system has reached its capacitance\u2014the current\nstops flowing. The capacitance between a human and the Earth is typically of\nthe order of 100 pF (pico-farads, sometimes pronounced \u201cpiff\u201d) and decreases\nwith distance.\n\nA slab of metal such as a Theremin antenna also conducts electricity, and\ninteracts with the human body in a similar way. Electrons pile up in the\nantenna while positive ions pile up inside the closest body part, or the other\nway around depending on which way the current flows across the gap. This\ncapacitance is much smaller, of the order of a single pF, and likewise\ndecreases with distance.\n\nWhen you connect two capacitances\u2014let's call them A and B\u2014in series, the total\ncapacitance is (A\u22121 + B\u22121)\u22121. This will always be less than each of the\ncapacitances involved. Furthermore, if one of them (B, say) is much larger\nthan the other, then its inverse (B\u22121) becomes so small that it can be\nignored. Therefore, the whole system of antenna, human, and Earth has a\ncapacitance of the order of a single pF that decreases with the distance\nbetween the antenna and the human.\n\nSchematically,\n\nbehaves in practice like:\n\nAh, interjects the astute reader, but if the human body forms a capacitor with\nthe Earth simply because it is a conductor, then surely the Theremin antenna\nalso forms a capacitor with the Earth for the same reason. And indeed, the\ncapacitance between one of my makeshift antennas and the Earth turns out to be\nabout 30 pF. So what we actually have is this:\n\nOr, in practice:\n\nThis new capacitance shunts (is connected in parallel with) the one we were\ndiscussing previously, and parallel capacitances add together. So when we\nmeasure the total capacitance between antenna and Earth, we can expect to see\nsomething of the order of 30 pF, with a 3% variation (an extra pF or so)\ndepending on the distance between antenna and performer.\n\n## Earth, ground, and capacitive touch displays\n\nWhen recording audio, I always ground my C64 in order to reduce mains hum. But\nstrictly speaking, the ground cable to Earth isn't necessary for a Theremin to\nwork.\n\nAs long as the circuit is powered from mains, it will be capacitively coupled\nto mains ground, and thus to Earth. In a switched-mode power supply, there's\ntypically a pair of capacitors connecting ground (on the secondary side) to\neach of the AC inputs (on the primary side) as a measure against\nelectromagnetic interference. We really only need a capacitor to ground on the\nprimary side, but the mains plug is symmetrical, so there's no way to know\nwhich input is live and which is connected to ground, and that's why there are\ncapacitors to both inputs. I suppose it's no big mystery where the mains hum\nis coming from.\n\nThese so called Class Y capacitors are designed to fail\u2014if or when that\nhappens\u2014by breaking the connection rather than shorting it; I'll leave it as\nan exercise to figure out why that is important.\n\nSchematically, an ungrounded version of the circuit would look like this:\n\nIf the Class Y capacitor is large enough (and they are usually at least 1000\npF), then, being connected in series with the others, it will have a\nnegligible effect on the measured capacitance. So the circuit still works!\n\nWill it operate from a battery, though? Handheld devices with touch-sensitive\ndisplays are all the rage these days (I'm told), and these displays use\ncapacitance to detect that a human is nearby, much like a Theremin. But\ninstead of relying on a connection to Earth, they measure the capacitance\nbetween two antennas\u2014or strips of transparent conductive film, as it\nwere\u2014right next to each other. The human finger forms a capacitor with each of\nthese strips, increasing the number of charged particles that can crowd\ntogether inside them. The strips are arranged in rows and columns that cover\nthe entire surface of the screen. So a fingertip increases the mutual\ncapacitance between the nearest row and column, and by carrying out multiple\nmeasurements it becomes possible to pinpoint the location of the finger.\n\nWhat about a battery-operated Theremin, then? Suppose its circuit ground is\nconnected to a large metallic object, perhaps the ground plane of a PCB, the\nenclosure, the stand, or some other kind of metal shield. One could think of\nthis as a way to capacitively couple the circuit to Earth. But it's also\nilluminating to think of this metallic object as a secondary sensor, a common\n\u201crow\u201d strip to the two \u201ccolumn\u201d antennas. As the hand moves towards an\nantenna, it is also in the vicinity of the common \u201crow\u201d conductor, the signal\nground.\n\nThese two ways of reasoning about the circuit both suggest that a battery-\noperated Theremin could work. But the instrument would be sensitive to a human\nhand moving towards the antenna as well as towards the ground conductor. I\nhaven't tried, but I think it would be harder for a performer to control it,\ncompared to an ordinary mains-powered Theremin.\n\n## How to measure capacitance\n\nOur circuit needs to measure the capacitance between two points. Here's a\ncommon way to do it: Connect a voltage source (let's say 5 V) between the\nantenna and ground and give everything a bit of time to settle. Then,\ndisconnect the voltage source and allow the stored charge to flow back out of\nthe antenna, through a resistor to ground. See how long it takes until the\ncurrent stops flowing\u2014i.e. until the voltage across the resistor drops below\nsome threshold (let's say 1 V). This time is proportional to the capacitance.\n\nA typical music driver on the Commodore 64 will update the SID chip registers\nonce per video frame, so a reasonable goal is to be able to complete a full\nmeasurement procedure as often as that. On a PAL system, a video frame lasts\nfor 20 ms. Thus we'd like to discharge 30 pF over the course of, say, 15 ms\n(leaving some margin), with an expected variance of 3% of 15 ms = 450 \u03bcs. On a\n1 MHz machine, that corresponds to a window of 450 clock cycles during which,\nat some point, the voltage drops below the threshold value. So if we could\ndetermine exactly on what clock cycle this happens, we'd get about 8\u20139 bits of\nprecision to represent the full pitch range, which seems workable.\n\nUnfortunately this approach doesn't work in practice. To begin with, the 6510\nCPU in the C64 can't read from input ports on every cycle, even if we\ndistribute the two measurement procedures (volume and pitch) across the video\nframe so we only have to deal with them one at a time. Using a big unrolled\nloop, we can monitor a single input every sixth cycle. If we get really clever\nand execute code inside the I/O registers, we might get it down to once every\nthree cycles. The lightpen input comes to mind: Its X coordinate is reported\nwith a two-cycle resolution, but this would only work for one of the antennas,\nsince there's only one lightpen input. There's also a special mode in the CIA\nchips where they increment Timer B with every Timer A overflow if the CNT\ninput is high; that would allow us to monitor the CNT signal with a two-cycle\nresolution, since that's the maximum Timer A overflow rate. With this method,\nwe could achieve 7\u20138 bits of precision at best.\n\nBut there's a more fundamental problem: In order to discharge 30 pF in 15 ms,\nwe'd have to discharge through a 500 M\u03a9 resistor, which is huge. Large-valued\nresistors tend to be noisy: The resistance will vary with temperature and\nhumidity, and even a small induced current from the environment will result in\na large voltage change on the output. So it would be preferable to discharge\nthrough a smaller resistor. But this would make the whole process a lot\nfaster, and the window of time in which we could observe the transition would\nshrink to a few clock cycles or even less. We'd lose all of the precision.\n\nAnother issue is that there's no reliable way, on a C64, to detect exactly\nwhen an incoming voltage drops below a threshold value. You'd think that a\ndigital input does exactly that: When the voltage drops below a certain level,\nit is interpreted as a logic zero instead of a logic one. But the boundary\nbetween zero and one is really a range of voltages, and the actual tipping\npoint varies over time in unpredictable ways. So we would have to use an\nexternal component, an analogue comparator, to monitor the voltage and produce\na clean digital signal when the threshold is reached.\n\nWhat about the paddle inputs? They are analogue, and actually designed to\nmeasure capacitor discharge times. But alas, they are internally connected to\n1000 pF capacitors to ground. Our little 1 pF variation would disappear\ncompletely. Again, we could use an external component such as an opamp to\nforce the paddle input to follow our weak antenna signal.\n\nBut if we're going to use an external chip anyway, we might as well solve all\nof the aforementioned problems in one go. We'll take a cue from the original\nTheremin design and use an oscillator to convert the capacitance into a\nfrequency. For this, we'll use a chip that's almost as old as the integrated\ncircuit itself: The 555 precision timer from 1972.\n\nWell, that's not entirely true: I'm using a modern 555 replacement chip (built\nwith CMOS technology), because it has lower stray capacitances and leakage\ncurrents and interferes noticeably less with our signal. But functionally it\nbehaves in the same way.\n\nThe 555 contains two analogue comparators, a flip-flop, and a discharge\ntransistor. Together with a capacitor and two resistors, those are all the\nbuilding blocks you need to make a circuit that oscillates in a very robust\nand precise way. The comparators have fixed thresholds at 1/3 and 2/3 of the\nsupply voltage. If you hook up the pins of the 555 in the right way (see\nbelow), it will charge your capacitor up to 2/3 of the supply voltage, then\ndischarge it down to 1/3, then charge it up to 2/3 again, and so on, and\nyou'll have a digital signal (on Pin 3, the output from the flip-flop)\nindicating whether it's currently charging or discharging.\n\nThe frequency of this digital signal is inversely proportional to the\ncapacitance. As the capacitance goes up, the charging and discharging takes\nlonger, and so the frequency decreases\u2014and vice versa. The actual formula for\nthe frequency in Hz is 0.48 / (RC).\n\nCould we connect the output signal to a speaker and already have a working\nTheremin (albeit with a fixed volume)? No, not quite. Suppose we pick a\nresistor value that ensures that the output frequency is in the audible range.\nIf we move our hand towards the antenna, the capacitance will increase, and\nthe pitch will go down. That's backwards\u2014on a real Theremin the pitch rises as\nyou approach the antenna\u2014but the main issue is that, as you might remember,\nthe capacitance will only change by about 3%. A 3% change in pitch is less\nthan a semitone, whereas a musically useful Theremin would need a range of\nabout two octaves or more. And that corresponds to a four-fold increase in\nfrequency, a 400% change.\n\nThe original Theremin solves this problem quite elegantly by having a fixed-\nfrequency oscillator, tuned to match the frequency of the variable oscillator\nwhen the hand is far away from the antenna. The sinewave outputs from the two\noscillators are then multiplied using a vacuum tube. This technique called\nheterodyning is common in radio engineering, and it produces a new signal with\na frequency that is the difference between the frequencies of the two\noscillators. That is, 0 Hz when the hand is far away from the antenna, and\nthen gradually increasing as the hand gets closer. The high-frequency signal\nhas been moved to a lower part of the spectrum, and is now called a baseband\nsignal. And this is the signal that, after some audio processing, eventually\nreaches the speaker.\n\n(Actually, heterodyning produces both the difference and the sum of the two\nfrequencies, mixed together. The Theremin is designed in such a way that this\nsum ends up outside the audible range and can be filtered away.)\n\nIn the digital realm things are simpler. Once we have obtained the oscillator\nfrequency in numerical form, we can easily map a small range of numbers to a\nlarge pitch range. The question is, how do we obtain the frequency in\nnumerical form?\n\nWell, remember that we'd like to get a new measurement every 20 ms. If we\nobserve the output from the 555 oscillator and count the number of pulses that\noccur during a fixed period of time, that number will be proportional to the\nfrequency. And it just so happens that the C64 is equipped with two 16-bit\npulse counters (one per CIA chip). All we need to do is connect the 555\noscillator outputs to the CNT1 and CNT2 pins on the user port. These pins can\nact as asynchronous edge detectors, which means that pulses can be detected at\nany time relative to the C64 system clock. However, the counters can't keep up\nwith frequencies higher than half the C64 clock frequency, or approximately\n500 kHz. So we'll pick resistors for the 555 in such a way that the fastest\nsignal\u2014when the hand is far away from the antenna\u2014is just below 500 kHz. I\nsettled for 33 k\u03a9 resistors.\n\nAt this frequency, during a 20 ms video frame, the counter will reach 10,000.\nBut when the hand is near the antenna, the capacitance increases by 3%, the\nfrequency decreases by 3%, and the counter only gets as far as 9700. And so we\nend up with a range of about 300 different values, just over 8 bits of\nprecision. And because we're now using a sensible resistance (33 k\u03a9 instead of\n500 M\u03a9), and we're effectively averaging the output from several independent\ncharge-discharge measurements, the analogue signal is of good quality to begin\nwith.\n\n## Number crunching and envelope wrangling\n\nAll right, so we've got a pair of 16-bit readings, one for each antenna. How\ndo we translate them into pitch and volume?\n\nAs discussed in the previous section, we won't be seeing numbers from the full\n16-bit range, but rather a subrange of maybe 300 different values. The exact\nboundaries will depend on such factors as the size of each antenna and the\nsize of the human performer. The first step of the computation will be to\nrescale the values from this subrange to the full 0\u201365535 range.\n\nMy software includes a calibration mode for this purpose. The performer\ninitiates calibration by pressing a key on the keyboard (F1 or F3 depending on\nwhat antenna to calibrate) while holding the hand close to the antenna. The\ncomputer samples the value and considers this to be the lowest possible\nreading (highest capacitance). One second later, the computer samples the\nvalue and considers this the highest possible reading; within this time, the\nperformer must have moved their hand far away from the antenna.\n\nThese readings are used to compute a scale factor and offset for transforming\nfuture readings into a number in the desired (full 16-bit) range. We also flip\nthe range over, so the lowest number corresponds to the position farthest away\nfrom the antenna.\n\nNow we have a value that's more or less proportional to the hand position, and\nthus to the desired pitch. But the SID chip wants a frequency, and frequency\nvaries exponentially with pitch. Besides, our model of what's going on is\nsomewhat simplified, and I'm not convinced that the measurement is perfectly\nlinear to begin with. So the next step is to perform a non-linear\ntransformation of this reading, to obtain the desired frequency value for the\nSID chip. This is done with an interpolated table lookup: The upper eight bits\nare used as an index into a precomputed table with 256 entries, and the lower\neight bits determine how to mix two adjacent table entries to obtain a value\nin between. The values in the table increase monotonically (but not linearly)\nfrom the lowest to the highest desired frequency. The table was crafted\nthrough trial-and-error, and I ended up using a simple gamma correction curve\n(y = x^0.4 in the range 0\u20131).\n\nEven if the performer's hand is quite still, the output from the pulse counter\nwill be somewhat jittery. Therefore, the gamma-corrected value is low-pass\nfiltered using a simple running average (the output from the filter is the\naverage of the input and the previous output). This turns any rapid movements\ninto smooth glides, for better or worse, but it also allows the performer to\nhold a precise pitch even when it falls somewhere between two integer values.\n\nThat concludes the frequency part, but what about the volume? Here, the SID\nchip presents us with a challenge: There is indeed a master volume parameter,\nbut it's only a 4-bit register, which is somewhat crude. Furthermore, I wanted\nto use a breadbin case for this instrument for aesthetical reasons, but that\nmeant I had to use the old model of the SID chip (6581), and unfortunately\nthis model emits a distinct click every time you change the master volume\nsetting.\n\nWhat I ended up doing instead was to use the Voice 3 envelope readback\nregister, $d41c, in a feedback loop. This register reports the current volume\nas an 8-bit quantity. Whenever the current volume is lower than the desired\nvolume, I set the gate bit. When it is higher, I turn off the gate bit again.\nThis update is performed twice per video frame, i.e. at 100 Hz. The attack and\nrelease parameters are set to $a and $8 respectively, for a reasonable\ncompromise between a snappy response to hand movements and a clean sound (not\naudibly dithering between two volume levels).\n\n## Conclusion\n\nBuilding a C64 Theremin was a fun project, but\u2014somewhat unsurprisingly\u2014the\ninstrument is really hard to play. Still, it's a very special feeling to hold\na tone in front of you in the air. Perhaps I'll sneak a brief Theremin part\ninto some future musical performance video.\n\nPosted Monday 29-Aug-2022 20:24\n\n### Discuss this page\n\nDisclaimer: I am not responsible for what people (other than myself) write in\nthe forums. Please report any abuse, such as insults, slander, spam and\nillegal material, and I will take appropriate actions. Don't feed the trolls.\n\nJag tar inget ansvar f\u00f6r det som skrivs i forumet, f\u00f6rutom mina egna inl\u00e4gg.\nV\u00e4nligen rapportera alla inl\u00e4gg som bryter mot reglerna, s\u00e5 ska jag se vad jag\nkan g\u00f6ra. Som regelbrott r\u00e4knas till exempel f\u00f6rol\u00e4mpningar, f\u00f6rtal, spam och\nolagligt material. Mata inte tr\u00e5larna.\n\nAnonymous Tue 30-Aug-2022 01:00\n\nAmazing. Any plans on sharing the code?\n\nAnonymous Fri 2-Sep-2022 13:12\n\nPlease share the C64 code and diagram to connect the user port.\n\nThanks\n\nAnonymous Sat 3-Sep-2022 15:43\n\nVery nice post, I am also interested in schematics and code!\n\nAnonymous Sat 3-Sep-2022 17:58\n\nMe too. ;) Schematics & Code would be fantastic! Maybe with a donate-link?\n\nAnonymous Thu 8-Sep-2022 22:47\n\nNice Job. I wouldn't be upset if this got posted to GitHub. Either way, cool\nand thanks! =)\n\nAnonymous Mon 14-Nov-2022 09:26\n\nGreat way of achieving a computer readable input. I'm thinking about adding an\nexternal pulse counter to your circuit and turning it into a RPi or Wemos hat\n:-) Let's make a ThereMidi!\n\n(Pieter Cuijpers)\n\nAnonymous Wed 14-Feb-2024 07:55\n\nYour ideas, implementations and above all your humor are terrific. Keep up the\ngood work! Greetings from Germany! c4eva!\n\n", "frontpage": false}
