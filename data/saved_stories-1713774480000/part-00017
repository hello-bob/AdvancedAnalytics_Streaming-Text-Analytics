{"aid": "40109822", "title": "Show HN: Analyze and visualise the binary size of the dependency for Golang", "url": "https://github.com/Zxilly/go-size-analyzer", "domain": "github.com/zxilly", "votes": 1, "user": "zxilly", "posted_at": "2024-04-21 22:34:41", "comments": 0, "source_title": "GitHub - Zxilly/go-size-analyzer: A tool for analysing the size of dependencies in compiled Golang binaries, providing insight into their impact on the final build.", "source_text": "GitHub - Zxilly/go-size-analyzer: A tool for analysing the size of\ndependencies in compiled Golang binaries, providing insight into their impact\non the final build.\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nZxilly / go-size-analyzer Public\n\n  * Notifications\n  * Fork 3\n  * Star 105\n\nA tool for analysing the size of dependencies in compiled Golang binaries,\nproviding insight into their impact on the final build.\n\n### License\n\nAGPL-3.0 license\n\n105 stars 3 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# Zxilly/go-size-analyzer\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n3 Branches\n\n4 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nZxillychore: fix typoApr 21, 2024395c46d \u00b7 Apr 21, 2024Apr 21, 2024\n\n## History\n\n98 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| ci: workaround checkout bug| Apr 21, 2024  \n  \n### cmd/gsa\n\n|\n\n### cmd/gsa\n\n| feat: implement html server| Apr 21, 2024  \n  \n### internal\n\n|\n\n### internal\n\n| chore: fix typo| Apr 21, 2024  \n  \n### research\n\n|\n\n### research\n\n| chore: rename self to main| Mar 22, 2024  \n  \n### ui\n\n|\n\n### ui\n\n| feat: update ui group| Apr 21, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| ci: fix main entry| Apr 21, 2024  \n  \n### .goreleaser.yaml\n\n|\n\n### .goreleaser.yaml\n\n| ci: fix main entry| Apr 21, 2024  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| chore: relicense to AGPLv3| Jan 16, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| docs: add zh readme| Apr 21, 2024  \n  \n### README_zh-CN.md\n\n|\n\n### README_zh-CN.md\n\n| docs: add zh readme| Apr 21, 2024  \n  \n### go.mod\n\n|\n\n### go.mod\n\n| feat: implement html server| Apr 21, 2024  \n  \n### go.sum\n\n|\n\n### go.sum\n\n| feat: implement html server| Apr 21, 2024  \n  \n## Repository files navigation\n\n# go-size-analyzer\n\nEnglish | \u7b80\u4f53\u4e2d\u6587\n\nA simple tool to analyze the size of a Go compiled binary.\n\n## Installation\n\nDownload the latest release from the release page\n\nUse go install is not recommended, because it won't include the embed ui\ntemplate, which is required for the web mode.\n\n## Usage\n\nyou can use gsa to analyze the binary:\n\n    \n    \n    Usage: gsa [OPTIONS] [file] Application Options: --verbose Verbose output -f, --format=[text|json|html] Output format (default: text) -o, --output= Write to file --version Show version Text Options: --hide-sections Hide sections --hide-main Hide main package --hide-std Hide standard library Json Options: --indent= Indentation for json output Html Options: --web Start web server for html output, this option will override format to html and ignore output option --listen= Listen address (default: :8080) --open Open browser Help Options: -h, --help Show this help message Arguments: file: Binary file to analyze\n\nCaution\n\nThe tool can work with stripped binaries, but it may lead to inaccurate\nresults.\n\n### Example\n\n#### Web mode\n\n    \n    \n    $ gsa --web golang-compiled-binary\n\nWill start a web server on port 8080, you can view the result in your browser.\n\nThe web page will look like this:\n\nYou can click to expand the package to see the details.\n\n#### Text mode\n\n    \n    \n    $ gsa docker-compose-linux-x86_64 +------------------------------------------------------------------------------+ | docker-compose-linux-x86_64 | +---------+-----------------------------------------------+--------+-----------+ | PERCENT | NAME | SIZE | TYPE | +---------+-----------------------------------------------+--------+-----------+ | 27.76% | .gopclntab | 17 MB | section | | 15.17% | .rodata | 9.5 MB | section | | 11.63% | k8s.io/api | 7.3 MB | vendor | | 6.69% | .strtab | 4.2 MB | section | | 3.47% | k8s.io/client-go | 2.2 MB | vendor | | 3.37% | .symtab | 2.1 MB | section | | 2.28% | github.com/moby/buildkit | 1.4 MB | vendor | | 1.54% | github.com/gogo/protobuf | 968 kB | vendor | | 1.53% | github.com/google/gnostic-models | 958 kB | vendor | | 1.33% | github.com/aws/aws-sdk-go-v2 | 836 kB | vendor | | 1.26% | crypto | 790 kB | std | | 1.25% | google.golang.org/protobuf | 782 kB | vendor | | 1.24% | k8s.io/apimachinery | 779 kB | vendor | | 1.24% | net | 777 kB | std | | 1.20% | github.com/docker/compose/v2 | 752 kB | main | | 0.95% | .noptrdata | 596 kB | section | | 0.93% | go.opentelemetry.io/otel | 582 kB | vendor | | 0.85% | google.golang.org/grpc | 533 kB | vendor | | 0.71% | runtime | 442 kB | std | | 0.59% | github.com/docker/buildx | 371 kB | vendor | | 0.55% | github.com/docker/docker | 347 kB | vendor | | 0.53% | | 331 kB | generated | | 0.52% | golang.org/x/net | 326 kB | vendor | | 0.47% | github.com/theupdateframework/notary | 294 kB | vendor | ...[Collapsed]... | 0.00% | database/sql/driver | 128 B | std | | 0.00% | .note.go.buildid | 100 B | section | | 0.00% | hash/fnv | 96 B | std | | 0.00% | maps | 96 B | std | | 0.00% | github.com/moby/sys/sequential | 64 B | vendor | | 0.00% | .text | 1 B | section | +---------+-----------------------------------------------+--------+-----------+ | 97.65% | KNOWN | 61 MB | | | 100% | TOTAL | 63 MB | | +---------+-----------------------------------------------+--------+-----------+\n\n## TODO\n\n  * Add more pattern for disassembling the binary\n  * Extract the information from the dwarf section\n  * Count the symbol size itself to package\n  * Add other chart like flame graph, pie chart etc.\n  * Support C++/Rust symbol demangling in cgo\n\n## Contribution\n\nAny contribution is welcome, feel free to open an issue or a pull request.\n\n## LICENSE\n\nPublished under the AGPL-3.0.\n\n## About\n\nA tool for analysing the size of dependencies in compiled Golang binaries,\nproviding insight into their impact on the final build.\n\n### Resources\n\nReadme\n\n### License\n\nAGPL-3.0 license\n\nActivity\n\n### Stars\n\n105 stars\n\n### Watchers\n\n2 watching\n\n### Forks\n\n3 forks\n\nReport repository\n\n## Releases 4\n\n0.2.0 Latest\n\nApr 21, 2024\n\n\\+ 3 releases\n\n## Packages 0\n\nNo packages published\n\n## Contributors 2\n\n  * Zxilly\n  * fossabot fossabot\n\n## Languages\n\n  * Go 57.8%\n  * TypeScript 36.3%\n  * Python 3.6%\n  * SCSS 1.1%\n  * Other 1.2%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
