{"aid": "40283608", "title": "A PHP library to work with Telegram UTF-16 styled text entities", "url": "https://github.com/danog/telegram-entities", "domain": "github.com/danog", "votes": 1, "user": "danogentili", "posted_at": "2024-05-07 08:58:01", "comments": 0, "source_title": "GitHub - danog/telegram-entities: A library to work with Telegram UTF-16 styled text entities.", "source_text": "GitHub - danog/telegram-entities: A library to work with Telegram UTF-16\nstyled text entities.\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\ndanog / telegram-entities Public\n\n  * Sponsor\n  * Notifications\n  * Fork 0\n  * Star 4\n\nA library to work with Telegram UTF-16 styled text entities.\n\n### License\n\nApache-2.0 license\n\n4 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# danog/telegram-entities\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n3 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\ndanogTrim text before parsing markdownApr 25, 2024d70207f \u00b7 Apr 25, 2024Apr\n25, 2024\n\n## History\n\n7 Commits  \n  \n### .github\n\n|\n\n### .github\n\n| First commit| Apr 15, 2024  \n  \n### docs\n\n|\n\n### docs\n\n| First commit| Apr 15, 2024  \n  \n### examples\n\n|\n\n### examples\n\n| Update examples| Apr 22, 2024  \n  \n### src\n\n|\n\n### src\n\n| Trim text before parsing markdown| Apr 25, 2024  \n  \n### tests\n\n|\n\n### tests\n\n| Fix toHTML| Apr 22, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| First commit| Apr 15, 2024  \n  \n### .php-cs-fixer.dist.php\n\n|\n\n### .php-cs-fixer.dist.php\n\n| First commit| Apr 15, 2024  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| First commit| Apr 15, 2024  \n  \n### NOTICE\n\n|\n\n### NOTICE\n\n| First commit| Apr 15, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| Update examples| Apr 22, 2024  \n  \n### composer.json\n\n|\n\n### composer.json\n\n| First commit| Apr 15, 2024  \n  \n### phpunit.xml\n\n|\n\n### phpunit.xml\n\n| First commit| Apr 15, 2024  \n  \n### psalm.xml\n\n|\n\n### psalm.xml\n\n| First commit| Apr 15, 2024  \n  \n## Repository files navigation\n\n# telegram-entities\n\nA library to work with Telegram UTF-16 styled text entities, created by Daniil\nGentili (https://daniil.it).\n\nThis library can be used to modify entities returned by the Telegram Bot API,\nconvert entities to HTML or even locally generate them using a custom\nMarkdownV2 and HTML parser inside of the library.\n\nThis library was initially created for MadelineProto, an async PHP client API\nfor the telegram MTProto protocol.\n\n## Installation\n\n    \n    \n    composer require danog/telegram-entities\n\n## Usage\n\n    \n    \n    <?php declare(strict_types=1); use Amp\\Http\\Client\\HttpClientBuilder; use Amp\\Http\\Client\\Request; use danog\\TelegramEntities\\Entities; use danog\\TelegramEntities\\EntityTools; require __DIR__.'/../vendor/autoload.php'; $token = getenv('TOKEN'); if (!$token) { throw new AssertionError(\"A TOKEN environment variable must be specified!\"); } $dest = getenv('DEST'); if (!$dest) { throw new AssertionError(\"A DEST environment variable must be specified!\"); } $client = HttpClientBuilder::buildDefault(); $sm = function (string $message, string $parse_mode = '', array $entities = []) use ($token, $dest, $client): array { $res = $client->request(new Request(\"https://api.telegram.org/bot$token/sendMessage?\".http_build_query([ 'text' => $message, 'parse_mode' => $parse_mode, 'entities' => json_encode($entities), 'chat_id' => $dest ]))); return json_decode($res->getBody()->buffer(), true)['result']; }; $result = $sm(\"*This is a \u2764\ufe0f test*\", parse_mode: \"MarkdownV2\"); // Convert a message+entities back to HTML $entities = new Entities($result['text'], $result['entities']); var_dump($entities->toHTML()); // <b>This is a \u2764\ufe0f test</b> // Modify $entities as needed $entities->message = \"A message with \u2764\ufe0f emojis\"; // EntityTools::mb* methods compute the length in UTF-16 code units, as required by the bot API. $entities->entities[0]['length'] = EntityTools::mbStrlen($entities->message); // then resend: $sm($entities->message, entities: $entities->entities); // Convert HTML to an array of entities locally $entities = Entities::fromHtml(\"<b>This is <i>a \u2764\ufe0f nested</i> test</b>\"); $sm($entities->message, entities: $entities->entities); // Convert markdown to an array of entities locally $entities = Entities::fromMarkdown(\"*This is _a \u2764\ufe0f nested_ test*\"); $sm($entities->message, entities: $entities->entities); // Escape text using utility methods $generic = EntityTools::markdownEscape(\"Automatically escaped to prevent *markdown injection*!\"); $link = EntityTools::markdownUrlEscape(\"https://google.com\"); $code = EntityTools::markdownCodeEscape(\"test with autoescaped ` test\"); $codeBlock = EntityTools::markdownCodeblockEscape(\"<?php echo 'test with autoescaped ``` test';\"); $entities = Entities::fromMarkdown(\"This is _a \u2764\ufe0f [nested]($link)_ `$code` ```php $codeBlock\n\n$generic \");\n\n$sm($entities->message, entities: $entities->entities);\n\n// Escape text for the HTML parser! $generic =\nEntityTools::htmlEscape(\"Automatically escaped to prevent HTML injection!\");\n$entities = Entities::fromHtml($generic);\n\n$sm($entities->message, entities: $entities->entities);\n\n// See https://github.com/danog/telegram-entities for the full list of\navailable methods!\n\n    \n    \n    Many more methods are available, see the [API documentation](https://github.com/danog/telegram-entities/blob/master/docs/docs/index.md) for the full list! ## API Documentation Click [here &raquo;](https://github.com/danog/telegram-entities/blob/master/docs/docs/index.md) to view the API documentation.\n\n## About\n\nA library to work with Telegram UTF-16 styled text entities.\n\n### Resources\n\nReadme\n\n### License\n\nApache-2.0 license\n\nActivity\n\n### Stars\n\n4 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases 3\n\nImprove markdown parsing Latest\n\nApr 25, 2024\n\n\\+ 2 releases\n\n## Sponsor this project\n\ndanog Daniil Gentili\n\nSponsor\n\nLearn more about GitHub Sponsors\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * PHP 100.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
