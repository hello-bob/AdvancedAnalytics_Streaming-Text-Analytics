{"aid": "40057363", "title": "OPNsense Wildcard Support in Firewall Host Alias (2022)", "url": "https://github.com/opnsense/core/issues/4145", "domain": "github.com/opnsense", "votes": 1, "user": "transpute", "posted_at": "2024-04-16 21:20:13", "comments": 0, "source_title": "Wildcard Support in Firewall Alias - Type Host(s) \u00b7 Issue #4145 \u00b7 opnsense/core", "source_text": "Wildcard Support in Firewall Alias - Type Host(s) \u00b7 Issue #4145 \u00b7\nopnsense/core \u00b7 GitHub\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nopnsense / core Public\n\n  * Notifications\n  * Fork 676\n  * Star 3k\n\nJump to bottom\n\n# Wildcard Support in Firewall Alias - Type Host(s) #4145\n\nClosed\n\nMer-idium opened this issue May 30, 2020 \u00b7 22 comments\n\nClosed\n\n# Wildcard Support in Firewall Alias - Type Host(s) #4145\n\nMer-idium opened this issue May 30, 2020 \u00b7 22 comments\n\nLabels\n\nhelp wanted Contributor missing / timeout support Community support\n\n## Comments\n\n###\n\nMer-idium commented May 30, 2020\n\nImportant notices Before you add a new report, we ask you kindly to\nacknowledge the following:[-] I have read the contributing guide lines at\nhttps://github.com/opnsense/core/blob/master/CONTRIBUTING.md[-] I have\nsearched the existing issues and I'm convinced that mine is new.Hi All,Is it\npossible to add the feature to include wildcard support in Firewall Alias\ngroups? At the moment rather than going *.somedomain.com to white list all\nsubdomains i need to manually add each one like so: first.somedomain.com,\nsecond.somedomain.com etc...This can get irritating when i have many\nsubdomains to add which are near identical. In some instances the only way to\nobtain all domains is to run through Unbound logs to find the single sub\ndomain i missed which drags out the process.Thanks  \n---  \nThe text was updated successfully, but these errors were encountered:  \n  \nAdSchellevis added the support Community support label May 30, 2020\n\nMember\n\n###\n\nAdSchellevis commented May 30, 2020\n\nlong story short, you can't (easily) request all existing records for a (top)\nlevel domain. https://stackoverflow.com/questions/19322962/how-can-i-list-all-\ndns-recordsOur aliases resolve on intervals and capture the associated\naddresses in a table, which only works if you can determine addresses up\nfront.You can add domain overrides in unbound and prevent the clients from\nresolving, which is what most of the blacklist solutions use as well. A more\ncomplex solution would be to capture unbounds responses and add those to a\ntable, this is however outside the scope of our project.  \n---  \n  \nAuthor\n\n###\n\nMer-idium commented May 31, 2020\n\nIf the issue was for blacklisting i wouldn't mind as i would use unbound. This\nis more for traffic direction to negate a proxy and then pass the traffic\nthrough a VPN.  \n---  \n  \nContributor\n\n###\n\nagh1467 commented Aug 28, 2020\n\nThis is becoming a more common feature in firewalls. Several vendors already\nhave support for it. As cloud usage expands, DNS names are becoming more\ndynamic by nature.Here are several examples of the feature from other vendors:\nhttps://www.sonicwall.com/support/knowledge-base/dns-resolution-of-wildcard-\nfqdn-address-objects/170505295458240/\nhttps://www.watchguard.com/help/docs/help-center/en-US/Content/en-\nUS/Fireware/policies/fqdn_about_c.html\nhttps://docs.fortinet.com/document/fortigate/6.2.0/cookbook/217973/using-\nwildcard-fqdn-addresses-in-firewall-policiesTrying to request all DNS records\nof a domain is a futile effort, as is trying to perform reverse DNS lookups.\nGenerally, the way this feature works in other products is by listening to DNS\nrequests as they pass through the device. The listening service keeps a local\ntable of DNS names and IPs as appropriate for the aliases that have DNS names\nconfigured. Either the firewall consults the table when applying rules, or the\nDNS service updates the alias definitions as DNS requests come through. There\nare probably other implementations that would work as well.The obvious\nchallenge in wildcard-based rules is keeping everything in sync. A query now,\nmay net different results from a query later. Queries performed by the\nfirewall my net different replies from a client making the same DNS query. The\nfirewall rules must always contain the exact IPs that are sent to DNS clients.\nA user in the pfsense reddit explained it fairly\nconcisely.https://www.reddit.com/r/PFSENSE/comments/7wwnun/wildcard_domains_in_aliases/du4t5t0/?utm_source=reddit&utm_medium=web2x&context=3\n\n> The way hostnames in aliases work is by periodically resolving those exact\n> names every few minutes and keeping a pf table up-to-date. That's easy for a\n> fully qualified domain name but impossible for wildcards. You can't query a\n> DNS server and ask for *.example.com. This mechanism also fails for\n> hostnames which have randomized record set replies, which is common with\n> content hosted on CDNs.It does not directly match the name when queried\n> because that is not possible at the firewall level. It does not attempt to\n> perform a reverse DNS lookup because the vast majority of the time that\n> would be useless since reverse DNS would fail to match what the user expects\n> in shared hosting space. You have to intercept the initial client DNS\n> request and base a response on what the client received. pfBlockerNG and its\n> DNSBL feature may help there, depending on what you're trying to do.\n\nA common usage of this feature is to make dynamic rules to allow CDN based\nservices. The domain names used by CDNs often change, come and go as demands\nebb and flow. Using known FQDNs is just not an option as cloud DNS names are\noften ephemeral. This is different from the utility of a DNS blacklist because\nthe decision to allow or deny is not made at the DNS resolver, but instead in\na firewall rule designed to allow the client's traffic to reach its\ndestination. Instead of preventing a client from reaching the destination,\nit's allowing a client to reach ONLY specific destinations.Another usage of\nthis feature is with policy-based routing, and sending traffic destined for\nAmazon Prime servers out my WAN interface instead of the VPN interface. Amazon\nPrime disables their service while connecting via a known VPN provider.Here is\nan example of an Amazon Prime DNS name:\navlrc-a1kaxig6vxsg8y-11d2d2020081910dandroid-\nnvidiadarcydarcy9p.na.api.amazonvideo.comI wouldn't be surprised if this DNS\nname was created just for me, just to stream this one video, or even a segment\nof this one video. This could easily be captured in a wildcard entry such as\n*.amazonvideo.com  \n---  \n  \nMember\n\n###\n\nAdSchellevis commented Dec 16, 2020\n\nThis issue has been automatically timed-out (after 180 days of inactivity).For\nmore information about the policies for this repository, please read\nhttps://github.com/opnsense/core/blob/master/CONTRIBUTING.md for further\ndetails.If someone wants to step up and work on this issue, just let us know,\nso we can reopen the issue and assign an owner to it.  \n---  \n  \nAdSchellevis closed this as completed Dec 16, 2020\n\nAdSchellevis added the help wanted Contributor missing / timeout label Dec 16,\n2020\n\n###\n\ns3rvant commented Apr 26, 2021\n\nAgreed with @agh1467 that wildcard support would be greatOur primary firewall\nis proprietary and supports wildcard domains however I'm unable to completely\nmove to pfSense because that support is required by some of our services  \n---  \n  \n###\n\nmarcelmah commented Jul 30, 2021\n\nI agree, would be nice, in my use case I would need it to create a firewall\nrule to allow *.api.letsencrypt.com to connect to my NGINX to validate\nLetsEncrypt certs. My OPNsense only allows one country (GeoIP) to connect to\nmy webserver by default. Now I need to enable two rules to allow everyone to\nconnect to validate and then I can disable them again. It's not much, but it's\nmanual labor...  \n---  \n  \n###\n\ngongoscho commented Dec 9, 2021\n\nIs there already a feature request for this?Will only allow the company cell\nphone to connect to port 443 * .eu.blackberry.net via TCP and nothing\nmore.Unfortunately I have to enter the server IPs manually.  \n---  \n  \nMember\n\n###\n\nmimugmail commented Dec 9, 2021\n\nThis only works for proxy as the firewall cant guess any FQDN  \n---  \n  \n###\n\ngongoscho commented Dec 9, 2021 \u2022\n\nThat is not right \ud83d\ude43 Take a look at the documentation \ud83e\udd13I created an alias:\nBlackBerry_Servers, and added the addresses:\n\n  * c17-217.eu.blackberry.net\n  * c17-218.eu.blackberry.net\n  * c17-219.eu.blackberry.net\n  * c19-240.blackberry.net\n\nwhich are also resolved:\n\n  * 93.186.17.217\n  * 93.186.17.218\n  * 93.186.17.219\n  * 93.186.19.240\n\nunder: Firewall: Diagnostics: Aliases \ud83d\ude0e and the alias work in the firewall-\nrules  \n---  \n  \nMember\n\n###\n\nmimugmail commented Dec 9, 2021\n\nBut you cannot create one alias *.Blackberry.net which would resolve all\npossible FQDNs into one list ;)  \n---  \n  \n###\n\nderritter88 commented Dec 21, 2021\n\nI am currently evaluating OPNsense as I might migrate from Sophos XG to it. At\nSophos XG this feature is working without an issue and I really would love to\nsee it also working at OPNsense.  \n---  \n  \n###\n\nderritter88 commented Dec 21, 2021\n\nMaybe this tool might be a good starting point? -> Knock\nhttps://github.com/guelfoweb/knockorhttps://securitytrails.com/blog/subdomain-\nscanner-find-subdomains  \n---  \n  \n###\n\nderritter88 commented Dec 21, 2021\n\nI just used Knock and all the hits a outputted are the same as on Sophos XG.So\nmaybe a solution?!Althought I don't know if BSD can run Python3  \n---  \n  \n###\n\ninferKNOX commented Aug 4, 2022\n\nAs @agh1467 mentioned, it works flawlessly in the Fortigate I use.Basically,\nonce the wildcard is set in the subdomain, the firewall seems to wait for DNS\nqueries of any subdomains that match the wildcard, and once it gets one + a\nhit on the firewall rule, it resolves it and caches the sub-domain and IP. My\nimpression is that it is either, that or perhaps it does a reverse lookup of\nnew IPs before they are processed by the rules, then if the resolved IP\nmatches the wildcard, it caches that specific IP against the wildcard &\nproceeds to process firewall rules. It then seemingly periodically queries the\ncached subdomain and updates the IP if necessary, or goes back to an\nunresolved state if resolution fails for a few tries.Whatever the case,\nwildcard FQDNs remain unresolved until there is an attempt to access a\nmatching subdomain and the wildcard FQDN receives a hit by the firewall rules.\nThis is invaluable in policy-based routing, particularly for CDNs, and is a\nmajor roadblock (for me) in migrating to OPNsense.  \n---  \n  \nMember\n\n###\n\nmimugmail commented Aug 4, 2022\n\nWow .. what would happen if you brute force a domain with a wildcard A record\n\ud83d\ude00  \n---  \n  \n###\n\ninferKNOX commented Aug 5, 2022\n\nDo you mean that such a function introduces a vulnerability, and firewalls\nsupporting it are exposed to that risk?  \n---  \n  \nMember\n\n###\n\nAdSchellevis commented Aug 5, 2022\n\nThis just only works if you either snif dns traffic to feed the alias logic or\nlet the resolver (unbound) pass the requested domains. Since we fetch in\nadvance, you can't really do wildcards like this... but I think I already\nexplained that. when it's not really a fine grained policy restriction (lock\nyoutube for all), an alias in the resolver usually does the trick as\nwell.Sniffing / listing to dns requests (which is probably what the others do)\nwill eventually stop working as well when more and more dns traffic is being\nencrypted anyway.  \n---  \n  \n###\n\nmodest commented Aug 9, 2022 \u2022\n\n@inferKNOX You can accomplish this today using dnsmasq.\n\n  1. Set dnsmasq as your opnsense DNS server. (Or, if you really want to continue using Unbound, you can set Query Forwarding in Unbound to forward lookups for specific wildcard domains to dnsmasq internally.)\n  2. In Firewall > Aliases, create an empty alias such as hosts_from_dns. Set the type to External (Advanced) with both IPv4 and IPv6.\n  3. Add a custom config file for dnsmasq in /usr/local/etc/dnsmasq.conf.d/dnsmasq-ipset.conf\n\n    \n    \n    # Add the response for certain A/AAAA lookups to an opnsense alias ipset=/bbc.com/bbc.co.uk/bbci.co.uk/hosts_from_dns # Uncomment these if Unbound is still your primary DNS server; otherwise you'll have a loop #no-resolv #server=8.8.8.8\n\n  4. Restart dnsmasq.\n\nRun a test DNS query, then check the contents of the new table (Firewall >\nDiagnostics > Aliases > hosts_from_dns) to see it populate. You can use this\nalias (hosts_from_dns) in firewall rules.(Despite the config option being\nnamed \"ipset\", dnsmasq will use BSD pf tables or nftables depending on the\nOS.)Edit: Updated steps to clarify that the type should be \"External\n(Advanced)\" and commented out the Unbound loop mitigation by default. Removed\nthe mitigation for the Aliases Resolver Interval.  \n---  \n  \nMember\n\n###\n\nAdSchellevis commented Aug 9, 2022\n\n> In Firewall > Aliases, create an empty alias such as hosts_from_dns\n\nMake sure you choose External (advanced) as type in this case as these won't\nbe touched by the system. Nice tip by the way.  \n---  \n  \nContributor\n\n###\n\nagh1467 commented Aug 9, 2022 \u2022\n\nHey all, I tried @modest 's solution using dnsmasq and it does function and\nsupports subdomains.dnsmasq log sample creating entries for the primary\ndomain, and subdomains equally:\n\n    \n    \n    ipset add hosts_from_dns 108.157.4.90 amazonvideo.com info: table created 1 addresses added reply amazonvideo.com is 108.157.4.90 ipset add hosts_from_dns 108.157.4.59 amazonvideo.com 1 addresses added reply amazonvideo.com is 108.157.4.59 ipset add hosts_from_dns 108.157.4.77 amazonvideo.com 1 addresses added reply amazonvideo.com is 108.157.4.77 ipset add hosts_from_dns 108.157.4.60 amazonvideo.com 1 addresses added reply amazonvideo.com is 108.157.4.60 reply amazonvideo.com is NODATA-IPv6 reply avlrc-a1kaxig6vxsg8y-11d2d2020081910dandroid-nvidiadarcydarcy9p.na.api.amazonvideo.com is <CNAME> reply atv-ext.amazon.com is <CNAME> reply v1qxr2rxh3.na.prod.ter.amazonvideo.com is <CNAME> reply na.t100.prod.ter.amazonvideo.com is <CNAME> ipset add hosts_from_dns 34.231.95.236 iad.t100.prod.ter.amazonvideo.com 1 addresses added reply iad.t100.prod.ter.amazonvideo.com is 34.231.95.236 ipset add hosts_from_dns 18.209.234.142 iad.t100.prod.ter.amazonvideo.com 1 addresses added reply iad.t100.prod.ter.amazonvideo.com is 18.209.234.142 ipset add hosts_from_dns 34.226.163.160 iad.t100.prod.ter.amazonvideo.com 1 addresses added reply iad.t100.prod.ter.amazonvideo.com is 34.226.163.160 ipset add hosts_from_dns 3.228.121.198 iad.t100.prod.ter.amazonvideo.com 1 addresses added reply iad.t100.prod.ter.amazonvideo.com is 3.228.121.198 ipset add hosts_from_dns 3.95.140.135 iad.t100.prod.ter.amazonvideo.com 1 addresses added reply iad.t100.prod.ter.amazonvideo.com is 3.95.140.135 ipset add hosts_from_dns 3.86.124.162 iad.t100.prod.ter.amazonvideo.com 1 addresses added reply iad.t100.prod.ter.amazonvideo.com is 3.86.124.162 reply iad.t100.prod.ter.amazonvideo.com is NODATA-IPv6\n\nAll of the IPs are grouped together in the table.pfctl -t hosts_from_dns -T\nshow:\n\n    \n    \n    3.86.124.162 3.95.140.135 3.228.121.198 18.209.234.142 34.226.163.160 34.231.95.236 108.157.4.59 108.157.4.60 108.157.4.77 108.157.4.90\n\nIt does work for both NAT/Outbound, and Rules.\n\n> In Firewall > Advanced, set Aliases Resolve Interval to 0 to disable it.\n> There is a bug where it clears unrecognized tables.\n\nI tried this set up with and without this and functionality was the same, and\nI did not experience the table being cleared.An apparent limitation of this\ndnsmasq functionality is that the TTL for DNS records is not considered, and\nIPs added to the set remain in the set forever. Used with a CDN service, the\ntable may become huge. I'd guess it may have a negative impact on performance\nat some point depending on hardware, the number of records in the table, and\nthe frequency and number of requests made by clients.The only configuration\nfile modification that was necessary for this was to specify a single ipset\nvalue: ipset=/amazonvideo.com/hosts_from_dnsFor reference:\n\n    \n    \n    --ipset=/<domain>[/<domain>...]/<ipset>[,<ipset>...] Places the resolved IP addresses of queries for one or more domains in the specified Netfilter IP set. If multiple setnames are given, then the addresses are placed in each of them, subject to the limitations of an IP set (IPv4 addresses cannot be stored in an IPv6 IP set and vice versa). Domains and subdomains are matched in the same way as --address. These IP sets must already exist. See ipset(8) for more details.\n\nOther specific configurations, were available in the web UI. However, there is\nno interface for specifying ipset values. I'd guess that wouldn't happen until\nthe interface is updated to MVC, where it could use an ArrayField with a\nCSVListField for storing the domain names.I saw in the logs that dnsmasq\ncreated the table when it didn't exist, which is good, and it would just add\nIPs to a given table that already exists, so it doesn't seem like there would\nbe a risk of clobbering an existing table.And as @AdSchellevis mentioned, the\nExternal type should be used here. Since the pf tables populated by\ndnsmasq/ipset and the aliases look the same, I'd guess that they would\nfunction similarly (only the content wouldn't be stored in the config, and\nwould clear periodically whenever that alias content is saved), I'd also guess\nthat's why Aliases Resolve Interval is being set to 0 to prevent that process\nfrom clearing the table.All in all, it seems like a pretty good work around\nwith some limitations which should be considered on a per-implementation\nbasis.I wonder if this functionality could be integrated into the Aliases\ninterface...hmmm maybe using a new Alias type?  \n---  \n  \n###\n\nmodest commented Aug 9, 2022\n\n> Make sure you choose External (advanced) as type in this case as these won't\n> be touched by the system. Nice tip by the way.\n\nThanks. I've confirmed that the Aliases Resolve Interval no longer clears the\ntable/alias when the type is set to External. Updated my comment to remove\nthis mitigation.\n\n> An apparent limitation of this dnsmasq functionality is that the TTL for DNS\n> records is not considered, and IPs added to the set remain in the set\n> forever. Used with a CDN service, the table may become huge. I'd guess it\n> may have a negative impact on performance at some point depending on\n> hardware, the number of records in the table, and the frequency and number\n> of requests made by clients.\n\nThis is true. And, just to get ahead of anyone who might try the an incorrect\nsolution: While pfctl can remove old entries (-T expire 86400 for over 24\nhours old), these are not safe to remove. These \"old\" entries may have been\nrecently served by dnsmasq even seconds ago. After dnsmasq ipset adds an IP\naddress, the table timestamp will not be updated again on subsequent\nqueries.There's a (very ugly) workaround to the infinite growth issue using 2\ntables/aliases. You can either (a) have dnsmasq add all IPs to 2 ipsets (e.g.\nhosts_from_dns_a and hosts_from_dns_b - this can be done on one line with a\ncomma), with a cron script that flushes one of them, alternating, every day or\n(b) write a cron script that clones dnsmasq's ipset table (e.g. hosts_from_dns\nand hosts_from_dns_older) before flushing dnsmasq's ipset table. Firewall\nrules would need to use both tables.\n\n> However, there is no interface for specifying ipset values.\n\nPlease please please :)\n\n> Sniffing / listing to dns requests (which is probably what the others do)\n> will eventually stop working as well when more and more dns traffic is being\n> encrypted anyway.\n\nTip: You can tell dnsmasq to add all IP addresses to an ipset with\nipset=//all_dns_hosts. You can use this in combination with a firewall log\nrule (destination NOT all_dns_hosts) to catch any cases where a device/app is\nbypassing your DNS server. Those are either using their own DNS servers, eDNS\nservers, or hardcoded IP addresses.  \n---  \n  \n###\n\nmlazzarotto commented Mar 7, 2023\n\nHello, I wish to introduce this functionality within my OPNsense. Can I make\nmultiple aliases for different servers? For GNS3, I may want to allow pypi.org\nand github.com; for Docker containers I may want to allow hub.docker.com, and\nso on.  \n---  \n  \nSign up for free to join this conversation on GitHub. Already have an account?\nSign in to comment\n\nLabels\n\nhelp wanted Contributor missing / timeout support Community support\n\n11 participants\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
