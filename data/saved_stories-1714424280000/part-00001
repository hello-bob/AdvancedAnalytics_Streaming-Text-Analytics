{"aid": "40199143", "title": "Fedora 21 to implement system-wide reproducable builds", "url": "https://discussion.fedoraproject.org/t/f41-change-proposal-reproducible-package-builds-system-wide/112740", "domain": "fedoraproject.org", "votes": 1, "user": "nateb2022", "posted_at": "2024-04-29 14:56:44", "comments": 0, "source_title": "F41 Change Proposal - Reproducible Package Builds (System-Wide) - Fedora Discussion", "source_text": "F41 Change Proposal - Reproducible Package Builds (System-Wide) - Fedora\nDiscussion\n\n\ud83c\udf6a This website uses cookies to function. The compliance people asked us to\ntell you. More information.\n\nFine.\n\nSkip to main content\n\nWelcome to Fedora Discussion!\n\nCheck out the our guide to navigation: tags, categories, and concepts, or add\nto our tips and tricks.\n\n#\n\nF41 Change Proposal - Reproducible Package Builds (System-Wide)\n\nProject DiscussionChange Proposals\n\nfesco\n\nYou have selected 0 posts.\n\nselect all\n\ncancel selecting\n\nDavide Cavalcadcavalca\n\n17d\n\n# Reproducible Package Builds\n\nThis is a proposed Change for Fedora Linux. This document represents a\nproposed Change. As part of the Changes process, proposals are publicly\nannounced in order to receive community feedback. This proposal will only be\nimplemented if approved by the Fedora Engineering Steering Committee.\n\nWiki 1 Announced\n\n## Summary\n\nA post-build cleanup is integrated into the RPM build process so that common\ncauses of build irreproducibility in packages are removed, making most of\nFedora packages reproducible.\n\n## Owner\n\n  * Name: Davide Cavalca\n\n  * Name: Neil Hanlon\n\n  * Name: Miro Hron\u010dok 2\n\n  * Name: Zbigniew J\u0119drzejewski-Szmek\n\n  * Email: dcavalca@fedoraproject.org\n\n  * Email: neil at shrug.pw\n\n  * Email: mhroncok at redhat.com\n\n  * Email: zbyszek at in.waw.pl\n\n## Detailed Description\n\nAs of 2023 there is an active effort to implement Reproducible builds 2 in\nFedora. Reproducible builds will allow our users to be able to independently\nverify that the RPMs have not been tampered with (either maliciously or via\nhardware/software fault): someone can do an independent rebuild of a package\nand confirm that they get identical binaries when building with the same\nversions of the compiler and other tools. This Change allows us to move\nforward in this direction by removing the common sources of irreproducibility.\n\nadd-determinism 2 is a Rust program which, as its name suggests, adds\ndeterminism to files that are given as input by attempting to standardize\nmetadata contained in binary or source files to ensure consistency and\nclamping to $SOURCE_DATE_EPOCH in all instances. add-determinism is the\n\u201cFedora version\u201d of strip-nondeterminism 2 from the Debian project. Since\nstrip-nondeterminism is written in perl, it is undesirable for use in Fedora,\nas we don\u2019t want to pull perl in the buildroot for every package.\n\nIt\u2019s worth noting that this Change does not intend to impose any specific\nreproducibility requirements on Fedora packages. Once this Change is\nimplemented and we have been through a mass rebuild and can verify that the\ncommon causes of irreproducibility have indeed been removed, we can consider\nfurther steps. But that will be at least one release later.\n\nThis change does add a small amount of time to the processing of RPMs at the\nend of a build. Accordingly, packages containing large quantities or sizes of\nfiles be slower, but this effect is not expected to be noticeable. add-\ndeterminism takes steps to ensure it does not interfere with other buildroot\npost processors like mangle-shebangs, python-hardlink, python-bytecompile. It\ndefaults to not doing any modifications in case it doesn\u2019t understand the\ninput file or there are any other problems.\n\nA mechanism to opt-out will be provided: to either completely disable the\npostprocessing step or to disable specific \u201chandlers\u201d (i.e. implementations of\ncleanup for specific file types, for example static archives). See\nmacros.build-reproducibility 1.\n\n### Related Changes\n\n  * Clamp build mtimes to SOURCE_DATE_EPOCH\n  * RPM 4.20 \u2014 this pulls in changes to %autosetup -S git which removed a source of irreproducibility.\n\n## Feedback\n\n## Benefit to Fedora\n\nAdding determinism (i.e., removing non-determinsim) enables the Fedora\ncommunity to have confidence that, if given the same source code, build\nenvironment, build instructions, and metadata from the build artifacts, any\nparty can recreate copies of the artifacts that are identical except for the\nsignatures and some parts of metadata.\n\nReproducibility of builds leads to packages of higher quality. It turns out\nthat quite often those irreproducible bits are caused by an error or\nsloppiness in the code. In particular, any dependence on architecture in\nnoarch packages is almost always unwanted and/or a bug. Test builds that check\nreproducibility will expose such instances.\n\nReproducibility of builds makes it easier to develop packages: when a small\nchange is made and a package is rebuilt (in the same environment), then with a\nreproducible package, the only difference is directly caused by the change. If\nthe package is different every time it is rebuilt, making a comparison is much\nharder.\n\nBuild reproducibility for noarch subpackages solves the problem where package\nbuilds on different architectures are different, causing mock to reject the\nwhole build. In particular, this issue occurs for pyc files. This will now be\nsolved without requiring opt-in from individual packages.\n\n## Scope\n\n  * Proposal Owners:\n\n    * Integrate add-determinism as a BuildRoot Policy script\n    * Add a dependency on marshalparser to python3 (probably conditionalized on rpm-build)\n  * Other Developers:\n\n    * Test their packages with the additional phase, report problems\n    * Potentially integrate changes to packages to enable reproducibility\n  * Release Engineering: Ideally we want this to happen before the mass rebuild, but that is not strictly required.\n\n  * Policies and Guidelines: Fedora Packaging Guidelines should be updated to include information on the add-determinism BuildRoot Policy. User documentation should be amended to include instructions on how to verify reproducibility for a given package, and what packages are known to be non-reproducible, and how to opt-out.\n\n  * Trademark approval: N/A (not needed for this Change)\n\n  * Alignment with Community Initiatives: All software and requests are consistent with the decision process and similar across other groups in Fedora. The Fedora Reproducibility Working group begin at Flock 2023 in Cork.\n\n## Upgrade/compatibility impact\n\nNo impact is expected.\n\n## How To Test\n\nTo test on the level of individual files:\n\n  * install add-determinism\n  * call SOURCE_DATE_EPOCH=... add-determinism -v ./path/to/file\n\nTo test package builds:\n\n  * build a local copy of redhat-rpm-config with PR#293: DRAFT: Include %__os_install_post_build_reproducibility - rpms/redhat-rpm-config - src.fedoraproject.org\n  * install add-determinism\n  * build packages\n\n(This can be done on a normal system or in a mock chroot.)\n\n## User Experience\n\nNo impact is expected.\n\n## Dependencies\n\n## Contingency Plan\n\n  * Contingency mechanism:\n\n    * In case of major problems, disable the change in redhat-rpm-config.\n    * In case of problems with specific packages, opt-out by setting a macro.\n  * Contingency deadline: No limit really.\n  * Blocks release? No.\n\n## Documentation\n\n  * Fedora Reproducible Builds 2\n  * add-determinism macros.build-reproducibility 1\n  * add-determinism README 2\n\n## Release Notes\n\nFedora package builds are now more deterministic, bringing the distribution\ncloser to the goal of achieving fully reproducible builds for all of its\npackages.\n\n> Last edited by @amoloney April 12, 2024 9:45 PM\n\n  * #### created\n\n17d\n\n  * #### last reply\n\n19h\n\n  * 12\n\n#### replies\n\n  * 469\n\n#### views\n\n  * 11\n\n#### users\n\n  * 12\n\n#### likes\n\n  * 3\n\nsystem\n\nDavide Cavalca\n\n17d\n\nHow do you feel about the proposal as written?\n\n  * Strongly in favor\n  * In favor, with reservations\n  * Neutral\n  * Opposed, but could be convinced\n  * Strongly opposed\n\n22voters\n\nIf you are in favor but have reservations, or are opposed but something could\nchange your mind, please explain in a reply.\n\nWe want everyone to be heard, but many posts repeating the same thing actually\nmakes that harder. If you have something new to say, please say it. If,\ninstead, you find someone has already covered what you\u2019d like to express,\nplease simply giving that post a instead of reiterating. You can even do this\nby email, by replying with the heart emoji or just \u201c+1\u201d. This will make long\ntopics easier to follow.\n\nPlease note that this is an advisory \u201cstraw poll\u201d meant to gauge sentiment. It\nisn\u2019t a vote or a scientific survey. See About the Change Proposals category 1\nfor more about the Change Process and moderation policy.\n\nChrispy0xc3The Bull Transcended (Tester VII)\n\n17d\n\nRelated & worth to be read (or at least skimmed), the current discussions in\nthe devel mailing list:\n\nRelated topics: reprodubible builds (re)introduction 1 F41 Change Proposal -\nReproducible Package Builds (System-Wide)\n\nDiscussions that contain a related discussion tree (related \u201csub-discussion\u201d\ncontained): Three steps we could take to make supply chain attacks a bit\nharder\n\nJapheth \"J.C.\" Cleavercleaver\n\n17d\n\nRather than rewriting something that works, especially if it\u2019s doing textual\nand environmental modification and written in a scripting language that excels\nat both, I\u2019d really prefer the upstream package were used as-is instead of\nbeing rewritten in Rust. The drive to remove perl from buildroot was borne\nfrom a perhaps overzealous attempt to optimize away every tiny bit of size\nfrom the buildroots, and I don\u2019t know that adding complexity from forks and\nreinterpretations is a great substitution.\n\nKevin FenzikevinStroopwafel (Cookie VII)\n\n16d\n\nThis looks reasonable to me overall.\n\nWe should perhaps try and get an audit of the upstream code, and make sure any\nchanges to it are inspected very closely. This package will be used on a vast\nnumber of packages, so would be a very juicy target.\n\nNeil HanlonneilPackaging Team\n\nKevin Fenzi\n\n15d\n\nAgreed - I have reviewed the add-determinism code, but I\u2019m not an expert in\nrust (or security). that said, the strategy taken is sound (imo) and is a lot\nmore maintainable than the alternative tool.\n\nmore thorough inspection is likely warranted, as would be updates to this\npackage in the future\u2013that is something I think is a bit of a risk due to the\nnature of the crates being used as dependencies, but as discussed in the\nmailing list, the crates are fairly \u201cstandard\u201d. (On the other hand, infecting\ndependent crates would have impacts wider than this single package)\n\nV\u00edt OndruchvondruchPackaging Team\n\n14d\n\nDavide Cavalca:\n\n> add-determinism is a Rust program which, as its name suggests, adds\n> determinism to files that are given as input by attempting to standardize\n> metadata contained in binary or source files to ensure consistency and\n> clamping to $SOURCE_DATE_EPOCH in all instances. add-determinism is the\n> \u201cFedora version\u201d of strip-nondeterminism from the Debian project. Since\n> strip-nondeterminism is written in perl, it is undesirable for use in\n> Fedora, as we don\u2019t want to pull perl in the buildroot for every package.\n\nThis is just some marketing speak, but what it does in reality?\n\nMatthew MillermattdmCouncil Member\n\nV\u00edt Ondruch\n\n14d\n\nThe readme from the links above gives more technical details. As of this post,\nthat is:\n\n# Build postprocessor to reset metadata fields for build reproducibility\n\nThis crate provides a binary add-determinism that one or more paths, and will\nrecursively process those paths, attempting to run the handlers on any files\nwith extensions that match.\n\nFor each processed file, a temporary file is opened, the contents are\nrewritten, the modification timestamp is copied from the original file to the\ntemporary copy, and the copy is renamed over the original.\n\nIf processing fails, a warning is emitted, but no modifications are made and\nthe program returns success.\n\n## Processors\n\n### ar\n\nAccepts *.a.\n\nResets the embedded modification times to $SOURCE_DATE_EPOCH and owner:group\nto 0:0.\n\n### jar\n\nAccepts *.jar.\n\nThis rewrites the zip file using the zip create. The modification times of\narchive entries is clamped $SOURCE_DATE_EPOCH. Extra metadata, i.e. primarily\ntimestamps in UNIX format and DOS permissions, are stripped (also because the\ncrate does not support them).\n\n### javadoc\n\nAccepts *.html.\n\nThis looks at the <head> portion of an HTML file and finds standard lines\ninserted by Javadoc that specify the file creation date. For example, <!--\nGenerated by javadoc (<version>) on <date> \\--> is replaced by a version\nwithout the version and date, and <meta name=\"dc.created\" content=\"<date>\"> is\nreplaced by a version with $SOURCE_DATE_EPOCH.\n\n### pyc\n\nAccepts *.pyc.\n\nUses the MarshalParser Python module to clean up the internal Python object\nserialization in cache files.\n\n## Notes\n\nThis project is inspired by strip-nondeterminism, but is written from scratch\nin Rust. For Debian, build tools are written in Perl and more Perl is not an\nissue. But in Fedora/RHEL/..., tools are written in Bash, Python, or compiled,\nand we don\u2019t want to pull in Perl into all buildroots.\n\nDaniel Alleydalley\n\nJapheth \"J.C.\" Cleaver\n\n12d\n\nOr perhaps reach out to the Debian folks and see if they would also benefit\nfrom the same?\n\nZbigniew J\u0119drzejewski-SzmekzbyszekIf you build it... (Koji Success II)\n\nDaniel Alley\n\n12d\n\n> Or perhaps reach out to the Debian folks and see if they would also benefit\n> from the [same]?\n\n[I assume that by \u201cthe same\u201d you mean this tool.]\n\nThe considerations for Debian are different: their packaging stack is based on\nPerl, in particular debhelper. So adding new tools in Perl is essentially\nfree, and also they by necessity have a bunch of folks who are fluent in Perl.\nTheir tooling was written a long time ago, and in particular strip-determinism\nis 10 years old. It\u2019s likely that they\u2019d pick a different implementation\nlanguage if they were starting from scratch.\n\nThere\u2019s another aspect: the \u201chandlers\u201d, i.e. the specific implementations that\nwe\u2019ll need are slightly different. For example, Debian does not package pre-\ngenerated pyc files, they are generated on the end system, so they never hit\nthis particular issue. Also, Fedora does much more extensive preparation of\ndebuginfo data. We hit some issues with how that\u2019s generated that were not\nencountered by other distributions working on build reproducibility. In the\nend this was solved in gdb, but if we were adding a handler for this, it\u2019d\nagain be completely new code. So it\u2019s actually not the case that we could take\ntheir tooling and plug it into our build system, extensive modifications would\nneed to be made.\n\nOTOH, AFAIK, Debian still has issues with Rust. (At least in the past they had\nlong discussions about some rust libraries being required by the core system.)\nI\u2019m not sure if they are ready to put Rust so deep in their build system.\nMaybe if it turns out to work well, they can consider switching. But that\nmeans we\u2019d need to add the handlers that they need. It\u2019s possible, but\nprobably not in the short term.\n\n[Discourse is being \u201chelpful\u201d and removing the quote I inserted at the top. I\nadded \u201c\u201d to confuse it.]\n\nZbigniew J\u0119drzejewski-SzmekzbyszekIf you build it... (Koji Success II)\n\nV\u00edt Ondruch\n\n12d\n\n> This is just some marketing speak, but what it does in reality? [confuse\n> discourse]\n\nTo add to what @mattdm wrote: the tool can be called just fine on any file,\nthere is no magic.\n\nFor example:\n\n    \n    \n    $ cp /usr/lib64/libresolv.a /tmp/ $ add-determinism -v /tmp/libresolv.a Initialized logging with log level DEBUG Requested handlers: ar, jar, javadoc, pyc (strict=false) SOURCE_DATE_EPOCH timestamp: (unset) Running as add-determinism... (brp=false) Initialized handler ar. Initialized handler jar. Initialized handler javadoc. Initialized handler pyc. Looking at /tmp/libresolv.a... /tmp/libresolv.a: handler ar: true /tmp/libresolv.a: reading file header at offset 8 ... /tmp/libresolv.a: replacing with normalized version /tmp/libresolv.a: handler jar: false /tmp/libresolv.a: handler javadoc: false /tmp/libresolv.a: handler pyc: false $ diffoscope --text-color=always /usr/lib64/libresolv.a /tmp/libresolv.a\n    \n    \n    --- /usr/lib64/libresolv.a +++ /tmp/libresolv.a \u251c\u2500\u2500 file list \u2502 @@ -1,21 +1,21 @@ \u2502 ---------- 0 0 0 1018 2024-03-26 23:54:58.000000 / \u2502 ---------- 0 0 0 0 1970-01-01 00:00:00.000000 // \u2502 --rw-r--r-- 0 1000 425 3120 2024-03-26 23:54:58.000000 base64.o \u2502 --rw-r--r-- 0 1000 425 1048 2024-03-26 23:54:58.000000 compat-gethnamaddr.o \u2502 --rw-r--r-- 0 1000 425 1032 2024-03-26 23:54:58.000000 compat-hooks.o \u2502 --rw-r--r-- 0 1000 425 2632 2024-03-26 23:54:58.000000 inet_net_ntop.o \u2502 --rw-r--r-- 0 1000 425 3960 2024-03-26 23:54:58.000000 inet_net_pton.o \u2502 --rw-r--r-- 0 1000 425 2216 2024-03-26 23:54:58.000000 inet_neta.o \u2502 --rw-r--r-- 0 1000 425 2784 2024-03-26 23:54:58.000000 ns_date.o \u2502 --rw-r--r-- 0 1000 425 2256 2024-03-26 23:54:58.000000 ns_name.o \u2502 --rw-r--r-- 0 1000 425 1808 2024-03-26 23:54:58.000000 ns_netint.o \u2502 --rw-r--r-- 0 1000 425 3696 2024-03-26 23:54:58.000000 ns_parse.o \u2502 --rw-r--r-- 0 1000 425 19792 2024-03-26 23:54:58.000000 ns_print.o \u2502 --rw-r--r-- 0 1000 425 2448 2024-03-26 23:54:58.000000 ns_samedomain.o \u2502 --rw-r--r-- 0 1000 425 4384 2024-03-26 23:54:58.000000 ns_ttl.o \u2502 --rw-r--r-- 0 1000 425 2088 2024-03-26 23:54:58.000000 res-putget.o \u2502 --rw-r--r-- 0 1000 425 1736 2024-03-26 23:54:58.000000 res_data.o \u2502 --rw-r--r-- 0 1000 425 28064 2024-03-26 23:54:58.000000 res_debug.o \u2502 --rw-r--r-- 0 1000 425 2600 2024-03-26 23:54:58.000000 res_hostalias.o \u2502 --rw-r--r-- 0 1000 425 2136 2024-03-26 23:54:58.000000 res_isourserver.o \u2502 --rw-r--r-- 0 1000 425 2128 2024-03-26 23:54:58.000000 resolv-deprecated.o \u2502 +-rw-r--r-- 0 0 0 3120 2024-03-26 23:54:58.000000 base64.o \u2502 +-rw-r--r-- 0 0 0 1048 2024-03-26 23:54:58.000000 compat-gethnamaddr.o \u2502 +-rw-r--r-- 0 0 0 1032 2024-03-26 23:54:58.000000 compat-hooks.o \u2502 +-rw-r--r-- 0 0 0 2632 2024-03-26 23:54:58.000000 inet_net_ntop.o \u2502 +-rw-r--r-- 0 0 0 3960 2024-03-26 23:54:58.000000 inet_net_pton.o \u2502 +-rw-r--r-- 0 0 0 2216 2024-03-26 23:54:58.000000 inet_neta.o \u2502 +-rw-r--r-- 0 0 0 2784 2024-03-26 23:54:58.000000 ns_date.o \u2502 +-rw-r--r-- 0 0 0 2256 2024-03-26 23:54:58.000000 ns_name.o \u2502 +-rw-r--r-- 0 0 0 1808 2024-03-26 23:54:58.000000 ns_netint.o \u2502 +-rw-r--r-- 0 0 0 3696 2024-03-26 23:54:58.000000 ns_parse.o \u2502 +-rw-r--r-- 0 0 0 19792 2024-03-26 23:54:58.000000 ns_print.o \u2502 +-rw-r--r-- 0 0 0 2448 2024-03-26 23:54:58.000000 ns_samedomain.o \u2502 +-rw-r--r-- 0 0 0 4384 2024-03-26 23:54:58.000000 ns_ttl.o \u2502 +-rw-r--r-- 0 0 0 2088 2024-03-26 23:54:58.000000 res-putget.o \u2502 +-rw-r--r-- 0 0 0 1736 2024-03-26 23:54:58.000000 res_data.o \u2502 +-rw-r--r-- 0 0 0 28064 2024-03-26 23:54:58.000000 res_debug.o \u2502 +-rw-r--r-- 0 0 0 2600 2024-03-26 23:54:58.000000 res_hostalias.o \u2502 +-rw-r--r-- 0 0 0 2136 2024-03-26 23:54:58.000000 res_isourserver.o \u2502 +-rw-r--r-- 0 0 0 2128 2024-03-26 23:54:58.000000 resolv-deprecated.o\n\nAnd the same for the other types... If you have doubts about what the tool is\ndoing, please check! In fact, it\u2019s probably better if people do tests, rather\nthan trusting that I didn\u2019t make any mistakes\n\nZbigniew J\u0119drzejewski-SzmekzbyszekIf you build it... (Koji Success II)\n\nZbigniew J\u0119drzejewski-Szmek\n\n12d\n\nFor the javadoc html handler:\n\n    \n    \n    $ cp /usr/share/javadoc/aqute-bnd/aQute/bnd/annotation/Cardinality.html /tmp $ SOURCE_DATE_EPOCH=1234567 add-determinism /tmp/Cardinality.html /tmp/Cardinality.html: replacing with normalized version $ diffoscope /usr/share/javadoc/aqute-bnd/aQute/bnd/annotation/Cardinality.html /tmp/Cardinality.html\n    \n    \n    --- /usr/share/javadoc/aqute-bnd/aQute/bnd/annotation/Cardinality.html +++ /tmp/Cardinality.html @@ -1,15 +1,15 @@ <!DOCTYPE HTML> <html lang=\"en\"> <head> -<!-- Generated by javadoc (21) on Sat Mar 02 16:07:41 UTC 2024 --> +<!-- Generated by javadoc --> <title>Cardinality</title> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> -<meta name=\"dc.created\" content=\"2024-03-02\"> +<meta name=\"dc.created\" content=\"1970-01-15\"> <meta name=\"description\" content=\"declaration: package: aQute.bnd.annotation, enum: Cardinality\"> <meta name=\"generator\" content=\"javadoc/ClassWriterImpl\">\n\n10 days later\n\nAoife MoloneyamoloneyLet Me Introduce Myself\n\n19h\n\nThis change proposal has now been submitted to FESCo with ticket #3201 2 for\nvoting.\n\nTo find out more, please visit our Changes Policy documentation.\n\n### Related Topics\n\nTopic| Replies| Views| Activity  \n---|---|---|---  \nReport from the Reproducible Builds Hackfest during Flock 2023Project\nDiscussionrelease-engineering-teamflock| 1.5k| Aug 2023  \nF41 Change Proposal: RPM 4.20 (System-Wide)Change Proposalsfescof41| 458| 3d  \nFriday\u2019s Fedora Facts: 2021-50Community Blog| 212| Dec 2021  \n[RFC] Build tag in rpms: NVR -> NVRBProject Discussionpackage-\nmaintainersengineeringrelease-engineering-team| 1.1k| 4d  \nF40 Change Proposal: Build With DNF5 (Self-Contained)Change Proposalsf40fesco|\n1.1k| Jan 16  \n  \nIt\u2019s your OS.\n\n  * Get Fedora Linux\n  * Fedora Documentation\n  * About the Fedora Project\n  * Code of Conduct\n  * Privacy Statement\n\n", "frontpage": false}
