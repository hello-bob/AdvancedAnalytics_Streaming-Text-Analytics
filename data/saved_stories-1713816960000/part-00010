{"aid": "40113586", "title": "Hiring Software Developers in the Provinces", "url": "https://simonsarris.com/p/growing-software-developers", "domain": "simonsarris.com", "votes": 1, "user": "simonsarris", "posted_at": "2024-04-22 12:12:12", "comments": 0, "source_title": "Hiring Software Developers in the Provinces", "source_text": "Hiring Software Developers in the Provinces \u2014 simon sarris\n\n# Simon Sarris\n\nWriting Projects About\n\n# Hiring Software Developers in the Provinces\n\nApril 21, 2024\n\nOr: the junior-first approach\n\nSoftware hiring is reminiscent of the ancient aphorism that is oft summarized\nArs longa, vita brevis:\n\n    \n    \n    Life is short, and craft^1 long, opportunity fleeting, experimentations perilous, and judgment difficult.\n\nSoftware interviews are a famously toilsome task for both parties. The skills\nof candidates tend to span a wide chasm: one developer might be bewilderingly\nproductive while another may actually hinder a project. And possibly that\ndescribes the same person on different projects! The complexity of the craft\nmeans that the talent of a developer may not be apparent for several months,\nso all kinds of tests are devised to suss out these skills in just a few\nhours, or days.\n\nOn top of this, the ideal software developer must practice more than just\ncommunication with machines. The nature of software projects demands an amount\nof human coordination and courage. Software (when we are lucky) begins with a\nvision and a clear view of the end. The mysterious voyage to reach that vision\nrequires one to endure a thousand frustrations, goose chases, disappointments,\nlassitudes, setbacks, disillusionments, and sometimes ancient sea monsters\nlike AngularJS. To do well in software, one must have a patient disposition\nand a tender heart, if not for one\u2019s own sake, then at least for one\u2019s\ncolleagues.\n\nThere are further traits needed, but suffice to say that good developers\nlooking for work are as rare as they are valuable. This leaves a problem for\ncompanies like mine, which reside far from the city, where talent liquidity is\neven lower.\n\nBut while good developers are difficult to find, they are not as difficult to\ngrow. After the founders, my company has only ever hired developers that were\ninterns first, including myself, with the pipeline beginning in high school.\nThis was not a deliberate strategy at first, but has worked well for us for\nover 15 years. It goes roughly like this:\n\n  1. Year round, keep track of tasks that would be a good fit for summer students.\n  2. Approach regional high schools, asking for the programming teacher contacts (eg, AP Computer Science teacher, if they have one).\n  3. Ask them who their best students are, be they juniors or seniors, regardless of any intended major^2\n  4. Interview them. If the teacher really vouches for them, give them a chance regardless.\n  5. Invite the best ones back every year.\n  6. Junior or Senior year of college, offer them a job.\n\nThis is, I admit, not a strategy for the silicon valley pattern of taking a\ncompany with a headcount of 10 to a headcount of 200 in a year. But then\nagain, most software outfits doing that are already concentrated in the\ncities. This is a hiring strategy that requires some patience and acknowledges\nthat you could use more juniors than seniors. It is an organic approach to\ncompany growth, but one that I think is sorely underrated today. If you\u2019ve\never thought \u201cwe can\u2019t find good juniors\u201d, asking local high school teachers\nis the least you could do.\n\nThe benefits are many: The students are delighted, they often really are the\nbrightest kids in the area, and this gives those who want it an opportunity to\nstay. If you only hired right out of college, it might already be too late to\neven find them (after all, where are they? Spread out across universities). If\nyou are organized, bright interns are generally useful, often even in their\nfirst year, and the internship acts as not only a long term interview but a\nchance to mentor them into the kind of programmer you wish they would become.\nIt elides almost every pain point of the conventional hiring practice.\n\nOf course, it does take an amount of work and your own time to structure\ninternships, but after the first real hire it creates a virtuous cycle: once\nyou have junior employees, you can direct them to train up interns as well.\nThe whole point after all is that more colleagues will make your operation\nsmoother. A junior-first approach to hiring might be slow to start, but it\nscales very nicely after that. I think our approach was actually closer to the\nnorm for most of them, and is a bit too ignored today. So if you\u2019re having\ntrouble finding developers, why not start with high school?\n\nI work for Northwoods Software since the 2010s, which has been creating\ndiagramming libraries since the 1990s. Among other things I develop GoJS, the\nmodern diagramming framework for rich and interactive data visualizations.\n\n^1 This is usually translated as \"art\" as in Art of War because of the Latin\nsummary, but the original Greek has it as techne: craft or technique.\n\n^2 Many of our best students were actually declaring a physics major, not CS.\nAnd one of them was a multimedia major, who decided to switch after his\ninternship.\n\n\u00a9 2024 Simon Sarris\n\n", "frontpage": false}
