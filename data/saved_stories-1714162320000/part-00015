{"aid": "40168856", "title": "Enabling Post-Quantum Key Agreements with Nginx", "url": "https://blog.aegrel.ee/kyber-nginx.html", "domain": "aegrel.ee", "votes": 1, "user": "thunderbong", "posted_at": "2024-04-26 12:54:58", "comments": 0, "source_title": "Enabling Post-Quantum Key Agreements with Nginx", "source_text": "Enabling Post-Quantum Key Agreements with Nginx | blog.aegrel.ee\n\n# Nov 30 2023 Enabling Post-Quantum Key Agreements with Nginx\n\nBoth Google Chrome1 and CloudFlare2 have announced that they are going to\nspend effort migrating to quantum-resistant cryptography. As one of the first\nsteps both have implemented Kyber768 + X25519 KEM support.\n\nThankfully these improvements are not only available to Google and CloudFlare\ncustomers. Basically everyone can enable X25519Kyber768(Draft00) support in\ntheir web server. If they are using relatively modern OpenSSL 3.x. People at\nOpenQuantumSafe have written a provider for OpenSSL 3.x that provides amongst\nmany others, Kyber and its hybrid KEM schemes. You can find the provider from\nhere: https://github.com/open-quantum-safe/oqs-provider\n\n## Building OQS provider\n\nAll you have to do is clone the repository, build and install it.\n\nFor example:\n\n    \n    \n    git clone https://github.com/open-quantum-safe/oqs-provider cd oqs-provider mkdir build && cd build cmake -S .. cmake --build . sudo cmake --install .\n\n## Enabling OQS provider\n\nOpen your OpenSSL configuration (on Ubuntu it's located at\n/etc/ssl/openssl.cnf).\n\nJust enable the provider by-default, this avoids the need to force software to\nspecifically enable the OQS provider.\n\n    \n    \n    # List of providers to load [provider_sect] default = default_sect oqsprovider = oqsprovider_sect ... [default_sect] activate = 1 [oqsprovider_sect] activate = 1\n\nYou can check the results using openssl list -kem-algorithms, it should list\nat least x25519_kyber768 @ oqsprovider.\n\n## Allowing Kyber hybrid KEMs\n\nNext step is to enable the KEM in nginx's TLS configuration. No other changes\nneed to be made if your distribution and nginx uses OpenSSL 3.\n\nLocate the line that says ssl_ecdh_curve auto; and replace it with:\n\n    \n    \n    ssl_ecdh_curve x25519_kyber768:p384_kyber768:x25519:secp384r1:x448:secp256r1:secp521r1;\n\n### Note\n\nThis also enables P384Kyber768 support. For some reason Microsoft Edge has\nreplaced X25519Kyber768 with P384Kyber768. It's not needed for more than that.\n\nThe first preference now being X25519Kyber768, then P384Kyber768 for Edge,\nX25519 for regular clients and the usual for compatibility after that.\n\nAfter this change, just restart nginx (sudo systemctl restart nginx).\n\n## Checking if your browser has PQ KEM support\n\nX25519Kyber768 has been available in Chrome since Chrome 115 (dev trial) and\nbehind a flag after 118 (chrome://flags#enable-tls13-kyber). It's also behind\na flag in Edge (edge://flags#edge-post-quantum-kyber). Chrome has also started\na gradual rollout and they're at 10% (as of 30.11.2023).\n\nYou can test if your browser has Kyber enabled by visiting CloudFlare's test\npage. You should see kex=X25519Kyber768Draft00.\n\nBesides this site I'm not aware of any that would allow one to test both QUIC\nand PQ KEMs simultaneously.\n\nFirefox does not yet support X25519Kyber768Draft00, there has been some\neffort.\n\n## Result\n\nIf you visit your website with an enabled browser you should be seeing\nKyber786 being used.\n\nEdge will display something like this:\n\n### Note\n\nFunnily enough, Edge still uses X25519Kyber768Draft00 for QUIC connections. So\nit's even less clear why they decided to go for P384 + Kyber768\n\n## CloudFlare PQ origin pulls\n\nIf you use CloudFlare as a reverse proxy, then you can also enable\nX25519Kyber768 on the first attempt (to save a round trip) using their API:\n\n    \n    \n    curl --request PUT \\ --url https://api.cloudflare.com/client/v4/zones/[ ZONE_ID ]/id/cache/origin_post_quantum_encryption \\ --header 'Content-Type: application/json' \\ --header 'Authorization: Bearer [ API_TOKEN ]' \\ --data '{\"value\": \"preferred\"}'\n\n## External references\n\n  * https://pq-crystals.org/kyber/index.shtml\n  * https://www.ietf.org/archive/id/draft-tls-westerbaan-xyber768d00-02.html\n  * https://blog.cloudflare.com/post-quantum-to-origins/\n  * https://blog.chromium.org/2023/08/protecting-chrome-traffic-with-hybrid.html\n  * https://chromestatus.com/feature/5257822742249472\n  * https://crypto.cloudflare.com/cdn-cgi/trace\n  * https://github.com/open-quantum-safe/oqs-provider\n\nPosted by TaaviE on 2023-11-30 20:34:00 in linux. updated 2023-11-30 20:34:00\nTags: nginx, networking.\n\n", "frontpage": false}
