{"aid": "40235469", "title": "Accelerate Cluster Upgrades with TALM's Workload Image Pre-Caching", "url": "https://www.redhat.com/en/blog/accelerate-cluster-upgrades-with-talms-workload-image-pre-caching", "domain": "redhat.com", "votes": 1, "user": "meysamazad", "posted_at": "2024-05-02 12:38:04", "comments": 0, "source_title": "Accelerate Cluster Upgrades with TALM's Workload Image Pre-Caching", "source_text": "Accelerate Cluster Upgrades with TALM's Workload Image Pre-Caching\n\nSkip to content\n\n### Platform products\n\n  * Red Hat Enterprise LinuxA flexible, stable operating system to support hybrid cloud innovation.\n  * Red Hat OpenShiftA container platform to build, modernize, and deploy applications at scale.\n  * Red Hat Ansible Automation PlatformA foundation for implementing enterprise-wide automation.\n\n### Try & buy\n\n  * Start a trialAssess a product with a no-cost trial.\n  * Buy onlineBuy select products and services in the Red Hat Store.\n  * Integrate with major cloud providersBuy Red Hat solutions using committed spend from providers, including:\n\n### Featured cloud services\n\nBuild, deploy, and scale applications quickly. We\u2019ll manage the rest.\n\n  * Red Hat OpenShift Service on AWS\n  * Red Hat OpenShift AI\n  * Microsoft Azure Red Hat OpenShift\n  * See all cloud services\n\nSee all products\n\n### By category\n\n  * Application platform\n  * Artificial intelligence\n  * Edge computing\n  * IT automation\n  * Linux standardization\n\n### By organization type\n\n  * Automotive\n  * Financial services\n  * Healthcare\n  * Industrial sector\n  * Media and entertainment\n  * Public sector\n  * Telecommunications\n\n### By customer\n\n  * British Army\n  * Edenor\n  * HCA Healthcare\n  * Macquarie Bank\n  * Tata Consultancy Services\n  * UPS\n  * Search all success stories\n\nExplore solutions\n\n### Services\n\n  * Consulting\n  * Open Innovation Labs\n  * Technical Account Management\n\n### Training & certification\n\n  * All courses and exams\n  * All certifications\n  * Verify a certification\n  * Skills assessment\n  * Learning subscription\n  * Learning community\n  * Red Hat Academy\n  * FAQs\n  * Connect with learning experts\n\n### Featured\n\n  * Red Hat System Administration I (RH124)\n  * Red Hat OpenShift Administration II (DO280)\n  * Red Hat Certified Engineer (RHCE)\n\nExplore services\n\n### Topics\n\n  * AI\n  * Application modernization\n  * Automation\n  * Cloud computing\n  * Cloud-native applications\n  * Containers\n  * DevOps\n  * Edge computing\n  * Linux\n  * Virtualization\n  * See all topics\n\n### Articles\n\n  * What are cloud services?\n  * What is edge computing?\n  * What is hybrid cloud?\n  * Why build a Red Hat cloud?\n  * Cloud vs. edge\n  * Red Hat OpenShift vs. Kubernetes\n  * Learning Ansible basics\n  * What is Linux?\n\n### More to explore\n\n  * Blog\n  * Customer success stories\n  * Events and webinars\n  * Newsroom\n  * Podcasts and video series\n  * Resource library\n  * Training and certification\n\nExplore resources\n\n### For customers\n\n  * Our partners\n  * Red Hat Ecosystem Catalog\n  * Find a partner\n\n### For partners\n\n  * Partner Connect\n  * Become a partner\n  * Training\n  * Support\n  * Access the partner portal\n\n### About us\n\n  * Our company\n  * How we work\n  * Our social impact\n  * Development model\n  * Subscription model\n  * Product support\n\n### Open source\n\n  * Open source commitments\n  * How we contribute\n  * Red Hat on GitHub\n\n### Company details\n\n  * Analyst relations\n  * Blog\n  * Locations\n  * Newsroom\n\n### Communities\n\n  * Ansible\n  * For system administrators\n  * For architects\n  * Customer advocacy\n\nExplore Red Hat\n\nContact us\n\nFor customers\n\n  * Customer support\n  * Documentation\n  * Support cases\n  * Subscription management\n  * Red Hat Ecosystem Catalog\n  * Find a partner\n\nFor partners\n\n  * Partner portal\n  * Partner support\n  * Become a partner\n\nTry, buy, & sell\n\n  * Red Hat Marketplace\n  * Red Hat Store\n  * Contact sales\n  * Start a trial\n\nLearning resources\n\n  * Training and certification\n  * For developers\n  * Hybrid cloud learning hub\n  * Interactive labs\n  * Learning community\n  * Red Hat TV\n\nOpen source communities\n\n  * Ansible\n  * For system administrators\n  * For architects\n\n### Recommendations\n\nAs you browse redhat.com, we'll recommend resources you may like. For now, try\nthese.\n\n  * All Red Hat products\n  * Tech topics\n  * Red Hat resources\n\nRed Hat SummitSupportConsoleDevelopersStart a trialContact\n\nContact us\n\n### Select a language\n\n  * \u7b80\u4f53\u4e2d\u6587\n  * English\n  * Fran\u00e7ais\n  * Deutsch\n  * Italiano\n  * \u65e5\u672c\u8a9e\n  * \ud55c\uad6d\uc5b4\n  * Portugu\u00eas\n  * Espa\u00f1ol\n\n  * Products\n  * Solutions\n  * Training & services\n  * Resources\n  * Partners\n  * About\n  * Contact us\n\n### Select a language\n\n  * \u7b80\u4f53\u4e2d\u6587\n  * English\n  * Fran\u00e7ais\n  * Deutsch\n  * Italiano\n  * \u65e5\u672c\u8a9e\n  * \ud55c\uad6d\uc5b4\n  * Portugu\u00eas\n  * Espa\u00f1ol\n\nRed Hat Blog\n\n  * By product\n\n    * Red Hat Enterprise Linux\n    * Red Hat OpenShift\n    * Red Hat Ansible Automation Platform\n\nAll products\n\n  * By channel\n\n    * AI\n    * Applications\n    * Automation\n    * Cloud services\n    * Edge computing\n    * Infrastructure\n    * Open hybrid cloud\n    * Original shows\n    * Security\n\nAll channels\n\nSubscribe to our blog\n\n# Accelerate Cluster Upgrades with TALM's Workload Image Pre-Caching\n\nNovember 10, 2023Sharat Akhoury\n\nEdge computing Hybrid cloud\n\nShare\n\nSubscribe\n\n  * Back to all posts\n\nTags:Topics, Products, Industries\n\nIn the realm of managing large networks of Single Node OpenShift (SNO)\nclusters at the Far Edge, the challenge of upgrading systems efficiently is a\ntask that carries substantial weight. The intricacies of this process often\ninvolve navigating tight maintenance windows, grappling with limited bandwidth\n(particularly in OAM networks), and coping with high round trip packet\nlatencies. Within this context, the importance of reducing the time consumed\nto upgrade clusters becomes evident.\n\nIn this blog post, we will explore how TALM's (Topology Aware Lifecycle\nManager) workload image pre-caching feature steps in as a crucial ally. By\naddressing the aforementioned challenges head-on, pre-caching holds the\npotential to significantly cut down the time required for cluster upgrades,\noffering a practical solution that aligns with the needs of system\nadministrators and operators. We will also delve into the benefits that pre-\ncaching offers and explain the process of configuring pre-caching for workload\nimages leveraging the newly introduced PreCachingConfig custom resource.\nAdditionally, we will guide you through the steps to deploy the pre-caching\njob with TALM and demonstrate how to verify the successful pre-caching of\nimages. Before wrapping up, we will explore some valuable troubleshooting\nstrategies to overcome any potential obstacles along the way.\n\nIt's important to note that TALM version 4.14 brings a substantial enhancement\nto cluster upgrades: the incorporation of pre-caching application-specific\n(workload) images, which complements its existing capability to pre-cache\nOpenShift platform-related images. This development represents a substantial\nstride in considerably reducing cluster upgrade durations.\n\n## How Does Pre-Caching Facilitate Cluster Upgrades?\n\nBy proactively fetching and storing essential images in advance, pre-caching\nworkload images serves to reduce downtime and streamline the cluster upgrade\nprocess. Consequently, it plays a pivotal role in accelerating cluster\nupgrades within a limited maintenance window by addressing several key\nchallenges and enhancing the overall efficiency of the upgrade process, as\noutline below:\n\n  1. Smaller Maintenance Windows: With faster and more efficient upgrades, the maintenance window required for upgrades can be shorter. This minimizes operational downtime and gets critical systems back online quickly. This provides operators with greater flexibility when planning upgrades, taking into account network and Far Edge site topology.\n  2. Maximize Cluster Upgrades: To maintain adequate service coverage, clusters are usually not simultaneously taken offline. However, with faster cluster upgrades, it becomes possible to accommodate multiple cluster groups within a single maintenance window.\n  3. Bandwidth Optimization: Pre-caching allows you to download and store necessary workload images ahead of time. This reduces the need to download large image files during the maintenance window, which can be particularly slow and resource-intensive in a constrained bandwidth environment. By eliminating the need for real-time downloads, the upgrade process becomes more bandwidth-efficient.\n  4. Faster Deployment: With workload images pre-cached locally, you can deploy updates more quickly. This is because the images are readily available and don't need to be fetched from remote repositories, which might be slower due to limited bandwidth or high latency.\n  5. Reduced Network Latency Impact: High round trip packet latencies can cause delays during upgrades, leading to longer upgrade times. Pre-caching eliminates much of this latency impact by ensuring that the images are already present on the managed cluster.\n  6. Predictable Performance: Pre-caching creates a more predictable and controlled upgrade environment. It reduces the variability introduced by external network conditions, making it easier to estimate how long the upgrade will take and plan accordingly.\n  7. Enhanced Reliability: Pre-caching helps mitigate the risk of network-related failures during upgrades. Since the images are stored locally, there's less dependency on external resources that might become unavailable or experience disruptions.\n\n## Configuring Pre-Caching via the PreCachingConfig CRD\n\nIn TALM version 4.14, a new Custom Resource Definition (CRD) named\n\"PreCachingConfig'' has been introduced to facilitate the configuration of\npre-caching settings for cluster upgrades. This CRD empowers users with the\nability to precisely define various configurations, including the\nspecification of additional workload images for pre-caching. Another valuable\nfeature provided by the PreCachingConfig CRD is the option to set a safeguard\nparameter, enabling users to specify the minimum available disk space required\non the cluster to accommodate pre-cached images.\n\nFurthermore, the PreCachingConfig CRD offers the capability to override and/or\nexclude OpenShift platform-related images. While TALM automatically identifies\nOpenShift platform-related upgrade images, such as OpenShift platform and\noperator images, this feature proves beneficial when users wish to upgrade to\nspecific OpenShift versions or alter an operator package/channel.\nAdditionally, there might be extraneous operator images that are irrelevant to\nyour cluster(s). To expedite the pre-caching process and prevent resource\nwastage, the PreCachingConfig CRD allows you to specify which platform-related\nimages (from the automatically derived upgrade content list) should be\nexcluded from pre-caching.\n\nA pre-caching configuration can be defined by creating a PreCachingConfig\ncustom resource (CR) manifest YAML file, as illustrated in the template below.\nThe respective fields numbered as <1> to <4> can be populated. If any of these\nfields are not relevant to your configuration, they may simply be omitted.\n\n    \n    \n    apiVersion: ran.openshift.io/v1alpha1 kind: PreCachingConfig metadata: name: exampleconfig namespace: exampleconfig-ns spec: overrides: <1> platformImage: <1.1> operatorsIndexes: <1.2> operatorsPackagesAndChannels: <1.3> additionalImages: <2> excludePrecachePatterns: <3> spaceRequired: <4>\n\nMore information about the fields labeled <1> to <4> is provided as follows.\n\n  1. The subkeys located within the `overrides` field are associated with OpenShift platform-related images. TALM automatically derives these values based on the policies of the managed clusters. Nevertheless, you have the flexibility to define custom values for these fields. Specifically, you can override any of the following platform-related content: platformImage, operatorsIndexes, and operatorsPackagesAndChannels.\n  2. Specifies the list of additional workload images to be pre-cached.\n  3. This field designates the images to be excluded from pre-caching. The images can be defined using basic regular expressions (BRE).\n  4. This setting defines the minimum amount of disk space that must be available in the crio image cache on the cluster. The spaceRequired value should take into account the disk space requirements of both platform-related images as well as the supplementary workload images. If left unspecified, TALM will assign a default value specifically for OpenShift platform-related images. The disk space field should consist of an integer value followed by the storage unit. For example: 500 MB, 50 GiB, or 1 TiB.\n\nThe spaceRequired field serves as a critical safeguard to be sure of the\neffectiveness of the pre-caching process. It plays a crucial role in\nmonitoring disk space usage both before and after pre-caching, serving as a\npreventative measure against potential issues like exceeding kubelet's\n`imageGCHighThresholdPercent` parameter. This parameter breach could trigger\nthe unintended deletion of pre-cached images by kubelet, thus rendering the\nentire pre-caching job ineffective.\n\nAn example PreCachingConfig CR for pre-caching the latest nginx image is shown\nbelow. Note that, for the sake of brevity, the image is specified in the\nexample using its tag, however, it is recommended to use the digest format\ninstead.\n\n    \n    \n    apiVersion: ran.openshift.io/v1alpha1 kind: PreCachingConfig metadata: name: nginx-precache-config namespace: config-ns spec: additionalImages: - quay.io/nginx/nginx-ingress:latest spaceRequired: 1 GiB\n\n## Deploying the Pre-Caching Job in Your OpenShift Environment\n\nIn this section, we will guide you through the steps required to deploy the\npre-caching job within your OpenShift environment. The pre-caching job is\ndesigned as a 'one-shot' task, managed by TALM. Its purpose is to make sure\nthat container images necessary for an upgrade are readily available on each\nmanaged cluster before the actual upgrade takes place.\n\nBefore we delve into the deployment process, it's essential to note that these\nsteps are to be executed on the hub cluster where the TALM operator is\nrunning. TALM will then invoke the pre-caching job on one or more of the\nmanaged clusters as defined in the configuration.\n\nStep 1: Create and Apply (`oc apply -f <filename>`) a PreCachingConfig CR, as\noutlined in the preceding section.\n\nStep 2: Create and Apply a ClusterGroupUpgrade (CGU) CR. When creating the CGU\nCR, be sure that it:\n\n  * Specifies the clusters slated for an upgrade (`clusters`).\n  * References policies that contain the required release and operator versions for this upgrade group (`managedPolicies`).\n  * Enables the image pre-caching feature (`preCaching`).\n  * References the PreCachingConfig resource generated in Step 1 (`preCachingConfigRef`).\n\nBelow is an example of a ClusterGroupUpgrade CR that references the previously\ndefined PreCachingConfig CR.\n\n    \n    \n    apiVersion: ran.openshift.io/v1alpha1 kind: ClusterGroupUpgrade metadata: name: upgrade-cgu namespace: default spec: clusters: - site1a1 - site1a2 - site1a7 enable: false managedPolicies: - du-upgrade-platform-upgrade-prep - du-upgrade-platform-upgrade - common-config-policy - common-subscriptions-policy preCaching: true preCachingConfigRef: name: nginx-precache-config namespace: config-ns remediationStrategy: timeout: 360\n\nIt's worthwhile emphasizing that the PreCachingConfig CR must either be\ncreated simultaneously with the CGU CR or exist before creating the CGU CR.\nAdditionally, be sure that the PreCachingConfig CR resides in a namespace\naccessible to the TALM operator.\n\nTALM will attempt to reconcile the ClusterGroupUpgrade CR after it has been\nsuccessfully created. The operational flow pertaining to the workload image\npre-caching job in TALM follows these stages:\n\n1\\. Cluster Validation: TALM initiates the reconciliation of the\nClusterGroupUpgrade by verifying the designated list of clusters. If any of\nthe specified clusters are absent, TALM will halt further progress until all\nrequired clusters are available.\n\n2\\. Policy Validation: During this stage, TALM inspects the policies defined\nin the ClusterGroupUpgrade. It checks for missing or invalid managed policies\nand automatically derives the content needed for the upgrade. This encompasses\nboth the OpenShift platform components and any day-2 operator Subscriptions\nset for upgrading.\n\n3\\. Pre-Caching Configuration Validation: If a `preCachingConfigRef` is\nprovided in the ClusterGroupUpgrade, TALM proceeds to retrieve and validate\nit. In the event that TALM cannot access the specified PreCachingConfig CR, it\nwill report an error in the ClusterGroupUpgrade status and terminate the pre-\ncaching task.\n\n4\\. Job Execution: Once all prior validations have been successfully\ncompleted, TALM proceeds to schedule a pre-caching job on each of the\npreviously selected managed clusters. It patiently awaits the completion of\nthese jobs for a duration specified in the ClusterGroupUpgrade\n`remediationStrategy.timeout` field. Should the elapsed time exceed the\ntimeout value, the CGU status is updated to reflect a pre-caching failure\nattributed to a timeout occurrence. Conversely, if the jobs conclude\nsuccessfully within the allocated time frame, the CGU status is updated with\nthe `PrecachingSucceeded` condition and corresponding `Precaching is completed\nfor all clusters` message as shown below:\n\n    \n    \n    Type: \"PrecachingSuceeded\", Status: True, Reason: \"PrecachingCompleted\", Message: \"Precaching is completed for all clusters\"\n\n## Verifying Workload Image Pre-Caching\n\nThis section offers guidance on confirming the successful pre-caching of\nworkload images on designated clusters.\n\n## Verification on the Hub Cluster\n\nTo verify the successful completion of the pre-caching job on the hub cluster,\nuse the following command:\n\n    \n    \n    $ oc get cgu upgrade-cgu -n default -o jsonpath='{.status}' | jq conditions: - message: All selected clusters are valid reason: ClusterSelectionCompleted status: \"True\" type: ClustersSelected - message: Completed validation reason: ValidationCompleted status: \"True\" type: Validated - message: Precaching spec is valid and consistent reason: PrecacheSpecIsWellFormed status: \"True\" type: PrecacheSpecValid - message: Precaching is completed for all clusters reason: PrecachingCompleted status: \"True\" type: PrecachingSuceeded - message: Not enabled reason: NotEnabled status: \"False\" type: Progressing precaching: spec: platformImage: quay.io/openshift-release-dev/ocp-release@sha256:... operatorsIndexes: - registry.redhat.io/redhat/redhat-operator-index:v4.14 operatorsPackagesAndChannels: - sriov-network-operator:stable - ptp-operator:stable - cluster-logging:stable - local-storage-operator:stable excludePrecachePatterns: additionalImages: - quay.io/nginx/nginx-ingress:latest spaceRequired: \"35\" status: site1a1: Succeeded site1a2: Succeeded site1a7: Succeeded ...\n\nMonitor the `conditions` object from the command output to gauge the overall\npre-caching job progress associated with the ClusterGroupUpgrade. For a more\ngranular, cluster-level view, inspect the `precaching.status` object to track\nthe pre-caching progress for each managed cluster.\n\nIt's important to note that upon successful completion of the pre-caching job,\nTALM automatically cleans up all associated pre-caching resources created on\nthe managed cluster. This includes resources such as ConfigMaps, pods, jobs,\nand namespaces.\n\n## Optional Verification Steps\n\nWhile these verification steps are optional, they provide valuable assurance\nfollowing a `PrecachingCompleted` status reported by TALM. To further validate\nthe success of the pre-caching job, follow these steps:\n\n  1. Utilize the cluster's container engine: Access the cluster's container engine, and use it to inspect the locally cached images. For example, if the container engine running on the managed cluster is podman, execute the following command `podman image`.\n  2. Inspect cached images: Examine the list of images displayed by the above command. Look specifically for the images specified in the PreCachingConfig CR.\n\nIf you can find the specified image(s), congratulations! This confirms that\nthe pre-caching was successful, and your workload images are pre-cached and\nready for use. However, if the image(s) are not found in the list, it suggests\nthat the pre-caching job may have encountered issues. In such cases, further\nexamination and troubleshooting are necessary to identify and resolve the\nunderlying problems. The subsequent section offers effective strategies for\ntroubleshooting the pre-caching job.\n\nAs an illustrative example, here are a set of commands and expected output for\nverifying the nginx image from the `nginx-precache-config` PreCachingConfig CR\ndefined above:\n\n    \n    \n    $ oc debug node/site1a1 $ chroot /host/ $ sudo podman images | grep nginx-ingress:latest quay.io/nginx/nginx-ingress latest c97648faa8a0 3 weeks ago 306 MB\n\n## Troubleshooting Pre-Caching Issues\n\nWhen dealing with pre-caching issues, it's essential to adopt a systematic\napproach that begins with the hub cluster and then extends to the designated\nmanaged clusters that have reported failures. In this section, we outline the\nsteps for troubleshooting pre-caching problems at both the hub and managed\ncluster levels.\n\n  1. On the Hub Cluster\n  2. On the Managed Cluster(s):\n\nTo initiate the investigation, start by examining the ClusterGroupUpgrade's\n`status.conditions` and `status.precaching` fields as shown below:\n\n    \n    \n    $ oc get cgu upgrade-cgu -n default -o jsonpath='{.status.conditions}' | jq ...\n    \n    $ oc get cgu upgrade-cgu -n default -o jsonpath='{.status.precaching}' | jq ...\n\nThese fields may contain crucial information explaining why pre-caching\nfailed. Look out for the following potential issues:\n\n  * `ClusterNotFound` error: This occurs when any of the clusters are not present in the ClusterGroupUpgrade.\n  * Validation errors in ClusterGroupUpgrade: These errors can result from missing or invalid managed policies (`NotAllManagedPoliciesExist`) or r issues related to the platform image (`InvalidPlatformImage`).\n  * Validation errors in the pre-caching configuration (`PrecacheSpecIncomplete`): These errors can stem from an invalid specification of the overrides field or a failure to retrieve the referenced PreCachingConfig resource .\n  * Failures due to timeouts (`DeadlineExceeded`): This occurs when pre-caching jobs do not complete within the specified time frame. Consider re-attempting the pre-caching jobs.\n\nIf none of the above errors are encountered, proceed to inspect the\n`PrecachingSucceeded` condition in the ClusterGroupUpgrade status, which\nprovides a high-level summary of pre-caching job status. This condition is set\nonly if TALM successfully scheduled a pre-caching job on each selected managed\ncluster. Refer to the table below for various states and corresponding reasons\nand error messages. Identify clusters that failed pre-caching in the\nindividual cluster updates under the ClusterUpgradeStatus\n`status.precaching.status` object.\n\nType| Status| Reason| Message  \n---|---|---|---  \nPrecachingSucceeded| True| PrecachingCompleted| Precaching is completed for\nall clusters  \nTrue| PartiallyDone| Precaching failed for x clusters  \nFalse| InProgress| Precaching in progress for x clusters  \nFalse| Failed| Precaching failed for all clusters  \n  \nInvestigate the failed pre-caching job within the `openshift-talo-pre-cache`\nnamespace on the managed cluster(s). Errors related to volume mounting or\nworker pod scheduling can lead to job failures. Examine the job's status using\nthe following command:\n\n    \n    \n    $ oc describe job pre-cache -n openshift-talo-pre-cache Name: pre-cache Namespace: openshift-talo-pre-cache Selector: controller-uid=d802215d-34e9-47eb-936e-55491f98215c Labels: controller-uid=d802215d-34e9-47eb-936e-55491f98215c job-name=pre-cache Annotations: batch.kubernetes.io/job-tracking: target.workload.openshift.io/management: {\"effect\":\"PreferredDuringScheduling\"} Parallelism: 1 Completions: 1 Completion Mode: NonIndexed Start Time: Wed, 13 Sep 2023 03:52:01 +0000 Active Deadline Seconds: 28800s Pods Statuses: 0 Active (0 Ready) / 0 Succeeded / 1 Failed ...\n\nCheck the `Pods Statuses` row to determine the exit status of the pre-caching\nworker pod. A non-zero exit status typically indicates a problem.\n\nFor more detailed information regarding the failure, explore the logs of the\npre-caching worker pod on the managed cluster(s). Look for errors related to:\n\n  * Insufficient disk space\n  * Missing pull spec image files\n  * Failure to pull image(s)\n\nIdentify the relevant pod and examine its logs using the following commands:\n\n    \n    \n    $ oc get pods -n openshift-talo-pre-cache NAME READY STATUS RESTARTS AGE pre-cache-xw6h8 0/1 Error 0 10h $ oc logs -f pre-cache-xw6h8 -n openshift-talo-pre-cache % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 3120 100 3120 0 0 138k 0 --:--:-- --:--:-- --:--:-- 138k upgrades.pre-cache 2023-09-01T16:52:53+00:00 [DEBUG]: highThresholdPercent: 85 diskSize:125293548 used:58083516 upgrades.pre-cache 2023-09-13T16:52:53+00:00 [DEBUG]: spaceRequired: 35 GiB upgrades.pre-cache 2023-09-13T16:52:54+00:00 [DEBUG]: Release index image processing done 6d9c47bfd033912e93491f81cb84f08f9a649ba0f8a65d57ff4329d74b4b0acb upgrades.pre-cache 2023-09-13T16:52:54+00:00 [DEBUG]: Operators index is not specified. Operators won't be pre-cached upgrades.pre-cache 2023-09-13T16:52:54+00:00 [INFO]: Image pre-caching starting for platform-images upgrades.pre-cache 2023-09-13T16:52:54+00:00 [DEBUG]: Pulling quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:... [1/183] ...\n\nThis detailed investigation will help identify the root cause of pre-caching\nfailures and guide further troubleshooting steps.\n\nWrapping it up\n\nIn the ever-evolving landscape of managing large-scale Single Node OpenShift\nclusters, TALM's workload image pre-caching emerges as an indispensable tool\nfor upgrading clusters while simultaneously boosting efficiency and\nreliability. By proactively fetching required upgrade content and optimizing\nbandwidth utilization, pre-caching lays the foundation for swifter, more\npredictable cluster upgrades.\n\nWithin this blog post, we've explored the invaluable advantages of pre-\ncaching, delving deep into the configuration process via the PreCachingConfig\nCRD. Additionally, we've furnished you with a comprehensive, step-by-step\nguide on deploying pre-caching jobs within your OpenShift environment.\nEnsuring the successful implementation of pre-caching is paramount, and we've\nelucidated a range of methods to validate the readiness of your workload\nimages. Nevertheless, it's prudent to acknowledge that even with meticulous\nplanning and configuration, occasional challenges may surface. To aid you in\neffectively troubleshooting pre-caching issues, we've presented a systematic\napproach for investigating and rectifying deployment concerns.\n\n### About the author\n\n### Sharat Akhoury\n\n## More like this\n\n### Blog post\n\n#### Boost your cluster operations with Deployment Validation and Insights\nAdvisor for Workloads\n\n### Blog post\n\n#### Hear from your peers while at Red Hat Summit\n\n### Original shows\n\n#### Technically Speaking | Episode 19 | A Composable Industrial Edge Platform\n\n### Original shows\n\n#### Technically Speaking | Episode 18 | WebAssembly breaks away from the browser\n\n## Browse by channel\n\nExplore all channels\n\n### Automation\n\nThe latest on IT automation that spans tech, teams, and environments\n\n### Artificial intelligence\n\nExplore the platforms and partners building a faster path for AI\n\n### Open hybrid cloud\n\nExplore how we build a more flexible future with hybrid cloud\n\n### Security\n\nExplore how we reduce risks across environments and technologies\n\n### Edge computing\n\nUpdates on the solutions that simplify infrastructure at the edge\n\n### Infrastructure\n\nStay up to date on the world\u2019s leading enterprise Linux platform\n\n### Applications\n\nThe latest on our solutions to the toughest application challenges\n\n### Original shows\n\nEntertaining stories from the makers and leaders in enterprise tech\n\nLinkedInYouTubeFacebookTwitter\n\n### Products\n\n  * Red Hat Enterprise Linux\n  * Red Hat OpenShift\n  * Red Hat Ansible Automation Platform\n  * Cloud services\n  * See all products\n\n### Tools\n\n  * Training and certification\n  * My account\n  * Developer resources\n  * Customer support\n  * Red Hat value calculator\n  * Red Hat Ecosystem Catalog\n  * Find a partner\n\n### Try, buy, & sell\n\n  * Product trial center\n  * Red Hat Marketplace\n  * Red Hat Store\n  * Buy online (Japan)\n  * Console\n\n### Communicate\n\n  * Contact sales\n  * Contact customer service\n  * Contact training\n  * Social\n\n### About Red Hat\n\nWe\u2019re the world\u2019s leading provider of enterprise open source\nsolutions\u2014including Linux, cloud, container, and Kubernetes. We deliver\nhardened solutions that make it easier for enterprises to work across\nplatforms and environments, from the core datacenter to the network edge.\n\n### Select a language\n\n  * \u7b80\u4f53\u4e2d\u6587\n  * English\n  * Fran\u00e7ais\n  * Deutsch\n  * Italiano\n  * \u65e5\u672c\u8a9e\n  * \ud55c\uad6d\uc5b4\n  * Portugu\u00eas\n  * Espa\u00f1ol\n\n### Red Hat legal and privacy links\n\n  * About Red Hat\n  * Jobs\n  * Events\n  * Locations\n  * Contact Red Hat\n  * Red Hat Blog\n  * Diversity, equity, and inclusion\n  * Cool Stuff Store\n  * Red Hat Summit\n\n### Red Hat legal and privacy links\n\n  * Privacy statement\n  * Terms of use\n  * All policies and guidelines\n  * Digital accessibility\n  * Cookie preferences\n\n", "frontpage": false}
