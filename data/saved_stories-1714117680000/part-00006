{"aid": "40164542", "title": "Llama-3 8B Instruct 262k", "url": "https://huggingface.co/gradientai/Llama-3-8B-Instruct-262k", "domain": "huggingface.co", "votes": 2, "user": "forrestp", "posted_at": "2024-04-26 00:08:08", "comments": 0, "source_title": "gradientai/Llama-3-8B-Instruct-262k \u00b7 Hugging Face", "source_text": "gradientai/Llama-3-8B-Instruct-262k \u00b7 Hugging Face\n\nHugging Face\n\n#\n\ngradientai\n\n/\n\nLlama-3-8B-Instruct-262k\n\nText Generation Transformers Safetensors English llama meta llama-3\nconversational Inference Endpoints text-generation-inference\n\nModel card Files Files and versions Community\n\n8\n\nEdit model card\n\n# Llama-3 8B Instruct 262k\n\nGradient incorporates your data to deploy autonomous assistants that power\ncritical operations across your business. To learn more or collaborate on a\ncustom model, drop us a message at contact@gradient.ai.\n\nThis model extends LLama-3 8B's context length from 8k to > 160K, developed by\nGradient, sponsored by compute from Crusoe Energy. It demonstrates that SOTA\nLLMs can learn to operate on long context with minimal training (< 200M\ntokens) by appropriately adjusting RoPE theta.\n\nApproach:\n\n  * meta-llama/Meta-Llama-3-8B-Instruct as the base\n  * NTK-aware interpolation [1] to initialize an optimal schedule for RoPE theta, followed by a new data-driven RoPE theta optimization technique\n  * Progressive training on increasing context lengths similar to the Large World Model [2] (See details below)\n\nInfra:\n\nWe build on top of the EasyContext Blockwise RingAttention library [3] to\nscalably and efficiently train on contexts up to 262144 tokens on Crusoe\nEnergy high performance L40S cluster.\n\nQuantized versions and GGUF\n\nGGUF is available on on Crusoe's huggingface account. Check it out here:\ncrusoeai/Llama-3-8B-Instruct-262k-GGUF\n\nData:\n\nFor training data, we generate long contexts by augmenting SlimPajama.\n\nProgressive Training Details:\n\nParameter| 65K| 262K  \n---|---|---  \nInitialize From| LLaMA-3-8B-Inst| 65K  \nSequence Length| 2^16| 2^18  \nRoPE theta| 15.3 M| 207.1 M  \nBatch Size (Tokens / Step)| 2.097 M| 4.192 M  \nSteps| 30| 24  \nTotal Tokens| 63 M| 101 M  \nLearning Rate| 2.00E-05| 2.00E-05  \n# GPUs| 32| 32  \nGPU Type| NVIDIA L40S| NVIDIA L40S  \n  \n## The Gradient AI Team\n\nhttps://gradient.ai/\n\nGradient is accelerating AI transformation across industries. Our AI Foundry\nincorporates your data to deploy autonomous assistants that power critical\noperations across your business.\n\n## Contact Us\n\nDrop an email to contact@gradient.ai\n\n## References\n\n[1] Peng, Bowen, et al. \"Yarn: Efficient context window extension of large\nlanguage models.\" arXiv preprint arXiv:2309.00071 (2023).\n\n[2] Liu, Hao, et al. \"World Model on Million-Length Video And Language With\nRingAttention.\" arXiv preprint arXiv:2402.08268 (2024).\n\n[3] https://github.com/jzhang38/EasyContext\n\n# Base Model\n\n## Model Details\n\nMeta developed and released the Meta Llama 3 family of large language models\n(LLMs), a collection of pretrained and instruction tuned generative text\nmodels in 8 and 70B sizes. The Llama 3 instruction tuned models are optimized\nfor dialogue use cases and outperform many of the available open source chat\nmodels on common industry benchmarks. Further, in developing these models, we\ntook great care to optimize helpfulness and safety.\n\nModel developers Meta\n\nVariations Llama 3 comes in two sizes \u2014 8B and 70B parameters \u2014 in pre-trained\nand instruction tuned variants.\n\nInput Models input text only.\n\nOutput Models generate text and code only.\n\nModel Architecture Llama 3 is an auto-regressive language model that uses an\noptimized transformer architecture. The tuned versions use supervised fine-\ntuning (SFT) and reinforcement learning with human feedback (RLHF) to align\nwith human preferences for helpfulness and safety.\n\nTraining Data| Params| Context length| GQA| Token count| Knowledge cutoff  \n---|---|---|---|---|---  \nLlama 3| A new mix of publicly available online data.| 8B| 8k| Yes| 15T+|\nMarch, 2023  \n70B| 8k| Yes| December, 2023  \n  \nLlama 3 family of models. Token counts refer to pretraining data only. Both\nthe 8 and 70B versions use Grouped-Query Attention (GQA) for improved\ninference scalability.\n\nModel Release Date April 18, 2024.\n\nStatus This is a static model trained on an offline dataset. Future versions\nof the tuned models will be released as we improve model safety with community\nfeedback.\n\nLicense A custom commercial license is available at:\nhttps://llama.meta.com/llama3/license\n\nWhere to send questions or comments about the model Instructions on how to\nprovide feedback or comments on the model can be found in the model README.\nFor more technical information about generation parameters and recipes for how\nto use Llama 3 in applications, please go here.\n\n## Intended Use\n\nIntended Use Cases Llama 3 is intended for commercial and research use in\nEnglish. Instruction tuned models are intended for assistant-like chat,\nwhereas pretrained models can be adapted for a variety of natural language\ngeneration tasks.\n\nOut-of-scope Use in any manner that violates applicable laws or regulations\n(including trade compliance laws). Use in any other way that is prohibited by\nthe Acceptable Use Policy and Llama 3 Community License. Use in languages\nother than English**.\n\n**Note: Developers may fine-tune Llama 3 models for languages beyond English\nprovided they comply with the Llama 3 Community License and the Acceptable Use\nPolicy.\n\n## How to use\n\nThis repository contains two versions of Meta-Llama-3-8B-Instruct, for use\nwith transformers and with the original llama3 codebase.\n\n### Use with transformers\n\nYou can run conversational inference using the Transformers pipeline\nabstraction, or by leveraging the Auto classes with the generate() function.\nLet's see examples of both.\n\n#### Transformers pipeline\n\n    \n    \n    import transformers import torch model_id = \"meta-llama/Meta-Llama-3-8B-Instruct\" pipeline = transformers.pipeline( \"text-generation\", model=model_id, model_kwargs={\"torch_dtype\": torch.bfloat16}, device_map=\"auto\", ) messages = [ {\"role\": \"system\", \"content\": \"You are a pirate chatbot who always responds in pirate speak!\"}, {\"role\": \"user\", \"content\": \"Who are you?\"}, ] prompt = pipeline.tokenizer.apply_chat_template( messages, tokenize=False, add_generation_prompt=True ) terminators = [ pipeline.tokenizer.eos_token_id, pipeline.tokenizer.convert_tokens_to_ids(\"<|eot_id|>\") ] outputs = pipeline( prompt, max_new_tokens=256, eos_token_id=terminators, do_sample=True, temperature=0.6, top_p=0.9, ) print(outputs[0][\"generated_text\"][len(prompt):])\n\n#### Transformers AutoModelForCausalLM\n\n    \n    \n    from transformers import AutoTokenizer, AutoModelForCausalLM import torch model_id = \"meta-llama/Meta-Llama-3-8B-Instruct\" tokenizer = AutoTokenizer.from_pretrained(model_id) model = AutoModelForCausalLM.from_pretrained( model_id, torch_dtype=torch.bfloat16, device_map=\"auto\", ) messages = [ {\"role\": \"system\", \"content\": \"You are a pirate chatbot who always responds in pirate speak!\"}, {\"role\": \"user\", \"content\": \"Who are you?\"}, ] input_ids = tokenizer.apply_chat_template( messages, add_generation_prompt=True, return_tensors=\"pt\" ).to(model.device) terminators = [ tokenizer.eos_token_id, tokenizer.convert_tokens_to_ids(\"<|eot_id|>\") ] outputs = model.generate( input_ids, max_new_tokens=256, eos_token_id=terminators, do_sample=True, temperature=0.6, top_p=0.9, ) response = outputs[0][input_ids.shape[-1]:] print(tokenizer.decode(response, skip_special_tokens=True))\n\n### Use with llama3\n\nPlease, follow the instructions in the repository\n\nTo download Original checkpoints, see the example command below leveraging\nhuggingface-cli:\n\n    \n    \n    huggingface-cli download meta-llama/Meta-Llama-3-8B-Instruct --include \"original/*\" --local-dir Meta-Llama-3-8B-Instruct\n\nFor Hugging Face support, we recommend using transformers or TGI, but a\nsimilar command works.\n\n## Hardware and Software\n\nTraining Factors We used custom training libraries, Meta's Research\nSuperCluster, and production clusters for pretraining. Fine-tuning,\nannotation, and evaluation were also performed on third-party cloud compute.\n\nCarbon Footprint Pretraining utilized a cumulative 7.7M GPU hours of\ncomputation on hardware of type H100-80GB (TDP of 700W). Estimated total\nemissions were 2290 tCO2eq, 100% of which were offset by Meta\u2019s sustainability\nprogram.\n\nTime (GPU hours)| Power Consumption (W)| Carbon Emitted(tCO2eq)  \n---|---|---  \nLlama 3 8B| 1.3M| 700| 390  \nLlama 3 70B| 6.4M| 700| 1900  \nTotal| 7.7M| 2290  \n  \nCO2 emissions during pre-training. Time: total GPU time required for training\neach model. Power Consumption: peak power capacity per GPU device for the GPUs\nused adjusted for power usage efficiency. 100% of the emissions are directly\noffset by Meta's sustainability program, and because we are openly releasing\nthese models, the pretraining costs do not need to be incurred by others.\n\n## Training Data\n\nOverview Llama 3 was pretrained on over 15 trillion tokens of data from\npublicly available sources. The fine-tuning data includes publicly available\ninstruction datasets, as well as over 10M human-annotated examples. Neither\nthe pretraining nor the fine-tuning datasets include Meta user data.\n\nData Freshness The pretraining data has a cutoff of March 2023 for the 7B and\nDecember 2023 for the 70B models respectively.\n\n## Benchmarks\n\nIn this section, we report the results for Llama 3 models on standard\nautomatic benchmarks. For all the evaluations, we use our internal evaluations\nlibrary. For details on the methodology see here.\n\n### Base pretrained models\n\nCategory| Benchmark| Llama 3 8B| Llama2 7B| Llama2 13B| Llama 3 70B| Llama2\n70B  \n---|---|---|---|---|---|---  \nGeneral| MMLU (5-shot)| 66.6| 45.7| 53.8| 79.5| 69.7  \nAGIEval English (3-5 shot)| 45.9| 28.8| 38.7| 63.0| 54.8  \nCommonSenseQA (7-shot)| 72.6| 57.6| 67.6| 83.8| 78.7  \nWinogrande (5-shot)| 76.1| 73.3| 75.4| 83.1| 81.8  \nBIG-Bench Hard (3-shot, CoT)| 61.1| 38.1| 47.0| 81.3| 65.7  \nARC-Challenge (25-shot)| 78.6| 53.7| 67.6| 93.0| 85.3  \nKnowledge reasoning| TriviaQA-Wiki (5-shot)| 78.5| 72.1| 79.6| 89.7| 87.5  \nReading comprehension| SQuAD (1-shot)| 76.4| 72.2| 72.1| 85.6| 82.6  \nQuAC (1-shot, F1)| 44.4| 39.6| 44.9| 51.1| 49.4  \nBoolQ (0-shot)| 75.7| 65.5| 66.9| 79.0| 73.1  \nDROP (3-shot, F1)| 58.4| 37.9| 49.8| 79.7| 70.2  \n  \n### Instruction tuned models\n\nBenchmark| Llama 3 8B| Llama 2 7B| Llama 2 13B| Llama 3 70B| Llama 2 70B  \n---|---|---|---|---|---  \nMMLU (5-shot)| 68.4| 34.1| 47.8| 82.0| 52.9  \nGPQA (0-shot)| 34.2| 21.7| 22.3| 39.5| 21.0  \nHumanEval (0-shot)| 62.2| 7.9| 14.0| 81.7| 25.6  \nGSM-8K (8-shot, CoT)| 79.6| 25.7| 77.4| 93.0| 57.5  \nMATH (4-shot, CoT)| 30.0| 3.8| 6.7| 50.4| 11.6  \n  \n### Responsibility & Safety\n\nWe believe that an open approach to AI leads to better, safer products, faster\ninnovation, and a bigger overall market. We are committed to Responsible AI\ndevelopment and took a series of steps to limit misuse and harm and support\nthe open source community.\n\nFoundation models are widely capable technologies that are built to be used\nfor a diverse range of applications. They are not designed to meet every\ndeveloper preference on safety levels for all use cases, out-of-the-box, as\nthose by their nature will differ across different applications.\n\nRather, responsible LLM-application deployment is achieved by implementing a\nseries of safety best practices throughout the development of such\napplications, from the model pre-training, fine-tuning and the deployment of\nsystems composed of safeguards to tailor the safety needs specifically to the\nuse case and audience.\n\nAs part of the Llama 3 release, we updated our Responsible Use Guide to\noutline the steps and best practices for developers to implement model and\nsystem level safety for their application. We also provide a set of resources\nincluding Meta Llama Guard 2 and Code Shield safeguards. These tools have\nproven to drastically reduce residual risks of LLM Systems, while maintaining\na high level of helpfulness. We encourage developers to tune and deploy these\nsafeguards according to their needs and we provide a reference implementation\nto get you started.\n\n#### Llama 3-Instruct\n\nAs outlined in the Responsible Use Guide, some trade-off between model\nhelpfulness and model alignment is likely unavoidable. Developers should\nexercise discretion about how to weigh the benefits of alignment and\nhelpfulness for their specific use case and audience. Developers should be\nmindful of residual risks when using Llama models and leverage additional\nsafety tools as needed to reach the right safety bar for their use case.\n\nSafety\n\nFor our instruction tuned model, we conducted extensive red teaming exercises,\nperformed adversarial evaluations and implemented safety mitigations\ntechniques to lower residual risks. As with any Large Language Model, residual\nrisks will likely remain and we recommend that developers assess these risks\nin the context of their use case. In parallel, we are working with the\ncommunity to make AI safety benchmark standards transparent, rigorous and\ninterpretable.\n\nRefusals\n\nIn addition to residual risks, we put a great emphasis on model refusals to\nbenign prompts. Over-refusing not only can impact the user experience but\ncould even be harmful in certain contexts as well. We\u2019ve heard the feedback\nfrom the developer community and improved our fine tuning to ensure that Llama\n3 is significantly less likely to falsely refuse to answer prompts than Llama\n2.\n\nWe built internal benchmarks and developed mitigations to limit false refusals\nmaking Llama 3 our most helpful model to date.\n\n#### Responsible release\n\nIn addition to responsible use considerations outlined above, we followed a\nrigorous process that requires us to take extra measures against misuse and\ncritical risks before we make our release decision.\n\nMisuse\n\nIf you access or use Llama 3, you agree to the Acceptable Use Policy. The most\nrecent copy of this policy can be found at https://llama.meta.com/llama3/use-\npolicy/.\n\n#### Critical risks\n\nCBRNE (Chemical, Biological, Radiological, Nuclear, and high yield Explosives)\n\nWe have conducted a two fold assessment of the safety of the model in this\narea:\n\n  * Iterative testing during model training to assess the safety of responses related to CBRNE threats and other adversarial risks.\n  * Involving external CBRNE experts to conduct an uplift test assessing the ability of the model to accurately provide expert knowledge and reduce barriers to potential CBRNE misuse, by reference to what can be achieved using web search (without the model).\n\n### Cyber Security\n\nWe have evaluated Llama 3 with CyberSecEval, Meta\u2019s cybersecurity safety eval\nsuite, measuring Llama 3\u2019s propensity to suggest insecure code when used as a\ncoding assistant, and Llama 3\u2019s propensity to comply with requests to help\ncarry out cyber attacks, where attacks are defined by the industry standard\nMITRE ATT&CK cyber attack ontology. On our insecure coding and cyber attacker\nhelpfulness tests, Llama 3 behaved in the same range or safer than models of\nequivalent coding capability.\n\n### Child Safety\n\nChild Safety risk assessments were conducted using a team of experts, to\nassess the model\u2019s capability to produce outputs that could result in Child\nSafety risks and inform on any necessary and appropriate risk mitigations via\nfine tuning. We leveraged those expert red teaming sessions to expand the\ncoverage of our evaluation benchmarks through Llama 3 model development. For\nLlama 3, we conducted new in-depth sessions using objective based\nmethodologies to assess the model risks along multiple attack vectors. We also\npartnered with content specialists to perform red teaming exercises assessing\npotentially violating content while taking account of market specific nuances\nor experiences.\n\n### Community\n\nGenerative AI safety requires expertise and tooling, and we believe in the\nstrength of the open community to accelerate its progress. We are active\nmembers of open consortiums, including the AI Alliance, Partnership in AI and\nMLCommons, actively contributing to safety standardization and transparency.\nWe encourage the community to adopt taxonomies like the MLCommons Proof of\nConcept evaluation to facilitate collaboration and transparency on safety and\ncontent evaluations. Our Purple Llama tools are open sourced for the community\nto use and widely distributed across ecosystem partners including cloud\nservice providers. We encourage community contributions to our Github\nrepository.\n\nFinally, we put in place a set of resources including an output reporting\nmechanism and bug bounty program to continuously improve the Llama technology\nwith the help of the community.\n\n## Ethical Considerations and Limitations\n\nThe core values of Llama 3 are openness, inclusivity and helpfulness. It is\nmeant to serve everyone, and to work for a wide range of use cases. It is thus\ndesigned to be accessible to people across many different backgrounds,\nexperiences and perspectives. Llama 3 addresses users and their needs as they\nare, without insertion unnecessary judgment or normativity, while reflecting\nthe understanding that even content that may appear problematic in some cases\ncan serve valuable purposes in others. It respects the dignity and autonomy of\nall users, especially in terms of the values of free thought and expression\nthat power innovation and progress.\n\nBut Llama 3 is a new technology, and like any new technology, there are risks\nassociated with its use. Testing conducted to date has been in English, and\nhas not covered, nor could it cover, all scenarios. For these reasons, as with\nall LLMs, Llama 3\u2019s potential outputs cannot be predicted in advance, and the\nmodel may in some instances produce inaccurate, biased or other objectionable\nresponses to user prompts. Therefore, before deploying any applications of\nLlama 3 models, developers should perform safety testing and tuning tailored\nto their specific applications of the model. As outlined in the Responsible\nUse Guide, we recommend incorporating Purple Llama solutions into your\nworkflows and specifically Llama Guard which provides a base model to filter\ninput and output prompts to layer system-level safety on top of model-level\nsafety.\n\nPlease see the Responsible Use Guide available at\nhttp://llama.meta.com/responsible-use-guide\n\n## Citation instructions\n\n@article{llama3modelcard,\n\ntitle={Llama 3 Model Card},\n\nauthor={AI@Meta},\n\nyear={2024},\n\nurl = {https://github.com/meta-llama/llama3/blob/main/MODEL_CARD.md}\n\n}\n\n## Contributors\n\nAaditya Singh; Aaron Grattafiori; Abhimanyu Dubey; Abhinav Jauhri; Abhinav\nPandey; Abhishek Kadian; Adam Kelsey; Adi Gangidi; Ahmad Al-Dahle; Ahuva\nGoldstand; Aiesha Letman; Ajay Menon; Akhil Mathur; Alan Schelten; Alex\nVaughan; Amy Yang; Andrei Lupu; Andres Alvarado; Andrew Gallagher; Andrew Gu;\nAndrew Ho; Andrew Poulton; Andrew Ryan; Angela Fan; Ankit Ramchandani; Anthony\nHartshorn; Archi Mitra; Archie Sravankumar; Artem Korenev; Arun Rao; Ashley\nGabriel; Ashwin Bharambe; Assaf Eisenman; Aston Zhang; Aurelien Rodriguez;\nAusten Gregerson; Ava Spataru; Baptiste Roziere; Ben Maurer; Benjamin\nLeonhardi; Bernie Huang; Bhargavi Paranjape; Bing Liu; Binh Tang; Bobbie\nChern; Brani Stojkovic; Brian Fuller; Catalina Mejia Arenas; Chao Zhou;\nCharlotte Caucheteux; Chaya Nayak; Ching-Hsiang Chu; Chloe Bi; Chris Cai;\nChris Cox; Chris Marra; Chris McConnell; Christian Keller; Christoph\nFeichtenhofer; Christophe Touret; Chunyang Wu; Corinne Wong; Cristian Canton\nFerrer; Damien Allonsius; Daniel Kreymer; Daniel Haziza; Daniel Li; Danielle\nPintz; Danny Livshits; Danny Wyatt; David Adkins; David Esiobu; David Xu;\nDavide Testuggine; Delia David; Devi Parikh; Dhruv Choudhary; Dhruv Mahajan;\nDiana Liskovich; Diego Garcia-Olano; Diego Perino; Dieuwke Hupkes; Dingkang\nWang; Dustin Holland; Egor Lakomkin; Elina Lobanova; Xiaoqing Ellen Tan; Emily\nDinan; Eric Smith; Erik Brinkman; Esteban Arcaute; Filip Radenovic; Firat\nOzgenel; Francesco Caggioni; Frank Seide; Frank Zhang; Gabriel Synnaeve;\nGabriella Schwarz; Gabrielle Lee; Gada Badeer; Georgia Anderson; Graeme Nail;\nGregoire Mialon; Guan Pang; Guillem Cucurell; Hailey Nguyen; Hannah Korevaar;\nHannah Wang; Haroun Habeeb; Harrison Rudolph; Henry Aspegren; Hu Xu; Hugo\nTouvron; Iga Kozlowska; Igor Molybog; Igor Tufanov; Iliyan Zarov; Imanol\nArrieta Ibarra; Irina-Elena Veliche; Isabel Kloumann; Ishan Misra; Ivan\nEvtimov; Jacob Xu; Jade Copet; Jake Weissman; Jan Geffert; Jana Vranes; Japhet\nAsher; Jason Park; Jay Mahadeokar; Jean-Baptiste Gaya; Jeet Shah; Jelmer van\nder Linde; Jennifer Chan; Jenny Hong; Jenya Lee; Jeremy Fu; Jeremy Teboul;\nJianfeng Chi; Jianyu Huang; Jie Wang; Jiecao Yu; Joanna Bitton; Joe Spisak;\nJoelle Pineau; Jon Carvill; Jongsoo Park; Joseph Rocca; Joshua Johnstun;\nJunteng Jia; Kalyan Vasuden Alwala; Kam Hou U; Kate Plawiak; Kartikeya\nUpasani; Kaushik Veeraraghavan; Ke Li; Kenneth Heafield; Kevin Stone; Khalid\nEl-Arini; Krithika Iyer; Kshitiz Malik; Kuenley Chiu; Kunal Bhalla; Kyle\nHuang; Lakshya Garg; Lauren Rantala-Yeary; Laurens van der Maaten; Lawrence\nChen; Leandro Silva; Lee Bell; Lei Zhang; Liang Tan; Louis Martin; Lovish\nMadaan; Luca Wehrstedt; Lukas Blecher; Luke de Oliveira; Madeline Muzzi;\nMadian Khabsa; Manav Avlani; Mannat Singh; Manohar Paluri; Mark Zuckerberg;\nMarcin Kardas; Martynas Mankus; Mathew Oldham; Mathieu Rita; Matthew Lennie;\nMaya Pavlova; Meghan Keneally; Melanie Kambadur; Mihir Patel; Mikayel\nSamvelyan; Mike Clark; Mike Lewis; Min Si; Mitesh Kumar Singh; Mo Metanat;\nMona Hassan; Naman Goyal; Narjes Torabi; Nicolas Usunier; Nikolay Bashlykov;\nNikolay Bogoychev; Niladri Chatterji; Ning Dong; Oliver Aobo Yang; Olivier\nDuchenne; Onur Celebi; Parth Parekh; Patrick Alrassy; Paul Saab; Pavan Balaji;\nPedro Rittner; Pengchuan Zhang; Pengwei Li; Petar Vasic; Peter Weng; Polina\nZvyagina; Prajjwal Bhargava; Pratik Dubal; Praveen Krishnan; Punit Singh\nKoura; Qing He; Rachel Rodriguez; Ragavan Srinivasan; Rahul Mitra; Ramon\nCalderer; Raymond Li; Robert Stojnic; Roberta Raileanu; Robin Battey; Rocky\nWang; Rohit Girdhar; Rohit Patel; Romain Sauvestre; Ronnie Polidoro; Roshan\nSumbaly; Ross Taylor; Ruan Silva; Rui Hou; Rui Wang; Russ Howes; Ruty Rinott;\nSaghar Hosseini; Sai Jayesh Bondu; Samyak Datta; Sanjay Singh; Sara Chugh;\nSargun Dhillon; Satadru Pan; Sean Bell; Sergey Edunov; Shaoliang Nie; Sharan\nNarang; Sharath Raparthy; Shaun Lindsay; Sheng Feng; Sheng Shen; Shenghao Lin;\nShiva Shankar; Shruti Bhosale; Shun Zhang; Simon Vandenhende; Sinong Wang;\nSeohyun Sonia Kim; Soumya Batra; Sten Sootla; Steve Kehoe; Suchin Gururangan;\nSumit Gupta; Sunny Virk; Sydney Borodinsky; Tamar Glaser; Tamar Herman; Tamara\nBest; Tara Fowler; Thomas Georgiou; Thomas Scialom; Tianhe Li; Todor Mihaylov;\nTong Xiao; Ujjwal Karn; Vedanuj Goswami; Vibhor Gupta; Vignesh Ramanathan;\nViktor Kerkez; Vinay Satish Kumar; Vincent Gonguet; Vish Vogeti; Vlad Poenaru;\nVlad Tiberiu Mihailescu; Vladan Petrovic; Vladimir Ivanov; Wei Li; Weiwei Chu;\nWenhan Xiong; Wenyin Fu; Wes Bouaziz; Whitney Meers; Will Constable; Xavier\nMartinet; Xiaojian Wu; Xinbo Gao; Xinfeng Xie; Xuchao Jia; Yaelle Goldschlag;\nYann LeCun; Yashesh Gaur; Yasmine Babaei; Ye Qi; Yenda Li; Yi Wen; Yiwen Song;\nYoungjin Nam; Yuchen Hao; Yuchen Zhang; Yun Wang; Yuning Mao; Yuzi He;\nZacharie Delpierre Coudert; Zachary DeVito; Zahra Hankir; Zhaoduo Wen; Zheng\nYan; Zhengxing Chen; Zhenyu Yang; Zoe Papakipos\n\nDownloads last month\n\n    0\n\nSafetensors\n\nModel size\n\n8.03B params\n\nTensor type\n\nBF16\n\n\u00b7\n\n", "frontpage": false}
