{"aid": "40080791", "title": "Show HN: File-Encryptor", "url": "https://github.com/hn275/file-encryptor", "domain": "github.com/hn275", "votes": 1, "user": "haln", "posted_at": "2024-04-18 21:13:25", "comments": 0, "source_title": "GitHub - hn275/file-encryptor: a small cli tool for file encryption, written in Rust.", "source_text": "GitHub - hn275/file-encryptor: a small cli tool for file encryption, written\nin Rust.\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nhn275 / file-encryptor Public\n\n  * Notifications\n  * Fork 0\n  * Star 0\n\na small cli tool for file encryption, written in Rust.\n\n0 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# hn275/file-encryptor\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n3 Branches\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nhn275V0.1.1 (#2)Apr 18, 20245acffb7 \u00b7 Apr 18, 2024Apr 18, 2024\n\n## History\n\n9 Commits  \n  \n### src\n\n|\n\n### src\n\n| V0.1.1 (#2)| Apr 18, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Rust rewrite (#1)| Apr 13, 2024  \n  \n### Cargo.lock\n\n|\n\n### Cargo.lock\n\n| V0.1.1 (#2)| Apr 18, 2024  \n  \n### Cargo.toml\n\n|\n\n### Cargo.toml\n\n| V0.1.1 (#2)| Apr 18, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| V0.1.1 (#2)| Apr 18, 2024  \n  \n## Repository files navigation\n\n# file-encryptor\n\nA small Rust program designed to encrypt and decrypt files securely using\nAdvanced Encryption Standard-Galois/Counter Mode, or AES-GCM, encryption with\na 256-bit key. It supports password based encryption with (optionally)\nadditional authenticated data (AAD).\n\n## Use Cases\n\nYou can use this tool for various purposes, though here are some examples:\n\n  * Secure File Transfer: Encrypt sensitive files before transferring them over insecure channels, such as email or USB drives. (Similar to how data transfer over the internet :))\n\n  * Data Backup: Enhance the security of backup files by encrypting them before storing them in cloud storage or external hard drives.\n\n  * Software Configuration/Environment Variables: Need to share those secrets? Encrypt them then commit to version control. Contributors can decrypt the files locally on their machine.\n\n## Installation\n\n    \n    \n    cargo install\n\n## Usage\n\n### Cookbook\n\nBy default, all output will simply be written to standard output. I wanted a\nsolution that offers flexibility for scripting.\n\n#### 1\\. Key generation\n\nTo encrypt a file, first a key must be generated.\n\n    \n    \n    file-encryptor keygen > mykey.key\n\nYou can also pass in the option -p (or --password) to generate key from a\ncertain passphrase.\n\n    \n    \n    file-encryptor keygen -p \"this is my password\" > mykey.key\n\n  * NOTE: The AES256 key, which consists of 32 bytes, is generated by hashing the input password using SHA256.\n\n#### 2\\. Encrypting the file foo.txt\n\nTo seal (encrypt) a file, say foo.txt:\n\n    \n    \n    file-encryptor seal foo.txt < mykey.key > foo_ciphered\n\nWith additional authenticated data:\n\n    \n    \n    file-encryptor seal foo.txt -a \"haln_01@proton.me\" < mykey.key > foo_ciphered\n\n#### 3\\. Decrypting the ciphertext file foo_ciphered\n\nTo open the foo_ciphered file:\n\n    \n    \n    file-encryptor open foo.txt < mykey.key > foo-plaintext.txt\n\nAnd if additional authenticated data was used:\n\n    \n    \n    file-encryptor open foo.txt -a \"haln_01@proton.me\" < mykey.key > foo-plaintext.txt\n\n### General Usage\n\n    \n    \n    file-encryptor --help A small Rust program to deal with file encryption Usage: file-encryptor [OPTIONS] <COMMAND> Commands: keygen generate a key, from pure random bytes, or from an input password open open an encrypted file seal seal a plaintext file help Print this message or the help of the given subcommand(s) Options: -h, --help Print help\n\n## About\n\na small cli tool for file encryption, written in Rust.\n\n### Topics\n\ncommandline security cryptography aes-encryption\n\n### Resources\n\nReadme\n\nActivity\n\n### Stars\n\n0 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * Rust 100.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
