{"aid": "40121249", "title": "Intel vs. AMD vs. Graviton: Amazon EC2 Processor Differences and Distribution", "url": "https://www.vantage.sh/blog/aws-ec2-processors-intel-vs-amd-vs-graviton-adoption", "domain": "vantage.sh", "votes": 1, "user": "StratusBen", "posted_at": "2024-04-22 21:27:34", "comments": 0, "source_title": "Intel vs AMD vs Graviton: Amazon EC2 Processor Differences and Distribution", "source_text": "Intel vs AMD vs Graviton: Amazon EC2 Processor Differences and Distribution\n\nNEW Vantage Launches Kubernetes Rightsizing Recommendations ->\n\nContent \u2022 Apr 22, 2024\n\n# Intel vs AMD vs Graviton: Amazon EC2 Processor Differences and Distribution\n\nby Vantage Team\n\nAs Graviton and AMD processors gain broader EC2 availability alongside Intel,\nwe analyze factors such as performance, cost, and distribution.\n\nContents\n\n  * Differences Between Intel, AMD, and Graviton\n  * Intel, AMD, and Graviton Processors by EC2 Instance\n  * Distribution of Intel, AMD, and Graviton for EC2 Instances\n  * Conclusion\n\n2006 marked the release of the first EC2 instance, m1.small\u2014with just 1 vCPU\nand 1.7 GiB of memory. It, along with the next several generations of EC2\ninstances, all had Intel processors. In 2018, AMD-powered instances came along\nwith the release of the 1st generation AMD EPYC processors. Also in 2018, AWS\nreleased its own processor, Graviton, that advertised to have up to 40% better\nprice performance for certain instances.\n\nA customer\u2019s choice of EC2 instance largely depends on its processor, as it\naffects performance, cost, software compatibility, and more. Even with the\nintroduction of two more processors and the improvements across generations of\nprocessors and instances, Intel remains the most used processor on EC2.\nHowever, Graviton and AMD adoption is growing.\n\n## Differences Between Intel, AMD, and Graviton\n\nIntel, AMD, and Graviton each come with tradeoffs:\n\n  * CPU Architecture: Intel and AMD have x86-based architecture, while Graviton has 64-bit Arm Neoverse cores. The architecture affects software compatibility and performance. Arm-based architecture, in particular, has potential compatibility issues with certain software that may not be supported or may require refactoring. A common reason in the past not to use Graviton was vendor lock-in, as Arm is not as widely supported, which is still true, however, Azure and Google (as of this month) both now have Arm processors available.\n\n  * Threading: Intel and AMD support simultaneous multithreading, enabling \u201cmultiple threads to run concurrently on a single CPU core.\u201d Graviton, on the other hand, does not, and every vCPU is a physical core. Some workloads, like data analytics, are more efficient on a multithreaded workload, whereas others, such as gaming, perform better on single-threaded workloads. Note\u2014you can disable multithreading by setting one thread per code.\n\n  * Price Performance: Graviton is advertised by AWS to have better price performance, in some cases up to 40%, than comparable Intel and AMD instances. Independent benchmarks comparing similar instances, such as this one by Scylla, also find Graviton to be more price-performant. This is due in part to Arm-based processors having lower power consumption and more competitive margins since Graviton is owned by Amazon. Graviton is an excellent choice for those who are prioritizing cost.\n\n  * Performance: Benchmarks show various results since performance is so specific to use cases. As such, if you\u2019re choosing between instances, consider running your workload on different instances to compare.\n\nIt\u2019s also worth considering that new and improved instance types with new\ngenerations of processors are frequently introduced. See the next section for\na list of all current instances and which processors they have.\n\n## Intel, AMD, and Graviton Processors by EC2 Instance\n\nAs a recap of EC2 naming conventions, by looking at the instance you can\nalways tell the family and generation. For example, M5 belongs to the general-\npurpose m family and is in the 5th generation. For some of the EC2 instances,\nsuch as M7g, you can infer the processor as well (g for Graviton), for others\nyou can\u2019t, which is why we put together the following table of current EC2\ninstances and their processor information:\n\nInstance| Processor Family| Processor Details  \n---|---|---  \nM7g| Graviton| AWS Graviton3  \nM7i| Intel| 4th generation Intel Xeon Scalable (Sapphire Rapids 8488C)  \nM7i-flex| Intel| 4th generation Intel Xeon Scalable (Sapphire Rapids 8488C)  \nM7a| AMD| 4th generation AMD EPYC (AMD EPYC 9R14)  \nMac| Apple/Intel| Apple M2 Pro Apple M1 chip Apple M2 Chip 8th generation\nIntel Core i7  \nM6g| Graviton| AWS Graviton2  \nM6i| Intel| 3rd generation Intel Xeon Scalable (Ice Lake 8375C)  \nM6in| Intel| 3rd generation Intel Xeon Scalable (Ice Lake 8375C)  \nM6a| AMD| 3rd generation AMD EPYC (AMD EPYC 7R13)  \nM5| Intel| Intel Xeon Platinum (8175M or 8259CL)  \nM5n| Intel| 2nd generation Intel Xeon Scalable (Cascade Lake 8259CL)  \nM5zn| Intel| Intel Xeon Scalable (Cascade Lake 8252C)  \nM5a| AMD| AMD EPYC 7000 (AMD EPYC 7571)  \nT4g| Graviton| AWS Graviton2  \nM4| Intel| Intel Xeon Scalable (Broadwell E5-2686 v4 or Haswell E5-2676 v3)  \nT3| Intel| Intel Xeon Scalable (Skylake 8175M or Cascade Lake 8259CL)  \nT3a| AMD| AMD EPYC 7000 (AMD EPYC 7571)  \nT2| Intel| Intel Xeon Scalable (Haswell E5-2676 v3 or Broadwell E5-2686 v4)\nIntel Scalable  \nC7g| Graviton| AWS Graviton3  \nC7gn| Graviton| AWS Graviton3E  \nC7i| Intel| 4th generation Intel Xeon Scalable (Sapphire Rapids 8488C)  \nC7a| AMD| 4th generation AMD EPYC (AMD EPYC 7R32)  \nC6g| Graviton| AWS Graviton2  \nC6gn| Graviton| AWS Graviton2  \nC6i| Intel| 3rd generation Intel Xeon Scalable (Ice Lake 8375C)  \nC6in| Intel| 3rd generation Intel Xeon Scalable (Ice Lake 8375C)  \nC6a| AMD| 3rd generation AMD EPYC (AMD EPYC 7R13)  \nC5| Intel| 2nd generation Intel Xeon Scalable (Cascade Lake 8275CL) 2nd\ngeneration Intel Xeon Scalable (Cascade Lake 8223CL) 1st generation Intel Xeon\nPlatinum 8000 series (Skylake 8124M)  \nC5n| Intel| Intel Xeon Platinum (Skylake 8124)  \nC5a| AMD| 2nd generation AMD EPYC 7002 (AMD EPYC 7R32)  \nC4| Intel| Intel Xeon Scalable (Haswell E5-2666 v3)  \nR8g| Graviton| AWS Graviton4  \nR7g| Graviton| AWS Graviton3  \nR7i| Intel| 4th generation Intel Xeon Scalable (Sapphire Rapids 8488C)  \nR7iz| Intel| 4th generation Intel Xeon Scalable (Sapphire Rapids 6455B)  \nR7a| AMD| 4th generation AMD EPYC (AMD EPYC 9R14)  \nR6g| Graviton| AWS Graviton2  \nR6i| Intel| 3rd generation Intel Xeon Scalable (Ice Lake 8375C)  \nR6in| Intel| 3rd generation Intel Xeon Scalable (Ice Lake 8375C)  \nR6a| AMD| 3rd generation AMD EPYC (AMD EPYC 7R13)  \nR5| Intel| Intel Xeon Platinum 8000 series (Skylake 8175M or Cascade Lake\n8259CL)  \nR5n| Intel| 2nd generation Intel Xeon Scalable (Cascade Lake 8259CL)  \nR5b| Intel| 2nd generation Intel Xeon Scalable (Cascade Lake 8259CL)  \nR5a| AMD| AMD EPYC 7000 (AMD EPYC 7571)  \nR4| Intel| High frequency Intel Xeon Scalable (Broadwell E5-2686 v4)  \nX2gd| Graviton| AWS Graviton2  \nX2idn| Intel| 3rd generation Intel Xeon Scalable (Ice Lake 8375C)  \nX2iedn| Intel| 3rd generation Intel Xeon Scalable (Ice Lake 8375C)  \nX2iezn| Intel| 2nd generation Intel Xeon Scalable (Cascade Lake 8252C)  \nX1| Intel| High frequency Intel Xeon E7-8880 v3 (Haswell)  \nX1e| Intel| High frequency Intel Xeon E7-8880 v3 (Haswell)  \nU-3tb1| Intel| Intel Xeon Scalable (Skylake 8176M)  \nU-6tb1| Intel| Intel Xeon Scalable (Skylake 8176M)  \nU-9tb1| Intel| Intel Xeon Scalable (Skylake 8176M)  \nU-12tb1| Intel| Intel Xeon Scalable (Skylake 8176M)  \nU-18tb1| Intel| Intel Xeon Platinum 8280L (Cascade Lake 8280L)  \nU-24tb1| Intel| Intel Xeon Platinum 8280L (Cascade Lake 8280L)  \nz1d| Intel| Intel Xeon Scalable (Skylake 8151)  \nP5| AMD| 3rd generation AMD EPYC (AMD EPYC 7R13)  \nP4| Intel| 2nd generation Intel Xeon Scalable (Cascade Lake 8275CL)  \nP3| Intel| Intel Xeon Scalable (Broadwell E5-2686 v4) Intel Xeon Scalable\n(Skylake 8175)  \nP2| Intel| Intel Xeon Scalable (Broadwell E5-2686 v4)  \nG6| AMD| 3rd generation AMD EPYC (AMD EPYC 7R13)  \nG5g| Graviton| AWS Graviton2  \nG5| AMD| 2nd generation AMD EPYC (AMD EPYC 7R32)  \nG4dn| Intel| 2nd generation Intel Xeon Scalable (Cascade Lake 8259CL)  \nG4ad| AMD| 2nd generation AMD EPYC (AMD EPYC 7R32)  \nG3| Intel| High frequency Intel Xeon Scalable (Broadwell E5-2686 v4)  \nTrn1| Intel| 3rd generation Intel Xeon Scalable (Ice Lake SP)  \nInf2| AMD| 3rd generation AMD EPYC (AMD EPYC 7R13)  \nInf1| Intel| High frequency 2nd generation Intel Xeon Scalable (Cascade Lake\nP-8259L)  \nDL1| Intel| 2nd generation Intel Xeon Scalable (Cascade Lake 8275CL)  \nDL2q| Intel| 2nd generation Intel Xeon Scalable (Cascade Lake 8259CL)  \nF1| Intel| High frequency Intel Xeon Scalable (Broadwell E5-2686 v4)  \nVT1| Intel| 2nd generation Intel Xeon Scalable (Cascade Lake 8259CL)  \nI4g| Graviton| AWS Graviton2  \nIm4gn| Graviton| AWS Graviton2  \nIs4gen| Graviton| AWS Graviton2  \nI4i| Intel| 3rd generation Intel Xeon Scalable (Ice Lake 8375C)  \nI3| Intel| High frequency Intel Xeon Scalable (Broadwell E5-2686 v4)  \nI3en| Intel| Intel Xeon Scalable (Skylake 8175M or Cascade Lake 8259CL)  \nD3| Intel| 2nd generation Intel Xeon Scalable (Cascade Lake 8259CL)  \nD3en| Intel| 2nd generation Intel Xeon Scalable (Cascade Lake 8259CL)  \nD2| Intel| High frequency Intel Xeon Scalable (Haswell E5-2676 v3)  \nH1| Intel| Intel Xeon Scalable (Broadwell E5 2686 v4)  \nHpc7g| Graviton| AWS Graviton3E  \nHpc7a| AMD| 4th generation AMD EPYC (AMD EPYC 9R14)  \nHpc6id| Intel| Intel Xeon Scalable  \nHpc6a| AMD| 3rd generation AMD EPYC (AMD EPYC 7R13)  \n  \nTable of EC2 instances processors (scroll to see full table)\n\nThere are about three times as many families with Intel processors than with\nAMD or Graviton.\n\n## Distribution of Intel, AMD, and Graviton for EC2 Instances\n\nAs we saw above, just about every new generation of EC2 instance has instances\nwith AMD and Graviton processors, and each processor has its own advantages.\nSo it should come as no surprise that the adoption of these instance types is\ngrowing.\n\nVantage is a cloud cost and optimization platform that has a unique look into\nindustry spending patterns due to anonymized customer data. We\u2019ve previously\nbeen monitoring the changes in the EC2 processor landscape and other topics in\nour Cloud Cost Reports.\n\nThe following pie charts represent a comparison of spend between Intel, AMD,\nand Graviton for EC2 instances based on the percentage of total customer spend\nfor Q1 2023 and Q1 2024, respectively:\n\nQ1 2023\n\nQ1 2024\n\nEC2 instances processor distribution\n\nAs you can see, the percentage share of AMD and Graviton costs compared to\nIntel has nearly doubled in the past year. However, this does not show the\nfull story. For starters, Intel is the processor of many more instance types\nthan AMD and Graviton. There are also differences in how they are priced. For\nexample, the most expensive Graviton-based instance is $5.821 On-Demand per\nhour, whereas AMD\u2019s is $98.320, and Intel\u2019s is $218.40.\n\nLooking at this pie chart for the most recent generation of the m family, we\ncan see a more evenly distributed percentage of spend:\n\nEC2 M7 instances processor distribution, Q1 2024\n\nThe distribution reflects customer consideration of selecting an instance type\nbased on their workload.\n\n## Conclusion\n\nEC2 is the number one AWS service in terms of cost, which provides a strong\nincentive for processor manufacturers to compete for customers\u2019 workloads. As\nthe data shows, while Intel still holds the majority share of the EC2\nlandscape, the adoption of AMD and Graviton instances is steadily increasing,\nreflecting customer willingness to consider alternative processor\narchitectures based on their specific workload requirements.\n\nMonitor your AWS costs.\n\nMonitor and optimize Amazon EC2 costs with Vantage.\n\nJoin our Slack Group\n\nInterested in this type of content? Join our growing Slack community of over\n1,000 cloud professionals\n\nJoin Slack Group\n\n###### More from the blog\n\nContent \u2022 Apr 19, 2024\n\nFinOps as Code: Automating and Visualizing Unit Economics\n\nUse FinOps as Code to create an automated pipeline and view business metrics\nalong with cloud cost data.\n\nContent \u2022 Apr 11, 2024\n\nClaude vs OpenAI: Pricing Considerations\n\nClaude is outranking OpenAI's GPT models in several benchmarks\u2014see how it\ncompares with regards to pricing.\n\nContent \u2022 Apr 1, 2024\n\nLLRT and JavaScript Runtimes on AWS Lambda\n\nLLRT is AWS\u2019s new experimental JavaScript runtime that claims to have 10x\nfaster startups and 2x overall lower costs on Lambda.\n\nTools for developers to analyze, report on and reduce cloud costs.\n\n\u00a9 2024 VNTG Inc.\n\n###### Features\n\n  * Autopilot\n  * Integrations\n  * Cost Reports\n  * Cost Recommendations\n  * Cost Anomaly Alerts\n  * Per-Resource Costs\n  * Virtual Tagging\n  * Segments\n  * Resource Reports\n  * Financial Commitment Reports\n  * Financial Planning\n  * Issues\n  * Per Unit Costs\n  * Team Access\n  * Kubernetes Cost Visibility\n  * Team Access and Management\n\n###### Documentation\n\n  * API Documentation\n  * Product Documentation\n  * Product Changelog\n  * Privacy Policy\n  * Website Terms of Use\n  * VNTG Service Agreement\n  * Authorized Sub-Processors\n\n###### Community\n\n  * Slack Community\n  * EC2Instances.info\n  * Cloud Cost Handbook\n  * AWS Cost Leaderboard\n  * Cloud Cost Report\n\n###### Company\n\n  * About\n  * Blog\n  * Branding\n  * Careers\n  * Customers\n  * Pricing\n  * Security\n  * Vantage Status\n\n", "frontpage": false}
