{"aid": "40117988", "title": "React Native 0.74 \u2013 Yoga 3.0, Bridgeless New Architecture, and More", "url": "https://reactnative.dev/blog/2024/04/22/release-0.74", "domain": "reactnative.dev", "votes": 1, "user": "reimertz", "posted_at": "2024-04-22 19:31:42", "comments": 0, "source_title": "React Native 0.74 - Yoga 3.0, Bridgeless New Architecture, and more", "source_text": "React Native 0.74 - Yoga 3.0, Bridgeless New Architecture, and more \u00b7 React\nNative\n\nSkip to main content\n\nJoin us for React Conf on May 15-16. Learn More.\n\n# React Native 0.74 - Yoga 3.0, Bridgeless New Architecture, and more\n\nApril 22, 2024 \u00b7 10 min read\n\nHur Ali\n\nSoftware Engineer at Callstack\n\nAlan Hughes\n\nSoftware Engineer at Expo\n\nAlfonso Curbelo\n\nSoftware Engineer at Coinbase\n\nAlex Hunt\n\nSoftware Engineer at Meta\n\nNicola Corti\n\nSoftware Engineer at Meta\n\nToday we're releasing React Native 0.74! This release adds Yoga 3.0,\nBridgeless by default under the New Architecture, batched onLayout updates\n(New Architecture), and Yarn 3 as the default package manager for new\nprojects.\n\nWe are also removing deprecated APIs, with the removal of PropTypes and\nbreaking changes to PushNotificationIOS. On Android, SDK 23 (Android 6.0) is\nnow the minimum supported version.\n\n### Highlights\n\n  * Yoga 3.0\n  * New Architecture: Bridgeless by Default\n  * New Architecture: Batched onLayout Updates\n  * Yarn 3 for New Projects\n\n### Breaking Changes\n\n  * Android Minimum SDK Bump (Android 6.0)\n  * API Changes to PushNotificationIOS (Deprecated)\n  * Removal of Deprecated PropTypes\n  * Other Breaking Changes\n\n## Highlights\n\n### Yoga 3.0\n\n#### New Layout Behaviors\n\nReact Native 0.74 includes Yoga 3.0, the newest version of our layout engine.\nYoga 3.0 improves layout by making styling more predictable, and supports\nrendering components written for the web.\n\nReact Native continues to intentionally preserve some incorrect layout\nbehaviors, where fixing them was found to effect a significant number of real-\nworld components. Layout conformance will be able to be configured more\ngranularly in future versions of React Native.\n\nwarning\n\nReact Native previously flipped left/right (and start/end) edges when dealing\nwith margin, padding, or border, set on a row-reverse container. Now, behavior\nof these properties lines up with web. Code which previously relied on edges\nbeing inverted may need to be updated to continue rendering correctly.\n\nStyle| Before| After  \n---|---|---  \n      \n    \n    <View style={{ flexDirection: 'row', backgroundColor: 'red', margin: 10, width: 200, height: 100, }}> <View style={{ flexDirection: 'row-reverse', backgroundColor: 'blue', flex: 1, marginLeft: 50, }}> <View style={{ backgroundColor: 'green', height: '50%', flex: 1, marginLeft: 50, }} /> </View> </View>  \n  \n#### Support for align-content: 'space-evenly'\n\nYoga 3.0 brings support for alignContent: 'space-evenly'. space-evenly\ndistributes the lines in a multi-line flex container using evenly spaced gaps,\nplaced between line and container edges.\n\nSource: World Wide Web Consortium\n\n#### Support for position: 'static'\n\ninfo\n\nposition: 'static' is supported only in the New Architecture.\n\nElements marked as position: 'static' may not be offset, and are not\nconsidered when determining the containing block of an absolutely positioned\nelement. This allows positioning an element relative to an ancestor which is\nnot its direct parent.\n\n    \n    \n    <View style={{ backgroundColor: 'blue', width: 200, height: 200, flexDirection: 'row-reverse', }}> <View style={{ backgroundColor: 'red', width: 100, height: 100, position: 'static', }}> <View style={{ backgroundColor: 'green', width: 25, height: '25%', left: 25, top: 25, position: 'absolute', }} /> </View> </View>  \n  \n---  \n  \nNotice how the green <View> declares left and top and it is positioned\nrelative to the blue <View>, not its parent.\n\nReact Native continues to default to position: 'relative' when no position is\nset.\n\n### New Architecture: Bridgeless by Default\n\nIn this release, we are making Bridgeless Mode the default when the New\nArchitecture is enabled. You can learn more about our switch to Bridgeless as\nthe default in this post. To make the transition smoother we enhanced the\ninterop layers to cover Bridgeless and worked with several libraries to make\nsure they will work in Bridgeless from day one.\n\nBridgeless is not the only interop layer we worked on: we improved the New\nRenderer Interop layers too. The most exciting bit is that it is now enabled\nby default: you don't need to specify the components that have to go through\nit! You can read more about them here.\n\nFinally, if you want to learn more about the New Architecture, you can find\ndocumentation in the react-native-new-architecture repo. When the New\nArchitecture becomes the default, this information will be incorporated into\nreactnative.dev.\n\n### New Architecture: Batched onLayout updates\n\nState updates in onLayout callbacks are now batched. Previously, each state\nupdate in the onLayout event would result in a new render commit.\n\n    \n    \n    function MyComponent(props) { const [state1, setState1] = useState(false); const [state2, setState2] = useState(false);\n    \n    return ( <View> <View onLayout={() => { setState1(true); }}> <View onLayout={() => { // When this event is executed, state1's new value is no longer observable here. setState2(true); }}> </View> </View> ); }\n\nIn 0.74, setState1 and setState2 updates are batched together. This change is\nexpected behavior in React and allows for less re-renders.\n\ndanger\n\nThis change may break code that has relied on un-batched state updates. You'll\nneed to refactor this code to use updater functions or equivalent.\n\n### Yarn 3 for New Projects\n\nYarn 3 is now the default JavaScript package manager for new projects\ninitialized with React Native Community CLI.\n\nYarn 3.x will be used with nodeLinker: node-modules, a mode providing\ncompatibility with React Native libraries. This replaces Yarn Classic (1.x,\ndeprecated) as the previous default. To upgrade Yarn version inside your\nexisting app you can follow this guide.\n\n    \n    \n    $ yarn --help \u2501\u2501\u2501 Yarn Package Manager - 3.6.4 \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n    \n    $ yarn <command>\n\nThe Community CLI also supports initializing projects with other package\nmanagers via the --pm flag (read more).\n\n## Breaking Changes\n\n### Android Minimum SDK Bump (Android 6.0)\n\nReact Native 0.74 has a minimum Android SDK version requirement of 23 (Android\n6.0). Previously, this was Android 5.0 (API 21). See our context for this\nchange here.\n\n#### Bonus: Android app size reduction\n\nThe minimum SDK bump, together with several improvements at our native build,\nallowed us to greatly reduce the app size on user devices.\n\nFor example a newly created app with React Native 0.74 occupies ~13% less\nspace on user device, resulting in ~4MB saved on device.\n\n### Removal of Deprecated PropTypes\n\nBefore 0.74, React Native continued to ship with PropTypes, an API that has\nbeen deprecated since React 15.5 in 2017! We are now removing all built-in\nPropTypes from React Native, reducing app size (26.4kB in a minified bundle)\nand memory overhead.\n\nThe following PropTypes properties are removed: Image.propTypes,\nText.propTypes, TextInput.propTypes, ColorPropType, EdgeInsetsPropType,\nPointPropType, ViewPropTypes (see commit).\n\nIf your app or library relies on PropTypes, we highly recommend migrating to a\ntype system like TypeScript.\n\n### API Changes to PushNotificationIOS (Deprecated)\n\nIn React Native 0.74, we are making steps to remove the deprecated\nPushNotificationIOS library. The changes in this release are focused on\nremoving references to older iOS APIs. PushNotificationIOS has been migrated\nonto Apple\u2019s User Notifications framework and exposes new APIs for scheduling\nand handling notifications.\n\nIn the next release (0.75), we are planning to remove this library, relocating\nit out of React Native core and into the community package, @react-native-\ncommunity/push-notification-ios. If you are still relying on\nPushNotificationIOS, you\u2019ll need to migrate over before the next release.\n\n#### API Changes\n\nThe didRegisterUserNotificationSettings: callback on\nRCTPushNotificationManager was a no-op and has been deleted.\n\nThe following callbacks on RCTPushNotificationManager have been deprecated and\nwill be removed in 0.75:\n\n    \n    \n    + (void)didReceiveLocalNotification:(UILocalNotification *)notification; + (void)didReceiveRemoteNotification:(NSDictionary *)notification;\n\nIn order to retrieve the notification which launched the app using\ngetInitialNotification(), you\u2019ll now need to explicitly set the\ninitialNotification on RCTPushNotificationManager:\n\n    \n    \n    [RCTPushNotificationManager setInitialNotification:response.notification];\n\nOn the JS side, properties on Notification have changed. alertAction and\nrepeatInterval are now deprecated and will be removed in 0.75:\n\n    \n    \n    type Notification = { ... // NEW: Seconds from now to display the notification. fireIntervalSeconds?: ?number,\n    \n    // CHANGED: Used only for scheduling notifications. Will be null when // retrieving notifications using `getScheduledLocalNotifications` or // `getDeliveredNotifications`. soundName?: ?string,\n    \n    // DEPRECATED: This was used for iOS's legacy UILocalNotification. alertAction?: ?string,\n    \n    // DEPRECATED: Use `fireDate` or `fireIntervalSeconds` instead. repeatInterval?: ?string, };\n\nFinally, the handler parameter on PushNotificationIOS.removeEventListener is\nunused and has been removed.\n\n### Other Breaking Changes\n\nGeneral\n\n  * Make start/end in styles always refer to writing direction (#42251).\n\nAndroid\n\n  * Remove of JSIModule* from FabricUIManagerProvider (#42059).\n\n    * This API was unused in open source \u2014 use TurboModules instead.\n  * Deprecate UIManagerModule.showPopupMenu and UIManagerModule.dismissPopupMenu (#42441)\n\n    * This API has been moved to the @react-native/popup-menu-android npm package and will be removed in 0.75.\n\niOS\n\n  * Delete configFilename and configKey arguments from iOS codegen CLI (#41533).\n  * Change how bundleURL is handled (#43994).\n\n    * Before, bundleURL was set when React Native was started in an instance variable and it was not possible to update it.\n    * Now, bundleUrl is a function which is re-evaluated when needed, enabling the use of a different URL across refreshes.\n    * This change will affect your app only if you were changing the bundleURL variable after the app is started. In this case, move the logic that updates the variable to the bundleURL function in AppDelegate.\n\nPlease see the full changelog for a complete list of breaking changes.\n\n## Known Issues\n\niOS\n\n  * Edge case when using multiple windows: When the main window is inactive and the system tries to present a dialog, the dialog is not presented in the right position on the screen. A fix is incoming in #44167 and will ship in 0.74.1.\n\n## Acknowledgements\n\nReact Native 0.74 contains over 1673 commits from 57 contributors. Thanks for\nall your hard work!\n\n## Upgrade to 0.74\n\nPlease use the React Native Upgrade Helper to view code changes between React\nNative versions for existing projects, in addition to the Upgrading docs.\n\nTo create a new project:\n\n    \n    \n    npx react-native@latest init MyProject\n\nIf you use Expo, React Native 0.74 will be supported in Expo SDK 51.\n\ninfo\n\n0.74 is now the latest stable version of React Native and 0.71.x moves to\nunsupported. For more information see React Native's support policy. We aim to\npublish a final end-of-life update of 0.71 at the beginning of May.\n\nTags:\n\n  * announcement\n  * release\n  * yoga\n\n  * Highlights\n  * Breaking Changes\n  * Highlights\n\n    * Yoga 3.0\n    * New Architecture: Bridgeless by Default\n    * New Architecture: Batched onLayout updates\n    * Yarn 3 for New Projects\n  * Breaking Changes\n\n    * Android Minimum SDK Bump (Android 6.0)\n    * Removal of Deprecated PropTypes\n    * API Changes to PushNotificationIOS (Deprecated)\n    * Other Breaking Changes\n  * Known Issues\n  * Acknowledgements\n  * Upgrade to 0.74\n\nDevelop\n\n  * Guides\n  * Components\n  * APIs\n  * Architecture\n\nParticipate\n\n  * Showcase\n  * Contributing\n  * Community\n  * Directory\n  * Stack Overflow\n\nFind us\n\n  * Blog\n  * Twitter\n  * GitHub\n\nExplore More\n\n  * ReactJS\n  * Privacy Policy\n  * Terms of Service\n\nCopyright \u00a9 2024 Meta Platforms, Inc.\n\n", "frontpage": false}
