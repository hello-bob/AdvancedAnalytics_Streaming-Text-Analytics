{"aid": "40204726", "title": "How to Improve Speech-to-Text Accuracy", "url": "https://picovoice.ai/blog/how-to-improve-speech-to-text-accuracy/", "domain": "picovoice.ai", "votes": 1, "user": "RealRapRichie", "posted_at": "2024-04-29 22:12:17", "comments": 0, "source_title": "How to Improve Speech-to-Text Accuracy", "source_text": "How to Improve Speech-to-Text Accuracy \u2014 Picovoice\n\n# How to Improve Speech-to-Text Accuracy\n\nOctober 17, 2022 \u00b7 2 min read\n\nMaintaining the accuracy of Speech-to-Text (STT) in custom domains is a\nchallenge. Automatic Speech Recognition (ASR) engines that achieve low Word\nError Rate (WER) struggle when operating in specialized contexts like medical\ntranscription, sales coaching, and customer service. Lowering back the WER\nrequires engineering efforts. The level of investment depends on the strategy\nand varies from hours to months of R&D. Below is a pragmatic strategy (flow)\nstarting from low-cost tasks.\n\n## Add Custom Words\n\nEvery Speech-to-Text engine understands a large but limited set of words known\nas the Lexicon. A phrase not in the Lexicon is called Out-of-Vocabulary (OOV).\nWhen the Lexicon doesn't contain an uttered word, STT transcribes it to\nanother (set of) phrase (s) that sound similar, increasing WER.\n\nIf you have an in-house STT engine, add OOVs to your Language Model (LM)\npipeline. If you use a third-party vendor, ask if they have an API (facility)\nto enable you to add OOVs. For example, developers can add custom words (OOVs)\nvia Picovoice Console to Picovoice Leopard Speech-to-Text and Cheetah\nStreaming Speech-to-Text engines.\n\n## Boost Phrases\n\nSome phrases are frequent in a given specialized domain but otherwise are\nrare. For example, a keynote speaker at Interspeech uses terms like Word Error\nRate, Acoustic Model, Language Model, and End-to-End Speech Recognition. But\nthese sequences of words are not frequent in daily conversations.\n\nYou can provide these specialized terms (phrases) to the ASR model, so it can\nclosely pay attention to them. If you are building your LM in-house, these\nterms should be frequent in your Text Corpus. If you are using a third-party\nvendor, ask them about their API for Keyword Boosting. For example, developers\ncan boost keywords via Picovoice Console to Picovoice Leopard Speech-to-Text\nand Cheetah Streaming Speech-to-Text engines.\n\n## Language Model Adaptation\n\nIf adding OOVs and boosting keywords doesn't suffice, adapting (training) the\nLanguage Model (LM) is the next logical step. A large text corpus (think\nmillions of words) representing expected utterances is needed. LM Adaptation\nis accessible if you have an in-house solution or have a strong partnership\nwith your ASR vendor.\n\nPicovoice doesn't provide an automated facility for adapting or training\nLanguage Models. The decision is intentional. The steps involved in adapting\nan LM are complex, and a linguist needs to examine the properties of the\nadaptation corpus.\n\n## Acoustic Model Adaptation\n\nAcoustic Model Adaptation is the last step. It is expensive if done right.\nBut, thankfully, rarely required. There is only a handful of scenarios that\nrequire Acoustic Model Adaptation. For example, ASR for kids.\n\nSelf-service Picovoice Console is freely available to any developer to improve\nthe accuracy of Leopard Speech-to-Text and Cheetah Streaming Speech-to-Text\nwithout writing a single line of code. If you have a domain-specific use case\nwith unique jargon consisting of thousands of words, such as medical\ndictation, or need an acoustic model adaptation, engage with Picovoice\nConsulting.\n\nStart Building\n\nSubscribe to our newsletter\n\n### More from Picovoice\n\nJavaScript Speech Recognition\n\nLearn how to perform Speech Recognition in JavaScript, including Speech-to-\nText, Voice Commands, Wake Word Detection, and Voice Activity Det...\n\nTranscribe and Summarize YouTube videos using Twilio, ChatGPT, and Leopard\nSpeech-to-Text in Node.JS\n\nHave you ever thought of getting a summary of a YouTube video by sending a\nWhatsApp message? Ezzeddin Abdullah built an application that tra...\n\nOffline Speech-to-Text Features\n\nThe launch of Leopard Speech-to-Text and Cheetah Speech-to-Text for streaming\nbrought cloud-level automatic speech recognition (ASR) to loca...\n\nReal-time Transcription with React.js\n\nTranscribe speech-to-text in real-time using Picovoice Cheetah Streaming\nSpeech-to-Text React.js SDK. The SDK runs on Linux, macOS, Windows,...\n\nSpeech-to-Text with React.js\n\nTranscribe speech to text using Picovoice Leopard speech-to-text React.js SDK.\nThe SDK runs on Linux, macOS, Windows, Raspberry Pi, and NVID...\n\nCreating a Custom Model with Leopard & Cheetah\n\nLearn how to create a custom speech-to-text model on the Picovoice Console\nusing the Leopard & Cheetah Speech-to-Text Engines\n\nSpeech to Text with Django\n\nAdd speech-to-text to a Django project using Picovoice Leopard Speech-to-Text\nPython SDK. The SDK runs on Linux, macOS, Windows, Raspberry P...\n\nInternational Phonetic Alphabet (IPA) and Phonetic Transcription\n\nThe International Phonetic Alphabet (IPA) is an alphabetic system of phonetic\nnotation.\n\nPlatform\n\n  * Leopard Speech-to-Text\n  * Cheetah Streaming Speech-to-Text\n  * Koala Noise Suppression\n  * Eagle Speaker Recognition\n  * Falcon Speaker Diarization\n  * Octopus Speech-to-Index\n  * Porcupine Wake Word\n  * Rhino Speech-to-Intent\n  * Cobra Voice Activity Detection\n  * Orca Text-to-Speech^BETA\n\nResources\n\n  * Docs\n  * Console\n  * Blog\n  * Use Cases\n  * Playground\n\nSales & Services\n\n  * Consulting\n  * Developer Plan\n  * Enterprise Plan\n  * Support Add-on\n\nCompany\n\n  * About us\n  * Careers\n\nFollow Picovoice\n\nSubscribe to our newsletter\n\nTerms of Use\n\nPrivacy Policy\n\n\u00a9 2019-2024 Picovoice Inc.\n\n", "frontpage": false}
