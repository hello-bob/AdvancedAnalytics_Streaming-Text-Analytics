{"aid": "40216598", "title": "Robot Dog Sees Me", "url": "https://www.hackster.io/mzandtheraspberrypi/robot-dog-sees-me-64e658", "domain": "hackster.io", "votes": 1, "user": "petoi", "posted_at": "2024-04-30 21:29:55", "comments": 0, "source_title": "Robot Dog Sees Me", "source_text": "Robot Dog Sees Me - Hackster.io\n\nWelcome to Hackster!\n\nHackster is a community dedicated to learning hardware, from beginner to pro.\nJoin us, it's free!\n\n### Embed the widget on your own site\n\nAdd the following snippet to your HTML:\n\nControl a robot dog using computer vision by integrating a Bittle robot from\nPetoi, a MU3 Vision sensor, and a Pi Zero 2 W.\n\nRead up about this project on\n\n#### Robot Dog Sees Me\n\nmzandtheraspberrypi\n\n10 506\n\n  * Overview\n  * Things\n  * Story\n    * Intro\n    * How to Replicate\n    * PiSetup\n    * Hardware Setup\n    * Camera and Wlan\n    * Demo\n    * Areas for Improvement\n    * Closing Thoughts\n  * Credits\n  * Comments(2)\n\nmzandtheraspberrypi\n\nPublished January 27, 2024 \u00a9 MIT\n\n# Robot Dog Sees Me\n\nControl a robot dog using computer vision by integrating a Bittle robot from\nPetoi, a MU3 Vision sensor, and a Pi Zero 2 W.\n\nIntermediateFull instructions provided2 hours525\n\nAd\n\n## Things used in this project\n\n### Hardware components  \n  \n---  \n| MU3 Vision Sensor  \n---  \n\u00d7| 1  \n| Raspberry Pi Pi Zero 2 W  \n---  \n\u00d7| 1  \n| OpenCat Bittle  \n---  \n\u00d7| 1  \n  \n### Software apps and online services  \n  \n| my-bittle  \n---  \n| my-mu3  \n---  \n| Bittle Demo  \n---  \n  \n## Story\n\n###\n\nIntro\n\nSometimes working with software can feel like talking to the dead. I had\nbought a bittle robot from petoi as well as a MU3 Vision Sensor and my first\ngoal was to get images from the camera, do computer vision, and control the\nbittle based on the computer vision. Integration.\n\nThere came a point, when I was running a serial console and typing in commands\nto setup the camera's wifi, where I thought of the engineers that wrote the\nsoftware on the other side of the console, on the camera. These engineers had\nthoughtfully created the interface I was using, probably years ago. They may\nbe dead now, or have given up on a software career and are enjoying an\nengaging life in a budhist monastery. Sometimes working with other people's\ncode can feel like talking to the dead\u2014piercing the vale to commune with the\nspirits and tease out insights to get the project running...\n\nMy hope is that the steps below and software libraries I published guide you\non how to setup your own robotics platform using the Bittle and camera\nsensors.\n\nI claim success, though with poor frame rate and detection here.\n\n###\n\nHow to Replicate?\n\nMy hardware setup looked like this and included a Raspberry Pi Zero 2 W, Male\nto Female 2.54 dupont cables, a MU3 Vision sensor, some 3d printed parts, and\na Bittle wtih a NyBoard V1_2.\n\nthe hardware\n\n###\n\nPiSetup\n\nI used a raspberry pi zero 2 w. I thought the small size and weight of this\nwould be helpful for the Bittle's walking. The CPU with 4 cores running at\n1GHz is punchy.\n\nI used Ubuntu 22.04 as the operating system. I used the raspberry pi imager\ntool to flash an SD card and input wlan details and enable ssh. I first booted\nwithout a connection to the NyBoard to disable the serial console and such as\nper below.\n\nOn Raspberry Pi OS the the relevant files are in a different folder, /boot I\nbelieve.\n\n1\\. Ensure that the line enable_uart=1 is uncommented in the\n/boot/firmware/config.txt file, it should be by default.\n\n2\\. remove any reference to console in /boot/firmware/cmdline.txt, ie remove\nconsole=serial0,115200.\n\n3\\. disable the serial console sudo systemctl stop serial-getty@ttyS0.service\n&& sudo systemctl disable serial-getty@ttyS0.service\n\nFrom here I considered briefly how the raspberry pi is a non-real time\noperating system and doing things using software with the GPIO pins can be\ndifficult as the OS taketh and giveth resources. Then I installed a software\nserial port to talk to the camera to setup wlan.\n\n    \n    \n    git clone https://github.com/adrianomarto/soft_uart cd soft_uart make sudo apt-get update && sudo apt-get install checkinstall sudo checkinstall # a menu will come up, follow instructions and accept defaults\n\nThen I installed some self-written code that we will use later. One of these\nlibraries will implement an easy way to get images from the camera, another\nlibrary will implement an easy way to command the Bittle from the raspberry\npi.\n\n    \n    \n    pip install my-bittle my-mu3\n\n###\n\nHardware Setup\n\nI had to decide how to talk to the camera, and how to talk to the bittle\nrobot.\n\nThe documentation for the camera lists 4 modes:\n\nOf these, the only one I could use was the WIFI Image Transmission mode, given\nI wanted the raw images to do my own detection with. I'll note again how this\nis a little silly as the point of the MU3 is to do the detection itself and\nsend the output via a variety of interfaces and it does this quite well. That\nsaid I am a silly man.\n\nThe MU3 will broadcast a wifi network by default in this mode. I had to decide\nwhether to use this network and connect everythign to it (raspberry pi,\nsupport computer) or whether to use my own home wifi network. I decided to use\nmy own home wifi network, but this meant I had to send the details to the MU3\nvia AT commands. I documented the AT commands in this repo. I then decided to\nuse a software serial port on the raspberry pi, so I could have the pi always\nplugged into Bittle while still configuring the camera.\n\nThe below steps mostly use internal labels (from 1 to 40) to refer to pin\nnumbers, NOT Broadcom (BCM) Naming (such as GPIO2).\n\n1\\. Flip the two switches labelled output on the left of the MU3 camera to up\nto set the MU3 to image transmission mode.\n\n2\\. Plug the MU3 power into the pi zero 3.3 volt power, pin 17. Plug the MU3\nground into the pi ground pin 20. Plug the MU3 RX pin (white cable often) into\nthe pi pin 24 (GPIO 8 in BCM convention). Plug the MU3 TX pin (yellow cable\noften) into the pi pin 26 (GPIO7).\n\n3\\. Plug the pi zero 2 w into the Bittle via the NyBoard.\n\n###\n\nCamera and Wlan\n\nYou will have to do this each time the camera is powered on. It will not save\nafter a camera reset.\n\n1\\. ssh into the pi (I use MobaXterm).\n\n2\\. bring up the software serial port to talk to the camera sudo insmod\n~/soft_uart/soft_uart.ko gpio_tx=8 gpio_rx=7\n\n3\\. connect the MU3 to your wlan, inputting your wlan (wifi) details into the\ncommand. Note no spaces in the ssid name or in the password. setup-wlan\nmy_ssid my_password /dev/ttySOFT0. You should see the front lights on the MU3\nturn off and the back light turn on indicating it is connected. You should\nalso see an IP Address printed in the terminal that the camera received. On a\ncomputer connected to the same network, you should be able to type this ip\naddress into your url bar and see a camera interface, including an image\nstream. You could also use developer tools in chrome to see the address and\nport of the stream.\n\n4\\. Unload the kernel module for the software serial port sudo rmmod\nsoft_uart.ko\n\n###\n\nDemo\n\nThe first time you run this script it may be helpful to have the Bittle on a\ntest stand where its legs can't touch the ground to prevent hurting it in case\nof bugs/errors. A stack of books can work nicely for this.\n\n    \n    \n    git clone https://github.com/MZandtheRaspberryPi/bittle_demo.git cd bittle_demo # input your mu3 ip address into the global variable 'IP_ADDRESS' in come_to_me.py python3 come_to_me.py\n\nIf you move your face in front of the camera, the Bittle should start to walk\nforward. Detection is not great, so you may need to move your face around and\ntry different angles. To exit the script, hold 'q'.\n\nIt will print out the frame rate of the camera and of the face detection\nalgorithm. It will also create a timestamped folder with images from the\ncamera. You may wish to make a video of the output images, to do so you could\nuse ffmpeg inputting the framerate that the script prints.\n\n    \n    \n    ffmpeg -framerate 5.3 -i ./20240122-233344/frame_%d.png -c:v libx264 -pix_fmt yuv420p my_bittle.mp4\n\n###\n\nAreas for Improvement\n\n  * The frame rate of the camera in Image Transmission mode, and the resolution are not amazing (240/180 pixels, 5fps? sometimes more). More advanced computer vision projects may suffer from this, but for hobby projects it may be ok. To be fair, this is a lot of data to transfer. 240 pixels times 180 pixels times 3 channels (RGB) results in 129, 600 bytes of data per image. 10 images a second is is 10,368,000 bits per second, or 10.3 Megabits.\n  * The software serial port used to setup the camera's wlan is a weakpoint in that it is not super reliable. Plugging into the NyBoard may be more reliable, but when I compiled the OpenCat repo I noticed we were close to the limit on program storage space.\n  * a better detection algorithm for faces is needed, perhaps one based on a CNN (there are implementations out there via opencv).\n  * there is another library that does communication with the bittle, alas I found it too late. It seems it does more work to discover serial ports than the library I wrote. Find it here.\n\n###\n\nClosing Thoughts\n\nI had fun integrating all of these components. In the future I would like to\ndo more with computer vision and the Bittle and may try a different camera\nwith a hard connection to the pi zero, perhaps via USB.\n\nIf you have the components in this project, you could consider extending it in\nvarious ways:\n\n  * can you get the Bittle to follow you when you go right and and left?\n  * can you implement more reliable face detection than the haarcascades method I used?\n  * can you improve frame rate of the MU3 sensor in image transmission mode? or can you integrate a better camera sensor for working with raw images (like an Arducam)? Again the MU3 was designed to do detection itself and send outputs, and it does this very well.\n\nRead more\n\n## Credits\n\n### mzandtheraspberrypi\n\n1 project \u2022 1 follower\n\nContactContact\n\n## Comments\n\nPlease log in or sign up to comment.\n\nAd\n\n##### Related channels and tags\n\n  * computer vision\n  * robotics\n\n##### Related projects\n\nView more related projects\n\n1\n\n2\n\n3\n\nHey stranger! Sign up to access unlimited projects featuring Raspberry Pi and\nmore \u2013 it's free.\n\nNot now\n\n  * ### About Us\n\n  * Hackster Overview\n  * Hackster for Business\n  * Help Articles\n  * Brand Resources\n  * Sitemap\n\n  * ### Legal Thingies\n\n  * Terms of Service\n  * Code of Conduct\n  * Privacy Policy\n  * Privacy Policy for California Residents\n  * Cookie Policy\n\n  * ### Find Us On Social\n\n  * Facebook\n  * Instagram\n  * LinkedIn\n  * X\n  * YouTube\n\n  * ### Visit Our Avnet Family\n\n  * Avnet\n  * Premier Farnell\n  * element14\n  * Newark\n\nHackster.io, an Avnet Community \u00a9 2024\n\n", "frontpage": false}
