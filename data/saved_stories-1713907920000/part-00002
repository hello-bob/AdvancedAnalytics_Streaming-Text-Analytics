{"aid": "40133068", "title": "Phi-3 Released", "url": "https://huggingface.co/microsoft/Phi-3-mini-4k-instruct", "domain": "huggingface.co", "votes": 2, "user": "regularfry", "posted_at": "2024-04-23 15:30:17", "comments": 0, "source_title": "microsoft/Phi-3-mini-4k-instruct \u00b7 Hugging Face", "source_text": "microsoft/Phi-3-mini-4k-instruct \u00b7 Hugging Face\n\nHugging Face\n\n#\n\nmicrosoft\n\n/\n\nPhi-3-mini-4k-instruct\n\nText Generation Transformers Safetensors English phi3 nlp code conversational\ncustom_code\n\nModel card Files Files and versions Community\n\n15\n\nEdit model card\n\n## Model Summary\n\nThe Phi-3-Mini-4K-Instruct is a 3.8B parameters, lightweight, state-of-the-art\nopen model trained with the Phi-3 datasets that includes both synthetic data\nand the filtered publicly available websites data with a focus on high-quality\nand reasoning dense properties. The model belongs to the Phi-3 family with the\nMini version in two variants 4K and 128K which is the context length (in\ntokens) that it can support.\n\nThe model has underwent a post-training process that incorporates both\nsupervised fine-tuning and direct preference optimization for the instruction\nfollowing and safety measures. When assessed against benchmarks testing common\nsense, language understanding, math, code, long context and logical reasoning,\nPhi-3 Mini-4K-Instruct showcased a robust and state-of-the-art performance\namong models with less than 13 billion parameters.\n\nResources and Technical Documentation:\n\n  * Phi-3 Microsoft Blog\n  * Phi-3 Technical Report\n  * Phi-3 on Azure AI Studio\n  * Phi-3 GGUF: 4K\n  * Phi-3 ONNX: 4K\n\n## Intended Uses\n\nPrimary use cases\n\nThe model is intended for commercial and research use in English. The model\nprovides uses for applications which require:\n\n  1. Memory/compute constrained environments\n  2. Latency bound scenarios\n  3. Strong reasoning (especially code, math and logic)\n\nOur model is designed to accelerate research on language and multimodal\nmodels, for use as a building block for generative AI powered features.\n\nUse case considerations\n\nOur models are not specifically designed or evaluated for all downstream\npurposes. Developers should consider common limitations of language models as\nthey select use cases, and evaluate and mitigate for accuracy, safety, and\nfariness before using within a specific downstream use case, particularly for\nhigh risk scenarios. Developers should be aware of and adhere to applicable\nlaws or regulations (including privacy, trade compliance laws, etc.) that are\nrelevant to their use case.\n\nNothing contained in this Model Card should be interpreted as or deemed a\nrestriction or modification to the license the model is released under.\n\n## How to Use\n\nPhi-3 Mini-4K-Instruct has been integrated in the development version (4.40.0)\nof transformers. Until the official version is released through pip, ensure\nthat you are doing one of the following:\n\n  * When loading the model, ensure that trust_remote_code=True is passed as an argument of the from_pretrained() function.\n\n  * Update your local transformers to the development version: pip uninstall -y transformers && pip install git+https://github.com/huggingface/transformers. The previous command is an alternative to cloning and installing from the source.\n\nThe current transformers version can be verified with: pip list | grep transformers.\n\nPhi-3 Mini-4K-Instruct is also available in HuggingChat.\n\n### Chat Format\n\nGiven the nature of the training data, the Phi-3 Mini-4K-Instruct model is\nbest suited for prompts using the chat format as follows. You can provide the\nprompt as a question with a generic template as follow:\n\n    \n    \n    <|user|>\\nQuestion <|end|>\\n<|assistant|>\n\nFor example:\n\n    \n    \n    <|system|> You are a helpful AI assistant.<|end|> <|user|> How to explain Internet for a medieval knight?<|end|> <|assistant|>\n\nwhere the model generates the text after <|assistant|> . In case of few-shots\nprompt, the prompt can be formatted as the following:\n\n    \n    \n    <|system|> You are a helpful AI assistant.<|end|> <|user|> I am going to Paris, what should I see?<|end|> <|assistant|> Paris, the capital of France, is known for its stunning architecture, art museums, historical landmarks, and romantic atmosphere. Here are some of the top attractions to see in Paris:\\n\\n1. The Eiffel Tower: The iconic Eiffel Tower is one of the most recognizable landmarks in the world and offers breathtaking views of the city.\\n2. The Louvre Museum: The Louvre is one of the world's largest and most famous museums, housing an impressive collection of art and artifacts, including the Mona Lisa.\\n3. Notre-Dame Cathedral: This beautiful cathedral is one of the most famous landmarks in Paris and is known for its Gothic architecture and stunning stained glass windows.\\n\\nThese are just a few of the many attractions that Paris has to offer. With so much to see and do, it's no wonder that Paris is one of the most popular tourist destinations in the world.\"<|end|> <|user|> What is so great about #1?<|end|> <|assistant|>\n\n### Sample inference code\n\nThis code snippets show how to get quickly started with running the model on a\nGPU:\n\n    \n    \n    import torch from transformers import AutoModelForCausalLM, AutoTokenizer, pipeline torch.random.manual_seed(0) model = AutoModelForCausalLM.from_pretrained( \"microsoft/Phi-3-mini-4k-instruct\", device_map=\"cuda\", torch_dtype=\"auto\", trust_remote_code=True, ) tokenizer = AutoTokenizer.from_pretrained(\"microsoft/Phi-3-mini-4k-instruct\") messages = [ {\"role\": \"system\", \"content\": \"You are a helpful digital assistant. Please provide safe, ethical and accurate information to the user.\"}, {\"role\": \"user\", \"content\": \"Can you provide ways to eat combinations of bananas and dragonfruits?\"}, {\"role\": \"assistant\", \"content\": \"Sure! Here are some ways to eat bananas and dragonfruits together: 1. Banana and dragonfruit smoothie: Blend bananas and dragonfruits together with some milk and honey. 2. Banana and dragonfruit salad: Mix sliced bananas and dragonfruits together with some lemon juice and honey.\"}, {\"role\": \"user\", \"content\": \"What about solving an 2x + 3 = 7 equation?\"}, ] pipe = pipeline( \"text-generation\", model=model, tokenizer=tokenizer, ) generation_args = { \"max_new_tokens\": 500, \"return_full_text\": False, \"temperature\": 0.0, \"do_sample\": False, } output = pipe(messages, **generation_args) print(output[0]['generated_text'])\n\n## Responsible AI Considerations\n\nLike other language models, the Phi series models can potentially behave in\nways that are unfair, unreliable, or offensive. Some of the limiting behaviors\nto be aware of include:\n\n  * Quality of Service: the Phi models are trained primarily on English text. Languages other than English will experience worse performance. English language varieties with less representation in the training data might experience worse performance than standard American English.\n  * Representation of Harms & Perpetuation of Stereotypes: These models can over- or under-represent groups of people, erase representation of some groups, or reinforce demeaning or negative stereotypes. Despite safety post-training, these limitations may still be present due to differing levels of representation of different groups or prevalence of examples of negative stereotypes in training data that reflect real-world patterns and societal biases.\n  * Inappropriate or Offensive Content: these models may produce other types of inappropriate or offensive content, which may make it inappropriate to deploy for sensitive contexts without additional mitigations that are specific to the use case.\n  * Information Reliability: Language models can generate nonsensical content or fabricate content that might sound reasonable but is inaccurate or outdated.\n  * Limited Scope for Code: Majority of Phi-3 training data is based in Python and use common packages such as \"typing, math, random, collections, datetime, itertools\". If the model generates Python scripts that utilize other packages or scripts in other languages, we strongly recommend users manually verify all API uses.\n\nDevelopers should apply responsible AI best practices and are responsible for\nensuring that a specific use case complies with relevant laws and regulations\n(e.g. privacy, trade, etc.). Important areas for consideration include:\n\n  * Allocation: Models may not be suitable for scenarios that could have consequential impact on legal status or the allocation of resources or life opportunities (ex: housing, employment, credit, etc.) without further assessments and additional debiasing techniques.\n  * High-Risk Scenarios: Developers should assess suitability of using models in high-risk scenarios where unfair, unreliable or offensive outputs might be extremely costly or lead to harm. This includes providing advice in sensitive or expert domains where accuracy and reliability are critical (ex: legal or health advice). Additional safeguards should be implemented at the application level according to the deployment context.\n  * Misinformation: Models may produce inaccurate information. Developers should follow transparency best practices and inform end-users they are interacting with an AI system. At the application level, developers can build feedback mechanisms and pipelines to ground responses in use-case specific, contextual information, a technique known as Retrieval Augmented Generation (RAG).\n  * Generation of Harmful Content: Developers should assess outputs for their context and use available safety classifiers or custom solutions appropriate for their use case.\n  * Misuse: Other forms of misuse such as fraud, spam, or malware production may be possible, and developers should ensure that their applications do not violate applicable laws and regulations.\n\n## Training\n\n### Model\n\n  * Architecture: Phi-3 Mini-4K-Instruct has 3.8B parameters and is a dense decoder-only Transformer model. The model is fine-tuned with Supervised fine-tuning (SFT) and Direct Preference Optimization (DPO) to ensure alignment with human preferences and safety guidlines.\n  * Inputs: Text. It is best suited for prompts using chat format.\n  * Context length: 4K tokens\n  * GPUs: 512 H100-80G\n  * Training time: 7 days\n  * Training data: 3.3T tokens\n  * Outputs: Generated text in response to the input\n  * Dates: Our models were trained between February and April 2024\n  * Status: This is a static model trained on an offline dataset with cutoff date October 2023. Future versions of the tuned models may be released as we improve models.\n\n### Datasets\n\nOur training data includes a wide variety of sources, totaling 3.3 trillion\ntokens, and is a combination of\n\n  1. Publicly available documents filtered rigorously for quality, selected high-quality educational data, and code;\n  2. Newly created synthetic, \u201ctextbook-like\u201d data for the purpose of teaching math, coding, common sense reasoning, general knowledge of the world (science, daily activities, theory of mind, etc.);\n  3. High quality chat format supervised data covering various topics to reflect human preferences on different aspects such as instruct-following, truthfulness, honesty and helpfulness.\n\n### Fine-tuning\n\nA basic example of multi-GPUs supervised fine-tuning (SFT) with TRL and\nAccelerate modules is provided here.\n\n## Benchmarks\n\nWe report the results for Phi-3-Mini-4K-Instruct on standard open-source\nbenchmarks measuring the model's reasoning ability (both common sense\nreasoning and logical reasoning). We compare to Phi-2, Mistral-7b-v0.1,\nMixtral-8x7b, Gemma 7B, Llama-3-8B-Instruct, and GPT-3.5.\n\nAll the reported numbers are produced with the exact same pipeline to ensure\nthat the numbers are comparable. These numbers might differ from other\npublished numbers due to slightly different choices in the evaluation.\n\nAs is now standard, we use few-shot prompts to evaluate the models, at\ntemperature 0. The prompts and number of shots are part of a Microsoft\ninternal tool to evaluate language models, and in particular we did no\noptimization to the pipeline for Phi-3. More specifically, we do not change\nprompts, pick different few-shot examples, change prompt format, or do any\nother form of optimization for the model.\n\nThe number of k\u2013shot examples is listed per-benchmark.\n\nPhi-3-Mini-4K-In 3.8b| Phi-3-Small 7b (preview)| Phi-3-Medium 14b (preview)|\nPhi-2 2.7b| Mistral 7b| Gemma 7b| Llama-3-In 8b| Mixtral 8x7b| GPT-3.5 version\n1106  \n---|---|---|---|---|---|---|---|---  \nMMLU 5-Shot| 68.8| 75.3| 78.2| 56.3| 61.7| 63.6| 66.5| 68.4| 71.4  \nHellaSwag 5-Shot| 76.7| 78.7| 83.2| 53.6| 58.5| 49.8| 71.1| 70.4| 78.8  \nANLI 7-Shot| 52.8| 55.0| 58.7| 42.5| 47.1| 48.7| 57.3| 55.2| 58.1  \nGSM-8K 0-Shot; CoT| 82.5| 86.4| 90.8| 61.1| 46.4| 59.8| 77.4| 64.7| 78.1  \nMedQA 2-Shot| 53.8| 58.2| 69.8| 40.9| 49.6| 50.0| 60.5| 62.2| 63.4  \nAGIEval 0-Shot| 37.5| 45.0| 49.7| 29.8| 35.1| 42.1| 42.0| 45.2| 48.4  \nTriviaQA 5-Shot| 64.0| 59.1| 73.3| 45.2| 72.3| 75.2| 67.7| 82.2| 85.8  \nArc-C 10-Shot| 84.9| 90.7| 91.9| 75.9| 78.6| 78.3| 82.8| 87.3| 87.4  \nArc-E 10-Shot| 94.6| 97.1| 98.0| 88.5| 90.6| 91.4| 93.4| 95.6| 96.3  \nPIQA 5-Shot| 84.2| 87.8| 88.2| 60.2| 77.7| 78.1| 75.7| 86.0| 86.6  \nSociQA 5-Shot| 76.6| 79.0| 79.4| 68.3| 74.6| 65.5| 73.9| 75.9| 68.3  \nBigBench-Hard 0-Shot| 71.7| 75.0| 82.5| 59.4| 57.3| 59.6| 51.5| 69.7| 68.32  \nWinoGrande 5-Shot| 70.8| 82.5| 81.2| 54.7| 54.2| 55.6| 65| 62.0| 68.8  \nOpenBookQA 10-Shot| 83.2| 88.4| 86.6| 73.6| 79.8| 78.6| 82.6| 85.8| 86.0  \nBoolQ 0-Shot| 77.6| 82.9| 86.5| \\--| 72.2| 66.0| 80.9| 77.6| 79.1  \nCommonSenseQA 10-Shot| 80.2| 80.3| 82.6| 69.3| 72.6| 76.2| 79| 78.1| 79.6  \nTruthfulQA 10-Shot| 65.0| 68.1| 74.8| \\--| 52.1| 53.0| 63.2| 60.1| 85.8  \nHumanEval 0-Shot| 59.1| 59.1| 54.7| 59.0| 28.0| 34.1| 60.4| 37.8| 62.2  \nMBPP 3-Shot| 53.8| 71.4| 73.7| 60.6| 50.8| 51.5| 67.7| 60.2| 77.8  \n  \n## Software\n\n  * PyTorch\n  * DeepSpeed\n  * Transformers\n  * Flash-Attention\n\n## Hardware\n\nNote that by default, the Phi-3-mini model uses flash attention, which\nrequires certain types of GPU hardware to run. We have tested on the following\nGPU types:\n\n  * NVIDIA A100\n  * NVIDIA A6000\n  * NVIDIA H100\n\nIf you want to run the model on:\n\n  * NVIDIA V100 or earlier generation GPUs: call AutoModelForCausalLM.from_pretrained() with attn_implementation=\"eager\"\n  * CPU: use the GGUF quantized models 4K\n\n  * Optimized inference on GPU, CPU, and Mobile: use the ONNX models 4K\n\n## Cross Platform Support\n\nONNX runtime ecosystem now supports Phi-3 Mini models across platforms and\nhardware. You can find the optimized Phi-3 Mini-4K-Instruct ONNX model here.\n\nOptimized Phi-3 models are also published here in ONNX format, to run with\nONNX Runtime on CPU and GPU across devices, including server platforms,\nWindows, Linux and Mac desktops, and mobile CPUs, with the precision best\nsuited to each of these targets. DirectML support lets developers bring\nhardware acceleration to Windows devices at scale across AMD, Intel, and\nNVIDIA GPUs. Along with DirectML, ONNX Runtime provides cross platform support\nfor Phi-3 across a range of devices CPU, GPU, and mobile.\n\nHere are some of the optimized configurations we have added:\n\n  1. ONNX models for int4 DML: Quantized to int4 via AWQ\n  2. ONNX model for fp16 CUDA\n  3. ONNX model for int4 CUDA: Quantized to int4 via RTN\n  4. ONNX model for int4 CPU and Mobile: Quantized to int4 via RTN\n\n## License\n\nThe model is licensed under the MIT license.\n\n## Trademarks\n\nThis project may contain trademarks or logos for projects, products, or\nservices. Authorized use of Microsoft trademarks or logos is subject to and\nmust follow Microsoft\u2019s Trademark & Brand Guidelines. Use of Microsoft\ntrademarks or logos in modified versions of this project must not cause\nconfusion or imply Microsoft sponsorship. Any use of third-party trademarks or\nlogos are subject to those third-party\u2019s policies.\n\nDownloads last month\n\n    0\n\nSafetensors\n\nModel size\n\n3.82B params\n\nTensor type\n\nBF16\n\n\u00b7\n\nText Generation\n\nInference API (serverless) does not yet support model repos that contain\ncustom code.\n\n## Space using microsoft/Phi-3-mini-4k-instruct 1\n\n## Collection including microsoft/Phi-3-mini-4k-instruct\n\n#### Phi-3\n\nCollection\n\nPhi-3 family of models \u2022 6 items \u2022 Updated about 2 hours ago \u2022 34\n\n", "frontpage": false}
