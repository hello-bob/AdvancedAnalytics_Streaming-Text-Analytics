{"aid": "40059600", "title": "Exploring the Offline Documentation Landscape", "url": "https://mccd.space/posts/search-internet/", "domain": "mccd.space", "votes": 1, "user": "pabs3", "posted_at": "2024-04-17 01:54:50", "comments": 0, "source_title": "Exploring the Offline Doc Landscape", "source_text": "Exploring the Offline Doc Landscape\n\n\u07f8\n\n# Exploring the Offline Doc Landscape\n\nLately, I have been trying to cut down my dependency of using the internet for\nprogramming. I do this in part because:\n\n  * A single google search is surprisingly energy intensive\n  * I find that it forces you to really think and learn. With answers from Stackoverflow not at your fingertips, you really need to understand how things function.\n  * I believe you should be able to just sit somewhere remote without internet and still be able to code. There are plenty of places that still have poor internet connection.\n  * It is a fun intellectual challenge\n\n## Offline Documentation - Linux\n\nFrom my research, there are a few options out there for offline documentation.\nFor Linux and CLI, there are the classics:\n\n  * Info pages\n  * Man pages\n\nIMO info is superior to man, as info supports both info and man docs but info\nhas other features such as linking.\n\n### Searching man pages\n\nIn the terminal, you can lookup documentation of commands and systems using\nman X. You can also search for multiple docs using man -K X.\n\nThere is also apropos, that allows you to search man pages. I find it to be\nquite confusing though, man apropos states that it searches through all docs\nwith regex by default. However, I use sway Wm on my computer, but apropos sway\nyields nothing, man sway works fine, why is that?\n\n### Searching info pages\n\nParticularly useful is info -a X which searches all info pages for X.\n\nTo get started, you can type info info.\n\n### How do I know which one to use?\n\nInfo and man-pages are where you should turn to be able to find documentation\non (good) CLI tools and GNU tools. GNU projects tend to provide excellent\nmanuals that you can search through for AWK, Guix and Emacs.\n\nFinally, I also can recommend the tool tldr pages. I particularly find them\nuseful for VCS, usually it works great with commands like tar and git.\n\n## Offline Docs - Programming\n\nNow what if I am searching for programming specific documentation? Typically\nthis will not be found in the info or man pages (unfortunately :(). Each\nlanguage tends to have their own conventions, some better than others.\n\nThere are a few offline documentation tools out there that I know of:\n\n  * Zeal, a multi-platform GUI interface\n  * Devdocs, a website with offline support\n  * Dash (Mac only)\n\nFor devdocs there is also this nice Emacs package:\n\n  * devdocs.el - Emacs viewer for devdocs\n\nThese tools have a decent collection of docs with varying up-to-date-\ndocumentation, depending on the language. I personally use Devdocs, and found\nit strong for HTML + CSS + Typescript and weak for languages like OCaml and\nTerraform.\n\n## The ecosystem for offline docs could be improved\n\nGoogle is great in that, when you search for docs, you get everything.\nNavigating documentation offline is doable but slightly frustrating.\nDocumentation is so scattered across different sources and it is hard to know\nhow and where to look for them. However, I think with some improvements,\nsearching offline docs could be faster than googling.\n\nThere is an issue in fragmentation of formatting. For Terraform and AWS, the\nonly up-to-date docs I could find were PDF and HTML docs. Searching through\nPDFs to find a specific method or part doesn\u2019t allow you to search through\nmultiple files with decent search.\n\nSearching with man has not worked particularly great for me either. The man -K\ncommand is slow as hell on my computer, and you have to go through each entry\none-by-one rather than it just showing grep results with a small previews and\nletting you pick the docs you want to see.\n\nThere is also an issue with man and info pages that examples tend to be\nsparse. A single example of how to use apropos would have made it obvious for\nme how I am supposed to use it, yet the manual contains no such thing.\n\nWithin Emacs, I also find there are so many commands available for finding\ndocumentation about a single function. There is opening the Emacs manual,\nthere is describe-function, there are the info pages etc. I think this could\nall be consolidated.\n\nIt is unfortunate that there is not a single repository that you can just run\ngrep keyword and search through all documentation sources, info pages, man\npages, devdocs and more. It would save so much energy, and actually speed up\ndevelopment work compared to Google.\n\nBut hey, I have probably missed a lot in my exploration. I would love to know\nwhat workflow people have for searching through documentation offline, feel\nfree to send me an email with tips.\n\n", "frontpage": false}
