{"aid": "40084045", "title": "A POI Database in One Line", "url": "https://www.dbreunig.com/2024/04/18/a-poi-database-in-one-line.html", "domain": "dbreunig.com", "votes": 1, "user": "panzerboy", "posted_at": "2024-04-19 06:48:07", "comments": 0, "source_title": "A POI Database in One Line", "source_text": "A POI Database in One Line | Drew Breunig\n\nA POI Database in One Line | Drew Breunig\n\ndbreunig.com\n\nApr 18, 2024\n\n# A POI Database in One Line\n\nThis week, the Overture Maps Foundation released a handy command-line tool for\ndownloading a subset of the Overture dataset. Usage is simple:\n\n    \n    \n    $ pip install overturemaps $ overturemaps download --bbox=-71.068,42.353,-71.058,42.363 -f geojson --type=building -o boston.geojson\n\nThis command downloads a GeoJSON file containing all the Overture buildings in\na chunk of Boston. We\u2019re outputting GeoJSON to a local file named\nboston.geojson.\n\nWith the new tool, I wanted to revisit the exercise of creating a POI database\nwith Overture. Last time, it took us 162 lines of wrangling with the aws-cli\nand duckdb to get us something usable. How many lines will it take us this\ntime?\n\nIt\u2019s just one line:\n\n    \n    \n    $ overturemaps download --bbox=-71.068,42.353,-71.058,42.363 -f geojsonseq --type=place | geojson-to-sqlite boston.db places - --nl --pk=id\n\nWe made three tweaks to the overturemaps maps call: specifying we want place\ndata, outputting geojsonseq (or new-line delimited GeoJSON), and removing the\noutput arguments. With no output specified, place data is output to stdout,\nwhich we can pipe to Simon Willison\u2019s geojson-to-sqlite, taking care to\nspecify we\u2019re using new-line delimited GeoJSON and that the primary key is id.\n\nOn my machine, this task took ~9 seconds to pull down 1,648 places from the\nglobal Overture places dataset.\n\nBut we can do better! If we wanted to grab all the places in my town, I\u2019d have\nto figure out the bounding box. Which is kind of a pain. Thankfully, LLMs are\nspookily good at producing bounding boxes for towns, cities, states, and\nregions. So lets incorporate Simon\u2019s llm tool to generate our bounding box\n(here, with OpenAI\u2019s gpt-3.5), using command substitution:\n\n    \n    \n    $ overturemaps download --bbox=$(llm 'Give me a bounding box for Alameda, California expressed as only four numbers delineated by commas, with no spaces, longitude preceding latitude.') -f geojsonseq --type=place | geojson-to-sqlite alameda.db places - --nl --pk=id\n\nllm returns \u201c-122.336,37.572,-122.187,37.804\u201d, which is dead on.\n\nThis one-liner downloads 4,005 places and loads them into a sqlite database in\nabout 14 seconds.\n\n2024\n\n", "frontpage": false}
