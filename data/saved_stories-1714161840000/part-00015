{"aid": "40167397", "title": "VueJS and Gleam (Experimental)", "url": "https://github.com/vleam/vleam", "domain": "github.com/vleam", "votes": 2, "user": "linkdd", "posted_at": "2024-04-26 09:30:20", "comments": 0, "source_title": "GitHub - vleam/vleam", "source_text": "GitHub - vleam/vleam\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nvleam / vleam Public\n\n  * Notifications\n  * Fork 0\n  * Star 18\n\n### License\n\nApache-2.0 license\n\n18 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# vleam/vleam\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n1 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\n\\--unsetandOfek Doitchinitial commitApr 23, 2024989d038 \u00b7 Apr 23, 2024Apr 23,\n2024\n\n## History\n\n1 Commits  \n  \n### example\n\n|\n\n### example\n\n| initial commit| Apr 23, 2024  \n  \n### src\n\n|\n\n### src\n\n| initial commit| Apr 23, 2024  \n  \n### test\n\n|\n\n### test\n\n| initial commit| Apr 23, 2024  \n  \n### .envrc\n\n|\n\n### .envrc\n\n| initial commit| Apr 23, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| initial commit| Apr 23, 2024  \n  \n### CHANGELOG.md\n\n|\n\n### CHANGELOG.md\n\n| initial commit| Apr 23, 2024  \n  \n### LICENSE.md\n\n|\n\n### LICENSE.md\n\n| initial commit| Apr 23, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| initial commit| Apr 23, 2024  \n  \n### flake.lock\n\n|\n\n### flake.lock\n\n| initial commit| Apr 23, 2024  \n  \n### flake.nix\n\n|\n\n### flake.nix\n\n| initial commit| Apr 23, 2024  \n  \n### gleam.toml\n\n|\n\n### gleam.toml\n\n| initial commit| Apr 23, 2024  \n  \n### logo.png\n\n|\n\n### logo.png\n\n| initial commit| Apr 23, 2024  \n  \n### manifest.toml\n\n|\n\n### manifest.toml\n\n| initial commit| Apr 23, 2024  \n  \n### package.json\n\n|\n\n### package.json\n\n| initial commit| Apr 23, 2024  \n  \n### pnpm-lock.yaml\n\n|\n\n### pnpm-lock.yaml\n\n| initial commit| Apr 23, 2024  \n  \n### tsup.config.js\n\n|\n\n### tsup.config.js\n\n| initial commit| Apr 23, 2024  \n  \n## Repository files navigation\n\n### THIS IS EXPERIMENTAL SOFTWARE.\n\nYou know where not to use it.\n\n# Vleam\n\nIncrementally incorporate Gleam in Vue projects\n\nVleam (Vue + gLEAM) is a set of tools allowing developers to incrementally\nincorporate the Gleam programming language into their Vue projects.\n\nSimilarly to how Typescript helped Javascript handle what considered a large\napplication in 2016, Gleam can help with what's considered large today. Many\napps already exists that are not going to be rewritten. No reason why they\nshouldn't benefit from useful innovations, especially if that benefit can be\nintroduced slowly and incrementally, and if it means less Typescript.\n\nVleam consists of the following parts:\n\n  1. A Vite plugin that:\n\n  * Allows the use of <script lang=\"gleam\"> in Vue's SFC\n  * Loads vite-gleam to import gleam files in JS/TS\n\n  2. A set of bindings to Vue's APIs.\n\n  3. An LSP that proxies messages between Gleam's LSP for functionality in SFCs. Plugins are availble for Neovim and VSCode.\n\n## Prerequisites\n\n  1. A Vue 3 project using Vite\n  2. Working installation of Gleam's CLI\n\n## Setup\n\nThe following examples use pnpm but yarn or npm should work as well.\n\nFirst, setup a Gleam project in your Vue project's root by using gleam new or\nby manually creating a gleam.toml file. Make sure you set target =\n\"javascript\".\n\nThen, install Vleam:\n\n    \n    \n    pnpm add -D vleam gleam add vleam\n\nAnd add it as the first plugin in vite.config.ts:\n\n    \n    \n    import { vitePluginVueVleam } from \"vleam\"; export default defineConfig({ // ... rest of your config ... plugins: [ // Vleam first vitePluginVueVleam(), // Then the rest vue(), // ... rest of your plugins ... ], });\n\nFor Neovim support, install vleam.nvim.\n\nFor VSCode support, install the vleam plugin.\n\nIf you'd like to get type information for Gleam code imported in Typescript,\ninstall ts-gleam as well:\n\n    \n    \n    pnpm add -D ts-gleam\n\nand make sure gleam.toml has Typescript declarations configured:\n\n    \n    \n    [javascript] typescript_declarations = true\n\nThat's it!\n\n### Usage\n\nTo use Gleam code in TS or JS files, simply import as usual:\n\n    \n    \n    // this imports the function `new_todo` from `models.gleam` import { new_todo } from \"../vleam_todo/models.gleam\";\n\nIn Vue SFCs, you can use Gleam like so:\n\n    \n    \n    // this code is inside <script lang=\"gleam\"> </script> import gleam/option.{Some} import vleam/vue.{type Component, Prop, define_component, setup, with_1_prop} // THIS FUNCTION MUST EXIST pub fn default_export() -> Component { define_component([], [], False) |> with_1_prop(#(Prop(\"initialCount\", Some(0)))) |> setup(fn(props: #(Int), _) { let counter = vue.shallow_ref(props.0) let increment = fn() -> Int { let current_count = vue.shallow_ref_value(counter) counter |> vue.shallow_ref_set(current_count) current_count } #(#(\"counter\", counter), #(\"increment\", increment)) }) }\n\nNote that a Gleam script block inside a Vue SFC, without exception, MUST\ndeclare a public default_export function that returns a Component. The Vite\nplugin assumes it exists and the build will fail without it.\n\nFor more information on Vue bindings in Gleam, see the reference at Hexdocs:\n\nhttps://hexdocs.pm/vleam\n\n### Tips\n\n  * Use absolute paths with Gleam @external. Vite will resolve them relative to its root:\n\n    \n    \n    // Easy @external(javascript, \"/src/composables/useTodoInputEvent\", \"useTodoInputEvent\") fn use_todo_input_event(event: InputEvent) -> Result(Todo, TodoError) // Pain @external(javascript, \"/../../../../composables/useTodoInputEvent\", \"useTodoInputEvent\") fn use_todo_input_event(event: InputEvent) -> Result(Todo, TodoError)\n\n  * If the LSP glitches inside <script lang=\"gleam\">, resave the file. Also try formatting the gleam code then save.\n\n  * Vleam is experimental. Vite may output errors even when things are fine. Try navigating to your Vue app in development mode and read the errors in the browser console for more information.\n\n### Limitations\n\n#### toRefs, reactive support\n\ntoRefs and reactive are not easy to translate into Gleam. Research required.\n\n## About\n\nNo description, website, or topics provided.\n\n### Resources\n\nReadme\n\n### License\n\nApache-2.0 license\n\nActivity\n\nCustom properties\n\n### Stars\n\n18 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\n1 tags\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * Gleam 40.2%\n  * Vue 28.2%\n  * TypeScript 19.4%\n  * JavaScript 6.3%\n  * CSS 4.0%\n  * Nix 1.4%\n  * HTML 0.5%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
