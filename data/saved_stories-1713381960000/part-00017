{"aid": "40063124", "title": "Introducing LaunchFlow (YC W23): A better developer experience on GCP and AWS", "url": "https://www.launchflow.com/blog/introducing-launchflow", "domain": "launchflow.com", "votes": 2, "user": "TankeJosh", "posted_at": "2024-04-17 11:35:10", "comments": 0, "source_title": "Blog | LaunchFlow", "source_text": "Introducing LaunchFlow\n\n###### 2024-04-17\n\n# Introducing LaunchFlow\n\n# A better developer experience on GCP and AWS\n\nWritten By\n\nJosh Tanke\n\nCo-Founder\n\nCaleb Van Dyke\n\nCo-Founder\n\nMichael Noronha\n\nCo-Founder\n\nLaunchFlow is an infrastructure-from-code tool for Python that aims to\ndramatically improve your developer experience on GCP and AWS. We\nautomatically deploy infrastructure to dedicated environments in your cloud as\nyou use it in your code and ensure it's configured for both local development\nand production deployments.\n\nMost teams cobble together their own DevOps automations using a mixture of\nTerraform, Pulumi, custom scripts, and environment variables. These\nautomations are great when they work, but are often brittle and eventually\nbecome the main source of complexity.\n\nWe believe there's a better way.\n\n## The Way\n\nUse LaunchFlow\u2019s Python SDK to import Postgres, Redis, and other cloud\nresources in your Python code, then deploy everything to dedicated\nenvironments in your cloud with a single command.\n\nEverything in the LaunchFlow ecosystem is preconfigured for both local\ndevelopment and production deployments.\n\n### Environments\n\nLaunchFlow deploys and manages your infrastructure inside Environments that\nrun in your own cloud account. These Environments satisfy most compliance\nrequirements by default and are automatically configured for cost, security,\nand reliability.\n\n### Resources\n\nYou can create and connect to cloud Resources in an Environment by simply\nimporting them in your code. Our SDK provides ready-to-use client APIs for\nevery Resource so you can immediately start using them in your application\nboth locally and when deployed.\n\n    \n    \n    import launchflow as lf # Automatically deploys to your cloud account gcp_postgres = lf.gcp.CloudSQLPostgres(\"gcp-postgres\") aws_postgres = lf.aws.RDSPostgres(\"aws-postgres\") # Ready to use with no additional setup gcp_postgres.query(\"SELECT * FROM users\") # FastAPI, Flask, & Django integrations aws_postgres.django_settings()\n\n### Deployments\n\nYou can build and deploy Python applications in the same Environment as your\nResources with a single command. LaunchFlow Services let you deploy your APIs\nto GCP / AWS with all resource permissions and networking settings\nautomatically configured.\n\nWe will be adding Jobs and Notebook deployments in the next couple of months.\n\n## Works anywhere that Python runs\n\nLaunchFlow Resources manage their own configuration and can be plugged into\nany existing Python app. We\u2019re framework-agnostic and work anywhere that\nPython runs - we also include a library of common utilities for building\nFastAPI, Flask, and Django apps on the cloud.\n\nSee example projects in the LaunchFlow examples GitHub repo.\n\n## Why not just use Terraform / Pulumi?\n\nTools like Terraform and Pulumi make it easy to automate cloud infrastructure,\nbut there is still an added cost of maintaining a separate IaC tool and\nkeeping it in sync with your application code.\n\nOn top of this, these tools only help you create the infrastructure, they\ndon't help you actually use it. Engineers can spin up infrastructure in a few\nminutes, but they'll often spend the rest of the day (or longer) stumbling\nthrough docs and blogs trying to figure out how to actually connect it to\ntheir application.\n\nThings only get worse once you add a release pipeline into the mix and now\nneed to figure out how to structure your code to work across multiple\nenvironments.\n\nThis creates a tradeoff between automation and overall system complexity,\nwhich is why many teams put off IaC practices until they can afford a DevOps\nengineer / team to maintain the automations for the company.\n\n## Get started in minutes\n\nSign up and follow the quickstart to launch a new Python application to your\ncloud in minutes.\n\nIf you'd like to see a quick demo, email josh@launchflow.com or schedule a\ncall.\n\nHappy launching! \ud83d\ude80\n\n### Ready to get started?\n\nExplore the docs, or create an account to start building with LaunchFlow. You\ncan also contact the founders directly with any questions.\n\nQuickstart\n\n### Start for free\n\nOur free tier is perfect for small projects and teams.\n\nPricing details\n\n### Start building\n\nDeploy your first system in as little as 10 minutes.\n\nAPI reference\n\nLaunchFlow\n\n\u00a9 2023 LaunchFlow Inc.\n\n#### Product\n\n  * Pricing\n  * Docs\n\n#### Resources\n\n  * Blog\n  * About Us\n  * Support\n\n#### Community\n\n  * Slack\n  * LinkedIn\n  * Twitter\n\n#### Legal\n\n  * Terms of Service\n  * Privacy Policy\n\n", "frontpage": false}
