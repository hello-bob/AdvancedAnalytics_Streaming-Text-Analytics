{"aid": "40062441", "title": "Harness any IaC framework: extensibility model in Azure Deployment Environments", "url": "https://techcommunity.microsoft.com/t5/microsoft-developer-community/harness-any-iac-framework-with-the-new-extensibility-model-in/ba-p/4115817", "domain": "microsoft.com", "votes": 1, "user": "Max_Horstmann", "posted_at": "2024-04-17 09:57:42", "comments": 0, "source_title": "Harness any IaC framework with the new extensibility model in Azure Deployment Environments", "source_text": "Extensibility model in Azure Deployment Environments\n\nTurn on suggestions\n\nShowing results for\n\nShow only | Search instead for\n\nDid you mean:\n\n  * Back to Blog\n  * Older Article\n\nHarness any IaC framework with the new extensibility model in Azure Deployment\nEnvironments\n\n  * Subscribe to RSS Feed\n  * Mark as New\n  * Mark as Read\n  * Bookmark\n  * Subscribe\n  * Printer Friendly Page\n  * Report Inappropriate Content\n\nBy\n\nSagar Chandra Reddy Lankala\n\nPublished Apr 16 2024 12:07 PM 696 Views\n\nListen to the article\n\n00:0000:00\n\n00:00\n\nPowered by\n\nundefined\n\nsagar_lankala\n\nMicrosoft\n\nApr 16 2024 12:07 PM\n\n# Harness any IaC framework with the new extensibility model in Azure\nDeployment Environments\n\nApr 16 2024 12:07 PM\n\nFrom managing complex dependencies and opaque configurations to juggling\ncompatibility issues and security risks, deploying app infrastructure has\nalways been a source of friction. We designed Azure Deployment Environments to\neliminate these complexities and empower developers to deploy app\ninfrastructure in a secure, compliant, and cost-effective way\u2014and we are\ncontinuing to add capabilities that makes the experience more powerful and\nseamless.\n\nToday, we\u2019re excited to announce a new extensibility model, now available in\npublic preview, that empowers customers to customize their deployment\nworkflows using Bicep, Terraform, Pulumi, or any other infrastructure-as-code\n(IaC) framework of their choice. This new model further streamlines app\ninfrastructure provisioning and makes it easier for platform engineers to meet\nthe unique needs of their organization. Read on to learn more about the\nextensibility model and what this means for popular frameworks like Bicep and\nTerraform.\n\n## Expanding support to any IaC framework in Azure Deployment Environments\n\nUp to now, Azure Resource Manager (ARM) was the primary IaC framework used to\ndefine and deploy environments in Azure Deployment Environments. ARM is a\npowerful form of IaC that has many applications across Azure services, but not\nall platform engineers are familiar with scripting ARM files. With Azure\nDeployment Environment\u2019s new extensibility model, platform engineers can now\nuse any IaC framework they want to deploy their environments. Instead of\nhaving to recreate templates in the ARM format, teams can directly bring in\ntheir existing templates or create new templates in a familiar IaC framework.\n\nThe extensibility model also makes it easier to customize your deployments\nbased on your unique organizational needs. For example, with the extensibility\nmodel, you can invoke internal APIs to dynamically retrieve data to configure\nAzure resources during a deployment, or you can invoke custom scripts to\ncreate resources such as namespaces in a shared AKS cluster. This makes it\npossible to add additional logic, validations, or custom actions into\ndeployments via internal APIs and systems. This flexibility ensures that Azure\napp infrastructure can be adapted to diverse scenarios and accommodate unique\nbusiness needs.\n\nUsing the extensibility model is straightforward\u2014All you need to do is\nconfigure your own container image, publish it in a container registry, and\nreference it in the environment.yaml of your environment definition. Check out\nthe MS learn page for more information on how to configure an environment\ndefinition or learn how to build your own custom container image and perform\ncustomized deployments with your own preferred IaC framework.\n\nFigure 1. Extensibility model workflow in Azure Deployment Environments\n\n## Get started today with a standard container image for Bicep\n\nIn addition to introducing the extensibility model for Azure Deployment\nEnvironments, we\u2019re also excited to announce additional support for popular\nIaC frameworks. Bicep, for instance, offers a first-class authoring experience\nwith concise syntax, reliable type safety, and support for code reuse. To make\nit easier for customers to use Bicep in Azure Deployment Environments, we\u2019re\nexcited to announce the public availability of a sample Bicep container image.\n\nWhile customers can also build their own custom container images, this sample\nBicep image helps customers to get started quickly. Platform engineers simply\nset the identifier to Bicep in the environment.yaml\u2019s runner property, and the\nservice will automatically use the standard image to execute Bicep\ndeployments. You can directly use Bicep templates in Deployment Environments\ntoday by leveraging the standard Bicep image or refer to the documentation on\nhow to build a container image for Bicep deployments.\n\n## Execute your deployments using Terraform\n\nTerraform is one of most popular IaC frameworks and customers have been asking\nfor Terraform support in Azure Deployment Environments since the service was\nannounced. Today, we\u2019re excited that the new extensibility model provides a\nway to directly use Terraform templates in Azure Deployment Environments. Read\nto learn more about configuring a container image for executing deployments\nusing Terraform.\n\n## Get started with Azure Deployment Environments today\n\nYou can get started with Azure Deployment Environments today, for free and pay\nonly for the Azure resources you create as part of your environments, such as\ncompute, storage, and networking. We believe that the new extensibility model\nin Azure Deployment Environments paves the way to more flexible, customized,\nand accelerated deployments and we look forward to learning about the exciting\nways in which you will leverage such flexibility. Please feel free to share\nyour thoughts by directly commenting on this blog post or reaching out to us\nvia Azure Deployment Environments Support.\n\nSagar Lankala\n\nSenior Product Manager, Developer Division\n\nSagar Chandra Reddy Lankala\n\n3 Likes\n\nLike\n\nYou must be a registered user to add a comment. If you've already registered,\nsign in. Otherwise, register and sign in.\n\n  * Comment\n\nCo-Authors\n\nsagar_lankala\n\nVersion history\n\nLast update:\n\nApr 16 2024 01:32 PM\n\nUpdated by:\n\nsagar_lankala\n\nLabels\n\n  * Developer 159\n  * Get Started 41\n\n## Share\n\n  * Share to LinkedIn\n  * Share to Facebook\n  * Share to Twitter\n  * Share to Reddit\n  * Share to Email\n\nSkip to Primary Navigation\n\nYour Privacy Choices\n\nAuto-suggest helps you quickly narrow down your search results by suggesting\npossible matches as you type.\n\nAuto-suggest helps you quickly narrow down your search results by suggesting\npossible matches as you type.\n\n", "frontpage": false}
