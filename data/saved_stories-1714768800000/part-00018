{"aid": "40247061", "title": "Principal Engineer", "url": "https://blog.alexewerlof.com/p/principal-engineer", "domain": "alexewerlof.com", "votes": 1, "user": "mooreds", "posted_at": "2024-05-03 12:44:59", "comments": 0, "source_title": "Principal Engineer", "source_text": "Principal Engineer - Alex Ewerl\u00f6f Notes\n\nShare this post\n\n#### Principal Engineer\n\nblog.alexewerlof.com\n\n#### Discover more from Alex Ewerl\u00f6f Notes\n\nTechnical Leadership, System Reliability Engineering, Growth\n\nOver 8,000 subscribers\n\nContinue reading\n\nSign in\n\nTechical Leadership\n\n# Principal Engineer\n\n### The level after staff engineer\n\nAlex Ewerl\u00f6f\n\nApr 15, 2024\n\n27\n\nShare this post\n\n#### Principal Engineer\n\nblog.alexewerlof.com\n\n2\n\nShare\n\nIn Senior Engineer to Staff Engineer, we made an argument that the change in\nthe title signifies a change in responsibilities and new skill requirements.\n\nIn beyond Staff Engineer, we went through the differences between Staff\nEngineer and Senior Staff Engineer. The key takeaway from that article is that\nSenior Staff Engineer is like Staff but at scale.\n\nAlex Ewerl\u00f6f Notes is a reader-supported publication. To receive new posts and\nsupport my work, consider becoming a free or paid subscriber.\n\nWhat about the level that comes after it? Different companies have different\nnames, but in this article, we refer to it as Principal Engineer.\n\nJust as going from Senior Engineer to Staff Engineer required a new skill\n(soft skills), the Principal Engineer requires a new skill: business skills.\n\nBut what exactly is business skill? How can you master it? And why is it\nimportant for an engineer to think about business?\n\nI\u2019m going to use this career ladder which I helped develop:\n\nFirst, a few caveats:\n\n  * Theoretically the career ladder maps exactly to the skill level. In practice, however, there are many flaws:\n\n    * The recruitment process is broken\n\n    * The applicant's negotiation skill or the urge to recruit them (e.g. when the company is trying to steal talent from rivals) can put someone in a higher level than their skill\n\n    * There's no promotion process\n\n    * The promotion process is broken\n\n    * The promotion committee is biased\n\n    * The perceived impact is different than the actual impact\n\n    * There may be personal favors or grudges at play\n\n    * You may need to have for \u201cyears\u201d even though year is not a unit of measurement for experience\n\n  * The number of levels in a given ladder depends on the size of the company. While startups suffer from the title inflation phenomenon, large enterprises may not have enough titles to signify skill differences or justify the pay raise because the job ladder has a low resolution.\n\n  * Some companies (e.g. AWS) don\u2019t have Staff Engineer in their career ladder and instead call it Principal Engineer. Regardless of the name, we\u2019re talking about a level that\u2019s 2-3 levels after Senior Engineer.\n\n  * Hard, soft and business skills are not exclusive. A junior engineer may have a great sense of the business, it just may not be a key part of their job (i.e., it usually doesn\u2019t impact their hiring). Moreover, a Principal Engineer without up-to-date hard skills (e.g., programming) is just as irrelevant.\n\n  * Promotions often lag behind your demonstrated skills.\n\n  * Some companies treat the career level as pay-bands not a way to set examples, expectations and responsibilities. For example, if someone\u2019s salary expectations are higher than the Senior Staff level, they may get the Principal Engineer role even though their skill level and eventual impact is at the lower level. This happens for example when the company badly wants someone (e.g., to steal key people from competitors and temporarily cripple their ability to ship products).\n\n  * Being a level above Staff Engineer, the Principal Engineer has:\n\n    * Even longer strategic time horizon\n\n    * Even larger organizational scope and areas of responsibility\n\n    * Even higher risk of becoming ivory tower and irrelevant! \ud83d\ude09Preening is high visibility low-impact work. Due to the visibility of the role Principal Engineers are even more susceptible to this kind of task than Staff Engineers.\n\n    * Even more need to communicate complex technical topics to non-technical audience and vice versa (communicate complex business topics to technical audience)\n\n    * Even more reliance on alternative leadership methods without formal mandate\n\n    * Even more T-POP \ud83c\udf6d\n\n#\n\nWhat are business skills?\n\nIn simple terms, if the code is a technical solution to a product problem,\nbusiness is how that product makes money. It involves:\n\n  * The customers, their needs, alternative choices, and key metrics\n\n  * Market trends, competition landscape, marketing, and the impact of external factors like economy, politics, etc.\n\n  * The revenue stream, payment/subscription/sale flows\n\n  * Strategic investments or decommissioning of technical solutions regardless of their engineering ingenuity \ud83d\ude22\n\n  * The legal and compliance aspects as well as how to enforce them in technical solutions\n\nMore specifically, we\u2019re talking about how the company makes a profit: the\ndifference between what the customers pay and what the business has to pay to\nrun (e.g. cost of personnel, cloud, manufacturing, equipment, tax, office\nspace, coffee machines\u2615).\n\nRevenue is the income generated through business operations, while profit\ndescribes net income after deducting expenses from earnings.\n\nMost engineers aren\u2019t concerned with either revenue or profit. Some are\nconcerned with revenue, but only a few understand and influence the profit.\n\nThere\u2019s nothing unique about the business skill per se, but what really gives\nthe Principal Engineer a superpower is to connect the business to the\ntechnical solutions:\n\nHow does Principal Engineer connect business to engineering?\n\n  * Being the voice of the customer in the engineering room and the voice of engineering in the business room\n\n  * Aligning business strategy, product strategy, engineering strategy, and technical strategy\n\n#### Strategy basics\n\nAlex Ewerl\u00f6f\n\n\u00b7\n\nDecember 5, 2022\n\nRead full story\n\n  * The ability to create new technical products that address novel customer needs\n\n  * Defining the technical optimization priorities (e.g. Service Level Indicators)\n\n  * Cost optimization to map the business investment into different areas to the return of investment (ROI)\n\n  * Defining and refining the non-functional requirements (NFR) of different parts of an architecture (e.g. amount of load expected on an online toilet paper shop right before the pandemic)\n\nYou may argue that every engineer has these responsibilities to some extent\nand you are correct. Just as soft skills are not exclusive to Staff Engineer,\nbusiness skills are not exclusive to Principal Engineer either.\n\nExpanding the diagram that was used in a previous article, all career levels\nrequire that skill to some degree:\n\nHowever, just as soft skills are key to being an impactful Staff Engineer,\nbusiness skills are key to being an impactful Principal Engineer.\n\n#\n\nHow to speak business?\n\nJust like any skill, business is learnable.\n\nSome would argue that soft skill is something you\u2019re born with, but as an\nintrovert who works as a Senior Staff Engineer, I\u2019d argue otherwise.\n\nIt\u2019s about finding the right balance. You certainly don\u2019t need to be as\nbusiness heavy as someone who does it as a full-time job without having to\nbother with technical and engineering aspects (e.g. CEO), but you need to be\nmuch better than the average Senior or Staff Engineer.\n\n###\n\n1\\. Develop Business Acumen\n\n  * Learn the Business Goals: Understand the company's overall strategy, target market, and financial objectives. This will help translate technical decisions into business impact. This part takes time, especially if you\u2019re recruited as Principal Engineers instead of internal promotion. 3L is by far the best advice I got for this phase.\n\n#### 3L\n\nAlex Ewerl\u00f6f\n\n\u00b7\n\nMar 4\n\nRead full story\n\n  * Business Skills Education: Take courses or attend workshops on business fundamentals like finance, marketing, and product management.\n\n  * Business Reading: Stay updated on industry trends and read business publications relevant to your company's domain and industry. You may find it daunting to go too deep into this area while keeping your main advantage (technical literacy). Again, it\u2019s about finding a balance, not being perfect in an area you\u2019re not formally trained for.\n\n  * Strategic Initiatives: Volunteer for cross-functional projects that involve both technical and business teams. Many years ago, I volunteered to build a tool for the legal team at a company, which catapulted my understanding of the legislative aspects of that business. I have to admit the initial learning curve was steep because we didn\u2019t even have a common language at the start. \ud83d\ude04I was talking Markdown and Mustache, they were talking PDF and price interpolation!\n\n###\n\n2\\. Communication and Collaboration\n\n  * Learn to Speak the Business Language: Learn to communicate technical concepts in clear, concise, and business-oriented terms. Every company has its own jargon and acronyms when talking business. Literacy in this language distinguishes someone who is struggling to make sense of how money is made vs. someone who is fluent and confident with business.\n\n  * Regular Interaction: Schedule meetings with business stakeholders like high level product managers, sales, marketing, and customer support teams to understand their objectives, challenges and opportunities.\n\n  * Shadowing: Shadow business leaders to observe their decision-making processes and gain insights into business priorities. As a principal engineer, you may get easier access to the C-level room or organizational leadership (depending on the size of the company). You may be invited to represent the engineers in the leadership room, but it\u2019s an equally important opportunity to learn how \u201cbusinesspeople\u201d talk and what are the key criteria when taking decisions.\n\n###\n\n3\\. Technical Expertise in a Business Context\n\n  * Focus on \"Why\" Before \"How\": When proposing technical solutions, explain how they address specific business problems and contribute to the overall goals. Arguably this is a skill that comes handy at much lower levels in the career ladder, but for Principal Engineer, it\u2019s crucial to have a solid understanding of the business and use that understanding to influence technical decisions. For example, the NFR (non-functional requirements) of a given architectural problem is notoriously hard to figure out without knowing the size of the market, and external factors.\n\n  * Cost-Benefit Analysis: Evaluate technical decisions considering not just technical feasibility but also factors like development time, maintenance costs, and return on investment (ROI). Again, this is something you need to think about at lower levels, but for companies that have the role of Principal Engineer, you\u2019d expect to find solid answers from them.\n\n  * Metrics and Measurement: Translate Technical Metrics into Business Impact. Align technical efforts with measurable business outcomes like customer satisfaction, revenue growth, or cost reduction. My favorite tool is Service Levels because it aligns autonomous teams in a measurable way.\n\n#### Why care about service level?\n\nAlex Ewerl\u00f6f\n\n\u00b7\n\nMay 31, 2023\n\nRead full story\n\n  * Regular Reporting: Create reports that highlight how technical projects, initiatives, strategies and improvements impact business metrics. Present these findings in terms understandable to non-technical stakeholders. Personally, I find this aspect the most interesting part of working with metrics. Sometimes, the act of trying to generate a metric reveals that I was measuring the wrong thing. A good rule of thumb is to ask is it an output metric or outcome metric? Output is all about WHAT we do. Outcomes align with WHY we do what we do. It's a layer deeper. Unfortunately, the output is often abused as a proxy metric to measure outcome because impact is hard to measure. Especially when\n\n    * Impact isn't clearly defined\n\n    * Impact is a delayed metric\n\n    * Impact isn\u2019t quantifiable\n\n    * Leadership would rather chase a vanity metrics and have the illusion of control\n\n###\n\n4\\. Focus on Customer-Centric Development\n\n  * Engage with End Users: Understand the customer's perspective by participating in user research (UX), customer feedback sessions, or even direct interactions like customer support calls. Regardless of if your company has a B2B or B2C model (or both), there\u2019s someone who pays the money (stakeholder) and someone who uses the technical solution (service consumer). Being the customer\u2019s voice is a superpower in the engineering and high-level leadership rooms. Personally, I was fortunate enough to work as a UXer early in my career which later led me to work as a front-end developer. I may not do user studies every day, but that period (and self-learning) helps me ask the right questions and confidently speak on behalf of the consumers or stakeholders when they\u2019re not in the room. You don\u2019t have to be a UXer, but having a basic understanding of the concepts goes a long way. My favorite book on the topic: don\u2019t make me think\n\n  * Adopt a Problem-Solving Mindset: Approach technology from the standpoint of solving customer problems, which often leads to innovations that drive business growth.\n\n###\n\n5\\. Operational Efficiency\n\n  * Understand Cost center vs profit center: Knowledge of how different business operations work and how technology can improve efficiency and effectiveness.\n\nGergely Orosz\n\ntouched on that back in 2022 (paywalled).\n\n  * Cost optimization: optimizing workflows, reducing costs of operations (cloud anyone?), and improving service delivery through technical solutions. Like any optimization effort, cost optimization requires good data. If you don\u2019t have data, start there. See if you can gather accurate data about the cost of running the technical solutions but also how that cost maps to the revenue generated. Once I was doing this exercise and found an entire team of consultants who\u2019ve been paid for 10 months to maintain a system that got a grant total of ZERO request per month! The service was sunsetted, so either they didn\u2019t get a memo or decided to keep their mouth shut and wallets full. \ud83d\udcb8\n\nMy monetization strategy is to give away most content for free. However, these\nposts take anywhere from a few hours to days to draft, edit, rethink,\nillustrate, and publish. I pull these hours from my private time, vacation\ndays and weekends.\n\nYou can support me by sparing a few bucks for a paid subscription. As a bonus\nyou get access to my WIP book Reliability Engineering Mindset. Right now, you\ncan get 20% off via this link.\n\nIf you can\u2019t spare the money for whatever reason, sharing this article within\nyour circles would also help. Thanks in advance.\n\nShare\n\nAlex Ewerl\u00f6f Notes is a reader-supported publication. To receive new posts and\nsupport my work, consider becoming a free or paid subscriber.\n\n27 Likes\n\n\u00b7\n\n6 Restacks\n\n27\n\nShare this post\n\n#### Principal Engineer\n\nblog.alexewerlof.com\n\n2\n\nShare\n\n2 Comments\n\nAkash MukherjeeLeadership LettersApr 16Liked by Alex Ewerl\u00f6fA great piece,\nAlex.It was an interesting way of thinking with business problem. I have never\nthought about this, maybe because it's distant for me, but it's never too\nearly.This post served as an inspiration for me, as I take very much interest\nin business and profit, it might be something I should lean into more and\nmore.Expand full commentLike (1)ReplyShare  \n---  \n  \n1 reply by Alex Ewerl\u00f6f\n\n1 more comment...\n\nWe invested 10% to pay back tech debt; Here's what happened\n\nWhy and how we continuously invested the team bandwidth to pay back tech debt\nand what were the results?\n\nJan 9, 2023 \u2022\n\nAlex Ewerl\u00f6f\n\n46\n\nShare this post\n\n#### We invested 10% to pay back tech debt; Here's what happened\n\nblog.alexewerlof.com\n\n2\n\n6 Archetypes of Broken Ownership\n\nIn the ownership trio, we discussed 3 elements: Knowledge, Mandate and\nResponsibility. This article digs into various broken ownership scenarios\nwhere...\n\nAug 1, 2023 \u2022\n\nAlex Ewerl\u00f6f\n\n47\n\nShare this post\n\n#### 6 Archetypes of Broken Ownership\n\nblog.alexewerlof.com\n\n7\n\nStrategy basics\n\nWhy strategy is important and what does it mean? The first in a series about\nWHY, WHAT and HOW of developing a tech strategy.\n\nDec 5, 2022 \u2022\n\nAlex Ewerl\u00f6f\n\n36\n\nShare this post\n\n#### Strategy basics\n\nblog.alexewerlof.com\n\n5\n\nReady for more?\n\n\u00a9 2024 Alex Ewerl\u00f6f\n\nPrivacy \u2219 Terms \u2219 Collection notice\n\nStart WritingGet the app\n\nSubstack is the home for great culture\n\nShare\n\n## Create your profile\n\n## Only paid subscribers can comment on this post\n\nAlready a paid subscriber? Sign in\n\n#### Check your email\n\nFor your security, we need to re-authenticate you.\n\nClick the link we sent to , or click here to sign in.\n\n", "frontpage": false}
