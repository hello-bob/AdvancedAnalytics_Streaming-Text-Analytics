{"aid": "40050925", "title": "Lions Operating System: Secure, fast, adaptable", "url": "https://trustworthy.systems/projects/LionsOS/", "domain": "trustworthy.systems", "votes": 1, "user": "snvzz", "posted_at": "2024-04-16 12:02:35", "comments": 0, "source_title": "Lions Operating System | TS", "source_text": "Lions Operating System | TS\n\nSkip to main content\n\n# Trustworthy Systems\n\nOur Partners\n\n# Lions Operating System\n\n## Secure, fast, adaptable!\n\n### Aim\n\nA highly modular operating system for real-world embedded, IoT and\ncyberphysical systems that sets new standards in performance, verifiability,\nand adaptability to a wide range of use cases.\n\n### Problem\n\nThe seL4 microkernel is unrivalled in both its assurance as well as\nperformance. However, its API is inherently very low-level and hard to use,\nand the microkernel (by design) does not provide the functionality expected\nfrom an operating system.\n\n### Solution\n\nWe are addressing this by developing the Lions OS whose design is driven by\nthe KISS principle: \u201cKeep it simple, stupid!\u201d This calls for a highly modular\ndesign, where each component provides the absolute minimum functionality the\nuse case requires, an approach we call radical simplicity. This simplicity is\nnot only good for robustness, it also enables push-button verification of\ncomponents. Radical simplicity calls for abandoning the traditional quest for\nuniversal policies, and instead providing use-case\u2013specific policies. The\nsystem can adapt to a different use case by replacing components with\nimplementations optimised for the new use case. The simplicity also enables\nhigh performance by minimising the amount of code that executes to achieve a\nspecific function.\n\n## Name\n\nLions OS is named in honour of the late UNSW professor John Lions, known as\nthe author of the Lions Book, which taught Unix to generations of programmers.\n\nThe original Unix was known for its clean and lean design, and a strong\ndeparture from prior OS designs. At TS we feel that the OS world has lost its\nway by forgetting the lessons from Unix, resulting in mushrooming complexity,\nendless critical vulnerabilities, and performance issues that are addressed by\nhacks and workarounds that further increase complexity. With Lions OS, we are\nguided by some of the principles of Unix, thus re-thinking the fundamentals of\nOS design.\n\n### Approach\n\nWe are designing a set of system services, each made up of simple building\nblocks that make best use of the underlying seL4 kernel and its features,\nwhile achieving superior performance. The building blocks are simple enough\nfor automated verification tools (SMT solvers) to prove their implementation\ncorrectness. We are furthermore employing model checkers to verify key\nproperties of the interaction protocols between components.\n\nCore to this approach are simple, clean and lean designs that can be well\noptimised, use seL4 to the best effect, and provide templates for proper use\nand extension of functionality. Achieving this without sacrificing\nperformance, while keeping the verification task simple, poses significant\nsystems research challenges.\n\n### Building blocks\n\nThe following sub-projects presently form part of Lions OS:\n\n  * the seL4 Microkit, a lean framework for developing statically-architected OS personalities for seL4;\n  * the seL4 Device Driver Framework (sDDF), a set of interface specifications, device-driver template, control and data plane implementation, and tools for writing device drivers and providing device virtualisation for high-performance I/O on seL4.\n\n## Support\n\nWe gratefully acknowledge the financial support for the development of Lions\nOS by:\n\n  * UK's National Cyber Security Centre (NCSC)\n  * DARPA under the PROVERS program\n  * NIO America\n  * The John Lions Fund via the John Lions Chair\n\n## Collaboration\n\n  * Our core collaboration partner under the DARPA PROVERS program is main contractor Collins Aerosapce.\n\n## Documentation\n\nLions OS has its own documentation site.\n\n## Availability\n\nLions OS is available from the TS GitHub under a BSD license.\n\n### Latest News\n\n  * 2024-03-27: TS releases version 0.1.0 of Lions OS on the TS GitHub.\n  * 2023-11-30: NIO provides financial support for the development of Lions OS.\n  * 2023-09-19: Gernot Heiser discusses Lions OS at his TS R&D Update at the seL4 Summit.\n\n### Contact\n\n  * Gernot Heiser, gernot<at>unsw.edu.au\n\n## People\n\n### Current\n\n  * Alwin Joshy\n  * Courtney Darville\n  * Eric Chan\n  * Gernot Heiser\n  * Isitha Subasinghe\n  * Ivan Velickovic\n  * James Archer\n  * Jingyao Zhou\n  * Krishnan Winter\n  * Mathieu Paturel\n  * Peter Chubb\n  * Robert Sison\n  * Ryan Shi\n\n|\n\n### Past\n\n  * Lucy Parker\n  * Matthew Rossouw\n\n  \n---|---  \n  \n### Publications\n\nLucy Parker The seL4 device driver framework Talk at the 5th seL4 Summit,\nSeptember, 2023  \n---  \nIvan Velickovic The seL4 Microkit Talk at the 5th seL4 Summit, September, 2023  \nMathieu Paturel, Isitha Subasinghe and Gernot Heiser First steps in verifying\nthe seL4 Core Platform Asia-Pacific Workshop on Systems (APSys), Seoul, KR,\nAugust, 2023  \nGernot Heiser R&D update from Trustworthy Systems Talk at the 5th seL4 Summit,\n2023  \nGernot Heiser, Lucy Parker, Ivan Velickovic, Peter Chubb and Ben Leslie Can we\nput the \"S\" into IoT? IEEE World Forum on Internet of Things, Yokohama, JP,\nNovember, 2022  \n  \n\u00a9 2024 Trustworthy Systems\n\n", "frontpage": false}
