{"aid": "40183369", "title": "Exploring Rust and SDL2 and Emscripten: A Showcase of SDL2 Extensions", "url": "https://github.com/Xevion/rust-sdl2-emscripten", "domain": "github.com/xevion", "votes": 1, "user": "Xevion", "posted_at": "2024-04-27 20:47:31", "comments": 0, "source_title": "GitHub - Xevion/rust-sdl2-emscripten: A full example of Rust + SDL2, in a Web-enabled cross-platform demo.", "source_text": "GitHub - Xevion/rust-sdl2-emscripten: A full example of Rust + SDL2, in a Web-\nenabled cross-platform demo.\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nXevion / rust-sdl2-emscripten Public\n\n  * Notifications\n  * Fork 0\n  * Star 2\n\nA full example of Rust + SDL2, in a Web-enabled cross-platform demo.\n\nxevion.github.io/rust-sdl2-emscripten/\n\n2 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# Xevion/rust-sdl2-emscripten\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n1 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nXevionfix: use powershell environment variable syntaxApr 24, 2024a602d64 \u00b7 Apr\n24, 2024Apr 24, 2024\n\n## History\n\n100 Commits  \n  \n### .cargo\n\n|\n\n### .cargo\n\n| Add SDL GFX usage| Apr 24, 2024  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| fix: use powershell environment variable syntax| Apr 24, 2024  \n  \n### .vscode\n\n|\n\n### .vscode\n\n| SDL2_TTF; FPS Counter, downgrade EMSDK to 3.1.43| Apr 15, 2024  \n  \n### assets\n\n|\n\n### assets\n\n| Change project name to 'spiritus'| Apr 24, 2024  \n  \n### scripts\n\n|\n\n### scripts\n\n| Change project name to 'spiritus'| Apr 24, 2024  \n  \n### src\n\n|\n\n### src\n\n| fix: volume println, canvas resizing| Apr 24, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Add console window hiding for Windows| Apr 24, 2024  \n  \n### Cargo.lock\n\n|\n\n### Cargo.lock\n\n| try: MacOS build with package version & target interpolation| Apr 24, 2024  \n  \n### Cargo.toml\n\n|\n\n### Cargo.toml\n\n| try: MacOS build with package version & target interpolation| Apr 24, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| Update README for Automatic Builds Goal| Apr 24, 2024  \n  \n### package.json\n\n|\n\n### package.json\n\n| Add tailwindcss, revamp index with details| Apr 24, 2024  \n  \n### pnpm-lock.yaml\n\n|\n\n### pnpm-lock.yaml\n\n| Add tailwindcss, revamp index with details| Apr 24, 2024  \n  \n### postcss.config.js\n\n|\n\n### postcss.config.js\n\n| Add tailwindcss, revamp index with details| Apr 24, 2024  \n  \n### tailwind.config.js\n\n|\n\n### tailwind.config.js\n\n| Add tailwindcss, revamp index with details| Apr 24, 2024  \n  \n## Repository files navigation\n\n# rust-sdl2-emscripten\n\nA demo project to explore Rust + SDL2 + Emscripten.\n\n  * Cross-platform build scripts with GitHub Actions for Windows, Linux, and Web Assembly.\n\n    * Includes special packaging for Windows for DLLs\n  * All SDL2 extensions enabled (Image, Mixer, TTF, GFX) and used in the project.\n  * Emscripten: Asyncify for the game loop, Javascript Interop, extern functions & hooks.\n\n### Goals\n\n  * Emscrimpten Looping Method\n\n    * Asyncify\n    * emscripten_set_main_loop\n  * Automatic Builds\n\n    * Web Assembly (Emscripten)\n    * Windows\n    * Linux\n    * MacOS\n  * SDL2 Extensions\n\n    * Image\n    * Mixer\n    * TTF\n    * GFX\n  * Javascript Interop\n\n    * LocalStorage\n    * Fetch\n  * Resizable Window\n\n### Considerations\n\nThis project took a lot of work to get 'right', and it's still quite hacky.\n\n  * It's not possible to quickly get accurate non-monotonic timings with Emscripten, as Instant::now() is not broken (seconds only), and emscripten_get_now() is only accurate to milliseconds. The FPS counter shows inconsistent (but stable) readings on different browsers for this reason.\n  * emscripten_set_main_loop was quite difficult for me to use due to static lifetime issues, perhaps this is just a skill issue on my part, but I found it easier to use Asyncify initially.\n\nIf you're new to Rust + SDL2 and are interested in Emscripten, I would\nrecommend reconsidering your need for Web builds, focusing entirely on Web-\nonly, or using a different language/framework. Native C++ with SDL2 is likely\nmore stable and easier to work with.\n\nWhile this combination and project is possible, it's not easy,\ndocumentation/examples are sparse, and the tooling is not as mature as other\nlanguages.\n\nMy worry with a bigger project is that the complexity of the system will grow\nexponentially, and the time spent on debugging and fixing issues will be much\nhigher than the time spent on actual development.\n\n### Notes\n\n  * build.sh is the main build script for the Web Assembly target. It's intended for use by both GitHub Actions and local development.\n\n    * Flags are available to modify the behavior. Inspect the script for more information.\n  * Conditional compliation is used often in this project to provide different behavior, mostly for Emscripten.\n\n    * Sleeping and Timing is handled by Emscripten's extern functions, while native builds use std::thread::sleep.\n    * Store is a simple wrapper around LocalStorage for Emscripten, and has a Dummy implementation for native builds (for now).\n  * config.toml is used to provide the special flags for the Emscripten target.\n\n    * ASYNCIFY is used to enable the Asyncify feature, which is required for the game loop. Learn more here.\n    * ALLOW_MEMORY_GROWTH seems to be necessary for SDL2 mostly. It allows the memory to grow dynamically, which is required for SDL2 extensions. Perhaps this can be disabled, but I haven't tried yet.\n    * USE_SDL is required for SDL2.\n    * USE_SDL_IMAGE is required for using SDL2's Image extension.\n    * USE_SDL_TTF is required for using SDL2's TTF extension.\n    * USE_SDL_MIXER is required for using SDL2's Mixer extension.\n    * USE_SDL_GFX is required for using SDL2's GFX extension.\n    * USE_OGG is required for using OGG files with SDL2's Mixer extension.\n    * SDL2_IMAGE_FORMATS is required for specifying the image formats to load with SDL2's Image.\n    * SDL2_MIXER_FORMATS is required for specifying the audio formats to load with SDL2's Mixer.\n    * Please check config.toml for an example of how to specify it, as well as the format of each flag; some take a list of values or a version number, or just 1.\n  * SDL2, as well as all the extensions require .lib files for compilation, and .dll files for execution on Windows.\n\n    * Check the workflow file for details on what this means specifically.\n\n      * While all extensions could be compiled using vcpkg, downloading the devel libraries seems to be fastest. Although, they might be debug artifacts...\n    * Please note that SDL2_gfx is different in that it is not managed by the SDL working group, and thus does not provide official releases.\n\n      * Additionally, there are separate SDL (v1) and SDL2 versions of SDL_gfx, and of course for added confusion, SDL_gfx (for SDL v1), is currently on v2.x.x\n\n### Resources\n\nA list of various resources I relied on and studied while building this\nproject. Organized in descending 'usefulness'.\n\n  * build.sh - One of the core files in this repository, it builds the project with Emscripten. Note all the flags available for modifying the behavior of the build.\n  * aelred/tetris\n\n    * Contains multiple sub-projects, including a web server. Uses SDL2 TTF & Mixer.\n    * Most recent development (3 months ago).\n    * Custom font loading, packed inside the binary (WASM) instead of .data file, or external file.\n    * Advanced Emscripten bindings for Javascript (fetch, GET/POST)\n    * No Asyncify, uses emscripten_set_main_loop callback instead.\n    * See the REST functions for Emscripten.\n  * gregbuchholz/RuSDLem\n\n    * One of the few with a demo available.\n  * tung/ruggrogue\n\n    * A very large game example, great codebase, documentation, online player.\n  * KyleMiles/Rust-SDL-Emscripten-Template/\n\n    * Has some special javascript interop code\n  * hello-rust-sdl2-wasm\n  * A bit of a weird repository, I'm not sure that the creator knows Rust that well, but it compiles.\n  * Note that the asmjs-unknown-emscripten target is deprecated, and you should use wasm32-unknown-emscripten instead. You'll need to change all the files, flags etc. to make it match.\n  * arskiy/chess\n\n    * Image usage, decent code example\n    * Has more advanced javascript config and examples to look at.\n  * deckarep/flappy-rust\n\n    * Image + Mixer Usage, possibly GFX & TTF\n  * coderedart/rust-sdl2-wasm\n\n    * This is mostly interesting because it has an egui implementation; egui is very cool for demos, developer tooling, debug menus, and so on.\n    * The only thing I don't understand is where SDL2 is; there is almost no real code referencing SDL2 except a SDL2Backend provided by the egui crate. Weird.\n    * While devoid of anything particularly interesting for my own needs, it has a demo here\n\n## About\n\nA full example of Rust + SDL2, in a Web-enabled cross-platform demo.\n\nxevion.github.io/rust-sdl2-emscripten/\n\n### Topics\n\nrust demo cross-platform continuous-integration sdl2 webassembly sdl2-mixer\nsdl2-ttf sdl2-image sdl2-gfx\n\n### Resources\n\nReadme\n\nActivity\n\n### Stars\n\n2 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases 1\n\nv0.2.0 Latest\n\nApr 24, 2024\n\n## Languages\n\n  * Rust 64.2%\n  * HTML 22.8%\n  * Shell 9.1%\n  * SCSS 2.3%\n  * JavaScript 1.6%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
