{"aid": "40187288", "title": "The Problem with Education", "url": "https://newsletter.ozwrites.com/p/the-problem-with-education", "domain": "ozwrites.com", "votes": 1, "user": "ingve", "posted_at": "2024-04-28 09:37:14", "comments": 0, "source_title": "The problem with education", "source_text": "The problem with education - by Oz Nova - Oz\u2019s Newsletter\n\n# Oz\u2019s Newsletter\n\nShare this post\n\n#### The problem with education\n\nnewsletter.ozwrites.com\n\n# The problem with education\n\n### And a solution: problems\n\nOz Nova\n\nApr 27, 2024\n\n25\n\nShare this post\n\n#### The problem with education\n\nnewsletter.ozwrites.com\n\n1\n\nShare\n\nIf you want to melt iron, you need an extremely hot fire. This wasn\u2019t possible\nfor most of history, so iron was wrought (literally \u201cworked\u201d) by laboriously\nbeating at spongy lumps of iron and slag produced in a basic furnace called a\nbloomery.\n\nThis eventually changed with the invention of the blast furnace, but\nunfortunately the resulting cast iron was too brittle for many applications.\nIt wasn\u2019t until the development of the Bessemer Process in the 1850s that we\ncould control the carbon content of molten iron reliably enough to make steel.\n\nWorking an iron bloom. Seems like hard work but what other choice is there?\nImage credit: metalcastinginstitute.com\n\nWhat I find fascinating about this history is that for 3,000 years, ironsmiths\nwere just banging away at slag, oblivious to the fact that we would eventually\nfind a much better method. This is the crazy thing about technology. There can\nbe an obvious and universal way of doing something, until it isn\u2019t. Just\nimagine yourself hammering iron blooms in the tradition of generations of\nsmiths before you... what would prompt you to even contemplate doing things\ndifferently?\n\n##\n\nBetter technique, better results\n\nI like to ask people what they think is \u201cthe problem with education\u201d. It\u2019s a\nfun way to get a glimpse of their general worldview. Perhaps it\u2019s an unfair\nquestion but everybody seems to take for granted that there is in fact a\nproblem, and typically just one big one.\n\nDepending on who I ask, the problem is that there\u2019s too little school choice,\nor too much of it, or that the elites are too progressive or too conservative,\nor that we need to pay teachers more or dismantle their unions. Like I said,\nit\u2019s a fun question.\n\nThe most interesting answers to me are technological, in the broad sense of\n\u201ctechnology\u201d as a repeatable technique, like pumping air into a blast furnace.\nI\u2019m generally not swayed by the political arguments, because education is so\nbroadly ineffective. We tend to be bad at teaching things both within and\noutside of traditional systems, whether or not the state in question has a\nvoucher system, and so on.\n\nThe technological answers are exciting though because they suggest that we may\nbe just one idea away from a breakthrough. We may be able to get better\nresults simply by doing a better job.\n\n##\n\nHave you tried not blurting out the answer?\n\nAn acquaintance of mine runs a coding interview platform. When LLMs started\ntaking off, they trialed an LLM based interviewer, but it failed somewhat\ncomically: if a candidate showed any sign of struggle, the LLM would just\nblurt out the answer.\n\nThis is a major barrier to LLM use in education, too. We\u2019d like AI tutors to\ndebug student misconceptions and ask well-calibrated questions, like an expert\ntennis coach feeding balls with just the right amount of spin. Unfortunately\nthey tend to prefer reeling off explanations, so the hard work falls on the\nuser.\n\nIn fairness to AI tutors, human educators rarely do much better! Most\nlecturers just lecture. Most textbooks just explain. Standardized curricula\nlay out bodies of knowledge as a sequence of foregone conclusions: this is how\nyou manipulate algebraic symbols, this is how you factor polynomials, this is\nhow you differentiate them, and so on. Exercises tend to just check whether\nyou were listening. Factor the given polynomials.\n\nThis is the standard way of teaching: we want students to know X so we tell\nthem X. It seems like it should work, and in a way it does, like whacking iron\nblooms repeatedly with a hammer. It is true that some people manage to learn\nmathematics this way, but it is rare. If you don\u2019t believe me, try factoring a\npolynomial.\n\n##\n\nHave I mentioned nand2tetris yet?\n\nThere are some educational resources that I can\u2019t help but recommend over and\nover again, to the point where students joke about having them on their bingo\ncards. These are things like nand2tetris, or Silicon Zeroes and the\nZachtronics games. Among programming books, those like The Little Schemer,\nwith a thousand tiny questions. Among textbooks, those that are project\noriented, like Coding the Matrix. Perhaps a dozen sites full of problems:\nProject Euler, exercism, cryptopals. Outside of computing, I keep raving about\nCaveman Chemistry, which is like nand2tetris for the physical world.\n\nWould you rather read about branch prediction or build an intuition for it\nthrough a fun game?\n\nWhat makes all of these resources wonderful is that they don\u2019t blurt out the\nanswers. Each is a well designed set of challenges, problems, questions:\nultimately, learning stimulus. They are fun, and in working through them you\nlearn their subject matter enjoyably and authentically. The Little Schemer, is\nfull of cartoons and starts very gently, but by the end you will have\nimplemented a meta-circular evaluator.\n\nSadly, these resources can be hard to produce and challenging to cater to a\nbroad audience. Many people find Project Euler too mathy, for instance, and\ngive up after a problem or two, but one non-programmer friend to whom I\nrecommended it disappeared for a few weeks and remerged as a highly capable\ncoder. These challenges of problem-based education resources I see as akin to\nthe brittleness of cast iron: something to be aware of and work around,\nthrough further innovation.\n\n##\n\nCS Primer is Generally Available\n\nAll of this is my uniquely convoluted way of announcing that CS Primer is now\ngenerally available, after over a year of paid beta. I am aware that writing\nthis at the end of a rambling article is not optimal in terms of marketing,\nbut I wanted to give you better context on why I designed it this way.\n\nThe biggest problem with how we teach, in my opinion, is that we use the blunt\nforce tool of simply telling students what we think they should know. This is\nnot nearly as effective, in my experience, as setting up a sequence of well\ncalibrated challenges: at least questions, but ideally exercises or projects\nthat are authentic to the topic being studied. For systems focused computer\nscience, this means programming problems, so these are the backbone of CS\nPrimer. I have included my best problems from teaching these topics in person\nand seeing what students find most rewarding.\n\nAt the same time, I\u2019m well aware of the hazards of building an entire CS\ncurriculum around programming problems. Most importantly, nobody should get\nstuck on a problem and left to flail. My attempt to address these challenges\nis to include full video walkthroughs to all of the problems, structured with\nhints and stretch goals to allow students to calibrate the difficulty for\nthemselves. When progress on a problem requires a piece of conceptual\nunderstanding, that\u2019s when I provide a short explanation, as a JIT supplement\nto the walkthrough. If that\u2019s not enough, I\u2019m available via Discord and office\nhours.\n\nI\u2019ve now given this treatment to four courses: algorithms and data structures,\ncomputer architecture, operating systems and networking. For most software\nengineers this will take a year or two to work through in earnest: there are\nover 100 hours of recorded content but of course it\u2019s more about the time that\nyou spend solving the problems, than watching me do the same. I\u2019m still\nworking on a few remaining courses but I\u2019m happy with what\u2019s there and excited\nto release general availability! There are many possible ways to learn\ncomputer science but this is the most effective way I could imagine for those\nwho can already code, while still being self-paced and so affordable to\nstudents worldwide.\n\nIf you choose to sign up, I hope you find it challenging and rewarding. Good\nluck with the problems!\n\n### Subscribe to Oz\u2019s Newsletter\n\nBy Oz Nova \u00b7 Launched a month ago\n\nThoughts on computer science education and things 2-3 degrees thence, from the\ncreator of CS Primer, teachyourselfcs.com and Bradfield\n\n25 Likes\n\n25\n\nShare this post\n\n#### The problem with education\n\nnewsletter.ozwrites.com\n\n1\n\nShare\n\n1 Comment\n\nAndy17 hrs agoYes, humans learn by doing, not by watching! CS is not a\nspectator sport. Get in the game with CSPrimer. It's great!Expand full\ncommentLikeReplyShare  \n---  \n  \nTransitions\n\nSomehow our lives are defined both by periods of consistent progress and by\ndramatic transitions. I want to write about a major personal transition,\nbut...\n\nMar 26 \u2022\n\nOz Nova\n\n42\n\nShare this post\n\n#### Transitions\n\nnewsletter.ozwrites.com\n\n1\n\nReady for more?\n\n\u00a9 2024 Oz\n\nPrivacy \u2219 Terms \u2219 Collection notice\n\nStart WritingGet the app\n\nSubstack is the home for great culture\n\nShare\n\n## Create your profile\n\n## Only paid subscribers can comment on this post\n\nAlready a paid subscriber? Sign in\n\n#### Check your email\n\nFor your security, we need to re-authenticate you.\n\nClick the link we sent to , or click here to sign in.\n\n", "frontpage": false}
