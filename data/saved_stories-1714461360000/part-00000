{"aid": "40203772", "title": "OpenBSD scripts to convert wg-quick VPN files", "url": "https://dataswamp.org/~solene/2024-04-27-openbsd-wg-quick-converter.html", "domain": "dataswamp.org", "votes": 4, "user": "zdw", "posted_at": "2024-04-29 20:32:03", "comments": 0, "source_title": "OpenBSD scripts to convert wg-quick VPN files", "source_text": "Solene'% : OpenBSD scripts to convert wg-quick VPN files\n\nAbout me: My name is Sol\u00e8ne Rapenne, pronouns she/her. I like learning and\nsharing knowledge. Hobbies: '(BSD OpenBSD Qubes OS Lisp cmdline gaming\nsecurity QubesOS internet-stuff). I love percent and lambda characters.\nOpenBSD developer solene@. No AI is involved in this blog.\n\nContact me: solene at dataswamp dot org or @solene@bsd.network (mastodon).\n\nYou can sponsor my work financially if you want to help me writing this blog\nand contributing to Free Software as my daily job.\n\n# OpenBSD scripts to convert wg-quick VPN files\n\nWritten by Sol\u00e8ne, on 27 April 2024. Tags: #openbsd #vpn #security\n\nComments on Fediverse/Mastodon\n\n# 1\\. Introduction \u00a7\n\nIf you use commercial VPN, you may have noticed they all provide WireGuard\nconfigurations in the wg-quick format, this is not suitable for an easy use in\nOpenBSD.\n\nAs I currently work a lot for a VPN provider, I often have to play with\nconfigurations and I really needed a script to ease my work.\n\nI made a shell script that turns a wg-quick configuration into a hostname.if\ncompatible file, for a full integration into OpenBSD. This is practical if you\nalways want to connect to a given VPN server, not for temporary connections.\n\nOpenBSD manual pages: hostname.if\n\nSourcehut project: wg-quick-to-hostname-if\n\n# 2\\. Usage \u00a7\n\nIt is really easy to use, download the script and mark it executable, then run\nit with your wg-quick configuration as a parameter, it will output the\nhostname.if file to the standard output.\n\n    \n    \n    wg-quick-to-hostname-if fr-wg-001.conf | doas tee /etc/hostname.wg0\n\nIn the generated file, it uses a trick to dynamically figure the current\ndefault route which is required to keep a non-vpn route to the VPN gateway.\n\n# 3\\. Short VPN sessions \u00a7\n\nWhen I shared my script on mastodon, Carlos Johnson shared their own script\nwhich is pretty cool and complementary to mine.\n\nIf you prefer to establish a VPN for a limited session, you may want to take a\nlook at his script.\n\nCarlos Johnson GitHub: file-wg-sh gist\n\n# 4\\. Prevent leaks \u00a7\n\nIf you need your WireGuard VPN to be leakproof (= no network traffic should\nleave the network interface outside the VPN if it's not toward the VPN\ngateway), you should absolutely do the following:\n\n  * your WireGuard VPN should be on rdomain 0\n  * WireGuard VPN should be established on another rdomain\n  * use PF to block traffic on the other rdomain that is not toward the VPN gateway\n  * use the VPN provider DNS or a no-log public DNS provider\n\nOlder blog post: WireGuard and rdomains\n\n# 5\\. Conclusion \u00a7\n\nOpenBSD's ability to configure WireGuard VPNs with ifconfig has always been an\nincredible feature, but it was not always fun to convert from wg-quick files.\nBut now, using a commercial VPN got a lot easier thanks to a few piece of\nshell.\n\nThis article has been useful for you? Please consider supporting my work.\n\nContent under CC-BY-4.0.\n\nThis blog is powered by cl-yag!\n\n", "frontpage": true}
