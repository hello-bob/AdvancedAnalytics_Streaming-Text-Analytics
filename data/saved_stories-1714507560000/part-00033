{"aid": "40208981", "title": "Jailer \u2013 open-source database client", "url": "https://wisser.github.io/Jailer/", "domain": "wisser.github.io", "votes": 3, "user": "jailertool2", "posted_at": "2024-04-30 09:38:34", "comments": 0, "source_title": "Open Jail - The Jailer Project Web Site", "source_text": "Open Jail - The Jailer Project Web Site\n\nHome Quick Tour Tutorial Data Browser Videos FAQ API Documentation Forum\nDownload  \n---  \n  \n  * Installation\n  * Download\n\n| | Jailer is a tool for database subsetting, schema and data browsing.It creates small slices from your database and lets you navigate through your database following the relationships.. Ideal for creating small samples of test data or for local problem analysis with relevant production data.Features\n\n  * The Data Browser lets you navigate through your database following the relationships (foreign key-based or user-defined) between tables.\n  * The Subsetter creates small slices from your productive database and imports the data into your development and test environment (consistent and referentially intact).\n  * Improves database performance by removing and archiving obsolete data without violating integrity.\n  * Generates SQL (topologically sorted), XML (hierarchically structured) and DbUnit datasets.\n  * A demo database is included with which you can get a first impression without any configuration effort.\n\nSupported DatabasesAny DMBS is basically supported thanks to the JDBC\ntechnology used. Jailer also uses additional knowledge to cope with the\npeculiarities of major database systems. These are:|\n\n  * PostgreSQL\n  * Oracle\n  * MySQL\n  * MariaDB\n  * Microsoft SQL Server\n  * IBM Db2\n  * SQLite\n  * Sybase\n  * Amazon Redshift\n  * Firebird\n  * Informix Dynamic Server\n  * H2\n  * HSQL (HyperSQL)\n  * Derby\n  * Interbase\n  * Exasol\n  * SAP HANA\n  * Vertica\n  * Snowflake\n  * ClickHouse\n\n  \n---  \n  \nNews\n\n2024-04-18| DDL scripts for creating database objects can now be generated\nthanks to an integration of the Liquibase tool. This makes it possible to\ncreate subset databases from scratch using only on-board means.  \n---|---  \n2023-02-03| Thanks to deep analysis of statements, the SQL console can now\nrelate the result of queries to the source tables and display them\naccordingly. In addition, this technique also allows filter conditions to be\ndynamically added to arbitrary SQL queries.  \n2022-01-01| Comprehensive redesign and modernization of the entire user\ninterface. New Look & Feel FlatLaf.  \n2021-02-04| Cycles in parent-child relationships will be detected and broken.\nThus, such data can be exported by deferring the insertion of nullable foreign\nkeys.  \n2020-02-04| The Jailer engine is published in Maven repository .  \n2019-02-01| The new \"Model Migration Tool\" allows you to easily find and edit\nthe newly added associations if the data model has been extended after the\nlast change to this extraction model.  \n2018-04-26| The new feature \"Analyze SQL\" analyzes SQL statements and proposes\nassociation definitions. This allows to reverse-engineer the data model based\non existing SQL queries.  \n2018-03-06| SQL Console with code completion, syntax highlighting and database\nmetadata visualization.  \n2017-05-10| New API provides programmatic access to the data export and import\nfunctionality.  \n2017-03-30| Improved filter management . Filter Templates allows you to define\nrules for assigning filters to columns. Filters on primary key columns will\nautomatically be propagated to the corresponding foreign key columns.  \n2015-12-04| Data can now also be exported directly to a schema of the same\ndatabase. This ensures optimal performance.  \n2015-10-23| Rows can alternatively be collected in a separate embedded\ndatabase. This allows exporting data from read-only databases.  \n2014-07-20| Implemented the \"Subset by Example\" feature: Use the Data Browser\nto collect all the rows to be extracted and let Jailer create a model for that\nsubset.  \n2014-04-15| A Data Browser Videos has been introduced. Navigate\nbidirectionally through the database by following foreign-key-based or user-\ndefined relationships.  \n  \nAbout Jailer\n\nDatabases are growing in both size and complexity to meet the increasing\ndemands of business. Applications to process the data are also increasing in\nsize and complexity. With the growing complexity, solid testing becomes more\nand more important in order to assure the quality of software. Ideally we\nwould like to test all changes against up-to-date production data, so the\ngeneral practice is use a copy of the production database for all testing.\n\nBut when a database exceeds a certain size it becomes very expensive to\nprovide full-size copies of the production database for development and\ntesting. One solution of this problem is to have fewer full size copies of the\nproduction database than are really needed, often only one, which will be\nshared between the development and testing teams.\n\nOf course this is far from optimal. Data in the database is left in an unknown\nstate when passed from one team to the other. It takes a long time to provide\na refresh of the production copy when it's required. Always having an up-to-\ndate production copy is almost impossible.\n\nThe databases required for development and testing rarely need to be full\nsize, it is often easier to work on a small copy. Unfortunately it is very\nhard to manually extract a small subset of the production data. It is not\npossible to just take 10% of each table to get a 10% size database. The data\nin one table would not be related to the data in the other tables. It would\nnot be referentially intact.\n\nJailer simplifies the extraction of referentially intact data. Once you have\ndefined an extraction model, it can be used to extract data from the\nproduction database fast and easy whenever up-to-date test data is required.\n\n", "frontpage": false}
