{"aid": "40153461", "title": "Explaining code using ASCII art", "url": "https://blog.regehr.org/archives/1653", "domain": "regehr.org", "votes": 1, "user": "memalign", "posted_at": "2024-04-25 04:37:25", "comments": 0, "source_title": "Explaining Code using ASCII Art \u2013 Embedded in Academia", "source_text": "Explaining Code using ASCII Art \u2013 Embedded in Academia\n\nSkip to content\n\n# Embedded in Academia\n\n# Explaining Code using ASCII Art\n\nPeople tend to be visual: we use pictures to understand problems. Mainstream\nprogramming languages, on the other hand, operate in an almost completely\ndifferent kind of abstract space, leaving a big gap between programs and\npictures. This piece is about pictures drawn using a text character set and\nthen embedded in source code. I love these! The other day I asked around on\nTwitter for more examples and the responses far exceeded expectations (thanks\neveryone!). There are a ton of great examples in the thread; here I\u2019ve\ncategorized a few of them. Click on images go to the repositories.\n\n## Data Structures\n\nOne of the most common kinds of ASCII art in code is illustrating the shape of\na data structure.\n\nThe example I started with comes from LLVM:\n\nThe layout of a data structure in the Jikes RVM:\n\nA tree rotate in Musl:\n\nDouble-ended queue from the Rust library:\n\nSwift compiler internals:\n\nMalloc header layout:\n\n## State Machines\n\nJavaScript profiling:\n\nRPCs in Cloud Spanner:\n\nI/O stream states:\n\n## Logical Structure in the Problem Domain\n\nControl flow in an NWScript program being decompiled:\n\nECC internals:\n\nFormatting numbers:\n\nA quantum circuit:\n\nBalancing memory management objectives in an OS kernel:\n\nSubtyping relations (this is a very cool special case where the ASCII art is\nalso code):\n\nThe format of a DBF file:\n\nA lookup table for image processing:\n\nShape of a color function:\n\nStructure of a URI:\n\nA very quick tutorial on undo systems from emacs:\n\n## Geometry\n\nAttitude control in the Apollo Guidance Computer (!!!):\n\nImage tiling:\n\nBoomerang trajectories in Nethack:\n\nRendering CSS borders:\n\nQuadtrees:\n\nSpeed control in a milling machine:\n\nScrolling web pages:\n\nI hope you enjoyed these as much as I did!\n\nFebruary 18, 2019\n\nregehr\n\nUncategorized\n\n### 11 responses to \u201cExplaining Code using ASCII Art\u201d\n\n  1. Magnus says:\n\nFebruary 18, 2019 at 4:04 pm\n\nHa ha brilliant!\n\nI\u2019ve done plenty of these, when I wanted to switch half my brain off but still\ndo something time-consuming and fiddly, but still kind of productive. Very\ntherapeutic!\n\n  2. Tymtam No Choc says:\n\nFebruary 18, 2019 at 7:57 pm\n\nThese are examples of beauty in engineering. Using text, not images, would\nmake it b.e.a.u.t.i.f.u.l.\n\n  3. Phillip says:\n\nFebruary 18, 2019 at 9:54 pm\n\nYou should publish them, it\u2019s a good way to store knowledge besides being\ntherapeutic. I\u2019d personally would love to see classic science books put in\nthis format, Euclid\u2019s Elements or Newton\u2019s Opticks but don\u2019t have the time to\ndo the work. I think this and something like itty.bitty.sites could help ease\naccess to information.\n\n  4. err says:\n\nFebruary 19, 2019 at 1:26 am\n\nplease convert this to tikz and back\n\n  5. HaQadosch says:\n\nFebruary 19, 2019 at 3:46 am\n\nhttp://asciiflow.com/\n\n  6. Nick says:\n\nFebruary 19, 2019 at 3:00 pm\n\nYou might be interested in stream-tree, a library I created for expressing\nfunctions as ASCII flow charts in JavaScript.\n\nhttps://github.com/Widdershin/stream-tree\n\nHere\u2019s an example of a slides app that uses stream-tree.\n\nhttps://github.com/Widdershin/how-to-write-javascript-without-going-\ninsane/blob/ce84669d40c7109c8c10b93175f5b56bd2079a24/index.js#L55-L108\n\n  7. foo says:\n\nFebruary 20, 2019 at 7:40 am\n\nI did some animated ascii art explanations of basic algorithms a while ago\nhttps://stackoverflow.com/questions/198199/how-do-you-reverse-a-string-in-\nplace-in-c-or-c/21617273#21617273\nhttps://stackoverflow.com/questions/21863609/building-a-binary-\nheap/43077941#43077941 https://stackoverflow.com/questions/4833423/shell-sort-\njava-example/22408617#22408617\n\n  8. Dan says:\n\nFebruary 20, 2019 at 6:20 pm\n\nNice collection! One more category that seems like it would fit is describing\nthe hardware that will be controlled by the software. Warren Creemers\ndrew/gathered a collection of Arduino layouts to add as comments in Arduino\nscripts: http://busyducks.com/wp_4_1/2015/11/16/ascii-art-arduino-pinouts/\n(github: https://github.com/busyDuckman/ascii-art-arduinos)\n\nThere is also a tool called AACircuit by Andreas Weber that is used to lay out\ncircuits in ASCII art: https://josoansi.de/aacircuit.php (github:\nhttps://github.com/Andy1978/AACircuit)\n\nGary Richardson made a Python version, but I haven\u2019t been able to track down\nthe actual files. Here\u2019s his post about it back in 2005: http://sci.tech-\narchive.net/Archive/sci.electronics.design/2005-12/msg05445.html\n\nAnother example of schematics used in Arduino code (by carlynorama):\nhttps://github.com/carlynorama/ASCII-schematics\n\n  9. Paul Black says:\n\nFebruary 25, 2019 at 11:25 am\n\nMarvelous! Thank you for collecting and sharing those.\n\n  10. Rob says:\n\nFebruary 27, 2019 at 9:19 am\n\nI\u2019m a fan of ASCII art in source code but have always been bothered by the\ninconvenience of modifying the diagram. I recently decided to learn\nJavascript, so I wrote a tool which lets you draw line diagrams. The tool\nconverts the diagram into ASCII, and appends a string representing the\nserialized, compressed version of the diagram. This lets you get recreate and\nmodify the original line diagram\u2013round-trip editing.\n\n  11. Rob says:\n\nFebruary 27, 2019 at 9:20 am\n\nhttp://buttersquid.ink\n\nEmbedded in Academia\n\nProudly powered by WordPress\n\n", "frontpage": false}
