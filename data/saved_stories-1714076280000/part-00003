{"aid": "40157598", "title": "NExT: Teaching Large Language Models to Reason about Code Execution", "url": "https://arxiv.org/abs/2404.14662", "domain": "arxiv.org", "votes": 2, "user": "tosh", "posted_at": "2024-04-25 13:52:10", "comments": 0, "source_title": "NExT: Teaching Large Language Models to Reason about Code Execution", "source_text": "[2404.14662] NExT: Teaching Large Language Models to Reason about Code\nExecution\n\nSkip to main content\n\nWe gratefully acknowledge support from the Simons Foundation, University of\nOslo Library, and all contributors. Donate\n\n> cs > arXiv:2404.14662\n\n# Computer Science > Machine Learning\n\narXiv:2404.14662 (cs)\n\n[Submitted on 23 Apr 2024]\n\n# Title:NExT: Teaching Large Language Models to Reason about Code Execution\n\nAuthors:Ansong Ni, Miltiadis Allamanis, Arman Cohan, Yinlin Deng, Kensen Shi,\nCharles Sutton, Pengcheng Yin\n\nView a PDF of the paper titled NExT: Teaching Large Language Models to Reason\nabout Code Execution, by Ansong Ni and 6 other authors\n\nView PDF\n\n> Abstract:A fundamental skill among human developers is the ability to\n> understand and reason about program execution. As an example, a programmer\n> can mentally simulate code execution in natural language to debug and repair\n> code (aka. rubber duck debugging). However, large language models (LLMs) of\n> code are typically trained on the surface textual form of programs, thus may\n> lack a semantic understanding of how programs execute at run-time. To\n> address this issue, we propose NExT, a method to teach LLMs to inspect the\n> execution traces of programs (variable states of executed lines) and reason\n> about their run-time behavior through chain-of-thought (CoT) rationales.\n> Specifically, NExT uses self-training to bootstrap a synthetic training set\n> of execution-aware rationales that lead to correct task solutions (e.g.,\n> fixed programs) without laborious manual annotation. Experiments on program\n> repair tasks based on MBPP and HumanEval demonstrate that NExT improves the\n> fix rate of a PaLM 2 model, by 26.1% and 14.3% absolute, respectively, with\n> significantly improved rationale quality as verified by automated metrics\n> and human raters. Our model can also generalize to scenarios where program\n> traces are absent at test-time.\n\nComments:| 35 pages  \n---|---  \nSubjects:| Machine Learning (cs.LG); Computation and Language (cs.CL);\nProgramming Languages (cs.PL); Software Engineering (cs.SE)  \nCite as:| arXiv:2404.14662 [cs.LG]  \n(or arXiv:2404.14662v1 [cs.LG] for this version)  \n  \n## Submission history\n\nFrom: Ansong Ni [view email] [v1] Tue, 23 Apr 2024 01:46:32 UTC (935 KB)\n\nFull-text links:\n\n## Access Paper:\n\nView a PDF of the paper titled NExT: Teaching Large Language Models to Reason\nabout Code Execution, by Ansong Ni and 6 other authors\n\n  * View PDF\n  * TeX Source\n  * Other Formats\n\nview license\n\nCurrent browse context:\n\ncs.LG\n\n< prev | next >\n\nnew | recent | 2404\n\nChange to browse by:\n\ncs cs.CL cs.PL cs.SE\n\n### References & Citations\n\n  * NASA ADS\n  * Google Scholar\n  * Semantic Scholar\n\na export BibTeX citation Loading...\n\n## BibTeX formatted citation\n\n\u00d7\n\nData provided by:\n\n### Bookmark\n\n# Bibliographic and Citation Tools\n\nBibliographic Explorer (What is the Explorer?)\n\nLitmaps (What is Litmaps?)\n\nscite Smart Citations (What are Smart Citations?)\n\n# Code, Data and Media Associated with this Article\n\nCatalyzeX Code Finder for Papers (What is CatalyzeX?)\n\nDagsHub (What is DagsHub?)\n\nGotit.pub (What is GotitPub?)\n\nPapers with Code (What is Papers with Code?)\n\nScienceCast (What is ScienceCast?)\n\n# Demos\n\nReplicate (What is Replicate?)\n\nHugging Face Spaces (What is Spaces?)\n\nTXYZ.AI (What is TXYZ.AI?)\n\n# Recommenders and Search Tools\n\nInfluence Flower (What are Influence Flowers?)\n\nConnected Papers (What is Connected Papers?)\n\nCORE Recommender (What is CORE?)\n\nIArxiv Recommender (What is IArxiv?)\n\n  * Author\n  * Venue\n  * Institution\n  * Topic\n\n# arXivLabs: experimental projects with community collaborators\n\narXivLabs is a framework that allows collaborators to develop and share new\narXiv features directly on our website.\n\nBoth individuals and organizations that work with arXivLabs have embraced and\naccepted our values of openness, community, excellence, and user data privacy.\narXiv is committed to these values and only works with partners that adhere to\nthem.\n\nHave an idea for a project that will add value for arXiv's community? Learn\nmore about arXivLabs.\n\nWhich authors of this paper are endorsers? | Disable MathJax (What is MathJax?)\n\n  * About\n  * Help\n\n  * Contact\n  * Subscribe\n\n  * Copyright\n  * Privacy Policy\n\n  * Web Accessibility Assistance\n  * arXiv Operational Status Get status notifications via email or slack\n\n", "frontpage": false}
