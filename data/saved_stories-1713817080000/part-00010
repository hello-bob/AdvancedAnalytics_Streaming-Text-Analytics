{"aid": "40113914", "title": "Delay email delivery with Postfix for a relaxing weekend", "url": "https://www.enricobassetti.it/2024/04/delay-e-mail-delivery-with-postfix-for-a-relaxing-weekend/", "domain": "enricobassetti.it", "votes": 5, "user": "enrico204", "posted_at": "2024-04-22 12:56:35", "comments": 2, "source_title": "Delay e-mail delivery with Postfix for a relaxing weekend | Enrico Bassetti", "source_text": "Delay e-mail delivery with Postfix for a relaxing weekend | Enrico Bassetti\n\n# Delay e-mail delivery with Postfix for a relaxing weekend\n\nApril 22, 2024\n\nOne good piece of advice is never to read e-mails if you want to have a\npleasant and relaxing weekend. Unfortunately, it is not so easy: open-source\nprojects you are contributing to, friends, hobbies, and newsletters are all\ngood reasons to read e-mails once in a while.\n\nBut we all have that friend, the one that sends many e-mails, and you don\u2019t\nwant to read them on the weekend. Let\u2019s implement some \u201cdelay-until-Monday\u201d\nfeature in Postfix!\n\n## Postfix queues\n\nDid you know that Postfix has different queues? In fact, Postfix has:\n\n  * maildrop is the queue for e-mails sent locally using sendmail. This is the only queue that is actually usable even when Postfix is not running;\n  * incoming, used by the cleanup Postfix process to store e-mail that just arrived. It exists because the active queue (see below) can accommodate only a fixed number of active e-mails;\n  * active is the queue containing e-mail scheduled to be sent. This queue has a fixed capacity to avoid overloading Postfix, as these e-mails are the next to be sent (you don\u2019t want your system to try to send more than 200k e-mails at the same time, do you?);\n  * deferred is used when there is a transient error (i.e., temporary problems), so e-mails are queued here and picked up later for retry;\n  * Finally, the hold is a special queue where messages go if some administrative ACL says so, and they are moved to other queues using the postsuper command.\n\nTheoretically, we may just need to keep the e-mail in the incoming queue until\nthe right moment or move it to the active queue and schedule the delivery\nlater. However, neither approaches are really in line with the description of\nthose queues, and, as far as I know, there is no easy way to do that.\n\nWe will use the hold queue instead!\n\n## Postfix lookup tables\n\nHere is the plan: we will match the incoming e-mail with some ACL using the\nHOLD action so that Postfix will move incoming e-mails in the hold queue.\nThen, we can use some bash script and crontab to release them when the moment\ncomes.\n\nEnters the Postfix lookup tables!\n\nPostfix can look up information in tables by matching specific parts of the\ne-mail (or the envelope) in them to get back other information, such as\nactions, alias destinations, allowed hosts, and many more. These tables can be\nstored in a local file or in some network services. It is very handy, as you\ncan basically link Postfix to a database server to query for e-mails and\nstuff, and this is basically what everyone (who has a large number of\naddresses) does.\n\nIn our case, we need to use an access table. access tables return actions for\na match. Specifically, we are looking for the HOLD action. In theory, a file\nlike this should suffice:\n\n    \n    \n    very.active.person@example.com HOLD\n\nIf you save a file like this, and you use the file: table type in a specific\nparameter in the Postfix configuration (as we see later), all e-mails coming\nfrom very.active.person@example.com will be moved to the hold queue, yay!\n\nThe problem is that there doesn\u2019t seem to be any way to assign a time period\nto this rule. This means that the rule will always match, even if you use\npostsuper to remove it from the queue! It does not work that well. What else\ncan we use?\n\nIt turns out we can use a database for that. If you are already using a\ndatabase, that\u2019s completely fine. However, I don\u2019t have it, as my Postfix\nsetup is very minimal. In this case, we can just use sqlite as a database and\nquery a local file with some SQL magic.\n\nFirst, we need a SQLite database. Make sure that Postfix is compiled with the\nsqlite table type (it is by default) and that you have the sqlite3 executable\nin your path. Then:\n\n    \n    \n    $ sqlite3 /etc/postfix/time_based_access_sqlite.db SQLite version 3.40.1 2022-12-28 14:03:47 Enter \".help\" for usage hints. sqlite>\n\nPerfect! Now, let\u2019s create the database table that we will use in order to\nstore information for the Postfix table:\n\n    \n    \n    CREATE TABLE time_access_dow ( email TEXT, day_of_week INTEGER, action TEXT );\n\nNow we can close the database file, and we can create the file that holds the\n\u201cdatabase connection information\u201d. Let\u2019s say, /etc/postfix/time_based_access:\n\n    \n    \n    dbpath = /etc/postfix/time_based_access_sqlite.db query = SELECT action FROM time_access_dow WHERE email = '%s' AND day_of_week = strftime('%%w', current_date)\n\nAs you can see, I am using the \u201cday of the week\u201d (0-6, where 0 is Sunday). We\ncan hold e-mails from very.active.person@example.com on Sunday by inserting\nthe following:\n\n    \n    \n    INSERT INTO time_access_dow VALUES('very.active.person@example.com', 0, 'HOLD');\n\nBut we are not finished yet. We need to tell Postfix to query this. We will\nmodify the /etc/postfix/main.cf. Specifically, you want to alter the\nsmtpd_sender_restrictions parameter to add your table. Keep in mind that the\nconfigured actions are executed using the exact order you specify in the\nconfiguration. So, you want your query to be executed last, or at least after\nthe usual checks for blocklists, unknown recipient domains, etc.\n\n    \n    \n    smtpd_sender_restrictions = reject_non_fqdn_sender, permit_sasl_authenticated, ... check_sender_access sqlite:/etc/postfix/time_based_access\n\nRestart Postfix to apply. Now, e-mails from very.active.person@example.com on\nSundays will be on hold!\n\n## Release e-mails on hold\n\nLet\u2019s create a script to release them (create the file, then +x it):\n\n    \n    \n    #!/usr/bin/env bash set -eou pipefail # Get all e-mail addresses that are configured for HOLD for email in $(sqlite3 /etc/postfix/time_based_access_sqlite.db \"SELECT DISTINCT email FROM time_access_dow\"); do # Release all e-mails from HOLD for this e-mail for MSGID in $(postqueue -j | jq -r \"select(.queue_name == \\\"hold\\\" and .sender == \\\"$email\\\").queue_id\"); do postsuper -H \"$MSGID\" done done\n\nNow we can schedule this command to run, say, every morning at 5am:\n\n    \n    \n    0 5 * * * root /etc/postfix/time_based_access.flush\n\nUnfortunately, postsuper must run as a super-user. However, as good practice,\nyou should already know how to configure a user with the necessary permissions\nto use sudo and AppArmor.\n\nThat\u2019s all. You have your own Postfix-powered system to delay e-mail delivery!\n\n## Caveats\n\nAs you might have noticed, the SQL query only checks for weekdays. So, if the\nperson sends you an e-mail at 00:01 on Monday, that e-mail will be delivered\nto your account (also, before the others that will be released at 5am). If\nyour friend is a night owl, you may want to tweak the database structure to\nstore also some time information there.\n\n## Future improvements\n\nThe next improvement will be querying my calendar for holidays and time off. I\nhave a CalDAV server, so it should not be so challenging to work with (I see\nyou laughing, stop!). Maybe next weekend I can work on th... wait, wasn\u2019t I\nlooking forward to a pleasant weekend?!?\n\n#Postfix #E-mail #Linux #SQLite\n\nNoteworthy theme\n\n|\n\nBuilt with Hugo\n\n", "frontpage": true}
