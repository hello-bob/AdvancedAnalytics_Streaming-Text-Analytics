{"aid": "40174608", "title": "License Plate Recognition with Home Assistant, Codeproject.ai, and Frigate NVR", "url": "https://github.com/blakeblackshear/frigate/discussions/8165", "domain": "github.com/blakeblackshear", "votes": 1, "user": "stacktrust", "posted_at": "2024-04-26 21:38:08", "comments": 0, "source_title": "Guide: Local License Plate Recognition With Home Assistant, CodeProject.AI, and Frigate \u00b7 blakeblackshear/frigate \u00b7 Discussion #8165", "source_text": "Guide: Local License Plate Recognition With Home Assistant, CodeProject.AI,\nand Frigate \u00b7 blakeblackshear/frigate \u00b7 Discussion #8165 \u00b7 GitHub\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nblakeblackshear / frigate Public\n\n  * Notifications\n  * Fork 1.4k\n  * Star 14.8k\n\n# Guide: Local License Plate Recognition With Home Assistant, CodeProject.AI,\nand Frigate #8165\n\nNickM-27 started this conversation in Show and tell\n\nGuide: Local License Plate Recognition With Home Assistant, CodeProject.AI,\nand Frigate #8165\n\nNickM-27\n\nOct 14, 2023 \u00b7 10 comments \u00b7 49 replies\n\nReturn to top\n\nDiscussion options\n\n##\n\nNickM-27\n\nOct 14, 2023\n\nCollaborator Sponsor\n\nOriginal comment in English -\n\nI spent quite a while trying different ideas to get a working & fully local\nlicense plate setup and I am quite happy with this one so I am sharing a guide\non how to do this.\n\n## Prerequisites\n\n  * You must have CodeProject.AI setup with the license plate plugin installed, that is outside the scope of this guide.\n  * Frigate+ is recommended for its built in license plate detection, however this can definitely work without Frigate+ with some modifications that are called out in the code comments\n\n## Preliminary Info\n\nThe approach in this guide requires using a python script to run some of the\nlogic because it would be much more difficult to do in a Home Assistant\nautomation. This script is called directly from home assistant.\n\n### Python Script\n\n  1. Create a folder to hold your scripts (if you don't already have one) inside of the Home Assistant /config directory. For this guide I will call mine /config/bashscript\n  2. Create a file called license_plate.py in /config/bashscript\n\nThe contents of the file should be\n\n    \n    \n    import datetime import io import json import requests import sys from PIL import Image # host for frigate instance FRIGATE_HOST = \"http://10.0.0.0:5000\" # host for CodeProject.AI instance CODE_PROJECT_HOST = \"http://10.0.0.0:4100\" event_id = sys.argv[1] json = requests.get(f\"{FRIGATE_HOST}/api/events/{event_id}\").json() camera = json[\"camera\"] # get clean snapshot if event has bended otherwise get snapshot without bounding boxes if json[\"end_time\"]: img_bytes = requests.get(f\"{FRIGATE_HOST}/clips/{camera}-{event_id}-clean.png\").content else: img_bytes = requests.get(f\"{FRIGATE_HOST}/api/events/{event_id}/snapshot.jpg?bbox=0\").content img = Image.open(io.BytesIO(img_bytes)) attributes = json[\"data\"][\"attributes\"] # Checks to ensure that license plate is detected # this will need to be removed if not using a model that detects license plates (like frigate+) if not attributes: with open(\"/config/bashscript/detected_plates.log\", \"a\") as log: log.write(f\"[{datetime.datetime.now()}]: {camera} - could not find license plate in {json}\\n\") sys.exit() box = attributes[0][\"box\"] detect = requests.get(f\"{FRIGATE_HOST}/api/config\").json()[\"cameras\"][camera][\"detect\"] known_res = (detect[\"width\"], detect[\"height\"]) # find coordinates of image to send to detector x_mid = (box[0] + (box[2] / 2)) * known_res[0] y_max = (box[1] + box[3]) * known_res[1] cropped_image = img.crop((max(0, x_mid - 150), 0, min(known_res[0], x_mid + 150), known_res[1])) cropped_image.save(\"/config/bashscript/crop.jpg\") # you will likely need to create multiple iterations for each vehicle # 0/8/B for example are often mixed up known_plates = { # Bob's Car \"ABC128\": \"Bob's Car\", \"ABC12B\": \"Bob's Car\", # Steve's Truck \"123TR0\": \"Steve's Truck\", \"123TRO\": \"Steve's Truck\", } with open('/config/bashscript/crop.jpg', 'rb') as fp: response = requests.post( f'{CODE_PROJECT_HOST}/v1/image/alpr', files=dict(upload=fp), ) print(response.json()) plates = response.json() plate = None if len(plates[\"predictions\"]) > 0 and plates[\"predictions\"][0].get(\"plate\"): plate = str(plates[\"predictions\"][0][\"plate\"]).replace(\" \", \"\") score = plates[\"predictions\"][0][\"confidence\"] print(f\"Checking plate: {plate} in {known_plates.keys()}\") with open(\"/config/bashscript/detected_plates.log\", \"a\") as log: log.write(f\"[{datetime.datetime.now()}]: {camera} - detected {plate} as {known_plates.get(plate)} with a score of {score}\\n\") if plate in known_plates.keys(): print(f\"{camera} - Found a known plate: {known_plates[plate]}\") else: plate = None else: with open(\"/config/bashscript/detected_plates.log\", \"a\") as log: log.write(f\"[{datetime.datetime.now()}]: {camera} - No plates detected in run: {plates}\\n\") if plate is None: print(f\"No valid results found: {plates['predictions']}\") sys.exit() vehicle_name = known_plates[plate] # Add Sub Label To Car Event requests.post(f\"{FRIGATE_HOST}/api/events/{event_id}/sub_label\", json={\"subLabel\": vehicle_name, \"subLabelScore\": round(score, 2)})\n\nThere are a few things to note here:\n\n  * CodeProject.AI port might be different depending on where and how it is setup\n  * Some characters are commonly mixed up like 0/O and 8/B, these variations should be added so this works more reliably.\n  * This will create a file detected_plates.log which will provide info on what plates are detected and if it matches a known plate\n  * The latest image sent to ALPR will be saved as /config/bashscript/crop.jpg\n\n### Home Assistant Configuration\n\nThe next step is adding this python script to the Home Assistant\nconfiguration.yaml file. This is done via the shell_command type:\n\n    \n    \n    shell_command: # run license plate inference for vehicle check_license_plate: python3 /config/bashscript/license_plate.py \"{{ event_id }}\"\n\n### Home Assistant Automation\n\nThe final step is setting up the Home Assistant automation, this will run on a\ncar event only when it has a license plate attribute detected. It will then\nrun 3 iterations of checking for the license plate and stop when a license\nplate is detected.This single automation will run on all cameras that detect a\ncar with a license plate in the zones defined, so if you have a driveway zone\nspecified for the garage and driveway camera it will run on both.\n\n    \n    \n    alias: >- Outside - Driveway - Frigate Try To Read License Plate - License Plate Seen description: \"\" trigger: - platform: mqtt topic: frigate/events id: frigate-event payload: license_plate # will just want to check that the label == \"car\" if not using a model that supports license_plate value_template: \"{{ value_json[\\\"after\\\"][\\\"current_attributes\\\"][0]['label'] }}\" variables: after_zones: \"{{ trigger.payload_json[\\\"after\\\"][\\\"entered_zones\\\"] }}\" before_zones: \"{{ trigger.payload_json[\\\"before\\\"][\\\"entered_zones\\\"] }}\" current_zones: \"{{ trigger.payload_json[\\\"after\\\"][\\\"current_zones\\\"] }}\" camera: \"{{ trigger.payload_json[\\\"after\\\"][\\\"camera\\\"] }}\" id: \"{{ trigger.payload_json[\\\"after\\\"][\\\"id\\\"] }}\" label: \"{{ trigger.payload_json[\\\"after\\\"][\\\"label\\\"] }}\" condition: - condition: and conditions: # setup zones that you want to look for cars with license plates for detection - condition: template value_template: >- {{ [\"street\", \"driveway\"] | select(\"in\", after_zones) | list | length > 0 }} alias: Has been in the street - condition: template value_template: \"{{ [\\\"driveway\\\"] | select(\\\"in\\\", current_zones) | list | length > 0 }}\" alias: Was in the street and is now in the driveway - condition: template value_template: \"{{ trigger.payload_json['after']['sub_label'] is none }}\" action: - choose: - conditions: - condition: trigger id: frigate-event sequence: - service: shell_command.check_license_plate data_template: event_id: \"{{id}}\" camera: \"{{camera}}\" - repeat: count: 2 sequence: - wait_for_trigger: - platform: mqtt topic: frigate/events payload: \"{{ trigger.payload_json['after']['id'] }}\" value_template: \"{{ value_json['after']['id'] }}\" timeout: hours: 0 minutes: 10 seconds: 0 milliseconds: 0 continue_on_timeout: false - condition: template value_template: >- {{ wait.trigger.payload_json['after']['sub_label'] is none }} - service: shell_command.check_license_plate data_template: event_id: \"{{id}}\" camera: \"{{camera}}\" default: [] trace: stored_traces: 20 mode: parallel max: 10  \n  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nYou must be logged in to vote\n\n## Replies: 10 comments \u00b7 49 replies\n\nComment options\n\n###\n\nweitheng\n\nOct 17, 2023\n\n-\n\nThank you for sharing. How do I get this to work without Frigate+?  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nYou must be logged in to vote\n\n8 replies\n\nComment options\n\n####\n\nNickM-27 Oct 18, 2023\n\nCollaborator Author Sponsor\n\n-\n\nyes you do need to multiply it by known res because the object box is also\nsaved as relative coordinates + relative sizeyou will need to play around with\nthe image cropping to make sure it crops the part of the car that has the\nlicense plate. But that looks good to me  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\nweitheng Oct 23, 2023\n\n-\n\nI changed the code to that but looks like something is not right, getting this\nin Home Assistant.\n\n    \n    \n    Error running command: `python3 /config/bashscript/license_plate.py \"{{ event_id }}\"`, return code: 1 NoneType: None\n\nTried looking up the internet, but got to nowhere. Appreciate if you could\nhelp. Thank you  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\nNickM-27 Oct 23, 2023\n\nCollaborator Author Sponsor\n\n-\n\nWhat do you get when you run it from the cli directly?  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\nweitheng Oct 23, 2023\n\n-\n\nI am running Home Assistant OS, I tried running the commands on the cli\ninterface, not sure if I am supposed to run it here but I get this\n\n    \n    \n    Error: unknown command \"python3\" for \"ha\" Run 'ha --help' for usage. FATA[0000] Error while executing rootCMd: unknown command \"python3\" for \"ha\"\n\nHowever when I tried to call the shell command service in the Developer Tools\npage, I get\n\n    \n    \n    stdout: \"\" stderr: |- Traceback (most recent call last): File \"/usr/local/lib/python3.11/site-packages/requests/models.py\", line 971, in json return complexjson.loads(self.text, **kwargs) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ File \"/usr/local/lib/python3.11/site-packages/simplejson/__init__.py\", line 514, in loads return _default_decoder.decode(s) ^^^^^^^^^^^^^^^^^^^^^^^^^^ File \"/usr/local/lib/python3.11/site-packages/simplejson/decoder.py\", line 386, in decode obj, end = self.raw_decode(s) ^^^^^^^^^^^^^^^^^^ File \"/usr/local/lib/python3.11/site-packages/simplejson/decoder.py\", line 416, in raw_decode return self.scan_once(s, idx=_w(s, idx).end()) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0) During handling of the above exception, another exception occurred: Traceback (most recent call last): File \"/config/bashscript/license_plate.py\", line 16, in <module> json = requests.get(f\"{FRIGATE_HOST}/api/events/{event_id}\").json() ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ File \"/usr/local/lib/python3.11/site-packages/requests/models.py\", line 975, in json raise RequestsJSONDecodeError(e.msg, e.doc, e.pos) requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0) returncode: 1\n\nLooks like python3 is not installed in the OS?  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\nNickM-27 Oct 23, 2023\n\nCollaborator Author Sponsor\n\n-\n\n> Looks like python3 is not installed in the OS?\n\nyeah, I personally run HA container and get a shell there, so you may need to\nsee if that is possible.to be clear when running from within HA you are\nsending a valid event_id correct?  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n###\n\ngavink2\n\nOct 24, 2023\n\n-\n\nI'm doing a similar function using a local instance of ALPR Snapshot from\nPlate Recognizer, together with the Plate Recognizer HA integration. It's\nworking perfectly and was pretty simple to set up. It's also possible to use\ntheir free cloud-based product for up to 2500 detections a month. Local is\nmuch faster if you have a good machine with an Nvidia GPU as well as being\nmore private, of course.In short, I set up a zone on a Frigate camera and when\na car is detected in that zone, an automation is triggered and one frame is\nsent to ALPR Snapshot via the HA integration. That then triggers an HA event\nif a plate is detected. If the license plate is our car's and our gate is\nclosed or closing, then open the gate.configuration.yaml:\n\n    \n    \n    image_processing: - platform: platerecognizer api_token: xxxx server: http://192.168.x.x:8080/v1/plate-reader/ regions: - gb watched_plates: - ab12cde detection_rule: strict region: strict source: - entity_id: camera.gate # Supplied by Frigate integration\n\nautomation:\n\n    \n    \n    alias: Open gate when our car detected in driveway description: \"\" trigger: - platform: state entity_id: - binary_sensor.plate_car_occupancy # Provided by Frigate integration, state changes to 'on' when a car is detected in the 'plate' zone. to: \"on\" condition: [] action: - service: image_processing.scan data: {} target: entity_id: image_processing.platerecognizer_gate - wait_for_trigger: - platform: event event_type: platerecognizer.vehicle_detected event_data: plate: aa12cde # Plate to check for timeout: hours: 0 minutes: 0 seconds: 15 milliseconds: 0 continue_on_timeout: false - condition: state entity_id: cover.gate state: - closed - closing - service: cover.open_cover data: {} target: entity_id: cover.gate mode: single\n\ndocker-compose.yaml for ALPR Snapshot\n\n    \n    \n    version: \"3.8\" services: alpr-snapshot: container_name: alpr-snapshot restart: unless-stopped image: platerecognizer/alpr-gpu environment: - LICENSE_KEY=xxxxx - TOKEN=xxxxx - WORKERS=8 # Adjust based on number of CPU cores. See docs. volumes: - ./alpr-snapshot/license:/license ports: - \"192.168.x.x:8080:8080/tcp\" deploy: resources: reservations: devices: - driver: nvidia count: 1 capabilities: [gpu]\n\nFrigate config:\n\n    \n    \n    cameras: gate: ffmpeg: output_args: record: preset-record-generic-audio-copy inputs: - path: rtsp://127.0.0.1:8554/gate # go2rtc input_args: preset-rtsp-restream-low-latency roles: - record - detect motion: mask: - 1920,0,1920,406,1138,381,824,412,0,464,0,0 zones: plate: coordinates: 1316,714,589,711,424,1080,1534,1080  \n  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nYou must be logged in to vote\n\n23 replies\n\nComment options\n\n####\n\nJens-Wymeersch Nov 5, 2023\n\n-\n\nHere you go\n\n    \n    \n    image_processing: - platform: platerecognizer api_token: token regions: - il save_file_folder: /config/www/plates save_timestamped_file: True always_save_latest_file: True watched_plates: - plate1 - plate2 - plate3 - plate4 - plate5 detection_rule: strict region: strict source: - entity_id: camera.parking_car # Supplied by Frigate integration\n\nand the following automation\n\n    \n    \n    alias: Plate Recognition description: \"\" trigger: - platform: state entity_id: - binary_sensor.parking_entry_zone_car_occupancy to: \"on\" condition: [] action: - service: image_processing.scan data: {} target: entity_id: image_processing.platerecognizer_parking_car mode: single  \n  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\nNickM-27 Nov 5, 2023\n\nCollaborator Author Sponsor\n\n-\n\nit's pulling from the camera directly, so it will just get the latest frame\nfrom the camera, not one related to a specific event. That also works\ncompletely differently than the automation shown in this guide  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\nJens-Wymeersch Nov 5, 2023\n\n-\n\n@NickM-27 Please explain a bit better. The plate_recognizer, works based on a\nsnapshot that's been taken. I assume that codeproject.ai uses the actual\nfootage (meaning goes through the camera feed). Correct ? Is there any way to\ntake better snapshots ? Higher in quality ? What are these values doing and\nwhat can they be ? ``` # Optional: height to resize the snapshot to (default:\nshown below) height: 270 # Optional: jpeg encode quality (default: shown\nbelow) quality: 70  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\nNickM-27 Nov 5, 2023\n\nCollaborator Author Sponsor\n\n-\n\n> I assume that codeproject.ai uses the actual footage (meaning goes through\n> the camera feed). Correct ?\n\nno, that is incorrect. Codeproject.ai simply uses a snapshot the same as any\nother service. But I have frigate choose the best snapshot and send that to\ncodeproject ai instead of just having it pull the latest from the camera\nentity\n\n> What are these values doing and what can they be ?\n\nthey are doing what they say, I don't understand the question. height can be\nany number up to the height of the detect camera stream and quality is between\n1 and 100  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\npilot1981 Mar 2, 2024\n\n-\n\nHi, I have the same setup, but I have problem to select the right frame to\nsent to PlateRecognizer: how do you solved this issue?  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n###\n\nwizu\n\nOct 26, 2023\n\n-\n\n@NickM-27 How to get found vehicles names back in home assistant? It would be\ngreat if eg. entity camera.parking_car or binary_sensor.parking_car_occupancy\nwould have attribute with vehicles names found  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nYou must be logged in to vote\n\n3 replies\n\nComment options\n\n####\n\nNickM-27 Oct 26, 2023\n\nCollaborator Author Sponsor\n\n-\n\nthey are in the sub_label field in the MQTT payload for frigate events. I use\nthis to update notifications with the vehicles name or other.Would be\ninteresting to have some sort of entity capture that as well  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\nJens-Wymeersch Nov 6, 2023\n\n-\n\nHi Nick, so if understand it correctly, you need a way to find the right frame\nfor the snapshot within the footage to check the plates. In the case of\nplaterecognizer, this will be done by ALPR Snapshot @gavink2 Am I correct ?  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\ngavink2 Nov 6, 2023\n\n-\n\nALPR Snapshot works on whatever single frame it receives via its API. How that\nframe is chosen is not down to ALPR Snapshot. If you want something that's\nmonitoring a camera stream then check out https://platerecognizer.com/stream,\npoint it at a go2rtc stream provided by Frigate and get events back into Home\nAssistant via a webhook. Otherwise, I refer you back to @NickM-27 's solution\nat the top of this thread. As for best setup for an ALPR camera, there's\nplenty of guidance at https://platerecognizer.com/camera-setup-for-best-anpr,\nmuch of which is not Platerecognizer-specific.  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n###\n\nidontcare99999\n\nOct 29, 2023\n\n-\n\nHey Nick, FYI line 34 in the python script has an indentation issue; it's\ncopying over with 2 tabs instead of 8 spaces.  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nYou must be logged in to vote\n\n1 reply\n\nComment options\n\n####\n\nNickM-27 Oct 30, 2023\n\nCollaborator Author Sponsor\n\n-\n\nthanks, updated  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n###\n\nwizu\n\nOct 30, 2023\n\n-\n\n@NickM-27 since updating frigate to beta3 there is now a lot of events for\nplate recognition. Some times a few per socond. Even where there is no motion,\nonly one stationary car. It looks like it has someting to do with new\nstationary object detection enchantments.\n\n> [2023-10-30 09:37:38.222917]: parking - No plates detected in run:\n> {'success': True, 'predictions': [], 'message': 'No plates found',\n> 'processMs': 406, 'inferenceMs': 400, 'code': 200, 'command': 'alpr',\n> 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 938} [2023-10-30 09:37:48.751307]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 548, 'inferenceMs': 541, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 582} [2023-10-30 09:37:48.886178]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 611, 'inferenceMs': 604, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 629} [2023-10-30 09:37:49.266554]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 521, 'inferenceMs': 515, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 984} [2023-10-30 09:37:58.305343]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 622, 'inferenceMs': 612, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 659} [2023-10-30 09:37:58.308090]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 603, 'inferenceMs': 597, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 621} [2023-10-30 09:37:58.694733]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 398, 'inferenceMs': 389, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 960} [2023-10-30 09:38:08.457358]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 630, 'inferenceMs': 619, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 665} [2023-10-30 09:38:08.517737]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 676, 'inferenceMs': 667, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 693} [2023-10-30 09:38:08.824515]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 374, 'inferenceMs': 367, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 845} [2023-10-30 09:38:18.787246]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 612, 'inferenceMs': 600, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 645} [2023-10-30 09:38:18.865125]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 608, 'inferenceMs': 600, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 634} [2023-10-30 09:38:19.185613]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 405, 'inferenceMs': 399, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 946} [2023-10-30 09:38:28.953807]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 582, 'inferenceMs': 577, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 642} [2023-10-30 09:38:29.058222]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 699, 'inferenceMs': 689, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 726} [2023-10-30 09:38:29.396703]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 472, 'inferenceMs': 456, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 954} [2023-10-30 09:38:39.239702]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 613, 'inferenceMs': 606, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 651} [2023-10-30 09:38:39.256281]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 545, 'inferenceMs': 539, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 565} [2023-10-30 09:38:39.569821]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 336, 'inferenceMs': 330, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 850} [2023-10-30 09:38:50.336016]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 1091, 'inferenceMs': 1073, 'code': 200,\n> 'command': 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU',\n> 'canUseGPU': False, 'analysisRoundTripMs': 1121} [2023-10-30\n> 09:38:50.547480]: parking - No plates detected in run: {'success': True,\n> 'predictions': [], 'message': 'No plates found', 'processMs': 1118,\n> 'inferenceMs': 1088, 'code': 200, 'command': 'alpr', 'moduleId': 'ALPR',\n> 'executionProvider': 'CPU', 'canUseGPU': False, 'analysisRoundTripMs': 1184}\n> [2023-10-30 09:39:00.318780]: parking - No plates detected in run:\n> {'success': True, 'predictions': [], 'message': 'No plates found',\n> 'processMs': 1016, 'inferenceMs': 1011, 'code': 200, 'command': 'alpr',\n> 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 1047} [2023-10-30 09:39:00.603546]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 1200, 'inferenceMs': 1186, 'code': 200,\n> 'command': 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU',\n> 'canUseGPU': False, 'analysisRoundTripMs': 1266} [2023-10-30\n> 09:39:01.102464]: parking - No plates detected in run: {'success': True,\n> 'predictions': [], 'message': 'No plates found', 'processMs': 789,\n> 'inferenceMs': 783, 'code': 200, 'command': 'alpr', 'moduleId': 'ALPR',\n> 'executionProvider': 'CPU', 'canUseGPU': False, 'analysisRoundTripMs': 1738}\n> [2023-10-30 09:39:10.957736]: parking - No plates detected in run:\n> {'success': True, 'predictions': [], 'message': 'No plates found',\n> 'processMs': 1186, 'inferenceMs': 1172, 'code': 200, 'command': 'alpr',\n> 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 1262} [2023-10-30 09:39:11.090775]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 1249, 'inferenceMs': 1242, 'code': 200,\n> 'command': 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU',\n> 'canUseGPU': False, 'analysisRoundTripMs': 1280} [2023-10-30\n> 09:39:11.551026]: parking - No plates detected in run: {'success': True,\n> 'predictions': [], 'message': 'No plates found', 'processMs': 608,\n> 'inferenceMs': 601, 'code': 200, 'command': 'alpr', 'moduleId': 'ALPR',\n> 'executionProvider': 'CPU', 'canUseGPU': False, 'analysisRoundTripMs': 1571}\n> [2023-10-30 09:39:20.783358]: parking - No plates detected in run:\n> {'success': True, 'predictions': [], 'message': 'No plates found',\n> 'processMs': 752, 'inferenceMs': 736, 'code': 200, 'command': 'alpr',\n> 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 832} [2023-10-30 09:39:20.815185]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 806, 'inferenceMs': 798, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 888} [2023-10-30 09:39:21.296742]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 488, 'inferenceMs': 481, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 1262} [2023-10-30 09:39:30.511360]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 620, 'inferenceMs': 607, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 666} [2023-10-30 09:39:30.533641]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 588, 'inferenceMs': 581, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 618} [2023-10-30 09:39:30.837765]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 338, 'inferenceMs': 328, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 901} [2023-10-30 09:40:10.247422]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 7908, 'inferenceMs': 7902, 'code': 200,\n> 'command': 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU',\n> 'canUseGPU': False, 'analysisRoundTripMs': 19564} [2023-10-30\n> 09:40:10.360555]: parking - No plates detected in run: {'success': True,\n> 'predictions': [], 'message': 'No plates found', 'processMs': 8024,\n> 'inferenceMs': 8018, 'code': 200, 'command': 'alpr', 'moduleId': 'ALPR',\n> 'executionProvider': 'CPU', 'canUseGPU': False, 'analysisRoundTripMs':\n> 19703} [2023-10-30 09:40:11.775900]: parking - No plates detected in run:\n> {'success': True, 'predictions': [], 'message': 'No plates found',\n> 'processMs': 1560, 'inferenceMs': 1552, 'code': 200, 'command': 'alpr',\n> 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 21123} [2023-10-30 09:40:11.822003]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 1443, 'inferenceMs': 1431, 'code': 200,\n> 'command': 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU',\n> 'canUseGPU': False, 'analysisRoundTripMs': 10916} [2023-10-30\n> 09:40:12.792672]: parking - No plates detected in run: {'success': True,\n> 'predictions': [], 'message': 'No plates found', 'processMs': 1000,\n> 'inferenceMs': 994, 'code': 200, 'command': 'alpr', 'moduleId': 'ALPR',\n> 'executionProvider': 'CPU', 'canUseGPU': False, 'analysisRoundTripMs': 2667}\n> [2023-10-30 09:40:12.970537]: parking - No plates detected in run:\n> {'success': True, 'predictions': [], 'message': 'No plates found',\n> 'processMs': 1119, 'inferenceMs': 1097, 'code': 200, 'command': 'alpr',\n> 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 2685} [2023-10-30 09:40:13.922785]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 1130, 'inferenceMs': 1123, 'code': 200,\n> 'command': 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU',\n> 'canUseGPU': False, 'analysisRoundTripMs': 2405} [2023-10-30\n> 09:40:13.993006]: parking - No plates detected in run: {'success': True,\n> 'predictions': [], 'message': 'No plates found', 'processMs': 1042,\n> 'inferenceMs': 1027, 'code': 200, 'command': 'alpr', 'moduleId': 'ALPR',\n> 'executionProvider': 'CPU', 'canUseGPU': False, 'analysisRoundTripMs': 2300}\n> [2023-10-30 09:40:22.697737]: parking - No plates detected in run:\n> {'success': True, 'predictions': [], 'message': 'No plates found',\n> 'processMs': 945, 'inferenceMs': 917, 'code': 200, 'command': 'alpr',\n> 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 980} [2023-10-30 09:40:22.797645]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 953, 'inferenceMs': 948, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 1043} [2023-10-30 09:40:23.864295]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 1147, 'inferenceMs': 1141, 'code': 200,\n> 'command': 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU',\n> 'canUseGPU': False, 'analysisRoundTripMs': 2061} [2023-10-30\n> 09:40:24.048742]: parking - No plates detected in run: {'success': True,\n> 'predictions': [], 'message': 'No plates found', 'processMs': 1216,\n> 'inferenceMs': 1209, 'code': 200, 'command': 'alpr', 'moduleId': 'ALPR',\n> 'executionProvider': 'CPU', 'canUseGPU': False, 'analysisRoundTripMs': 2236}\n> [2023-10-30 09:40:24.755903]: parking - No plates detected in run:\n> {'success': True, 'predictions': [], 'message': 'No plates found',\n> 'processMs': 880, 'inferenceMs': 874, 'code': 200, 'command': 'alpr',\n> 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 2830} [2023-10-30 09:40:24.799476]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 764, 'inferenceMs': 752, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 2850} [2023-10-30 09:40:25.280439]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 530, 'inferenceMs': 523, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 3234} [2023-10-30 09:40:32.577818]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 904, 'inferenceMs': 894, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 964} [2023-10-30 09:40:32.694478]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 926, 'inferenceMs': 919, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 965} [2023-10-30 09:40:33.504430]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 914, 'inferenceMs': 909, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 1568} [2023-10-30 09:40:33.664876]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 896, 'inferenceMs': 891, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 1619} [2023-10-30 09:40:34.423788]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 922, 'inferenceMs': 916, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 2298} [2023-10-30 09:40:34.482487]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 846, 'inferenceMs': 822, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 2327} [2023-10-30 09:40:42.669445]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 854, 'inferenceMs': 848, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 879} [2023-10-30 09:40:42.765417]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 960, 'inferenceMs': 947, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 1002} [2023-10-30 09:40:43.274206]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 513, 'inferenceMs': 507, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 1475} [2023-10-30 09:40:46.554206]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 929, 'inferenceMs': 914, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 978} [2023-10-30 09:40:46.730532]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 1019, 'inferenceMs': 1012, 'code': 200,\n> 'command': 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU',\n> 'canUseGPU': False, 'analysisRoundTripMs': 1079} [2023-10-30\n> 09:40:47.981645]: parking - No plates detected in run: {'success': True,\n> 'predictions': [], 'message': 'No plates found', 'processMs': 1416,\n> 'inferenceMs': 1410, 'code': 200, 'command': 'alpr', 'moduleId': 'ALPR',\n> 'executionProvider': 'CPU', 'canUseGPU': False, 'analysisRoundTripMs': 2239}\n> [2023-10-30 09:40:48.353518]: parking - No plates detected in run:\n> {'success': True, 'predictions': [], 'message': 'No plates found',\n> 'processMs': 1292, 'inferenceMs': 1266, 'code': 200, 'command': 'alpr',\n> 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 1327} [2023-10-30 09:40:49.467122]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 939, 'inferenceMs': 923, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 983} [2023-10-30 09:40:49.734043]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 821, 'inferenceMs': 814, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 899} [2023-10-30 09:40:50.255791]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 795, 'inferenceMs': 788, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 1399} [2023-10-30 09:40:50.450214]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 724, 'inferenceMs': 717, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 1568} [2023-10-30 09:40:53.621022]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 1493, 'inferenceMs': 1485, 'code': 200,\n> 'command': 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU',\n> 'canUseGPU': False, 'analysisRoundTripMs': 1575} [2023-10-30\n> 09:40:53.886894]: parking - No plates detected in run: {'success': True,\n> 'predictions': [], 'message': 'No plates found', 'processMs': 1499,\n> 'inferenceMs': 1482, 'code': 200, 'command': 'alpr', 'moduleId': 'ALPR',\n> 'executionProvider': 'CPU', 'canUseGPU': False, 'analysisRoundTripMs': 1606}\n> [2023-10-30 09:40:54.696891]: parking - No plates detected in run:\n> {'success': True, 'predictions': [], 'message': 'No plates found',\n> 'processMs': 1077, 'inferenceMs': 1061, 'code': 200, 'command': 'alpr',\n> 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 2358} [2023-10-30 09:40:54.920333]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 1072, 'inferenceMs': 1040, 'code': 200,\n> 'command': 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU',\n> 'canUseGPU': False, 'analysisRoundTripMs': 2420} [2023-10-30\n> 09:40:55.196719]: parking - No plates detected in run: {'success': True,\n> 'predictions': [], 'message': 'No plates found', 'processMs': 506,\n> 'inferenceMs': 500, 'code': 200, 'command': 'alpr', 'moduleId': 'ALPR',\n> 'executionProvider': 'CPU', 'canUseGPU': False, 'analysisRoundTripMs': 2684}\n> [2023-10-30 09:41:05.773089]: parking - No plates detected in run:\n> {'success': True, 'predictions': [], 'message': 'No plates found',\n> 'processMs': 1853, 'inferenceMs': 1842, 'code': 200, 'command': 'alpr',\n> 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 1953} [2023-10-30 09:41:05.963411]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 2080, 'inferenceMs': 2073, 'code': 200,\n> 'command': 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU',\n> 'canUseGPU': False, 'analysisRoundTripMs': 2195} [2023-10-30\n> 09:41:07.000829]: parking - No plates detected in run: {'success': True,\n> 'predictions': [], 'message': 'No plates found', 'processMs': 1197,\n> 'inferenceMs': 1184, 'code': 200, 'command': 'alpr', 'moduleId': 'ALPR',\n> 'executionProvider': 'CPU', 'canUseGPU': False, 'analysisRoundTripMs': 2201}\n> [2023-10-30 09:41:07.271950]: parking - No plates detected in run:\n> {'success': True, 'predictions': [], 'message': 'No plates found',\n> 'processMs': 1356, 'inferenceMs': 1322, 'code': 200, 'command': 'alpr',\n> 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 2560} [2023-10-30 09:41:07.819019]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 833, 'inferenceMs': 815, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 2970} [2023-10-30 09:41:14.551880]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 1492, 'inferenceMs': 1477, 'code': 200,\n> 'command': 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU',\n> 'canUseGPU': False, 'analysisRoundTripMs': 1572} [2023-10-30\n> 09:41:14.697499]: parking - No plates detected in run: {'success': True,\n> 'predictions': [], 'message': 'No plates found', 'processMs': 1571,\n> 'inferenceMs': 1536, 'code': 200, 'command': 'alpr', 'moduleId': 'ALPR',\n> 'executionProvider': 'CPU', 'canUseGPU': False, 'analysisRoundTripMs': 1617}\n> [2023-10-30 09:41:15.440695]: parking - No plates detected in run:\n> {'success': True, 'predictions': [], 'message': 'No plates found',\n> 'processMs': 887, 'inferenceMs': 879, 'code': 200, 'command': 'alpr',\n> 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 2169} [2023-10-30 09:41:24.192084]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 1309, 'inferenceMs': 1300, 'code': 200,\n> 'command': 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU',\n> 'canUseGPU': False, 'analysisRoundTripMs': 1396} [2023-10-30\n> 09:41:24.406224]: parking - No plates detected in run: {'success': True,\n> 'predictions': [], 'message': 'No plates found', 'processMs': 1319,\n> 'inferenceMs': 1312, 'code': 200, 'command': 'alpr', 'moduleId': 'ALPR',\n> 'executionProvider': 'CPU', 'canUseGPU': False, 'analysisRoundTripMs': 1363}\n> [2023-10-30 09:41:25.218874]: parking - No plates detected in run:\n> {'success': True, 'predictions': [], 'message': 'No plates found',\n> 'processMs': 1045, 'inferenceMs': 1032, 'code': 200, 'command': 'alpr',\n> 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 1934} [2023-10-30 09:41:34.272590]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 1176, 'inferenceMs': 1171, 'code': 200,\n> 'command': 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU',\n> 'canUseGPU': False, 'analysisRoundTripMs': 1237} [2023-10-30\n> 09:41:34.370495]: parking - No plates detected in run: {'success': True,\n> 'predictions': [], 'message': 'No plates found', 'processMs': 1292,\n> 'inferenceMs': 1276, 'code': 200, 'command': 'alpr', 'moduleId': 'ALPR',\n> 'executionProvider': 'CPU', 'canUseGPU': False, 'analysisRoundTripMs': 1337}\n> [2023-10-30 09:41:35.285338]: parking - No plates detected in run:\n> {'success': True, 'predictions': [], 'message': 'No plates found',\n> 'processMs': 927, 'inferenceMs': 919, 'code': 200, 'command': 'alpr',\n> 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 2248} [2023-10-30 09:41:44.084196]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 821, 'inferenceMs': 814, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 991} [2023-10-30 09:41:44.119784]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 874, 'inferenceMs': 867, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 1050} [2023-10-30 09:41:54.294468]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 795, 'inferenceMs': 789, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 830} [2023-10-30 09:41:54.524596]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 881, 'inferenceMs': 830, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 929} [2023-10-30 09:41:54.940314]: parking - No\n> plates detected in run: {'success': True, 'predictions': [], 'message': 'No\n> plates found', 'processMs': 650, 'inferenceMs': 645, 'code': 200, 'command':\n> 'alpr', 'moduleId': 'ALPR', 'executionProvider': 'CPU', 'canUseGPU': False,\n> 'analysisRoundTripMs': 1324}  \n  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nYou must be logged in to vote\n\n4 replies\n\nComment options\n\n####\n\nNickM-27 Oct 30, 2023\n\nCollaborator Author Sponsor\n\n-\n\nThis doesn't have anything to do with the stationary object changes, this has\nto do with the change that makes license plate being detected a significant\nchange. So now every time a better license plate is detected frigate will send\nan mqtt message for it.  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\nwizu Oct 31, 2023\n\n-\n\nDo you have any idea how to mitigate this? Run plate recognition only when\nmotion is detected? It's killing my cpu ;)  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\nNickM-27 Oct 31, 2023\n\nCollaborator Author Sponsor\n\n-\n\nI don't know your setup so it's difficult to suggest, I personally have not\nrun in to this issue  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\nNickM-27 Oct 31, 2023\n\nCollaborator Author Sponsor\n\n-\n\nyou could use the stationary tag to not run the ALPR on objects that are\nstationary  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n###\n\nidontcare99999\n\nNov 1, 2023\n\n-\n\nGood morning @NickM-27, thanks again for sharing this solution; it's\nperforming better than I what I could build in nodered. I'm curious about\nlines 42 to 45 of the script where x_mid is defined but then y_max is defined\nand not used. Following the same logic as x_mid, I created y_mid and then used\nit in the img.crop function and it seems to be working. Is there something I'm\nnot thinking through about the design?  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nYou must be logged in to vote\n\n1 reply\n\nComment options\n\n####\n\nNickM-27 Nov 1, 2023\n\nCollaborator Author Sponsor\n\n-\n\nI used to use y_max but I found that if the license plate y coords were off it\nwould be clipped and that it was just as accurate to include the entire\nvertical strip in the image sent to ALPR  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n###\n\nLyncTaylor\n\nNov 14, 2023\n\nSponsor\n\n-\n\n@NickM-27 thank you for all of your hard work on Frigate. I just launched my\nfirst custom model using Frigate+ and now I want to do license plate\ndetection. Very exciting!My issue is that I have tuned my LPR cameras to\nclearly read license plates at night, which basically blacks out the entire\nimage besides the license plate and maybe the tail lights. There is no image\nof a vehicle for Frigate to detect.Does anyone know how to trigger the license\nplate reading process if a vehicle cannot be seen in the image?  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nYou must be logged in to vote\n\n2 replies\n\nComment options\n\n####\n\nNickM-27 Nov 14, 2023\n\nCollaborator Author Sponsor\n\n-\n\nCurrently frigate requires the car to be detected. Another user has similar\nand was able to get things to work in a similar scenario.  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\nkyle4269 Nov 14, 2023\n\n-\n\nSo, I think Nick is referring to my situation. It's similar to yours where at\nnight it's pitch black and all you really see is head/tail lights and the\nlicense plate. Originally all I would get at night was motion boxes driving in\nor out of my driveway. After some tweaking I was able to identify the front of\nmy truck but for whatever reason the rear of my truck was never identified. I\ndid end up running a lot of clips through frigate while playing with different\nsettings. What helped me was increasing the motion threshold to 80.  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n###\n\nthundergreen\n\nNov 19, 2023\n\n-\n\nDeara all,I am also trying to install this stuff but it fails to install the\nlicense plate recognizer in openpjojectai home asistant addon.this is my log:\n\n    \n    \n    23:27:43:ALPR: No schemas installed 23:27:43:ALPR: (No schemas means: we can't detect if you're in light or dark mode) 23:27:44:ALPR: Installing CodeProject.AI Analysis Module 23:27:44:ALPR: ====================================================================== 23:27:44:ALPR: CodeProject.AI Installer 23:27:44:ALPR: ====================================================================== 23:27:44:ALPR: 4.07 GiB available on Docker 23:27:44:ALPR: General CodeProject.AI setup 23:27:44:ALPR: Setting permissions...Done 23:27:44:ALPR: GPU support 23:27:44:ALPR: CUDA Present...No 23:27:44:ALPR: ROCm Present...No 23:27:45:ALPR: Processing module ALPR 2.7.2 23:27:45:ALPR: Installing Python 3.8 23:27:45:ALPR: Python 3.8 is already installed 23:27:52:ALPR: Upgrading PIP in base python install... done 23:27:52:ALPR: Virtual Environment already present 23:27:53:ALPR: Checking for Python 3.8...Found Python 3.8.18. present 23:27:54:ALPR: Installing updated setuptools in virtual environment... Done 23:27:54:ALPR: Downloading libssl...Already downloaded 23:27:59:ALPR: Ensuring PIP compatibility... Done 23:27:59:ALPR: Python packages will be specified by requirements.linux.txt 23:28:08:ALPR: Upgrading PIP in virtual environment... done 23:28:09:ALPR: - Installing PaddelPaddle, the Deep Learning platform...Already installed 23:28:11:ALPR: Installing libssl...Done 23:28:14:ALPR: Downloading OCR models... already exists...Expanding... Done. 23:28:15:ALPR: Installing Python packages for ALPR 23:28:15:ALPR: Installing GPU-enabled libraries: No 23:28:23:ALPR: Upgrading PIP in base python install... done 23:28:23:ALPR: Virtual Environment already present 23:28:23:ALPR: Checking for Python 3.8...Found Python 3.8.18. present 23:28:25:ALPR: Installing updated setuptools in virtual environment... Done 23:28:27:ALPR: Downloading libssl...Already downloaded 23:28:28:ALPR: Searching for python3-pip...All good. 23:28:31:Preparing to install module 'ALPR' 23:28:31:Downloading module 'ALPR' 23:28:32:Installing module 'ALPR' 23:28:32:Installer script at '/app/setup.sh' 23:28:32:ALPR: Hi Docker! We will disable shared python installs for downloaded modules 23:28:32:ALPR: No schemas installed 23:28:32:ALPR: (No schemas means: we can't detect if you're in light or dark mode) 23:28:32:ALPR: Installing CodeProject.AI Analysis Module 23:28:32:ALPR: ====================================================================== 23:28:32:ALPR: CodeProject.AI Installer 23:28:32:ALPR: ====================================================================== 23:28:33:ALPR: 4.09 GiB available on Docker 23:28:33:ALPR: General CodeProject.AI setup 23:28:33:ALPR: Setting permissions...Done 23:28:33:ALPR: GPU support 23:28:33:ALPR: CUDA Present...No 23:28:33:ALPR: ROCm Present...No 23:28:34:ALPR: Processing module ALPR 2.7.2 23:28:34:ALPR: Installing Python 3.8 23:28:34:ALPR: Python 3.8 is already installed 23:28:34:ALPR: Upgrading PIP in virtual environment... done 23:28:43:ALPR: - Installing PaddelPaddle, the Deep Learning platform... (\u2714\ufe0f checked) Done 23:28:51:ALPR: Installing libssl...Done 23:29:03:ALPR: Installing updated setuptools in virtual environment... Done 23:29:04:ALPR: Downloading libssl...Already downloaded 23:29:07:ALPR: Downloading OCR models... already exists...Expanding... Done. 23:29:08:ALPR: Installing Python packages for ALPR 23:29:08:ALPR: Installing GPU-enabled libraries: No 23:29:22:ALPR: Ensuring PIP compatibility... Done 23:29:22:ALPR: Python packages will be specified by requirements.linux.txt 23:29:32:ALPR: Installing libssl...Done 23:29:34:ALPR: - Installing PaddelPaddle, the Deep Learning platform...Already installed 23:29:36:ALPR: Downloading OCR models... already exists...Expanding... Done. 23:29:37:ALPR: Installing Python packages for ALPR 23:29:37:ALPR: Installing GPU-enabled libraries: No 23:29:38:ALPR: Searching for python3-pip...All good. 23:29:47:ALPR: Upgrading PIP in base python install... done 23:29:47:ALPR: Virtual Environment already present 23:29:47:ALPR: Checking for Python 3.8...Found Python 3.8.18. present 23:30:00:ALPR: Searching for python3-pip...All good. 23:30:06:ALPR: Upgrading PIP in virtual environment... done 23:30:23:ALPR: Ensuring PIP compatibility... Done 23:30:23:ALPR: Python packages will be specified by requirements.linux.txt 23:30:31:ALPR: Installing updated setuptools in virtual environment... Done 23:30:32:ALPR: Downloading libssl...Already downloaded 23:30:37:ALPR: - Installing PaddelPaddle, the Deep Learning platform...Already installed 23:30:51:ALPR: Ensuring PIP compatibility... Done 23:30:51:ALPR: Python packages will be specified by requirements.linux.txt 23:30:53:ALPR: Installing libssl...Done 23:30:58:ALPR: - Installing PaddelPaddle, the Deep Learning platform...Already installed 23:30:58:ALPR: Downloading OCR models... already exists...Expanding... Done. 23:30:59:ALPR: Installing Python packages for ALPR 23:30:59:ALPR: Installing GPU-enabled libraries: No 23:31:32:ALPR: Searching for python3-pip...All good. 23:32:17:ALPR: Ensuring PIP compatibility... Done 23:32:17:ALPR: Python packages will be specified by requirements.linux.txt 23:32:35:ALPR: - Installing PaddelPaddle, the Deep Learning platform...Already installed\n\nSeems hanging somehow.. any idea? Would love getting this ruunning as local\nALPR does not work for home asistant OS.  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nYou must be logged in to vote\n\n2 replies\n\nComment options\n\n####\n\nNickM-27 Nov 20, 2023\n\nCollaborator Author Sponsor\n\n-\n\nwhat version of CodeProject is the addon set to?  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\nxavan83 Feb 26, 2024\n\n-\n\nDo you find a working version? I try 2.5.4 and 2.3.2 (either locally or in\ndocker). The installation seems to work well but the module fails to start  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n###\n\nJohnNeville\n\nDec 1, 2023\n\n-\n\nSomeone created a docker based project you can just tie into MQTT rather than\neven relying on Home Assistant and it seems pretty reliable.\nhttps://github.com/ljmerza/frigate_plate_recognizer  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nYou must be logged in to vote\n\n4 replies\n\nComment options\n\n####\n\nDrSpaldo Jan 3, 2024\n\n-\n\nI've just installed this. It looks pretty good, took a bit of mucking around\nto get it working with my camera but it appears to be going well now. It is\nappending the plate to the Frigate log, which is great :)  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\ndanielszilagyi Feb 2, 2024\n\n-\n\nI made a fork of it and added something quickly just to be able to run it as a\nHA addon... currently the config.yml needs to be manually copied into the data\ndirectory, will improve it if I have some spare time  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\nBliXem1 Feb 15, 2024\n\n-\n\nCan you tell me how this will work with MQTT within HA? This project is\nworking perfectly and it's also showing in Frigate. The solution I want is to\nopen the garage when the license plate has been detected. :)  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n####\n\nblakdog1978 Feb 26, 2024\n\n-\n\nGood morning I was looking for a solution like this for a long time, what are\nthe instructions to install it in Assioos  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nComment options\n\n###\n\njeremyward\n\nJan 14, 2024\n\n-\n\nI have Frigate working and detecting cars and people. I'm trying to get\nlicense_plate working. It seems like if I use Frigate+ there are already\ntrained models for this object type? Or will I need to train my own? I don't\nquite understand how to stand up Frigate+ as opposed to Frigate. Is that just\ninstalling the beta? I'm happy to pay for training and development. I was just\nhoping not to have to train (annotate and send images) etc. Thanks in advance\nfor any words of wisdom you might have.  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nYou must be logged in to vote\n\n1 reply\n\nComment options\n\n####\n\nNickM-27 Jan 14, 2024\n\nCollaborator Author Sponsor\n\n-\n\nAll of your questions should be answered in this docs pageat this time you\nmust annotate images yourself as the base model needs inputs from your cameras\nto be as accurate as possible.  \n---  \n  \nBeta Was this translation helpful? Give feedback.\n\nSign up for free to join this conversation on GitHub. Already have an account?\nSign in to comment\n\nCategory\n\nShow and tell\n\nLabels\n\nNone yet\n\n18 participants\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
