{"aid": "40187449", "title": "Autoconf and configure features that people find valuable", "url": "https://utcc.utoronto.ca/~cks/space/blog/sysadmin/AutoconfValuableFeatures", "domain": "utcc.utoronto.ca", "votes": 11, "user": "ingve", "posted_at": "2024-04-28 10:17:26", "comments": 0, "source_title": "Chris's Wiki :: blog/sysadmin/AutoconfValuableFeatures", "source_text": "Chris's Wiki :: blog/sysadmin/AutoconfValuableFeatures\n\nChris Siebenmann :: CSpace \u00bb blog \u00bb sysadmin \u00bb AutoconfValuableFeatures\n\nWelcome, guest.\n\n## Autoconf and configure features that people find valuable\n\nApril 27, 2024\n\nIn the wake of the XZ Utils backdoor, which involved GNU Autoconf, it has been\npopular to suggest that Autoconf should go away. Some of the people suggesting\nthis have also been proposing that the replacement for Autoconf and the\n'configure' scripts it generates be something simpler. As a system\nadministrator who interacts with configure scripts (and autoconf) and who\ndeals with building projects such as OpenZFS, it is my view that people\nproposing simpler replacements may not be seeing the features that people like\nme find valuable in practice.\n\n(For this I'm setting aside the (wasteful) cost of replacing Autoconf.)\n\nProjects such as OpenZFS and others rely on their configuration system to\ndetect various aspects of the system they're being built on that can't simply\nbe assumed. For OpenZFS, this includes various aspects of the (internal)\nkernel 'API'; for other projects, such as conserver, this covers things like\nwhether or not the system has IPMI libraries available. As a system\nadministrator building these projects, I want them to automatically detect all\nof this rather than forcing me to do it by hand to set build options (or\ndemanding that I install all of the libraries and so on that they might\npossibly want to use).\n\nAs a system administrator, one large thing that I find valuable about\nconfigure is that it doesn't require me to change anything shipped with the\nsoftware in order to configure the software. I can configure the software\nusing a command line, which means that I can use various means to save and\nrecall that command line, ranging from 'how to build this here' documentation\nto automated scripts.\n\nNormal configure scripts also let me and other people set the install location\nfor the software. This is a relatively critical feature for programs that may\nbe installed as a Linux distribution package, as a *BSD third party package,\nby the local system administrator, or by an individual user putting them\nsomewhere in their own home directory, since all four of these typically need\ndifferent install locations. If a replacement configure system does not accept\nat least a '--prefix' argument or the equivalent, it becomes much less useful\nin practice.\n\nMany GNU configure scripts also let the person configuring the software set\nvarious options for what features it will include, how it will behave by\ndefault, and so on. How much these are used varies significantly between\nprograms (and between people building the program), but some of the time\nthey're critical for selecting defaults and enabling (or disabling) features\nthat not everyone wants. A replacement configure system that doesn't support\nbuild options like these is less useful for anyone who wants to build such\nsoftware with non-standard options, and it may force software to drop build\noptions entirely.\n\n(There are some people who would say that software should not have build\noptions any more than it should have runtime configuration settings, but this\nis not exactly a popular position.)\n\nThis is my list, so other people may well value other features that are\nsupported by Autoconf and configure (for example, the ability to set C\ncompiler flags, or that it's well supported for building RPMs).\n\n(2 comments.)\n\nWritten on 27 April 2024.\n\n| \u00ab| I wish projects would reliably use their release announcements mechanisms  \n---|---  \n  \nThese are my WanderingThoughts (About the blog)\n\nFull index of entries Recent comments\n\nThis is part of CSpace, and is written by ChrisSiebenmann. Mastodon: @cks\nTwitter @thatcks\n\n* * *\n\nCategories: links, linux, programming, python, snark, solaris, spam, sysadmin,\ntech, unix, web Also: (Sub)topics\n\nThis is a DWiki. GettingAround (Help)\n\nPage tools: View Source, Add Comment.\n\nAtom Syndication: Recent Comments.\n\nLast modified: Sat Apr 27 22:29:37 2024 This dinky wiki is brought to you by\nthe Insane Hackers Guild, Python sub-branch.\n\n", "frontpage": true}
