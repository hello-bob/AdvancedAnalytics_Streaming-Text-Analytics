{"aid": "40135723", "title": "Latency numbers every front end developer should know", "url": "https://vercel.com/blog/latency-numbers-every-web-developer-should-know", "domain": "vercel.com", "votes": 4, "user": "cramforce", "posted_at": "2024-04-23 18:53:33", "comments": 0, "source_title": "Latency numbers every frontend developer should know \u2013 Vercel", "source_text": "Latency numbers every frontend developer should know \u2013 Vercel\n\nSkip to content\n\nContactLog In\n\nSign Up\n\n\u2190 Back to Blog\n\nEngineering\n\nTuesday, April 23rd 2024\n\n# Latency numbers every frontend developer should know\n\nA frontend take on Jeff Dean's \"Latency Numbers Every Programmer Should Know\".\n\nPosted by\n\nMalte Ubl\n\nCTO, Vercel\n\nWeb page load times and responsiveness to user action in web apps is a primary\ndriver of user satisfaction\u2013and both are often dominated by network latency.\n\nLatency itself is a function of the user's connection to the internet (Wi-Fi,\nLTE, 5G), how far away the server is that the user is connecting to, and the\nquality of the network in between.\n\nWhile the latency numbers may seem low by themselves, they compound quickly.\nFor example, a network waterfall of depth 3 on a 300ms link leads to a total\nlatency of 900ms. Technologies like React Server Components can move network\nwaterfalls to the server where the same request pattern might be 100 times as\nfast.\n\nMetric| Estimate| Metric Impact  \n---|---|---  \nWifi latency to internetWifi adds minimal latency to a connection. This can\nincrease with a weak signal or older hardware.| 1-4ms| TTFB, FCP, LCP  \n5G high-band (millimeter wave) latency to internetMillimeter wave is the\nfastest deployed mobile technology. However, it is only practical to use in\ndense urban areas with a line of sight to the radio tower.| 1-5ms| TTFB, FCP,\nLCP  \nUser-space budget per frame for 60 frames per secondOn a 60fps device, a frame\nis painted every 16ms. However, the device needs some time for the actual\nprocessing of the frame. The time here is the time available for your code to\ncompute what should be painted.| 5-10ms| Smooth framerate  \n5G mid-band latency to internetThis is the regular 5G latency. Experience may\nvary in case of bad signal or an overloaded tower.| 10-30ms| TTFB, FCP, LCP  \nRound trip latency to a service or database in same cloud regionThis is the\nlatency to a different service that is deployed close to you without going to\nthe internet.| 10ms| TTFB, FCP, LCP  \nLTE latency to internetTypical latency for LTE, aka 4G cellular networks.|\n15-50ms| TTFB, FCP, LCP  \nFrame-duration at 60 frames per second60 frames per second is the most popular\nframe rate for display devices. However, some newer devices support higher\nframe rates like 90 or 120 fps.| 16ms| Smooth frame rate  \nRound trip latency to other city on the same continentThis is the latency you\ncan expect if you deploy to a region on the same continent as your user. It's\ncalculated for a distance of 5000 kilometers, so the actual latency may be\nslightly higher or lower.| 33ms| TTFB, FCP, LCP  \nShortest duration of time perceived by humans as time having passedWhen\nresponding to user input, staying below this duration means that your user\nwill perceive the response as instant. Citation| 40-80ms| INP  \nTime to parse 1MB of CSSParsing CSS is part of the work the browser has to\nperform to render a web page.| 100ms| FCP, LCP  \nTime to parse 1MB of HTMLParsing HTML is part of the work the browser has to\nperform to render a web page. While it is often negligible for shorter web\npages, it can become a major factor for very long articles.| 120ms| FCP, LCP  \n3G latency to internet3G is the slowest cellular standard in common use\ntoday.| 150ms| TTFB, FCP, LCP  \nRound trip latency to other side of earth with a high quality network (cold\npotato routing)This is the worst-case latency you should see if you deploy a\nservice to a single region.| 150ms| TTFB, FCP, LCP  \nTime to parse 1MB of JSParsing JavaScript can have a major impact on page load\ntime as it often grows more quickly than CSS and JS. Code-splitting is the\nprimary technique to minimize JS size.| 150ms| FCP, LCP, INP  \nDuration of time perceived by humans as sluggishWhen reacting to user input, a\nresponse slower than this value will be perceived as having to wait. 200ms is\nalso the threshold for \"Needs improvement\" in INP.| 200ms| INP  \nRound trip latency to other side of earth without leased fiber (hot potato\nrouting)When users directly connect to a faraway server or when using a low-\ncost CDN, then latencies for users may double from passing bytes through the\ncheapest path possible.| 300ms| TTFB, FCP, LCP  \n  \n## Methodology\n\nDevice-dependent numbers are measured with a 2023 high-end Android phone. Most\nlaptops will be faster, iPhone will be faster, many other devices will be\nslower.\n\n## Credit\n\nInspired by Jeff Dean's \"Latency Numbers Every Programmer Should Know\". For\nmany more numbers like this one, see Napkin Math.\n\nPosted by\n\nMalte Ubl\n\nCTO, Vercel\n\nDevelop.Preview.Ship.\n\nVercel is the platform for frontend developers, providing the speed and\nreliability innovators need to create at the moment of inspiration.\n\nStart Deploying\n\nTour the Product\n\n", "frontpage": false}
