{"aid": "40223510", "title": "Show HN: Maps and Splats \u2013 Mashup of 3D tile maps with Gaussian Splats", "url": "https://maps-and-splats.glitch.me/", "domain": "maps-and-splats.glitch.me", "votes": 11, "user": "kfarr", "posted_at": "2024-05-01 14:12:36", "comments": 0, "source_title": "GitHub - pixelastic/css-flags: Flags of the world with only one div", "source_text": "GitHub - pixelastic/css-flags: Flags of the world with only one div\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\npixelastic / css-flags Public\n\n  * Notifications\n  * Fork 56\n  * Star 304\n\nFlags of the world with only one div\n\npixelastic.github.io/css-flags/\n\n### License\n\nMIT license\n\n304 stars 56 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# pixelastic/css-flags\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n2 Branches\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\npixelasticAdd licenseJan 8, 20194442fdd \u00b7 Jan 8, 2019Jan 8, 2019\n\n## History\n\n268 Commits  \n  \n### app\n\n|\n\n### app\n\n| Adding comments on the clever way to draw stars| May 15, 2017  \n  \n### scripts\n\n|\n\n### scripts\n\n| fix(autoprefixer): Update list of browsers to support| Nov 6, 2016  \n  \n### src\n\n|\n\n### src\n\n| Adding Nepal flag| Nov 12, 2016  \n  \n### symlinks\n\n|\n\n### symlinks\n\n| Updated official Taiwan name| Nov 6, 2016  \n  \n### tests\n\n|\n\n### tests\n\n| feat(casper): Adding first Casper boilerplate| Jan 7, 2016  \n  \n### .eslintrc\n\n|\n\n### .eslintrc\n\n| feat(search): Add search| Jan 7, 2016  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| feat(search): Add search| Jan 7, 2016  \n  \n### .npmrc\n\n|\n\n### .npmrc\n\n| chore(clean): Cleaning up files.| Apr 22, 2015  \n  \n### Gemfile\n\n|\n\n### Gemfile\n\n| Add Gemfile and package.json| Nov 4, 2015  \n  \n### Gemfile.lock\n\n|\n\n### Gemfile.lock\n\n| Add Gemfile and package.json| Nov 4, 2015  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Add license| Jan 8, 2019  \n  \n### README.md\n\n|\n\n### README.md\n\n| fix(README): change minor typos| Jun 10, 2017  \n  \n### Symbols.json\n\n|\n\n### Symbols.json\n\n| Adding icomoon.io JSON export| May 20, 2016  \n  \n### brunch-config.coffee\n\n|\n\n### brunch-config.coffee\n\n| fix(autoprefixer): Update list of browsers to support| Nov 6, 2016  \n  \n### flags.json\n\n|\n\n### flags.json\n\n| Updated official Taiwan name| Nov 6, 2016  \n  \n### package.json\n\n|\n\n### package.json\n\n| Adding comments on the clever way to draw stars| May 15, 2017  \n  \n### yarn.lock\n\n|\n\n### yarn.lock\n\n| chore(yarn): update lockfile| Jun 10, 2017  \n  \n## Repository files navigation\n\n# CSS Flags\n\nRecreating all the flags of the nations of the world in pure CSS, using only\none div per flag.\n\nYou can see it live on https://pixelastic.github.io/css-flags/\n\nThis side-project has no real-world application, it was just an exercise to\npush the boundaries of what I know about CSS. Trying to use the language to do\nthings it wasn't meant to do in the first place taught me a lot about the\nlanguage.\n\n## Running the project locally\n\n    \n    \n    bundle install npm install npm run serve\n\nThe website will then be available on http://localhost:4001/.\n\n## Contributing\n\nIf you've spotted an issue with the rendering of a specific flag or if you\nknow how to do one of the missing flags, I'm open to pull requests.\n\n## Compatibility\n\nI've only tested the rendering on Chrome and Safari so far. I plan on making\nit cross-browser but I need to add visual non-regression testing first.\n\n## Sources\n\nTo create the flags, my three most important sources were the Wikipedia,\nCRWFlags and Vexilla Mundi. CRWFlags contains valuable information about every\nflag history, allowing me to better understand how they were constructed.\nVexilla Mundi contains handy construction sheet images with dimensions and\nangles.\n\nI also used this list to get the list of all countries with their three letter\nISO code.). This website also gives a nice overview.\n\nNot all flags have an exact definition of the colors to use. Best case\nscenario, we have the official RGB/Hexa (or even Pantone) name of the color.\nWorst case, we have nothing and have to use the color used on the Wikipedia or\nVexilla Mundi, even if it is not the official one.\n\n## Icons\n\nTo be able to display some of the very specific symbols used on some flags, I\nhad to craft my own icon font, using icomoon.io.\n\nI had to find svg versions of all the symbols used. Sometimes the symbols\nalready exists in the UTF8 table, so I just have to grab them from existing\nfonts (or use utf8icons.com).\n\nBut more often, I had to use Vexilla Mundi. The website provides nice png\nimages of all the symbols. Unfortunately, the symbols they provide are already\ncolored, and I needed them black to use in the font so I was able to define\nthe color myself.\n\nThe following script will do exactly that:\n\n    \n    \n    convert input.png \\ -alpha off \\ -fill black \\ -colorize 100 \\ -alpha on \\ output.png\n\nI then had to trim the image to remove any whitespace left around the symbol:\n\n    \n    \n    convert input.png -trim output.png\n\nThen, I need to convert the png to an svg. I couldn't find any commandline\ntool giving satisfying results, so I had to use an online service to do it:\nonline-convert.com\n\nOnce I got the svg, it is just a matter of uploading it to icomoon, center the\nsymbol, scale it and adjust the border. I also used the reserved namespace in\nthe UTF8 table for custom characters. And finally exported the font.\n\n## FAQS\n\n### You're using half pixels. That does not make any sense.\n\nOk, that's not really a question, but I'll explain anyway.\n\nI try to use percentage as much as I can, when it makes sense. Percentage are\nrelative to either the width or the height of the flag. When doing a tricolore\nflag, I will use 33.33% as the width of each stripe for example. But as soon\nas I need to draw a square that has the same width than height, I can no\nlonger user percentage values, I need real, absolute, pixel values.\n\n## Related projects\n\n### img2css\n\nhttp://github.com/pixelastic/img2css/\n\nCommandline tool to convert any image (jpg or png) to full CSS. This will\nreplicate all pixels of the initial image using numerous box-shadows.\n\nThis works wel but results in really heavy generated CSS (several MB), so I\nchoose not to use it in this project.\n\n### pantone2hex\n\nhttp://github.com/pixelastic/pantone2hex/\n\nCommandline tool to get an approximation in hexadecimal of a Pantone color\nvalue. Really useful as Vexilla Mundi gives color values in Pantone.\n\n### Vexillum\n\nhttps://github.com/talgautb/vexillum\n\nSomeone else had the same idea.\n\n## Tips and tricks\n\nHere is an incomplete list of the tricks I had to use:\n\n### Invisible text-shadow\n\nI sometimes put an invisible symbol in an after or before element (through\ncolor: transparent) and positioned it at top:0; left: 0.\n\nThen I added several text-shadow to it, with a full color. Doing so helped in\ngetting the coordinates right because everything is then relative to the\norigin 0,0.\n\n### first-letter / first-line\n\nWhen I needed to add more than 1 symbol in an after/before, or if I needed the\nsame symbol, but on different sizes, I had to be sneaky.\n\nBy setting a content of \"XY\\AZ\" and then using both first-letter and first-\nline, I was able to independently target X, Y and Z. \\A is the special\ncharacter to add a new line in a content.\n\nDoing so let me use three different symbols, with different color and sizes\nwith only one pseudo-element.\n\nIt is impossible to apply any transform (like a rotation) on those elements,\nthough.\n\n## TODO\n\nThis project is not over, there are still some elements that I would like to\nadd:\n\n  * Link to codepen to let users play with the code\n  * Making it work on more browsers...\n  * ...which implies that I need to add a visual testing framework on top if it\n  * Adding the missing flags\n  * Using a clip-path when only one star instead of a font\n  * Building the font with npm instead of icomoon.io\n  * Adding stars to Brazil\n  * Doing the Nepal flag\n  * Check if Lea Verou has a background pattern close to the British India\n  * Add the Leather Pride flag as an easter egg\n\n## About\n\nFlags of the world with only one div\n\npixelastic.github.io/css-flags/\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n304 stars\n\n### Watchers\n\n13 watching\n\n### Forks\n\n56 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Contributors 5\n\n## Languages\n\n  * CSS 61.3%\n  * HTML 34.8%\n  * JavaScript 2.4%\n  * Ruby 1.1%\n  * Other 0.4%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": true}
