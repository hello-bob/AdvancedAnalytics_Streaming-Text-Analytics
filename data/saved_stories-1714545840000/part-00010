{"aid": "40215582", "title": "How to remote pair-code usefully", "url": "https://joshduff.com/2021-08-24-pair-coding.html", "domain": "joshduff.com", "votes": 1, "user": "luu", "posted_at": "2024-04-30 19:58:04", "comments": 0, "source_title": "How to remote pair-code usefully", "source_text": "Josh Duff | How to remote pair-code usefully\n\n# How to remote pair-code usefully\n\nI like pair-coding and think it can be great. Done well, it multiplies the\nabilities/usefulness of two developers, rather than just adding them together.\n\nThe easiest way to pair in a remote setting is one person driving the keyboard\nand sharing their screen, and one person observing and communicating verbally\nor by sending code snippets via direct message.\n\nThe observer can provide a lot of value by\n\n  * reading the driver's code as it is being written and mentally validating that it solves the problem at hand (kind of like a linter, but for business logic)\n  * looking up documentation or searching Stack Overflow so that driver doesn't have to mode-switch away from the code they're staring at\n  * validating or checking assumptions that the driver is making\n  * asking questions about current/next steps\n\nThe better the driver is at \"programming out loud\" and narrating their thought\nprocess, the easier it is for the observer to provide value.\n\nIf the observer is paying attention and knows what you're trying to do, the\ndriver can often bang out code pretty efficiently, trusting the observer to\ncatch issues on the fly that would have burned time in tracking them down\nlater.\n\n## Distracted coding kills\n\nIf the driver or the observer (especially the observer) ever get distracted\nand aren't highly engaged in what you're working on, it can suck all the\nenergy out of the session and make it difficult to spin back up again.\n\nIf something happens that you really need to pay attention to, you should\nimmediately say \"I need to step away for a bit\" and disconnect from the call\nuntil you're able to be engaged again.\n\nIt's really great to be able to lean on someone else's brain while problem-\nsolving. If they're not engaged, leaning on their brain will lead to falling\nover, and train you not to count on them.\n\n## Communicating verbally while coding can be frustrating\n\nVerbalizing what you are trying to do to another human while you're in coding-\nmode can be really difficult if you're not used to it.\n\nDon't give up on it \u2013 it gets easier as you exercise it, and I believe the\nskill transfers over to lots of other communicating-with-prose-about-code\ncontexts.\n\nOne of the reasons I dislike screen-sharing tools like Screenhero that let you\nclick/type on the other person's screen is because it lets you give in to the\n\"it's hard to explain, just let me do it\".\n\nHaving to explain it with words is where a lot of the value comes from, and I\nbelieve it levels up your ability to communicate as teammates.\n\nMore posts Edit\n\n", "frontpage": false}
