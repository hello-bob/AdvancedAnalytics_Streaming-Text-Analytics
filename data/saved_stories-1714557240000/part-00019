{"aid": "40219130", "title": "Curl and libcurl creator Daniel Stenberg's About page", "url": "https://daniel.haxx.se/about.html", "domain": "haxx.se", "votes": 2, "user": "vram22", "posted_at": "2024-05-01 03:16:31", "comments": 0, "source_title": "About Daniel", "source_text": "About Daniel\n\nfront | blog | talks | videos | docs | photos | podcasts | contact | about me\n\nThis is the story of my background. What I've done and how I ended up like\nthis.\n\n# Daniel Stenberg\n\nI was born and raised in Huddinge, a suburb south of Sweden's capital\nStockholm. I have two brothers and two sisters. My parents have no computer\nbackground or interest. My dad was a construction worker for most of his life\nand my mom has mostly been into arts and handcrafts.\n\n## Before computers\n\nAt the age of seven, I started playing football (soccer as Americans would\nsay) in a team. I enjoyed it properly and kept playing in that team quite\nactively - even at a fairly decent level - until I was seventeen years old\nwhen school and my computer interest eventually made me quit.\n\nIn school I was a fairly good student, but never one of the popular ones, and\nmath was always one of my favorite subjects.\n\n## 1985 - it begins\n\nI discovered the joy of computers for the first time sometime in the early 80s\nwhen Kjell, a friend of mine, and I entered data sets in Basic that we eagerly\nread in some of the first C64 magazines at his place and since then I have\nbeen hooked. Kjell owned a C64 before me so it was in his home I had my first\nexperiences in the computer world. Me and my younger brother Bj\u00f6rn then\nsubsequently saved up money for our first own computer that we finally bought\ntogether when I was 14 years old, 1985. A Commodore 64. A glorious and\nmarvelous Commodore 64.\n\nI was immediately fascinated by the concept of being able to control the\ncomputer and tell it what to do and how. I headed straight into programming\nand quickly learned BASIC and how to do simple stuff. Soon I realized that the\ncool stuff we could see other people do and all the games etc were not made\nwith BASIC. What did they use? Assembler.\n\nThe three of us (me, Kjell and Bj\u00f6rn) dove wholeheartedly into the wonderful\nworld of 6510 assembly. We started hacking demos because we liked watching\ndemos and we wanted to make demos too. We figured out that all the cool demo\nmaking people were part of demo-groups and had nicknames and so on, and we\nfelt we too had to join that spirit and quickly founded our own c64 group\nConfusing Solution (we could make fun of ourselves already back then).\n\nThis was when I started spending spare time on programming. Up to several\nhours per day. This is something that I have never stopped doing since...\n\n## Demo Scene\n\nDue to a happy coincidence, Triad and Fairlight, two of the giant groups on\nthe demo scene of the time, organized a copy-party in our school\n(Kvarnbergsskolan) in Huddinge in the late winter 1987. We got sucked deeper\nand harder into the C64 demo and hacker spirit and community. During that\nmeet-up with hundreds of other C64 geeks we met many like-minded people,\nreleased our first demo ever (actually, our first software release at all any\ncategory - I was 17 years old by then). We released two more demos as\nConfusing Solution in the early 1998. We spent more and more of our spare time\ncoding C64 assembly.\n\nLater in the spring 1988, we were invited to a small gathering by our friend\nFonzi who was then the leading person in the C64 group called Super Swap\nSweden (SSS). When asked, we decided to join their team. At that time, Super\nSwap Sweden was already a large and well known group in Sweden that made both\ncracks (ie removed copy protection from games and copied pirated versions of\nthem) and demos. We were taken away by the attention and did not hesitate to\njoin this large group of friends. We went on and released more demos under the\nSSS flag, got better and learned more about the C64's undocumented corners,\nopcodes and circuits.\n\n## bagder\n\nThere was this established nickname tradition on the demo scene. I started out\ncalling myself D$85 based on my initials and the year I got the C64, but I did\nnot really like it (for one it was impossible to pronounce) and when we joined\nSSS I switched.\n\nI figured I would pick an animal and I went with bagder. I quickly realized I\nhad actually misspelled the animal, but then it also dawned on me that my\nnickname would be better and more special this way and so I stuck with it.\nLike a dyslexic badger. People have frequently been mistaking my nick for the\nanimal ever since.\n\nI used the nickname during our demo years and after that period, I have\nselected this name for various other services and account names. Like on\nGitHub, Twitter etc.\n\n## Horizon\n\nThe three of us (me, Kjell and Bj\u00f6rn) and a few other coders left SSS after a\nwhile and instead we created Horizon together with a bunch of other demo-\nhacker friends from the Swedish scene (several came from the group\nThundercats) and now we were definitely one of the leading demo groups in\nSweden. We wanted to have a more tight-knit group that would do and focus on\ndemos only - no cracking at all. We won a whole range of demo competitions in\nSweden and Denmark during that period of a few years. We also organized some\nof the biggest nerd-meetings in northern Europe during the period. So called\ncopy-parties. We would gather more than 500 teenagers from all over northern\nEurope in a school over a weekend and spend it hacking on code, chat, drink\ncoca cola and then compete in a demo competition toward the end. (Such events\nwould later on get called LAN-parties but back in the late 80s and early 90s\nwe had no LANs...)\n\n## Skyline Techniques\n\nDuring these days I also wrote a music editor (a program which you use to\ncompose and create music) with a separate optimized production music player\nand under the name Skyline Techniques Bj\u00f6rn and Linus wrote several catchy SID\ntunes that we and others would use in many demos of the time. We had a dream\nof being able to produce and sell music to commercial C64 productions but that\nnever materialized.\n\n## Games\n\nWe created at least two quite well-developed and functioning game embryos on\nthe C64, one was a two-car split-screen driving game with a top-view of the\ncars and the other was a horizontal shoot-em up game with quite advanced\nmultiplexed sprite enemies which allowed for 20-30 simultaneously flying\nobjects to shoot down. Creating the games and reaching maybe 90% of them was\nfun. Actually having the discipline to take them all the way was another\nmatter so we never completed any of them.\n\nThe C64 golden age faded away for us - it felt like we were done with that\nplatform and its set of limitations. Several of us looked at making the jump\nover to the new emerging platform: the Amiga and continue the same activities\nthere - as was common at the time - but the Amiga's almost unlimited\nconditions (compared to the C64) with lots of memory, super-fast CPU with\nplenty of registers, blitter (co-processor) and audio chip took in many ways\naway much of what we considered was the charm of demo-hacking: the strict\nlimits. We only released one demo on the Amiga as Horizon.\n\n(There's a whole separate story about a different set of people who also\ncalled themselves Horizon on the Amiga and who also did demos, but this is not\nthe place to tell that story.)\n\nI did my mandatory military service basically through-out the entire 1990\nwithout a clear direction of what to program next.\n\n## No university for me\n\nIn early 1991 I applied for a course at the university while doing odd jobs as\na substitute teacher during the spring. A friend at IBM contacted me and\noffered me a job, so I dropped the studying plans and figured I could always\ngo back and do that later instead. Which I then never did.\n\n## Amiga\n\nInstead of continuing with demos, I and Kjell started our ambitious project\nFrexxEd around 1991 - a customizable and programmable text editor for the\nAmiga. In that same year - when I was 20 years old and moved into my first\napartment I shared with my brother - I debuted in the IT industry\nprofessionally by starting that job at IBM. I worked with RS/6000 machines and\nIBM's Unix flavor called AIX. This was my first introduction to Unix and C and\nwow, I was immediately hooked and fascinated by the unix concepts. \"Unix is\nthe future!\" I said to my girlfriend then (she would later become the Mrs.\nStenberg I'm married to today), who of course had no any idea what I was\ntalking about. I learned all this new stuff primarily through man pages. My\nactual work was probably called something like system installation and setup\nof RS/6000 machines that arrived to us to get customized and polished before\nthey were sent out to customers.\n\n## IBM\n\nAt IBM, I learned that there were lots of free source code for programs\navailable. That there is a super cool editor called Emacs which you can do\nanything with. Much of the inspiration and ideas for FrexxEd which we\ncontinued to work on I got through my discoveries and lessons with Emacs on\nthat job. Emacs on the Amiga existed too, but it did not really come to\njustice there and we thought that we could do better in the (somewhat limited\ncompared to the big unix machines of the times) Amiga environment.\n\n## FrexxEd\n\nBasically the only thing I did software-wise on the Amiga was to write\nFrexxEd. I wrote a dedicated scripting language for it, the Frexx Programming\nLanguage (FPL). I made FPL really portable and it ran fine on several unixes\nas well as on AmigaOS, etc. Meanwhile, Bj\u00f6rn (my brother, remember?) wrote up\na BBS system under OS/2 that used FPL quite extensively. We ran our dual-line\nBBS The Holy Grail for several years into the 90s.\n\nThe name FrexxEd was just a playful word using two xx's which we enjoyed and\nthat habit has followed us later in life too. Basically the Swedish word fr\u00e4ck\n(translates to cheeky) Englishified with xes, and then Ed tacked on to the end\nof it like many text editors were named at that time. The fact that the name\nturned similar to the Amiga scripting language Arexx was actually not\nintentional.\n\nFrexxEd was shareware for long time. We came from the C64 and Amiga background\nwhere FOSS was not a familiar concept and it was not at all existing within\nthat culture - sadly enough, it would have been a really good idea for that\ncommunity too. Eventually I learned the true ways of life and I released FPL\nfully open. In modern times people who run one of them new AmigaOS versions\nhave found a renewed interest in FrexxEd and they have ported it over. It is\nexciting that it is still alive - containing more than 30 years old code of\nours. FrexxEd code still exists on GitHub.\n\n## Dancer\n\n1993, I started working as a full-time C developer for real (at Frontec\nRailway Systems) and I programmed embedded devices that measured temperatures\nof railway wagons' axle bearings when they passed over the device and its\ninfrared camera - and I came across and programmed on SunOS and DELL Unix as\nwell. I discovered IRC and the fact that there were lots of people out there\nto talk to. I hung out a lot in #amiga on EFnet, before IRCnet existed. It\nsoon led to me writing an IRC bot on my spare time with a friend (Bjorn Reese)\nfrom #amiga - a bot that could be scripted with FPL! We released the bot\n(Dancer) and FPL fully open source. It was not anything we considered much\nreally, there was never any other consideration. If we could stand on the\nshoulders of giants and use this large amount of good software, the least we\ncould do was to also also share our contribution with the world. That bot was\nwritten for unix systems primarily (I believe SunOS on Sparc was the system we\nused) and was my first real application doing TCP/IP networking.\n\nBy now the Amiga had completely left my life, and I used my job's modem pool\nwith dial-back to log on to my employer's various unix machines to IRC and\nhack on bots on my spare time. I still spent a lot of time in #amiga and\n#amigaswe where I got lots of online friends.\n\n## Httpget\n\nAfter the summer 1996, I changed roles at work and I started as a consultant\nwithin embedded systems. Frontec Tekniksystem was then the name of my new\nprofessional home. At my first assignment I improved a PPP implementation for\nEricsson running on pSOS. I then moved on and implemented my own malloc\nreplacement. That was the beginnings of my years as an embedded systems\nconsultant. Almost always working at the customer's place deeply within their\nproduct teams.\n\nOne day, later in 1996, it struck me that of course it would be cool to have a\nservice added to the bot where you could ask it for up-to-date exchange rates\nof currencies. Shopping and prices were often discussed in the channels, so\nwhy not offer something that could make the bot say what 100 SEK would equal\nin US dollars? OK, to make this happen I first needed a command-line tool to\ndownload currency rates from a web page at a regular interval.\n\nI found a little tool online called httpget which was written by a Brazilian\nfellow named Rafael Sagula. It fit my purposes almost perfectly. It only\nrequired a few small fixes and patches first...\n\nIt is a curious coincident that the first httpget release (0.1) was done on\nNovember 11 1996 which also happens to be the same day the first ever Wget\nrelease was done! Wget has been considered a curl alternative or substitute by\nmany command line tool users.\n\nAround this time I installed my first Linux systems at work, and we fired up\nour first public web servers and more. As I had experience from various other\nunixes from before, Linux was not particularly challenging to install but was\nstill way more interesting due to its price and level of freedom.\n\nI had more or less taken over as leader of the httpget project when I found\nanother currency exchange site that was hosting data and offering it using\nGOPHER, I had to implement support for that protocol too. And then httpget was\nnot a good name anymore so I changed it to Urlget. But not long after that, I\nadded FTP support as well and then the step to adding FTP upload support was\nnot big.\n\nIn the late 1997 we (I and my friend Linus) registered our first company, Haxx\nHB, to use when doing odd spare time jobs outside of our regular employments.\nAnother playful name (hack in plural, hacks, but with two Xs instead of cks).\nA couple of years later we converted it into a proper and real corporation;\naktiebolag in Swedish.\n\n## Spare time hacking and full-time work\n\nAlready pretty early on in my adult life I established a system that would\nallow me to keep doing spare time software while still working full-time and\nspending time with my wife and later on my kids during the day. I realized\nthey need more sleep than I do, so I simply started staying up after they go\nto bed and I get around two extra hours, totally alone to work on whatever I\nwant.\n\nTwo hours per day, every day through decades end up a lot of time. Of course I\nalso spend a little extra at times and during vacations I do not spend as\nmuch.\n\n## curl\n\nBy the time the urlget tool got the ability to do uploads, the name had became\nmisleading again, so the project was up for a name change one more time and\ncurl was born. curl as in see URL or client for URLs. Gee, naming things is\nreally hard!\n\nI made the first curl release on March 20, 1998. curl version 4.0, as I kept\nthe version numbering from the previous names.\n\nMy interest for the Dancer project faded away slowly and I gave most of my\nspare time programming focus on curl.\n\nOf course, over time I also dipped into and participated in other projects. I\nspent a lot of time in hypermail - a program that converts mailboxes to HTML\npages. I have written mail2sms to convert email to SMS (it was useful in the\ntimes before the smartphones), and been working in Smash to send SMS messages\nto operators' modem receivers. I worked with Trio - a printf and string\nfunction library. I have contributed code to and I am involved somewhat in\nwget. I was an early contributor and committer in the Subversion project. I\nwrite and maintain roffit - a tool for to create HTML pages from nroff files\n(man pages).\n\n## Licensing\n\ncurl had started out GPL licensed pretty much without thought, but after some\nthinking I decided the GPL approach was not exactly in line with my\nphilosophy.\n\nIn 1998 when we released curl 4.9, we switched to the MPL license. It is a\nliberal license and was much more in line with what I really wanted people to\ntake away from curl: have them send back code if they actually change the curl\ncode, but otherwise they could do whatever they wanted.\n\nHowever, MPL proved to be a really unwise choice when we later launched\nlibcurl - curl as a library made for other programs to use. Because the MPL is\nconsidered GPL-incompatible, those applications that were GPL licensed could\nnot easily use libcurl because of this license collision. Therefore, in 2001\ncurl was again relicensed. This time to an MIT license. That license has since\nstuck and I have not regretted that choice ever since.\n\nOf course I realize that people can take our code, change it and ship it with\ntheir applications and become millionaires without us ever getting back any\nchanges. But in reality this is not a problem because people do not want to\nmaintain their own forks, their own custom versions of curl. By avoiding a\ncopyleft license we have successfully seen numerous businesses use curl.\nCompanies that otherwise would not have considered using curl.\n\n## Rockbox\n\nIn the year 2000 lots of things happened. I and several of my friends and\ncolleagues switched employer to Contactor AB, but I basically remained doing\nthe same thing: embedded systems development as a consultant. I got married.\n\nIn that period I co-founded the Rockbox project (together with Bj\u00f6rn and\nLinus) and I worked a lot within that project for many years. It was great fun\nand I met a lot of new friends through that, many of which I still meet and\nchat with regularly. Rockbox is an mp3 player firmware replacement. We reverse\nengineered mp3 players and replaced the original firmwares with our free\nversion, that often was far better than the original one in terms of\nfunctionality, features and battery life.\n\nUp to that point, curl was just a command line tool. You would invoke it from\nscripts or from a shell prompt. I of course suspected that there would be\nprograms and systems out there that could benefit from getting curl's powers\ninto their applications and that doing curl as a library would enable that.\ncurl was always sort of written with that mind-set internally, but of course\nit needed some work to make a real and official API out of it.\n\nOn August 7 2000, we released the first libcurl version. libcurl 7.1. It was\nimmediately getting used and appreciated by early adopters and it gave me\ninspiration and energy to continue down that path.\n\n# Life 2.0\n\nI continued to hack on curl on my spare time, and work as an embedded systems\nconsultant during my days. In 2003, me and my wife bought a house in a\nsouthern suburb to Stockholm and on September 26 our daughter Agnes was born.\nLife would never be the same again (as every parent knows).\n\n## c-ares\n\nName resolving for applications have always been done with a synchronous\nfunction call with the POSIX API and this had been a concern for a while for\nme and a few friends who at this time had been pondering on starting up a\nproject to work on this problem. One day however, I stumbled over the existing\nlibrary called ares that did almost exactly what we wanted. I quickly took it\nto heart and implemented support in curl to use this library to do\nasynchronous and non-blocking name resolves. Soon I learned that the\nmaintainer of ares pretty much considered his work done on that code base and\nhe did not want to merge the changes I fed back and deemed necessary - for\nexample support for building and working on Windows. I felt that I had no\nother option than to fork the project and adopt it myself to drive it forward.\nSo I did, and c-ares was born.\n\n## IIS funding\n\nWhen my daughter was roughly a year old, I applied for funding from the\nSwedish foundation IIS (The Internet Foundation In Sweden) to get some focused\ndevelopment time on curl. I wanted to implement a new API and make it more fit\nto do really large amounts of parallel transfers. I was given a grant that I\nworked on during spring 2005 and the multi_socket API was born. Doing 10,000\nsimultaneous transfers in the same thread became possible. Working from home a\nfew months doing this was awesome.\n\n## Adobe funding\n\nIn 2006 my second child was born, Rex, and he was still just a few months old\nwhen I was contracted by Adobe to work on implementing SFTP support for curl.\nAdobe wanted to use it in one of their products to complement FTP uploading.\nSFTP itself being based on SSH protocol required that we could use a proper\nlibrary to do the binary protocol level parts with so that I would not have to\ndo the actual SSH bits within the curl project.\n\nI loved getting the opportunity to once again work full time on curl for a few\nmonths.\n\n## libssh2\n\nI looked around for options and at this time I found two feasible\nalternatives. Quite amusingly they were named libssh and libssh2 (yes the\nnumber two at the end is the only difference in naming). Unfortunately, none\nof them offered a truly non-blocking API and as my interest was to integrate\nand use this within libcurl that already had a non-blocking API that was an\nabsolute requirement. So I asked both projects about it. Basically how they\nlooked at the prospect of (me) adding non-blocking support and what they think\nabout it. Both responded fairly quickly from what I recall. One in a fairly\ndismissing manner suggesting I should use threads instead, and the other in a\nwelcoming and interested fashion. Of course I went with the project that had\nthe better welcoming. I immediately felt welcome and got to know Sara who ran\nthe libssh2 project.\n\nIn cooperation with others in the libssh2 project we implemented a non-\nblocking API and I made curl use this API and starting in November 2006 we\ncould do SFTP and SCP transfers using that.\n\nSara, the lead of libssh2 changed jobs in 2006 and was as a consequence of\nthat unable to continue maintaining the libssh2 project and pretty soon I took\nover as maintainer of the libssh2 project.\n\n## HTTPbis\n\nI had been working with all these protocols up until now without knowing and\nnot really caring about exactly how protocols are made or how decisions were\nmade about them. But the more I worked with HTTP and all its intricate\ndetails, I become aware of differences in implementations and struggles to\nwork with servers that obviously did not follow what was written the RFCs.\nUntil someone one day pointed out the HTTPbis working group to me.\n\nHTTPbis was an IETF working group that had been started in 2007 with an effort\nto refresh the HTTP/1.1 spec. I joined the list and started to follow the\ndevelopment and discussions. I wrote my first post to the list in the spring\nof 2008.\n\n## IETF 75\n\nAfter gradually having increased my participation in the HTTPbis group over\nthe years, it was a lucky fluke that the 75th IETF meeting in summer of 2009\nhappened to be organized in Stockholm Sweden. My home town. Since curl and\nHTTP were primarily hobbies of mine, I had a hard time to motivate the\ninvestment and travel budget of going to IETF meetings abroad. But this time\nthe circus was coming to me and now I finally got to meet a lot of the mailing\nlist participants in person for the first time. Friends! This made me even\nmore interested in and motivated to work within HTTPbis going forward.\n\nDevelopers sometimes ask me if the slowness and bureaucracy of standardization\nis not tedious. For me, working within the IETF is a matter of bringing\ntechnology and interoperability forward. To be involved and ensure that the\nspecs get done right, taking the right things into consideration and not go\nover board to fiddle with things we should not. It is good for everyone to\nhave a good IETF. I find the spirit and working methods to be similar to open\nsource.\n\nFor example, we carried out work within the IETF to specify how cookies are\nactually used in HTTP. Cookies had been around for maybe 15 years already at\nthe time and the only spec that actually had been used was less than one\nhundred lines and totally useless. Attempts had been made over the years to\ncorrect it and at least two new cookie RFC were written that failed to get\nadopted. Finally in 2009 we started a group within IETF that worked to\ndocument how cookies actually work on the web. I felt that I, as an\nindependent and non-browsers orient cookie parser implementer since many\nyears, could provide good feedback and a completely different point of view\nthen most others who were participating - many of them coming from the browser\nworld. I would like to think my few bits of contribution helped making RFC\n6265 as good as it is! (Published in 2011.)\n\n## Haxx AB\n\nProfessionally, I had spent the last several years doing contract work where I\nbasically had found the assignments on my own and sold myself without my\nemployer's involvement. At the same time I felt that the company I worked for\nwas not really going in the direction that I wanted to go in. I did not really\nget my money's worth there. In the end of August 2009 I quit my employment and\nI instead become the first full-time employee of Haxx AB, our own firm.\n\nIn 2009, I was awarded the Nordic Free Software Award along with Simon\nJosefsson for my work in open source and free software up until that point.\n\nUnder our own name (Haxx) I continued to do embedded systems contracting. Now\nbeing my own boss and of course having the ultimate freedom to decide what\njobs to take and how to spend my time and money. I still did not get many curl\nrelated jobs more than the occasional smaller hacks and minor improvements\n(and a series of smaller I want to automate this using curl can you do it for\nme please tasks), so the protocol side remained a spare time occupation.\n\nA few months after me, my brother Bj\u00f6rn joined me as Haxx employee number two\nand a year after, Linus become employee number three. What a glorious\ndevelopment. Looking back, that switch was one of the best decisions I have\never done in my professional life.\n\nHaxx was like a dream since forever, transformed into reality. A small number\nof close friends who are all experts in embedded systems and Linux. We worked\nas expert consultants and contractors for companies that built various\nembedded systems Embedded systems today means a high degree Linux and open\nSource.\n\n## HTTP/2\n\nThe HTTPbis working group took upon itself to work on an update to HTTP 1.1\nthat had been the major HTTP version for many years. It has started to shown\nits age and HTTP/2 took off from Google's SPDY. I participated in that work.\n\n## Mozilla\n\nIn the fall of 2013 I ended a two-year contracting job for Enea AB where I had\nworked fiercely to kick-start their embedded Linux distribution. I looked -\nand asked - around my wider circle of contacts and friends to see if anyone\nhad an interesting opening for me to take on next.\n\nSomeone did. Patrick Mcmanus worked in the networking team at Mozilla and\nasked if I would not be interested to do my next gig for them. I was thrilled\nto get the opportunity, even if I then also had to do that as an employee and\nnot as a contractor. It felt weird to give up that style of life but for this\nchance I was willing to do a lot. I traveled to Mountain View in November 2013\nand did seven different interviews in one rather long day...\n\nI started at Mozilla the first days of January 2014, in the networking team.\nHTTP, FTP, DNS, cookies, caching, sockets etc. All day at work. And then all\nnight with curl. Mozilla even allowed me to spend a part of my work time on\ncurl stuff! Mozilla has no office in Sweden, this meant I could work full time\nfrom home.\n\n## RFC 7540\n\nIn May 2015 the HTTP/2 RFC shipped. In relation to the introduction of this\nnew protocol version, I did several talks and presentations to a lot of\ndifferent audiences in multiple countries. I also wrote a document about it,\ncalled http2 explained that I released freely and openly on the web. It turned\nout a huge success and for the period I counted downloads, I saw more than\n200,000 downloads!\n\n## Second best developer in Sweden\n\nIn 2016, the Swedish online publication called Techworld had a contest for\nSweden's best developer - and were accepting nominations from the public. They\nhave had this contest before but this time I was nominated and ultimately\nawarded the 2nd place!\n\n## QUIC\n\nThe QUIC working group was formed in IETF during late 2016 and I joined the\nmailing list and subscribed to the GitHub repository at once to keep track of\nand possibly participate in the development.\n\n## US issues\n\nIn December 2016 I attended the week long Mozilla all-hands meeting on Hawaii\n(which was also my 12th visit to the US through the years - yes I have had\nreason go back and actually carefully count the occasions). In June 2017 I was\nset to travel to San Francisco for another all-hands company meeting, when I\nwas refused to board the flight due to unspecified \"problems with my ESTA\".\n(ESTA is the visa waiver program under which I as a Swede can travel to the\nUS.)\n\nAs my employer at the time, Mozilla engaged some people on both the American\nas well as the Swedish side to try to figure out what was wrong and what we\ncould do to correct the situation. Unfortunately, no one would offer any clues\nor information about why I was denied so that effort resulted in nothing.\n\nIn the spring of 2018, I reapplied for ESTA, got denied and then applied for a\nvisa instead. I did the final steps for that when I visited the US embassy in\nStockholm Sweden for an interview on April 17, 2018.\n\n## Polhem Prize\n\nI was awarded the Polhem Prize in October 2017 for my almost 20 years of\nhaving run the curl project and its impact on the world. An amazing honor.\n\nAt the award ceremony, I was handed a gold medal from the hands of the Swedish\nking himself.\n\n## HTTP/3 explained\n\nIn November 2018 it was announced that the protocol previously called just\nHTTP over QUIC would officially become HTTP/3. I renamed my new document I was\nworking on and soon I could reveal HTTP/3 Explained online. Free and open.\nSoon enough volunteers joined in and started to offer and contributed to\ntranslated versions.\n\n## Leaving Mozilla\n\nIn December 2018, I left my employment at Mozilla. I had spent almost five\nfull years employed there and it was a great time with many awesome colleagues\nand friends. Working full-time from home on open source had been awesome, but\nit was time for me to do something else.\n\nWhy did I leave? Two parts: 1. I was bored with the C++ Firefox messy\ndevelopment and getting more bug-reports filed than we manged to close and 2.\nmy manager turned out to be a bully who worked hard to make my life miserable.\n\n## A new home: wolfSSL\n\nIn February 2019 I joined wolfSSL to do commercial curl support and work on\ncurl full-time. wolfSSL is an American company. I am the only Swede working\nfor wolfSSL and I could continue to work from home. I love it.\n\nAt the time I started I was still not allowed entry to the US so I was not\neven able to visit my new colleagues.\n\nwolfSSL already offered a set of existing open source libraries and commercial\nsupport on those, so adding curl and libcurl to that offer was a good match -\nand many customers use both wolfSSL and libcurl in products.\n\nI knew wolfSSL and its CEO Larry already since many years back.\n\n## Covid-19\n\nI did a presentation in person at FOSDEM in early February 2020 just before we\nlearned exactly how big of a deal this Covid-19 thing was. Up until then I did\na little more than one presentation per month, which served as an excellent\nway to spice up the working-from-home life.\n\nThen came the era of doing presentations over video. So much harder. So much\nnot the same thing. Neither for me as a presenter and certainly not for the\naudience either.\n\n## curl.se\n\nIn early November 2020 I could finally get my hands on the curl.se domain. I\nhad been trying to get a curl domain under any top level domain for a long\ntime when this domain finally ended up mine.\n\n## Visa!\n\nMy silly US travel situation lasted until November 9, 2020 when I after 937\ndays of waiting finally received a visa in my passport. Of course, at this\ntime the Covid-19 pandemic was still ravaging so not the ideal timing to\ntravel anyway.\n\n## Future\n\nI never plan never far ahead.\n\n", "frontpage": false}
