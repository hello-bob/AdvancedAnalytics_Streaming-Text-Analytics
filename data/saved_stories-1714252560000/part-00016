{"aid": "40180268", "title": "Open source developers are the original content creators", "url": "https://goauthentik.io/blog/2024-02-07-open-source-devs-are-the-original-content-creators/", "domain": "goauthentik.io", "votes": 1, "user": "nickwritesit", "posted_at": "2024-04-27 14:34:49", "comments": 0, "source_title": "Open source developers are the original content creators", "source_text": "Open source developers are the original content creators | authentik\n\nSkip to main content\n\n# Open source developers are the original content creators\n\nFebruary 7, 2024 \u00b7 14 min read\n\nJens Langhammer\n\nCTO at Authentik Security Inc\n\nNick Moore\n\nContributing Writer\n\n> authentik is an open source Identity Provider that unifies your identity\n> needs into a single platform, replacing Okta, Active Directory, and auth0.\n> Authentik Security is a public benefit company building on top of the open\n> source project.\n\nIn 2024, Tom Scott and Jynn Nelson, otherwise different people in different\nworlds, faced very similar problems.\n\n  * Tom Scott is a YouTuber who, as of this writing, has gotten nearly 2 billion views across over 700 videos. Nearly 6.5 million people subscribe to Tom Scott\u2019s YouTube channel.\n  * Jynn Nelson, a senior engineer, is a major maintainer of Rust, an open-source project that 2023 StackOverflow research showed was the most admired language among developers. About 2.2 million people are Rust developers.\n\nIn a goodbye video, Scott announced an extended break from his channel,\nsaying, \"I am so tired. There's nothing in my life right now except work.\u201d\n\nIn a post called the rust project has a burnout problem, Nelson wrote,\narticulating sentiments across the Rust community, \u201cyou want a break, but you\nhave a voice in the back of your head: \u2018the project would be worse without\nyou.\u2019\u201d\n\nIt\u2019s unfortunate that this comparison makes the best opening to the point of\nthis post: open source developers are much more like content creators than\nmost people tend to assume.\n\n> If anything, when you look at the history of the Internet and the history of\n> distributing content online, open source developers might be the original\n> content creators.\n\nBy looking at the paths they have both paved and recontextualizing their work\nwithin a broader view of the creator economy, we can come to a better\nunderstanding of the shared futures of content creators and open source\ndevelopers.\n\n## Open-source maintainers were creating content before it was cool\n\nIn the past decade, a series of similar \u201ceconomies\u201d have risen and fallen,\nincluding the creator economy, the passion economy, and much of web3.\n\nEvan Armstrong captured these collapses well, writing about the crash of the\ncreator economy in 2023. \u201cDollars invested are down 86% to $123M,\u201d he wrote.\n\u201cNext came the layoffs. The giants of the space have had issues: Patreon laid\noff 17% of staff, Linktree first sacked 17% of staff, then a few months later\nanother 27%, Cameo has laid off 160 (probably 33%+ of staff).\u201d\n\nBut unlike other economies, say, the paper industry in Maine, the factories\nhaven\u2019t left: influencers are still posting on Instagram, newsletter writers\nare still growing subscriber numbers on Substack, and TikTok creators are\nstill going viral.\n\n> It\u2019s a contradiction with a simple answer: typical conceptualizations of the\n> creator economy are too limited, and the history of content creation is much\n> longer and broader than most thought leaders and investors realize.\n\n### A very brief history of open source\n\nIn 1974, software became copyrightable and it quickly shifted from free-by-\ndefault to paid. Once companies could control it, closed-source software took\noff.\n\nCompanies enforced copyrights and trademarks and leased the right to use their\nsoftware. In 1976, Bill Gates wrote an open letter to hobbyists, arguing that\n\u201cmost of you steal your software,\u201d and in 1983, IBM stopped distributing\nsource code to people who purchased IBM software.\n\nIn reaction to developments like these, Richard Stallman founded the GNU\nProject in 1983 and the Free Software Foundation in 1985.\n\nHe wrote in The GNU Manifesto that \u201cMany programmers are unhappy about the\ncommercialization of system software. It may enable them to make more money,\nbut it requires them to feel in conflict with other programmers in general\nrather than feel as comrades.\u201d\n\nHere, Stallman laid out one of the visions that\u2019s continued driving open\nsource to this day: \u201cOnce GNU is written, everyone will be able to obtain good\nsystem software free, just like air.\u201d\n\nOver the following decades, open-source developers and maintainers used the\nnascent and eventually mature Internet to build software projects that were\nhobbies, industry-supporting keystones, and everything in between.\n\nAmongst this growth, another economy surfaced, too: a huge crop of companies\nthat built tooling and platforms for open source as well as a variety of\nbusiness models, such as open core, to support open source. Open source, once\nprimarily adversarial to private industry, has become integral to it.\n\n### Is software content?\n\nOpen-source developers were creating content and distributing it on the\nInternet long before everyone else. The pioneering work of what we might now\ncall the creator economy often goes unrecognized for three major reasons:\n\n  * Software isn\u2019t always seen as content in the same way video content and text content are.\n  * The original philosophy of open source emphasized community and collaboration \u2013 emphasizing a movement that extended beyond any individual developer.\n  * Early open-source developers emphasized a \u201cgift culture,\u201d with people like Eric Raymond arguing that software should be \u201cfreely shared.\u201d Content creators, however, have long depended on centralized platforms like YouTube that often offer built-in monetization tools.\n\nThese distinctions, as significant as they might seem at first glance, are\ncollapsing. Two decades after Raymond\u2019s The Cathedral and the Bazaar, Nadia\nEghbal wrote Working in Public, and in it, she notes: \u201cLike any other creator,\nthese developers create work that is intertwined with, and influenced by,\ntheir users, but it\u2019s not collaborative in the way that we typically think of\nonline communities. Rather than the users of forums or Facebook groups,\nGitHub\u2019s open source developers have more in common with solo creators on\nTwitter, Instagram, YouTube, or Twitch.\u201d\n\nOf all people, considering the open letter cited earlier, Bill Gates might\nhave been the first to realize this, writing in 1996 that \u201cWhen it comes to an\ninteractive network such as the Internet, the definition of \u2018content\u2019 becomes\nvery wide. For example, computer software is a form of content\u2013an extremely\nimportant one, and the one that for Microsoft will remain by far the most\nimportant.\u201d\n\nOpen source led the way, but now, this pioneering work is curling back on\nitself and the future of open source requires recognizing its connection to\nthe creator economy as a whole.\n\n## 5 ways open source paved the way for content creators\n\nOpen source developers pioneered new ways of creating and distributing content\non the Internet \u2013 lessons that are worth re-contextualizing and re-learning\nfor the sake of open source and for a new, larger understanding of the creator\neconomy.\n\n### 1\\. Misleading margins abound\n\nOne of the major reasons the creator economy took off as a target for venture\ncapital is because content creation has zero margin \u2013 in theory. Like\nsoftware, these venture capitalists proposed, you could create once and\nreproduce freely forever.\n\nTheoretically, a YouTube creator should be able to make a library of great\nvideos and make ad money for as long as the videos remain online. Unless it\u2019s\ncovering breaking news, a great video should still be great in six months, two\nyears, and five years. Create once. Profit forever.\n\nThis isn\u2019t how it works. On YouTube, views can plummet if you don\u2019t stay in\npeople\u2019s minds and if you don\u2019t keep on trend. YouTube creators are building a\nbrand and benefit from uploading regularly \u2013 even if it leads to creators like\nTom Scott uploading a video every week for ten years without break.\n\nOf course, investors could have learned this lesson sooner by looking at open\nsource. A similar mistaken assumption applies: build the software once and\ndistribute it forever. But, again, this isn\u2019t how it works.\n\nAs Eghbal writes, open source maintainers are \u201cexpected to maintain the code\nthey published for as long as people use it. In some cases, this could be\nliterally decades, unless the maintainer formally steps away from the\nproject.\u201d\n\nApache, for example, launched in 1995, celebrated its 25th anniversary in\n2020, and released its most recent version in 2023.\n\nSoftware degrades over time (think of tech debt, integration issues, changing\nstandards, etc.) in much the same way a YouTuber\u2019s brand degrades over time.\nBoth need maintenance just to persist, much less grow.\n\n### 2\\. Firewalls require vigilance\n\nIn traditional journalism, the \u201cfirewall\u201d (sometimes referred to as a\nseparation between church and state) is a conceptual and logistical\ndistinction between the editorial department and the advertising department.\nIf the two were to mix, advertising needs would bias editorial goals and\nsubscribers wouldn\u2019t trust the publisher that mixed them.\n\nThe same distinction extends to content creation and open source.\n\nIn content creation, the trust a creator has built with their audience is\nparamount, and maintaining the firewall between their content and their\nsponsors is essential.\n\nOn Instagram, for example, an influencer needs to be very clear about whether\na given post is an ad or not. There are legal standards around this issue \u2013\nthe SEC charged Kim Kardashian a fine in 2022, for example, for not disclosing\nthat the crypto company she was promoting had paid her \u2013 but the bigger issue\nis maintaining audience trust.\n\nWithout trust, you can\u2019t influence.\n\nThese kinds of controversies are not novel for open source developers. Similar\ndiscussions arise when vendors offer to support or acquire an open source\nproject and when an open source maintainer starts taking sponsorships.\n\nCharity Majors, CEO and cofounder of Honeycomb, came up through open source\nand when she founded a for-profit company, the firewall singed her. \u201cI came\nfrom open source,\u201d she writes in a 2023 post, \u201cwhere contempt for software\nvendors was apparently de rigueur.\u201d\n\nBack then, she writes, she and others assumed vendors were \u201cliars\u201d that would\n\u201csay anything to get you to buy.\u201d Majors eventually learned that vendors\nweren\u2019t all bad, but her experience exemplifies how the separation between\nopen source and vendors (as well as content creators and advertisers) can be\nfraught.\n\nShe now recommends vendors \u201clead with [their] bias\u201d and says that she\n\u201cdiscloses [her] own vested interest up front.\u201d The boundaries can be crossed,\neither by projects seeking sponsorships or by developers seeking employment,\nbut the boundary requires respect.\n\n### 3\\. Audiences are a source of survival and stress\n\nInfluencers require a significant level of fame to achieve success: enough\nviewers to earn brand deals, enough fans to clamor outside makeup stores,\nenough listeners to sell out live shows.\n\nBut even though creators depend on their audiences, those same audiences can\nbe a huge source of stress. A big audience can mean pressure and it can also\nsometimes mean a public pillorying.\n\nOpen source developers rarely have fans in the same way but they frequently\nrun into a similar dynamic. As an open source project becomes popular, more\npeople want to contribute but because contributions are rarely perfect, PR\nreview can become a job unto itself.\n\nNolan Lawson, for example, a major contributor to PouchDB told Eghbal that\nopen source popularity can create \u201ca perverse effect where, the more\nsuccessful you are, the more you get \u2018punished\u2019 with GitHub notifications.\u201d\n\nAs Alex Danco writes, \u201cSuccess brings attention, interaction, and maintenance\n- both of the code itself, and of the creator\u2019s reputation. This all takes\nwork, and it\u2019s often not the kind of work the creators like doing.\u201d\n\nSuccess can then breed disillusionment and sometimes burnout. Many early open\nsource proponents imagined free-flowing collaboration sustaining the movement,\nbut many maintainers aren\u2019t finding as much collaboration as they\u2019d like or\nneed. As Eghbal writes, \u201cIt\u2019s not the excessive consumption of code but the\nexcessive participation from users vying for a maintainer\u2019s attention that has\nmade the work untenable for maintainers today.\u201d\n\nBoth open source developers and content creators can suffer from success.\n\n### 4\\. Sustainability vs. selling out\n\nOpen-source maintainers faced the issue of \u201cselling out\u201d long before content\ncreators faced it. And yet, ironically, even current open source developers\nstruggle with monetization more than content creators do.\n\nThe modern, if limited, definition of the creator economy arose after numerous\nimportant creator platforms were established (YouTube, Instagram, etc.). With\nYouTube, especially, monetization was eventually built in. The highest-earning\ncreators tend to seek partnerships but advertising money flows through the\nplatform itself.\n\nIn open source, the original culture has proven much more resistant to\nmonetization. Raymond emphasized an abundance mindset and a gift culture,\nfostering a perspective that sometimes prioritizes the movement above any\nindividual maintainer\u2019s sustainability.\n\nBut things might be changing. When Majors worked at Facebook, for example, she\nrealized that \u201cOpen source successes like Apache, Haproxy, Nginx, etc. are\nexceptions, not the norm; that this model is only viable for certain types of\ngeneral-purpose infrastructure software... If steady progress is being made,\nat the end of the day, somewhere somebody is probably paying those\ndevelopers.\u201d\n\nOn the other side of these success stories are open source developers working\nfor little recompense. Alex Clark, for example, maintains Pillow, an open\nsource project that has been downloaded millions of times and has even been\nused by NASA in its Mars Ingenuity helicopter.\n\nBut the income didn\u2019t keep up with the influence. \u201cOur income is\ndisproportionate if this thing is everywhere \u2013 across the entire globe, used\nby Fortune-whatever companies,\u201d Clark said. \u201cIt's disproportionate. And\nthere's no easy way to fix that.\"\n\nThis isn\u2019t an isolated feeling. According to 2023 Tidelift research, 77% of\nthe maintainers who are not paid would prefer to get paid, 22% have quit open\nsource, and 36% have considered quitting.\n\nOpen source developers learned the hard way that monetization is hard \u2013 even\nif influence is indisputable.\n\n### 5\\. Building despite the bus factor\n\nMr. Beast, the YouTube channel, has gotten over 42 billion views across nearly\n800 videos and employs about 250 people.\n\nBut if Mr. Beast, the person, were hit by a bus tomorrow, a channel that\nroutinely earns hundreds of millions of views per video would likely plummet\nin popularity. It\u2019s a grim example of the bus factor \u2013 the idea that companies\nwith employees who have centralized knowledge or power create immense risk for\nthe companies as a whole.\n\nFew open source maintainers have anything nearing the celebrity status of Mr.\nBeast and few open source projects could even really be considered\npersonality-driven. And yet, many open source projects would suffer a similar\nfate from a similar bus factor.\n\nTidelift research shows that nearly half of all open source maintainers work\nalone; Synopsis research shows that 91% of codebases contained open source\nsoftware that had had no developer activity in the past two years; and Linux\nFoundation research found that only 35% of projects had a strong new\ncontributor pipeline.\n\nIn other words, the bus factor is alive and well in open source. If anything,\nthe differences between open source and content creation make the result of\nthis dynamic relatively worse for open source.\n\nIf Mr. Beast retires, every one of his fans will know; if a key open source\nmaintainer retires, their project could continue on, zombie-like, until a\nsecurity issue reveals everyone was depending on a project with no one at the\nhelm.\n\n## The bazaar will outlast the creator economy\n\nOpen source developers are frequently undervalued but between Raymond and\nEghbal, as well as some lessons from traditional content creators, we can see\na path toward greater recognition.\n\nRaymond writes that in open source, \u201cthe only available measure of competitive\nsuccess is reputation among one's peers,\u201d but reputation is not automatically\ngranted upon merging code.\n\nEghbal clarifies, writing that \u201cOpen source developers are chronically\nundervalued because, unlike other creators, they\u2019re tied to a platform that\ndoesn\u2019t enable them to realize the value of their work. Instead of operating\nquietly in the background, open source developers ought to come to the\nforefront again.\u201d\n\nMore and more open source developers are coming to the foreground, including\nCassidy Williams, who has a strong Twitter and TikTok presence, and Shawn Wang\n(popularly known as @swyx) who runs an influential blog and advocates for devs\nlearning in public.\n\nAs Danco writes, \u201cMaking technology seems like a world apart from\nentertainment and show business. But in this new world, making is show\nbusiness.\u201d\n\nThe more that open source developers and the content creators that came up\nafter them can learn from each other, the more sustainable the whole creator\neconomy will be.\n\nAs always, we want to hear your thoughts. Reach out to us via email at\nhello@goauthentik.io or on Discord!\n\nTags:\n\n  * authentik\n  * access management\n  * open source\n  * content creators\n  * software\n  * GNU\n  * identity provider\n  * authentication\n  * Authentik Security\n\n  * Open-source maintainers were creating content before it was cool\n\n    * A very brief history of open source\n    * Is software content?\n  * 5 ways open source paved the way for content creators\n\n    * 1\\. Misleading margins abound\n    * 2\\. Firewalls require vigilance\n    * 3\\. Audiences are a source of survival and stress\n    * 4\\. Sustainability vs. selling out\n    * 5\\. Building despite the bus factor\n  * The bazaar will outlast the creator economy\n\nSubscribe to authentik News\n\nDocumentation\n\n  * Documentation\n  * Integrations\n  * Developer Documentation\n  * Installations\n\nMore\n\n  * Jobs\n  * GitHub\n  * Discord\n\nLegal\n\n  * Terms & Conditions\n  * Privacy policy\n\nCopyright \u00a9 2024 Authentik Security Inc. Built with Docusaurus.\n\n", "frontpage": false}
