{"aid": "40096844", "title": "Do Bounties Hurt FOSS?", "url": "https://hackaday.com/2023/09/27/do-bounties-hurt-foss/", "domain": "hackaday.com", "votes": 2, "user": "kugurerdem", "posted_at": "2024-04-20 12:24:14", "comments": 0, "source_title": "Do Bounties Hurt FOSS?", "source_text": "Do Bounties Hurt FOSS? | Hackaday\n\nSkip to content\n\n# Hackaday\n\n# Do Bounties Hurt FOSS?\n\n17 Comments\n\n  * by:\n\nMaya Posch\n\nSeptember 27, 2023\n\nAs with many things in life, motivation is everything. This also applies to\nthe development of software, which is a field that has become immensely\nimportant over the past decades. Within a commercial context, the motivation\nto write software is primarily financial, in that a company\u2019s products are\ndeveloped by individuals who are being financially compensated for their time.\nThis is often different with Free and Open Source Software (FOSS) projects,\nwhere the motivation to develop the software is in many cases derived more out\nof passion and sometimes a wildly successful hobby rather than any financial\nincentives.\n\nYet what if financial incentives are added by those who have a vested interest\nin seeing certain features added or changed in a FOSS project? While with a\ncommercial project it\u2019s clear (or should be) that the paying customers are the\nones whose needs are to be met, with a volunteer-based FOSS project the\naddition of financial incentives make for a much more fuzzy system. This is\nwhere FOSS projects like the Zig programming language have put down their\nfoot, calling FOSS bounties \u2018damaging\u2019.\n\n## Bounty Hunting\n\nWithin this absolutely volatile and inflammatory topic, it is probably a good\nidea to first nail down what is meant with a \u2018bounty\u2019, as there are a number\nof possible interpretations just within the field of software development.\nPerhaps the most well-known is the concept of bug bounty programs, where\nsomeone who discovers a flaw in the software product or service of a company\ncan get some kind of (monetary) reward. This reward is supposed to be there to\nboth motivate security researchers to discover new bugs, and to report said\nbugs to the company rather than to let less scrupulous individuals use them\nfor ill-gotten gains.\n\nIn a way this makes such a bounty program somewhat into a modern equivalent of\nthe old tradition of bounty hunters, yet it is quite distinct from bounty\nprograms that target the development of software features rather than the\ndiscovery of bugs. When it comes to motivating the development of new features\nwe can distinguish two major types of incentives:\n\n  1. A community bounty to submit a feature patch to the project.\n  2. A monetary reward given to the project\u2019s developer(s) upon completion of the new feature.\n\nIn the Zig project\u2018s blog post we can see that they have no issue with bug\nbounties, which is understandable. Despite some issues with bug bounty\nprograms over the decades, in general they are a net positive incentive which\ncan create a healthy relationship between security researchers and developers.\nAfter all, even the best-run software project will inevitably have some bugs\nin the Golden Master release version that gets pushed out into the world, some\nof which you\u2019d rather hear about from a reputable researcher than read about\nin the media.\n\nIn contrast, the notion of community bounties is branded as being essentially\nharmful and something the Zig developers caution against. Rather than\nproviding a friendly, cooperative atmosphere, such bounties are bound to\ninvite hastily developed, poorly considered implementations where the main\nmeasure of \u2018success\u2019 is whether or not all test cases light up green. Add to\nthis the possibility of the project developers having to judge and likely\nreject various competing submissions, and it would seem reasonable to conclude\nthat only the security researchers are winning out in such a scenario.\n\n## Staking Claims\n\nThe idea of putting up software bounties to promote the development of\nfeatures is not a new thing by any stretch, with for example the GNU Hurd\nproject in 2011 spelling out why they feel that bounties are a great idea. Yet\nthe website that particular project references \u2013 FOSS Factory \u2013 appears to\nhave been essentially dead since about 2008, or three years before the GNU\nHurd project even promoted its use.\n\nA more current example of a software bounty website is Bountysource, which\ncurrently is still actively accepting new bounties. However, after having been\npurchased and sold on again by a number of cryptocurrency companies it\u2019s\ncurrently in hot water for not paying out the bounty money which it is\nsupposed to hold in escrow. This was apparently an issue back in 2020 already,\nwith some projects moving to GitHub Sponsors, which interestingly enough is\nessentially the inverse of a bounty system as it involves donating to a\nproject.\n\nRather than being strictly a donationware system, however, it is duly noted by\nNaomichi Shimada and colleagues in a 2022 study that GitHub Sponsors turns a\nproject into sponsorware. Although the difference between donating and\nsponsoring can seem academic to some, the latter has definite expectations of\nreturns, no matter in what form. In the study by Shimada et al., these\ndiffering expectations between project managers and those who sponsor or\notherwise contribute to a project other than as a developer are addressed as a\npotential issue that should be kept in mind by project owners before enabling\nsponsorships.\n\n## Commercial FOSS\n\nModern-day infrastructure, as visualized by XKCD. (Credit: Randall Munroe)\n\nA viable way to get the financial cost of developing software features settled\nis covered in detail by Brad Collette of the Ondsel (FreeCad) core team.\nAlthough the points raised against community bounties are pretty much the same\nas those raised by the Zig developers, the suggested way which does work\nessentially involves crowdfunding, with the Krita project provided as a\nshining example.\n\nEssentially the project developers will get together to figure out which\nfeatures could or should be implemented in the next major release and pitch\nthis to the community. By running a crowdfunding campaign with stretch goals,\nthe community can thus directly fund the new features while any stretch goals\nare similarly decided on by the community through their financing. Although\nthe project is still technically FOSS, this makes the community (users) an\nintegral part of the project by making them stakeholders in the project.\n\nInterestingly, this isn\u2019t far removed from how many big FOSS projects \u2013 such\nas the Linux kernel and the largest distributions \u2013 are funded. Although full\nof little pieces of hobby projects that may conceivably collapse the larger\nproject if they ever developed an issue, these large FOSS projects are by and\nlarge sponsored and funded by the world\u2019s wealthiest companies.\n\nAs an example, the Linux kernel is backed by the Linux Foundation\u2019s sponsors,\nwith in 2021 Huawei providing the most changesets and Intel contributing the\nmost lines of code changed on the 5.10 kernel. In 2022, the 6.0 kernel saw\nIntel, AMD, Google and Linaro competing in the top 4 of each category.\nOverall, most FOSS development is directly paid for \u2013 often using in-house\ndevelopers \u2013 by IT giants like Microsoft, Amazon Web Services (AWS), Intel and\nGoogle. This then clearly renders the question of software bounties moot for\nthese kinds of FOSS projects when companies with billions of USD in revenue\nare footing the bill already.\n\n## Small FOSS\n\nReading through e.g. this 2021 discussion over at Hacker News on the topic of\nsoftware bounties is also rather interesting as a way to gauge people\u2019s\nfeelings and experiences on the matter. The general consensus would appear to\nbe that for FOSS projects that do not already have the backing of wealthy\nsponsors or similar, keeping the developer(s) behind them engaged and\nmotivated is crucial.\n\nSpeaking as someone who has had their own middling success with some mildly\nsuccessful FOSS projects, there is a certain rush that comes from people\nactually paying attention to, and even using your software in real commercial\nprojects. Yet at the end of the day it is essential to differentiate whether a\nproject is a hobby or a job, with the differentiator here being whether you\nare being paid to do work.\n\nIf you are a project owner, and you put out a crowdfunding request that ends\nup covering your projected feature implementation costs, even if it\u2019s just to\ncover the rent and human/pet food, you take on the responsibility to get that\nfeature implemented so that those who financially contributed are satisfied\nwith the results.\n\nIf, however, someone creates a ticket in your GitHub project saying that they\nwould \u2018really like to see feature XZ implemented\u2019, but no funding has been\nallocated, it\u2019s still just your hobby project and you are free to ignore such\ntickets, or only take it on because it seems interesting as a challenge within\nthe context of said hobby project.\n\nA major risk with FOSS projects is FOSS exploitation, which most recently has\nbecome a rather hotly debated topic. Some companies are now moving away from\nvery open FOSS licenses to more restrictive ones (like the GPL) as a result,\nas a way to combat other companies making money off something that was given\naway for free. This could be regarded as a natural response to such\nexploitation, as companies and individuals alike seek to protect themselves.\n\nWe are taught as children that \u2018sharing is caring\u2019, yet the concept of\nfairness is even more crucial. Although FOSS is sometimes portrayed as some\nkind of utopian dream of infinite free software, the harsh reality is that\neach line of code is still written and tested by human beings, each of whom\nneed to eat, and deserve their fair due.\n\nPosted in Current Events, Featured, Interest, Original Art, Rants, Slider,\nSoftware DevelopmentTagged bounty, funding, open source, open source ethics,\nsoftware, software bounty\n\n## 17 thoughts on \u201cDo Bounties Hurt FOSS?\u201d\n\n  1. limroh says:\n\nSeptember 27, 2023 at 7:52 am\n\nInteresting read, thanks. Got a few notes:\n\n> which interestingly enough is essentially the inverse of a bounty system as\n> it essentially involves donating to a project.\n\ntwo times \u201cessentially\u201d in essentially rapid succession sound a bit \u201coff\u201d,\nessentially. ;-) Maybe \u201c... practically the inverse .... it essentially\ninvolves ...\u201d\n\n> Although the difference between donating and sponsoring can seem academic to\n> some, the latter has definite expectations of returns, no matter in what\n> form.\n\nWould it be fair to say donations to a FOSS project are for what you\u2019ve got\nalready \u2013 kinda pay after use? \u2013 and sponsoring is for what\u2019s to come \u2013 as in\n\u201cinvestment in future development\u201d. I mean a donation has the later purpose as\nwell but only additionally, not at its core.\n\n> A viable way to get the financial cost of developing software features\n> [covered in detailed] by Brad Collette of the Ondsel (FreeCad) core team.\n\n??? maybe: \u201c... features IS covered in detail by ...\u201d Modern-day\ninfrastructure, as visualized by XKCD. (Credit: Randall Munroe)\n\nI thought Randall Munroe visualized that first and then published it under his\nXKCD comic/brand. Didn\u2019t know XKCD could do stuff on its own. ;-)\n\nReport comment\n\nReply\n\n    1. limroh says:\n\nSeptember 27, 2023 at 7:56 am\n\nFor some reason the last part got mangled?! I still have the text in ctrl+c so\nI know it looked like this (the XKCD part got it\u2019s own lines, not mangled with\nthe \u201ccovered in detailed\u201d):\n\n> Modern-day infrastructure, as visualized by XKCD. (Credit: Randall Munroe)\n\nI thought Randall Munroe visualized that first and then published it under his\nXKCD comic/brand. Didn\u2019t know XKCD could do stuff on its own. ;-)\n\nReport comment\n\nReply\n\n  2. chango says:\n\nSeptember 27, 2023 at 7:55 am\n\nBounties are another way of saying \u201ccontract development\u201d. Contracting out\nwork is fine when it\u2019s a bounded task and your terms clearly define what you\nexpect (style, quality, functional acceptance criteria). It becomes dangerous\nif you expect the contractor to take a personal stake in the project as if\nthey\u2019re a regular OSS contributor that finds the work intrinsically rewarding.\n\nReport comment\n\nReply\n\n  3. Prowler50mil says:\n\nSeptember 27, 2023 at 8:00 am\n\nhttps://xkcd.com/2347/ In case you want to read the alt text.\n\nReport comment\n\nReply\n\n    1. asheets says:\n\nSeptember 27, 2023 at 2:38 pm\n\nJust read the alt-text... ain\u2019t that the truth!\n\nReport comment\n\nReply\n\n    2. TG says:\n\nSeptember 27, 2023 at 4:15 pm\n\n\u201cSomeday ImageMagick will finally break for good and we\u2019ll have a long period\nof scrambling as we try to reassemble civilization from the rubble.\u201d -For the\nterminally lazy\n\nReport comment\n\nReply\n\n  4. Foldi-One says:\n\nSeptember 27, 2023 at 10:52 am\n\nI really can\u2019t see the problem \u2013 if somebody with money wants to pay to\ndevelop a feature that is good for them it is probably good for others too.\nAnd if it isn\u2019t a good idea for everyone, or the initial implementation\ndoesn\u2019t meet the existing projects goals you get a fork or future refinement\nthat does play nice.\n\nAt what point do you draw the line of acceptable? Is it before something like\nthe Pi folks or Valve (etc) paying external devs for something they want as\nits good for their customers, but after a big corporate IT company pays for\nsomething that is obviously good for themselves but has no bearing on the\nservice they provide? Or are both equally evil?\n\nAnd if you won\u2019t accept FOSS developers getting paid by these groups that have\nsome interest in the software how do you expect them to get it paid for? As\nthe general consumer that might pay for crowdfunding type concepts almost\ncertainly doesn\u2019t know enough about the building blocks that are more\nfundamental to how programs run to also contribute there \u2013 they only want the\nprogram that does x to do x well. Which means either you then end up with that\ncrowdfunded pool of money being spent only to pile new stuff inside a\nmonolithic program, duplicating effort with heaps of other programs and\nwasting computing resources, which is stupid, or sensibly spent to further\ndevelop the more core underlying everything stuff and you are right back to a\nlarger group paying somebody to develop something because they have a vested\ninterest in it working right themselves...\n\nReport comment\n\nReply\n\n    1. Raniz says:\n\nSeptember 27, 2023 at 11:37 am\n\nI suggest you read the blog post over at Zig since they explain why feature-\nbounties is a bad idea.\n\nTo summarise: it\u2019s competitive, often done completely without consulting the\nmaintainers (i.e. the contribution may not even be accepted) and doesn\u2019t take\nfuture maintenance into consideration.\n\nReport comment\n\nReply\n\n      1. Daniel Dunn says:\n\nSeptember 27, 2023 at 1:01 pm\n\nMaybe there should be a program where only hunters approved by the core team\ncan work on the bounties. Then it would be closer to the way commercial\nsoftware is done, with a small paid team, which produces great results.\n\nCommerical is often way ahead of FOSS in most areas except stuff like\nformat/protocol compatibility and local-first support.\n\nReport comment\n\nReply\n\n      2. Foldi-One says:\n\nSeptember 28, 2023 at 2:38 am\n\nNot saying its the best way, but it doesn\u2019t have to be accepted to be useful\nin the end. Won\u2019t be the most efficient use of time if it doesn\u2019t get\naccepted, but that just leads to a fork or a rework if the features were\nactually good ideas. And the work done will be at least a useful concept demo\nand accelerator to implement that feature in the future.\n\nThe bounty setter is the only one that really losses if things don\u2019t go well\nwith their bounty \u2013 as they got their own fork that nobody likes and isn\u2019t\naccepted by the project, so they probably mostly wasted their money. But the\nproject still probably gains even if its only from the skeletal rough draft of\nthe feature that will get reworked to be maintainable first.\n\nReport comment\n\nReply\n\n        1. Jonathan Marler says:\n\nSeptember 29, 2023 at 6:59 am\n\nThere\u2019s another important part of this, community.\n\nThese kinds of bounties can foster a competitive environment where actors are\nincentivized to be the one who gets the payout rather than cooperating and\ncoordinating with each other. There are winners and losers in this system,\nwhich is in contrast to a system where everyone works together and everyone\nwins.\n\nFostering a positive community is critical for any large project, especially\nthose made of volunteers. It requires good leaders who are\nthoughtful/intentional and are actively doing things to keep that environment\nsafe and productive for everyone.\n\nReport comment\n\nReply\n\n          1. Foldi-One says:\n\nOctober 1, 2023 at 3:04 am\n\nHmm, that is an excellent point that it can break the community, one I\u2019d not\nreally considered much. Though it seems the community is more likely to break\nitself for clash of personalities near the top and incompatible goals than\nthis from what I\u2019ve seen of FOSS projects.\n\nEither way the developers do need to eat. So they need to get paid. If this is\nthe method somebody wants to put money in with it seems better to me to accept\nit than try and probably fail to get them to donate to the project in general\nwithout getting any certainty of progress towards their feature needs.\n\nReport comment\n\n  5. Severe Tire Damage says:\n\nSeptember 27, 2023 at 11:24 am\n\nAll this seems to muddy the distinction between \u201cfree\u201d as in unencumbered by\nlicenses and open source versus \u201cfree\u201d as in the sense of no money involved. I\ndon\u2019t see money in itself as evil (though of course the love of money is the\nroot of all evil) \u2014 as long as we don\u2019t sacrifice the open source aspect of\nwhat is produced. If there is a bias towards meeting someones particular\nneeds, that is likely to be a win/win.\n\nI can\u2019t help thinking about Red Hat. For the most part they aren\u2019t writing\nsoftware, but they have let commercial influences cause them to make some\nunfortunate decisions. But that quickly becomes an entirely different story.\n\nSomebody ought to pay whoever wrote this funky Hackaday web software to add an\nedit button.\n\nReport comment\n\nReply\n\n  6. Martin says:\n\nSeptember 27, 2023 at 1:46 pm\n\nIn relation to this subject, I found this an interesting read: Producing Open\nSource Software. How to Run a Successful Free Software Project, e.g.: \u2013\nChapter 4. Social and Political Infrastructure \u2013 Chapter 5. Organizations and\nMoney: Businesses, Non-Profits, and Governments\n\nhttps://producingoss.com/\n\nReport comment\n\nReply\n\n  7. wowtv says:\n\nSeptember 29, 2023 at 11:28 pm\n\nit\u2019s possible for different people to independently discover the same bug, but\nthat\u2019s an unlucky coincidence, not a structural aspect of the resulting\nsystem.\n\nReport comment\n\nReply\n\n  8. Tim McN says:\n\nSeptember 30, 2023 at 8:45 pm\n\nThe notion of \u201cbug bounties\u201d for FOSS bothers me. It feels ripe for abuse. But\nthere is a spin that makes it sound less bad: paying people to test. Often\ndevelopment is rewarding, but testing is less so. But maybe there is something\nI don\u2019t understand about FOSS that has solved the inadequate testing problem.\nIs feedback (bug reports) from the user community enough?\n\nReport comment\n\nReply\n\n  9. AquahoodJD says:\n\nJanuary 14, 2024 at 12:31 am\n\nI\u2019m a lawyer, and as assist, have worked as a professional bioethicist, have a\ndegree in philosophy with concentration and ethics, have written a research\nethics guidelines and remediation procedure for research on human subjects had\na national University which was adopted by The faculty Senate unanimously in\n2013, I\u2019m currently focusing on the ethics of science and technology and the\neffects on culture policy and law. This would include all of the privacy\nregulations, finds, the corporate veil, open source software, the different\ntypes of Open source licenses, bug bounty programs, conflict of interest\npotential that exists within those programs, and I would suggest that a\ncommittee be formed an international body which comes up with not only a set\nof various types of applicable responsible disclosure procedures but that\nwould eliminate someone who\u2019s connected with the development in any way or\nthere relatives and or associates from collecting a bug bounty based on a\npotential conflict of interest in parent within the development of software at\na rapid pace and then the finding of a exploit in the collection of money\nbased on that exploit. I also am an advocate of better treatment and respect\non it law enforcement and cyber security apparatus as well as the companies\nand developers in regards to Independent security researchers or ethical\nhackers which is the and historical terms and which some people believe is a\nvaginal but it\u2019s social media and media today has kind of a negative rotation\ndespite my understanding the argument for using that title might not sure the\nbest interest of an individual. I think we need to spell out some standards\nand make them very clear beginning from when the security research begins like\nriding out your plan your disclosure plan as well as an agreement between your\nresearchers to stringent security procedures to prevent premature disclosure\nand that that plan be written and witnessed by a neutral third party so that\nit can be produced to anyone from question me and center and the motives of be\nit independent security researchers, ethical hackers, or academic teams. The\nmotivation behind finding these exploits and reporting but ethical hackers\ncome independent security researchers are academics is wide and varied and can\ncome down to your curiosity and the desire to try and solve a puzzle or in\nother words break something but not in the terms of in a malicious way but in\nterms of figuring out how it works and see if it\u2019s really sure. Some people do\nit for education or reasons and to publish to help the career advancement or\nadvancement within academia. Some people do it for a job and for the bug\nbounty and the monetary rewards to come along with it because they have a\ncertain set of skills that is rare and it takes a lot of work dedication and\ntime in many cases to find these very complicated exploits. I would be willing\nto serve as a member of any such committee because I believe I have the\nrequisite understanding and their requisite experience to be of assistance to\na team should be a team effort and it should be a I can census based and joint\nteam effort with the input of civil society and those who are affected. It\nshould ss the universal but take into account the fact that those differ in\nvarious jurisdictions. It would be quite a bit at work and but I think it\u2019s\nimportant it\u2019s very important the precedes an ethical and correct manner. Most\nprofessions have code of ethics and professional responsibilities. The same\nshould apply to this profession and it is a professional whether your reasons\nbe for monetary gain, not variety, or academic success as well as career\nadvancement. The point being is that there is conflict of interest potential\nand there is a need for having strong ethical standards as well as the\ncooperation with long cyber security apparatus which could even help with the\ncorrect and just awarding of bug bounties in the timely manner and do away\nwith these dodgy intermediaries which do nothing but take a piece of the pie.\n\nThat is contrary to the whole idea of FOSS. And maybe at you know because\ncommercial sector utilizes the library everywhere in a case of an open source\nlibrary which isn\u2019t simply it\u2019s all companies which use it within their\ncommercial co code base should pitch in to a fund from which to pay for\nbounties on open source maintained projects. Some of these libraries are\nmaintained free but people who believe and and open source software and there\ncould be a single person or a two people maintaining and extremely essential\nand vital library that\u2019s being used commercially and many many soccer\npackages.\n\nFair is fair and where these people work hard for nothing and they do their\nbest toto do the best job they can sometimes they just don\u2019t have enough time\nto catch absolutely every fall or every potential increasingly sophisticated\nand increasingly complex type of exploit and I give an example focusing a lens\non an LED light of a hard drive and extracting an encryption key seriously.\n\nReport comment\n\nReply\n\n### Leave a ReplyCancel reply\n\nPlease be kind and respectful to help make the comments section excellent.\n(Comment Policy)\n\nThis site uses Akismet to reduce spam. Learn how your comment data is\nprocessed.\n\n# Search\n\n# Never miss a hack\n\nFollow on facebook Follow on twitter Follow on youtube Follow on rss Contact\nus\n\n# Subscribe\n\n# If you missed it\n\n  * ## MXM: Powerful, Misused, Hackable\n\n17 Comments\n\n  * ## VCF East 2024 Was Bigger And Better Than Ever\n\n14 Comments\n\n  * ## Microsoft Killed My Favorite Keyboard, And I\u2019m Mad About It\n\n58 Comments\n\n  * ## Remembering Peter Higgs And The Gravity Of His Contributions To Physics\n\n8 Comments\n\n  * ## Chandra X-ray Observatory Threatened By Budget Cuts\n\n39 Comments\n\nMore from this category\n\n# Our Columns\n\n  * ## Hackaday Podcast Episode 267: Metal Casting, Plasma Cutting, And A Spicy 555\n\n1 Comment\n\n  * ## This Week In Security: Putty Keys, Libarchive, And Palo Alto\n\n1 Comment\n\n  * ## Human-Interfacing Devices: HID Over I2C\n\n11 Comments\n\n  * ## Fail Of The Week: Can An Ultrasonic Cleaner Remove Bubbles From Resin?\n\n21 Comments\n\n  * ## Linux Fu: Stupid Systemd Tricks\n\n15 Comments\n\nMore from this category\n\n# Search\n\n# Never miss a hack\n\nFollow on facebook Follow on twitter Follow on youtube Follow on rss Contact\nus\n\n# Subscribe\n\n# If you missed it\n\n  * ## MXM: Powerful, Misused, Hackable\n\n17 Comments\n\n  * ## VCF East 2024 Was Bigger And Better Than Ever\n\n14 Comments\n\n  * ## Microsoft Killed My Favorite Keyboard, And I\u2019m Mad About It\n\n58 Comments\n\n  * ## Remembering Peter Higgs And The Gravity Of His Contributions To Physics\n\n8 Comments\n\n  * ## Chandra X-ray Observatory Threatened By Budget Cuts\n\n39 Comments\n\nMore from this category\n\n# Categories\n\n# Our Columns\n\n  * ## Hackaday Podcast Episode 267: Metal Casting, Plasma Cutting, And A Spicy 555\n\n1 Comment\n\n  * ## This Week In Security: Putty Keys, Libarchive, And Palo Alto\n\n1 Comment\n\n  * ## Human-Interfacing Devices: HID Over I2C\n\n11 Comments\n\n  * ## Fail Of The Week: Can An Ultrasonic Cleaner Remove Bubbles From Resin?\n\n21 Comments\n\n  * ## Linux Fu: Stupid Systemd Tricks\n\n15 Comments\n\nMore from this category\n\n# Recent comments\n\n  * Dan on Bad Experiences With A Cheap Wind Turbine\n  * Queeg on Measuring An Unknown Velocity Factor\n  * Roger from Fulchester Hackerspace on Bad Experiences With A Cheap Wind Turbine\n  * Alex99a on Bad Experiences With A Cheap Wind Turbine\n  * Tweepy on Bad Experiences With A Cheap Wind Turbine\n  * Hans on Measuring An Unknown Velocity Factor\n  * stan423321 on End-Of-Life For Z80 CPU And Peripherals Announced\n  * stan423321 on End-Of-Life For Z80 CPU And Peripherals Announced\n  * Tim on Measuring An Unknown Velocity Factor\n  * Manfred on Bad Experiences With A Cheap Wind Turbine\n\n# Now on Hackaday.io\n\n  * electronicsworkshops has added details to REAL TIME LOCATION TRACKING WITHOUT GSM AND GPS.\n  * electronicsworkshops has added a new project titled REAL TIME LOCATION TRACKING WITHOUT GSM AND GPS.\n  * thumbedmonkey liked LinuxBoy Handheld.\n  * Aneesh1111 has updated details to TurtleBot3 WafflePi Energy Logging.\n  * thumbedmonkey liked Fallout Cyberdeck.\n  * Andy Piper liked MagiClick - a Mechanical Button with screen.\n  * Bruce W. Kyle liked Minamil 3dp: another minimal CNC mill.\n  * Andy Piper wrote a reply on Portable Pi Mk II.\n  * Aneesh1111 has updated components for the project titled TurtleBot3 WafflePi Energy Logging.\n  * roelh has updated the log for Isetta TTL computer.\n\n  * Home\n  * Blog\n  * Hackaday.io\n  * Tindie\n  * Hackaday Prize\n  * Video\n  * Submit A Tip\n  * About\n  * Contact Us\n\n# Never miss a hack\n\nFollow on facebook Follow on twitter Follow on youtube Follow on rss Contact\nus\n\n# Subscribe to Newsletter\n\nCopyright \u00a9 2024 | Hackaday, Hack A Day, and the Skull and Wrenches Logo are Trademarks of Hackaday.com | Privacy Policy | Terms of Service | Digital Services Act Powered by WordPress VIP\n\nBy using our website and services, you expressly agree to the placement of our\nperformance, functionality and advertising cookies. Learn more\n\nLoading Comments...\n\n", "frontpage": false}
