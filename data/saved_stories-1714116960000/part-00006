{"aid": "40162393", "title": "Gacube Emeleter", "url": "https://nocoffei.com/?p=99", "domain": "nocoffei.com", "votes": 1, "user": "speckx", "posted_at": "2024-04-25 20:11:20", "comments": 0, "source_title": "gacube emeleter \u2013 Insane Rambles About Technology", "source_text": "gacube emeleter \u2013 Insane Rambles About Technology\n\nSkip to content\n\n# Insane Rambles About Technology\n\nItanium Emulator Documentation\n\nAbout\n\n# gacube emeleter\n\n## On the origins of nocoffei\n\nThis article requires some introduction. Said introduction is, at the same\ntime, an intro to the name of my website and my internet handle.\n\nOn June 9, 2016, an unfortunate teenager by the name of petermary17 attempted\nto hack his 3DS. It did not go well for him.\n\n    \n    \n    <petermary17> Hey I have a question, my 3ds is stuck on a black screen, what should I do? ... <CheatFreak> Did you just doengrade to 2.1 and are getting a blackscreen? <petermary17> no, installing a9lh bricked me\n\nThe short version is that at the time, peter was attempting to install an\nexploit that required some console-specific data. But instead of using his\nconsoles own data, he found another consoles data online, and installed the\nexploit using that. His 3DS was instantly permanently bricked.^1\n\n    \n    \n    <petermary17> I didnt got my OTP as I already had an OTP.bin <CheatFreak> Welp, you're permabricked <petermary17> why? <CheatFreak> Because OTP files are 3DS specific <petermary17> <CheatFreak> You can't use one generated by another 3DS for yours <CheatFreak> doesn't work like that <petermary17> is there a way to recover <petermary17> like recovey mode <Paradiddle> Did the guide tell you to download an OTP.bin file? <petermary17> i downloaded one from the internet <Paradiddle> oh <Paradiddle> wow <petermary17> but they told to generate mine <petermary17> but I grabbed my online <CheatFreak> Welp you're done, get another 3DS\n\nPeter didn\u2019t take this very well. He went to the piracy forum GBATemp, which\nhosts many people attempting to hack their consoles, and started writing.\n\nAt first glance this is gibberish, and largely it is. Grammar, punctuation and\nspelling were absent. He asked for \u201csome devs\u201d to make an \u201c11.0 downgrader\u201d,\nreferring to some anti-downgrade checks introduced in 3DS firmware 11.0 which\nallowed userland homebrew to run, but prevented custom firmware from being\ninstalled.\n\npetermary17 was eventually banned from GBATemp for spamming, after running a\nmassive thread for a few days. But he returned.\n\nThe petermary17beck account racked up 10 pages of forum posts before he was\nbanned.\n\nPeters voice became increasingly unhinged. Forum posts lasted multiple pages.\nModerators banned him as fast as he could create new accounts.\n\nMemes started being made.\n\nLogging on to GBATemp in the morning, one could either wake up and find a new\npeter alt or shitposting about his past activities in the Edge of the Forum.\n\nI find it difficult to explain the true depth of this story. It lasted for\nquite some time. Peters participation in the community ran deep, with some\nreally inspired shitposting coming out of his keyboard.\n\nPeter had become a legend amidst this small, piracy-ridden, entitled community\nof homebrewers. And that is the origin of the handle and website \u201cnocoffei\u201d\u2014 a\nstrange, incoherent statement often inserted into the middle of his rants that\nended up becoming his catchphrase.^2\n\nA nearly complete archive of the petermary17 story can be found on\narchive.org. My gratitude to Seriel, Techinicabor, and CheatFreak47 for\npreserving this little corner of history.^3\n\n## Obwiligacion\n\nOne day, peter posted this.\n\nThis thread lasted for a record-breaking 23 pages before peterpeter was\nbanned. The gacube emeleter instantly became a meme, seeping into the pop\nculture of the forum just like the rest of Peters story.\n\nMost of the things Peter asked for eventually came true. The 3DS can now be\nhacked on all firmwares, including, should one desire, the ability to\ndowngrade from an 11.0+ firmware.\n\nThe gacube emeleter, however, was never finished. And it was, and still is,\nthe \u201cdevs obofihation^4\u201c\n\nWe, the devs, are obligated. Let\u2019s make it happen.\n\n## This will never work\n\nThe 3DS is rather a potato of a computer. If we think back to 2011, phones\nweren\u2019t very fast... And in typical Nintendo fashion, the 3DS\u2019 hardware was\nalready obsolete before it was released. Let\u2019s take a look at the GameCubes\nhardware versus the 3DS\u2019 hardware:\n\nNintendo GameCube Specs PowerPC \u201cGekko\u201d @ 486MHz 24MB 1T-SRAM + 8MB ARAM\nCustom ATI \u201cFlipper\u201d GPU @ 162MHz| Nintendo 3DS Specs 2x ARM11 MPCore @ 268MHz\n128MB FCRAM + 6MB VRAM DMP PICA200 GPU @ 268MHz  \n---|---  \n  \nThe GameCube was a very powerful piece of hardware in its time. Normally,\ncomparing numbers at face value is pointless, but for our purposes it works\nquite well\u2014 if one CPU has a clock speed (number of steps taken per second)\nlower than the other one, how could it hope to handle the enormous amounts of\noverhead that emulation requires? It can\u2019t. The 3DS is not capable of\nemulating the GameCube at full speed.\n\nMaybe exclusively targeting the New 3DS will help?\n\nNintendo GameCube Specs PowerPC \u201cGekko\u201d @ 486MHz 24MB 1T-SRAM + 8MB ARAM\nCustom ATI \u201cFlipper\u201d GPU @ 162MHz| New Nintendo 3DS Specs 4x ARM11 MPCore @\n804MHz 256MB FCRAM + 6MB VRAM DMP PICA200 GPU @ 268MHz  \n---|---  \n  \nStill not good enough. At least the CPU runs faster.\n\nAs a final nail in the coffin, the 3DS\u2019 successor, the vastly more powerful\nNintendo Switch, cannot emulate the GameCube at full speed either.\n\nHowever.\n\nThe property of Turing Completeness states that, given unbounded time and\nmemory, any computer can compute any task. This scientific law of computing\nmeans that the 3DS must be capable of emulating the GameCube, assuming\nunbounded time and memory.\n\nPeter never specified that the emeleter should run well. It should just run at\nall. So fulfilling his requirements is, indeed, possible.\n\nProps to Randall Munroe for coming rather close to predicting the contents of\nthis blog post.\n\n## None of these words are in the Bible\n\nHow do you approach this?\n\nFirst we\u2019ll need an emulator. In this case, the choice is quite simple\u2014\nDolphin Emulator. It\u2019s the only program on the market for this job, and for\ngood reason.\n\nDolphin is an extremely complex piece of software. It\u2019s over 20 years old, has\nmillions of lines of code, and is even used by the Visual Studio developers as\na torture test for their compilers.\n\nIt has an incredible laundry list of features. Just off the top of my head, it\nincludes:\n\n  * Just-In-Time recompilers\n\n    * For x86_64 and aarch64\n  * Four graphics backends\n\n    * OpenGL, Vulkan, Direct3D 11, Direct3D 12\n  * A completely self-contained Bluetooth stack\n  * Network play architecture\n  * A TAS playback system\n  * Ubershaders\n  * Etc. etc. etc.\n\nDolphin is highly advanced, highly mature, and just works. It plays your\ngames, and plays them well. It\u2019s everything software should be.\n\nSo how do you approach running it on the 3DS?\n\nWell, when you strip Dolphin down to its core dependencies, it turns out it\ndoesn\u2019t require that much. Although Dolphin has a massive amount of tight\noptimizations and clever tricks for running fast on contemporary CPUs and\nGPUs, it offers the ability to strip them all away at build time and enable a\n\u201cgeneric build\u201d which will run on anything you want. So our requirements are:\n\n  * A supported operating system running on the 3DS\n  * The ability to read a GameCube ISO\n  * Graphics drivers\n\n    * Dolphin always expects an OpenGL context to be present, even when using the software renderer.\n  * A display to output to\n\nThese requirements aren\u2019t that steep. We can make this work on the 3DS.\n\n### Operating System and Disk Reader\n\nThere\u2019s a port of Linux for the 3DS. It\u2019s very incomplete, but is usable. You\nget working displays, gamepad buttons, and a touchscreen display. All CPU\ncores can be brought up and run at full speed. Missing are wi-fi drivers, GPU\ndrivers, power management, and a lot of other things necessary to make it work\nwell.\n\nRecent patches enable mounting the SD card. So we\u2019re in business with the\nability to read the ISO.\n\nHowever, only the kernel is present, and the userland provided by the\nlinux-3ds project is buildroot. buildroot is, briefly, completely insufficient\nto run Dolphin. We will need a more practical userland environment for our\npurposes.\n\nAt this point I stalled for a few months. Configuring buildroot to build\nDolphin would have been punishingly difficult. Then, during a conversation\nwith Muller Minki, I found out that he had a key insight.\n\nThe original 2011 Raspberry Pi, and its miniature twin, the Raspberry Pi Zero,\nhas a single-core ARM1176JZFS CPU. This is an armv6l processor, that\nadditionally has support for the Jazelle execution state (which is a topic for\nanother article). Its officially supported operating system, Raspbian, still\ngets releases to this day, thanks to the first-class support from the\nRaspberry Pi Foundation.\n\nThe ARM11 MPCore CPUs found in the 3DS are armv6k CPUs, a superset of armv6l.\nSo, as it turns out, Raspbian is nearly completely drop-in compatible with the\n3DS! Unfortunately, a custom initramfs is needed, as some things like systemd\nare broken. Minki wrote one that he asserts will be open sourced SoonTM, after\nit\u2019s cleaned up. You can message him for the current version.\n\n### Graphics drivers and display output\n\nlinux-3ds has no GPU drivers. Even if it did, it would not be possible to use\nthem. The PICA200 GPU on the 3DS is fully compliant with the OpenGL ES 1.1\nstandard, and is almost compatible with OpenGL ES 2.0\u2014 however, it has a\nunique fixed-function configurable fragment pipeline that breaks the standard,\nwhich requires shaders.\n\nThe fragment pipeline of the PICA200 can be thought of much like the GameCubes\nTexture Environment Unit, but worse. It could never hope to emulate the\nGameCube. So we\u2019ll need to do all the GPU emulation on the CPU.\n\nDolphin has a software renderer built in that doesn\u2019t utilize a graphics card.\nHowever, it does require a valid OpenGL context for presentation of the frames\nit completes. It would be possible to write a new presentation scheme that\navoids this, but it might have been difficult\u2014 Neither I nor the Dolphin devs\ncould figure out exactly how their current framebuffer driver depends on\nOpenGL^5. They also said that their software renderer was truly terrible\nperformance-wise, and that I would likely be better off using a software\nOpenGL backend like llvmpipe.\n\nAnother problem is that the 3DS\u2019 top screen is only 400\u00d7320 pixels. The\nGameCube outputs at 640\u00d7480, which means that the 3DS\u2019 screen simply won\u2019t be\nable to present the entire frame.\n\nSo how do we start up llvmpipe? Well, we\u2019ll need an X session to connect to,\nsince an OpenGL context depends on a display server in the Linux graphics\nstack. But without a graphics card, it\u2019ll be difficult to start an X session.\nThis Catch-22 was subverted with a second observation from Minki.\n\nThe TigerVNC server shipped with Raspbian includes llvmpipe. So if one were to\ncreate a TigerVNC session, they would get a full-sized display of any desired\nresolution, and they would get an X session with llvmpipe built in. Two birds\nwith one stone.\n\nWe have successfully fulfilled all of Dolphins requirements to run. We have an\nOS with Linux, a device from which we can read an ISO. a display output and\nsome graphics drivers. We can now start building Dolphin.\n\n## Developing for linux-3ds\n\nAttempting to develop this Dolphin port on the console would be ill-advised.\n\nThere is a tiny, terrible touchscreen keyboard that uses the 3DS\u2019 imprecise\nresistive touchscreen. There are no drivers for the wi-fi card, so SSH is not\npossible. Though it is technically possible to gain networking by ripping out\nthe consoles IR blaster and soldering to it for use as a UART (the hardware\ncan be configured to work as a UART port instead of an IR port), there is a\nbetter (and much less destructive) way.\n\nqemu-user-static is a program that allows userspace programs written for\nanother ISA to execute on a host ISA using qemu. The kernel handles all system\ncalls just like it would for any other userland program, as qemu seamlessly\ntranslates syscalls made by the guest to the host.\n\nThis, in conjunction with chroot, allows one to execute an entire OS made for\nan ARM CPU on an x86 computer seamlessly, with an enormous performance penalty\nbut one dramatically lower than full-system emulation with an emulated ARM\nkernel would be.\n\nAlthough Minki was the one who originally suggested this to me, it turns out\nthat this procedure is well documented on the Debian Wiki for the purposes of\nmodifying a Raspberry Pi image... Which is almost exactly what we\u2019re doing!\n\nA nice diagram made by a colleague to help present this subject. Thanks,\nEliot!\n\nFrom there building Dolphin was a matter of trial and error, and iteration\ncould occur between hardware and the emulator with ease by simply moving the\nSD card the image was stored on back and forth. I found that the version of\nGCC included with Debian Bullseye was too old, so I updated one version newer\nto Debian Bookworm. Then, it was necessary to find the correct build flags for\na generic Dolphin image. Here they are, at the time of writing:\n\n    \n    \n    cmake .. -DENABLE_GENERIC=true -DLINUX_LOCAL_DEV=true -DCMAKE_CXX_FLAGS=-march=armv6k -DCMAKE_C_FLAGS=-march=armv6k -DENABLE_QT=0\n\nIt was then possible to build Dolphin. Even on a 16-core, 32-thread Ryzen 9\n3950X, it still took an hour and a half to compile using GCC inside qemu.\n\n\u201cYo dawg, I heard you like emulators, so I built you an emulator inside your\nemulator so you can emulate inside your emulator\u201d\n\nThen came the process of bringing up TigerVNC. Hilariously, this works\nperfectly fine inside qemu; the TigerVNC server can be spawned inside the\nchroot and connected to from anywhere. I now present the worst possible way to\nrun glxgears:\n\n  * Inside an emulated GPU (llvmpipe)\n  * Which is run inside an emulated ARM CPU (qemu)\n  * Which is sent over VNC, coming out of an x86 desktop with translated system calls for networking\n  * Over the internet, via Tailscale, to another x86 laptop.\n\nThis gets 23FPS on my Zen 2 desktop.\n\n## Bringing it together\n\nDolphin is an immensely flexible piece of software, but in the end it still\nrequired some changes to boot.\n\nFirst, the audio subsystem crashed. This can be disabled using a tricky-to-\nfind command-line flag.\n\nSecond, there is a hard dependency on libusb for the official Nintendo\nGameCube Adapter drivers. Unsurprisingly, if there are no USB controllers\npresent in the system, libusb returns a fatal error. After months of effort,\nripping out the adapter code was the only source code change necessary for the\ngacube emeleter in its current form. This statement is an incredible testament\nto how flexible a piece of software Dolphin is.\n\nAnd after all that, the dream is close to being fulfilled:\n\nFor the first time, a Nintendo 3DS is executing the first lines of code of\nSuper Mario Sunshine^6, a title made for the Nintendo GameCube.\n\n## What\u2019s Left?\n\nI took the above photo in December 2023, on one of the last days I had before\nbeing separated from my 3DS for the next five months.\n\nThe astute reader will notice that a frame has not actually been drawn. This\nis true. The more astute reader will notice that the graphics backend has been\nset to \u201cNull\u201d. This is also true.\n\nCurrently, it seems that Dolphin manages to crash llvmpipe somewhere when\nattempting to initialize an OpenGL context using it. This is reproducible both\nin the emulator and on hardware (I tested using a Raspberry Pi 1.)\n\nA beta reader actually managed to dig up exactly what\u2019s going on here.\nApparently, Raspbian Bookworm ships a completely broken LLVM. The blog post\nthat discusses this issue is only a month and a half old, so hopefully now\nthat the issue has been identified it will be cleaned up.\n\nAnother obstacle is setting up a TigerVNC server and client on the 3DS itself.\nThe server should perform the same. The client will need some significant\nscripting and hackery to display correctly. Perhaps I could place it on the\nbottom screen, since the 320\u00d7240 resolution on that screen is exactly half the\nGameCubes resolution.\n\nAnd finally, a major concern with the whole stack is keeping RAM usage in\ncheck. Recall that the definition of Turing Completeness guarantees\ncomputation given unbounded time and memory. The New 3DS has 256MB of RAM, and\nwe will need every last byte of it to make this work. Although swap is enabled\nand works, it will massively slow down this already horrendous process or kill\nit outright by breaking the SD card. The Dolphin devs and I were able to\ndramatically cut down on Dolphins memory usage for this configuration during a\nconversation at 37C3, but we figure right now it will still need 150MB.\nllvmpipe, a VNC server and a VNC client will need to fit in the rest, or at\nleast come close.\n\nToday, though, I can share the nearly complete gacube emeleter, built at long\nlast years after it was demanded of us. Peter, if you\u2019re out there, you can\nnow rest easy.\n\n### Footnotes\n\n  1. At this point in the 3DS hacking \u201cscene\u201d, one could access the powerful boot-time exploit called \u201carm9loaderhax\u201d (explained in this talk at 32c3, the slides can be found here) if they were able to access the console-unique \u201cOne-Time Programmable\u201d data, or OTP. The OTP is usually in a region of memory that should never be read... But fortunately, version 2.1 of the 3DS firmware did not lock it. So by performing a (lengthy) downgrade procedure to version 2.1, one could retrieve the OTP and install A9LH which provided boot-time code execution. You must use YOUR OTP to install A9LH, as the exploit depends on console-unique data. And because the exploit is boot-time, if for some reason it fails there was no hope for recovery. In Peters case, he used the wrong OTP, and the exploit indeed failed and bricked his system. \u21a9\ufe0e\n  2. \u201cno coffei\u201d and its further misspellings were never fully explained. They were inserted at random into otherwise (relatively) legible statements. This also predated the infamous \u201ccovfefe\u201d tweet by Donald Trump. It was a wholly original statement and thus became Peters catchphrase. \u21a9\ufe0e\n  3. GBATemp is a fairly toxic place. As such, my quality of writing significantly suffered during my time there. I encourage people not to take my words in this archive too seriously. After leaving the forum in 2017, I re-learned how to speak to others on the internet. \u21a9\ufe0e\n  4. A misspelling of obligation. \u21a9\ufe0e\n  5. Dolphin opens a file descriptor to /dev/fb0 and then, as far as we can tell, never does anything with it. The m_fb_fd member variable is never used again. \u21a9\ufe0e\n  6. Dumped from my own copy. Mario Sunshine continues to be the best 3D Mario game. Fight me. \u21a9\ufe0e\n\nPosted\n\nJanuary 10, 2024\n\nin\n\nUncategorized\n\nby\n\nswiftloke\n\nTags:\n\n## Comments\n\n### Leave a Reply Cancel reply\n\nInsane Rambles About Technology\n\n", "frontpage": false}
