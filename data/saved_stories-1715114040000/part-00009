{"aid": "40285805", "title": "A Medium-Agnostic Taxonomy of Notifications", "url": "https://aethermug.com/posts/a-medium-agnostic-taxonomy-of-notifications", "domain": "aethermug.com", "votes": 1, "user": "mrcgnc", "posted_at": "2024-05-07 14:21:32", "comments": 0, "source_title": "A Medium-Agnostic Taxonomy of Notifications", "source_text": "A Medium-Agnostic Taxonomy of Notifications - Aether Mug\n\n# A Medium-Agnostic Taxonomy of Notifications\n\n## Or, I Went a Bit Too Far Fantasizing About the Ideal Notification UX\n\nMarco Giancotti,\n\nMay 4, 2024\n\nMarco Giancotti,\n\nMay 4, 2024\n\nCover image:\n\nPhoto by Super Snapper, Unsplash\n\nMain intended audience of this post: people interested in UX and information\nmanagement.\n\nNotifications are part of the fabric of modern reality. They wait for us to\nwake up in the morning. They nag at us to stay awake at night. Throughout the\nday\u2014every day without end or hope for an end\u2014they rain upon us, vibrating our\nthighs, overlaying themselves on the other things we're doing, interrupting\nour meals, disturbing our fellow theater-goers, always pulling our hands\ntowards our devices even without the need to emit any signal, even without the\nneed to exist, by the mere possibility of existing.\n\nTo me, that means that we should study notifications as something as important\nas, say, politics, which has a larger impact on our lives but not nearly at\nsuch a granular, perennial, visceral level (your mileage, of course, may\nvary).\n\nThis is not a rant against the evils of notifications. Sure, commercial\nproviders have all the incentives to flood us and consume our attention (are\nthey the real \"consumers\", in this sense?), and they take no prisoners. But if\nwe use notifications so much, it's because most people need them or like them.\nFor those who don't, it's easy enough to shut them out altogether. What really\ninterests me is how to throttle them by degrees.\n\nThe best of both worlds\u2014the world of buzz-slavery and that of asceticism\u2014is,\nof course, to filter out the useless notifications and only pay attention to\nthe ones you need. That is easier said than done. Some notifications are\nuseless now, but might be useful in the future, and vice versa. Some\nnotifications need to be checked before knowing if they're useful, and some\nmust only be checked now and not later.\n\nWhat follows is my thought process as I put my product manager hat on and\nattempt to make sense of all those intricacies. I also try to come up with\nguidelines and hints for managing one's own floodgates and with a wish list of\nbetter UX design.\n\n## Your Dog Invented It, Too\n\nSomeone wrote, near the top of the Wikipedia page for \"Notification System\":\n\n> Within the 20th century, one of the most important scientific breakthroughs\n> has been the invention of notifications.\n\nThis is not what I expected to read, being wrong in many ways, but it still\nworks as a starting point.\n\nOne thing that stands out in that sentence is the idea that notifications are\na scientific breakthrough. Notifications are not what I would categorize as a\nscientific advancement. Maybe the author is referring to all the psychological\nresearch that corporations are doing to push their products in front of our\neyes, but\u2014even assuming we can call that science\u2014that's not how notifications\nwere invented.\n\nBefore all of the attention hacking began, notifications existed as honest\nways to inform people of things they actually needed to check. That, of\ncourse, started well before the beginning of the 20th century. Cell phones in\nthe nineties had little LED lights that blinked to notify you of messages and\nmissed calls. The first SMS was received by a Orbitel 901 (wired) phone in\n1992 and, although I can't find more details about it, it must have had some\nway to show it had arrived. Answering machines had light-based notifications\nat least as early as the 1970's.\n\nBut the more you try to look back for examples, the more you realize that what\nwe call a \"notification\" is, at its core, something much more universal and\nancient than the little icons that come to mind today, perched up there at the\ntop of a smartphone's screen.\n\nAn email sitting in your inbox is a notification, and so are the recent posts\nin a social timeline, and even a ringing phone. Is it limited to modern\ntechnology, then? No, because a letter made of paper, in your home's mailbox,\nserves exactly the same function, and as such it's another instance of\nnotification. A mother calling her children for dinner is a notification. Your\ndog whining to get out for a walk, too, is a notification.\n\nThe paper in the mail box is its own notification.\n\nWe're just using a new-sounding name for something that is, literally, older\nthan humanity itself: information meant for you to consume. Notifications\nweren't \"invented\" any more than aggression or feeding were \"invented\". The\nonly thing that changed is that, in the 20th century, we have a lot more of\nthem.\n\nUnless we look at notifications from this broader perspective, as special\ncases of a kind of phenomenon that transcends any medium, we can't fully wrap\nour heads around them.\n\nAs a first step, I'm going to define three axes to classify notifications.\nThen we'll see what are the most reasonable actions for each class of\nnotifications. Unfortunately not all of those actions are easy on a smartphone\nor PC today, so I'll conclude by offering some ideas for better software UX\nfor each of those actions.\n\n(I later edited the Wikipedia sentence cited above into \"The widespread\nadoption of notification systems was a major technological development of the\n20th century.\")\n\n## Step 1: Eisenhower, but in 3D\n\nSo, in the broadest sense, notifications are simply \"information meant for\nyou\". You're expected to check them. Whether it's someone else who wants you\nto look at them, or you requested them yourself, doesn't matter very much.\nThey're notifications if they come to you to be looked at. So, should you?\n\nAs always when discussing framings, there isn't a single or \"right\" way to\ncategorize notifications to make them more manageable. Different framings will\nwork in slightly different ways, and the important thing is that the framing\nyou choose is useful \"enough\". Instead of reinventing the wheel, then, we can\nfind a framing that has worked well for similar goals, and try to adapt it to\nthis one.\n\nOne framing that has helped me in the past is the Eisenhower matrix, or\nEisenhower method. It's so popular on the internet that I don't think I need\nto explain it in depth. It divides your pending decisions into levels of\nurgency and importance. As Dwight Eisenhower put it:\n\n> I have two kinds of problems, the urgent and the important. The urgent are\n> not important, and the important are never urgent.\n\nWe can use this with notifications, but there are two important adjustments to\nmake. First, the Eisenhower matrix is usually explained as a decision-making\nframework. While handling notifications is a form of decision-making, the\nmatrix is usually explained in the context of management and teamwork. For\nexample, you're told to \"delegate\" urgent-but-not-important decisions to other\npeople. In the following sections I'll adapt the concept a bit for the\nspecific case of notifications.\n\nSecond, there is a whole dimension to notifications that is not captured by\nEisenhower. It has to do with how quickly or easily the notification\ndisappears after reaching you. We could call it the transience axis.\n\nThus we get a three-dimensional space to think about notifications: the space\nof urgency, transience, and importance. What can it do for us?\n\n### The Urgency Axis\n\nSome notifications are intended for you to see as soon as possible, while\nothers you could ignore for a while without consequences.\n\nAs an example of the latter extreme, think of a fire alarm ringing in your\nhouse or a tornado siren when you're in Kansas. On the non-urgent end are\nthings like new videos from a Youtube channel you follow.\n\nNote that urgency is not the same thing as importance to you: it's only about\nhow soon you need to see the message for it to fulfill its purpose. A one-day\n80% discount off your favorite lip cream may be urgent, but probably not very\nimportant.\n\nIn general, you want to be able to control which notifications you get based\non their urgency. You may want to get the urgent ones as soon as possible, no\nmatter how busy you are, and silence the less urgent ones until later. You're\ncontrolling notification urgency when you stick a long-lasting discount coupon\nto your refrigerator, and when you configure your calendar to send you a\nreminder email the night before an important event.\n\nYou don't always know the urgency of a notification before looking at it, so\nyou're often forced to look at many less-urgent ones, just in case. But you\nsure would like to know. On the other hand, marketers love to create a false\nsense of urgency. Only a third party can mediate this tension, which is why I\nthink we should have protocols in place to clarify the urgency of each\nnotification. More on this later.\n\n### The Transience Axis\n\nThe second axis is transience, or \"how temporary is the notification?\"\n\nThe most transient notifications are extremely ephemeral, disappearing shortly\nafter reaching you, perhaps even before you had the time to look at them.\nRadio programs are very transient, because they keep going whether you\nunderstood what they said or not. There is no pause or rewind on a radio. The\nwinkers of a car in front of you are transient, too, because they might go out\nat a moment's notice.\n\nAt the other extreme, the least transient notifications are the permanent\nones, which will stay there in your face until you do something about them.\nPhysical mail in your home's inbox will keep on piling up and won't go away\nunless you take action yourself. A death threat painted on your shop's\nshutters over the night is something you can't easily dismiss either.\n\nPhone calls were originally completely transient notifications. Either you\nanswered immediately or their contents were lost to you, shrouded in mystery.\nThen they invented things like caller identification, which shows you the\nnumber of the caller, and voicemail, which stores people's messages for you to\nlisten whenever you want. Effectively, these inventions added less-transient\nnotifications to the innately ephemeral ones of ringing phones.\n\nHow transient you want your notifications to be depends on your tradeoffs. Too\npermanent and they'll pile up, take up your physical or mind space, and become\na burden. Too ephemeral and they'll pass right under your radar and you'll\nnever know you missed them. In general, it's best to have less transient\nnotifications for information that is important to you.\n\n### The Importance Axis\n\nThis one is the clearest, but the trickiest to classify. Importance is very\nsubjective, and potentially any message, regardless of format, could be\nimportant or not. In theory, something that affects your life and that you can\ndo something practical about is important, while the rest isn't.\n\nYou're the only one who can assign things along the importance axis. By\ndefinition, unimportant information should have low priority, and ideally you\nwant to eliminate it altogether from your life. But you may want to access\nsome of it for your enjoyment, curiosity, or archival reasons.\n\n## Step 2: Charting the Landscape\n\nFollowing the matrix approach, we can now divide each of these axes into two\nsections (urgent/non-urgent, transient/permanent, important/not important) to\nget eight combinations. Drawing these in a fancy 3D plot would be confusing,\nso I'll use two urgency-transience matrices, one for non-important\nnotifications and another one for the important ones.\n\n### Urgent & Transient Notifications\n\nNon-software examples:\n\n  * Someone asking you a question\n  * Sirens (when they affect you, e.g. you're blocking an ambulance's way)\n  * Earthquake alerts on your smartphone\n  * Screams for help\n  * Street signs when you're driving\n\nSoftware examples:\n\n  * \"A live stream is happening now!\"\n  * A \"looking for group\" message in a social RPG game\n\nUrgent notifications, by definition, have a short expiry date: they lose\nmeaning if you look at them too late. That's why it is often acceptable to\nkeep them transient.\n\nAny urgent & transient notification can be important to you or not, and that\naffects what you should do with them. Important urgent & transient\nnotifications are what you want to dedicate all of your attention to, right\nnow. They should override basically anything else, so they need to be in your\nface, loud, and give you all the information you need immediately.\n\nUnimportant urgent & transient notifications, on the other hand, are\ncompletely optional. If you don't want to remove them altogether, then you\nwant to get them in a non-intrusive way, somewhere you can find them when/if\nyou wish to, but that doesn't get confused with the important ones. If they go\naway before you see them, never mind. You'll never know and never feel much\npain for missing them.\n\n### Urgent & Permanent Notifications\n\nNon-software examples:\n\n  * Suicide letters, blackmail letters, letters/emails about approaching expiration dates\n  * Newspaper delivered to your mail box\n  * Voice-mail asking to call back ASAP\n\nSoftware examples:\n\n  * Chat conversation you're participating in\n  * Emails from your boss\n  * Blog post in your feed reader/inbox about a new concert with tickets quickly running out\n\nThere is no use, in general, in having urgent notifications that keep existing\nafter you've looked at them, except perhaps a sentimental or record-keeping\nvalue. In the latter case, they're probably important for you.\n\nAs for the unimportant ones, you need to get rid of them once you're through\nwith them, or prevent them from reaching you in the first place.\n\n### Non-Urgent & Transient Notifications\n\nNon-software examples:\n\n  * Brand ads on the street\n  * Most overheard conversations\n  * Spotting a flock of birds making strange patterns in the sky\n  * Sounds of the city\n\nSoftware examples:\n\n  * Bad task reminders (\"oops, I swiped it away, then forgot all about it!\")\n  * Time-bounded social-media posts (e.g. Snapchat)\n  * A nice picture or sentence that hit you while browsing the web\n\nAlmost every moment we spend in society, we're flooded by transient, non-\nurgent notifications. They compose most of the noise in our lives. Thankfully,\nthey go away on their own.\n\nThe important ones are a problem. You may miss them, and live to regret it. In\ngeneral you want to take note of the important ones before they go away, for\nas long as you need\u2014until you have time to act on them. In other words you'll\nhave to devise ways to catch and convert them into permanent notes.\n\nUnimportant non-urgent & transient notifications are something you can safely\nignore. Look at them only when you really have nothing better to do.\n\n### Non-Urgent & Permanent\n\nNon-software examples:\n\n  * Most letters, promotional leaflets in your mailbox\n  * Storefront signs in your area\n  * Books on your shelves\n\nSoftware examples:\n\n  * Those eternally-open tabs in your browser\n  * Most emails, chat messages, and social-media posts\n  * Good task reminders (\"it's staying there until I tick it off.\")\n\nThese are the things that we need to spend the most time managing, otherwise\nthey will drown us. Most of us, it seems, are losing this battle.\n\nImportant non-urgent & permanent notifications may not need immediate action,\nbut they need to be there when you eventually want to do something about them.\nFor this reason you need to organize them well, store them neatly. It is easy\nfor them to slip through the cracks, or to be forgotten for a little too long.\nThe temptation is to keep them all, but space and memory are finite: it's\noften better to assign deadlines to them, act on them, and then destroy or\narchive them.\n\nThe unimportant ones are your enemies. They are the invader weeds. They\nconstantly threaten to sideline the important ones, and can get in your way. A\ncomplete waste. It's best to block them as much as you can, and destroy the\nothers. You may want to keep some of them for entertainment or sentimentality,\nbut do it at your own peril. (This is more of a problem with physical\nnotifications, but care is needed for the digital case, too. See below.)\n\n## Step 3: Better Notification UX\n\n### The Core Actions\n\nThe Urgency-Transience-Importance framing makes the kind of actions we need\nclear. In broad strokes, we need eight kinds of actions: destroy, ignore,\ncheck now, block, archive, organize, set deadline, and convert to permanent.\nBut do our devices support those actions?\n\nIn part, they do. Check now and ignore come for free: everything is built\naround allowing you to check things immediately, and ignoring is as easy as\nscrolling down a little or looking away. While the granularity offered varies,\nall OSes also let you mute notifications either temporarily or permanently. I\ntreasure this ability and exercise it aggressively.\n\nFortunately most apps also give you ways to destroy things. You can delete\nemails and chat threads, put files in the trash can, and so on. Archiving\nfunctionality is also very common, although not as much as it should be, in my\nopinion.\n\nYou could argue that many digital objects like emails and chat messages don't\neven need deletion, because they \"self-archive\" simply by remaining there in a\nsequence. In a sense, it's as if they were deleted, because you don't need to\ngive them a second thought (unless you hit your email provider's storage\nlimit). It's also nice, in theory, to be able to go back to them if you ever\nwish to.\n\nThere's a hidden cost, though: those thousands of past interactions soon pile\nup into a huge haystack you have to sift through. This becomes a deterrent\nagainst your searching for specific things from the past, and defeats the\npurpose of keeping them. Most of the time, it's safe and a better idea to\ndelete.\n\nThere is one aspect of the destroy action that, I feel, hasn't been explored\nfully yet. Recall the urgent & permanent notifications. If one such\nnotification is even a little bit important to you, you will want to keep it\nfor a while, but you may want to get rid of it once its expiration time comes.\n\nWith the current UX of most programs, you're forced to wait until the right\ntime, and then delete the message. This is fine and even preferable in many\ncases (they act like checkboxes that you \"tick\" by deleting them), but there\nare cases where you're not even sure if you want to act on them. Think about\nthe time-sensitive news in your inbox. Maybe you'll get around to reading them\nin the weekend, but if you don't, you're okay to skip.\n\nIn this case, wouldn't it be nice to have a \"scheduled removal\" function? You\nsee the notification, you think you might consume it later, but not after a\ncertain date. So the notification sits there, waiting for you, but it \"shows\nitself out\" when it's become obsolete. No further action is needed from you\nunless you want to.\n\nAn example implementation of the \"scheduled removal\" UX, applied to Google\nKeep. Besides the usual \"delete\" option, you'd have an \"auto-remove\" option,\nwhere you can set the date and time, and whether you want to delete or just\narchive the memo.\n\nThis might only be a minor improvement, but I think it shows how this framing\ncan help generating new UX ideas.\n\n### Steering the Flow\n\nGiven the constant assault we're under, blocking notifications is perhaps the\nmost critical action for our sanity, and it's well supported across the board.\nIn most apps, you can filter out emails with custom rules, you can unfollow\naccounts, and you can explicitly block them.\n\nHowever, according to the Urgency-Transience-Importance framing, the biggest\nfactor in deciding whether to block something or not is its importance, not\nthe source!\n\nMost people and apps say things that are unimportant to you 90+% of the time,\nand only sometimes produce something that you consider important. Blocking\nwhole accounts seems like too blunt of a tool and a great way to miss\nopportunities.\n\nIt might be the right time to found your startup so that you'll be ready to\nsolve this (I believe) billion-dollar problem when AI catches up. I wouldn't\nbe surprised if someone were attempting that already.\n\nThe ideal blocking feature would be some way to filter out based on a\ncustomized \"value function\" that only lets the things you might care about\nreach your attention. Using deterministic algorithms would never work. AI is\nmore promising. I don't think it's feasible just yet with the current state-\nof-the-art AI, but I think we're very close.\n\nNext in line is organizing, the thing you do to make your important, non-\nurgent stuff easily accessible. This is an extension of mere archival. We have\nlots of tools for this one:\n\n  * File systems let you structure data into hierarchies, which are easier to navigate.\n  * Indexing and search is the specialty of databases. If you know exactly what you're looking for, indexing is all you need to find stuff really fast.\n  * Tagging lets you transcend the strict limitations of folders, and makes search easier.\n  * Cross-linking, like wiki links to other pages, is a powerful and quick way to organize things in a more organic way while keeping it semantically navigable.\n  * Snoozing is a relative newcomer to the arena, but one of my favorites. It allows you to archive notifications not (only) based on their contents, but on when you'll need to see them again. You can forget about them until they pop up again at the right time.\n  * And more.\n\nYet, I consider organizing an under-solved problem. Besides file systems (and\nmaybe indexing), most of the powerful approaches are left to the developers of\neach individual product. Each app implements its organization mechanisms\ndifferently, and most of them are siloed\u2014you're forced to treat each of them\nas its own separate archive.\n\nWhy not have universal, inter-app tagging? Where is the one-click cross-\nlinking between apps? Why are 99% of the things I see on my screen not\nsnoozable?\n\nThese are such fundamental operations that I'd love to see implemented at the\nOS level on each device, and using standard protocols over the internet.\n\n### Transience Tuning\n\nThe two remaining actions, set a deadline and convert to permanent, are meant\nto change the transience of your notifications. Similar to the \"scheduled\nremoval\" function I mentioned above, these functions would allow you to alter\nthe life-span of a notification.\n\nCalendar apps and certain to-do apps allow you to set deadlines for your\nimportant non-urgent & permanent notifications. In theory, you can create a\ntask that will send you reminders to work on the item and then to destroy or\nfile them away. It's a manual process requiring you to choose dates, type in\nthe explanation, set up the reminders, etc. For obvious reasons, that's not\ngoing to be sustainable for most people.\n\nWe can think of a better solution that builds on the auto-removal idea.\nInstead of only letting you delete or archive the item (e.g. a note, an email,\na chat notification), it could also give you the option of receiving reminders\nof the deadline some time before it actually arrives. It could even add them\nto your to-do list when the time approaches.\n\nBuilding on the previous example with Google Keep, some options might involve\nreminders before the actual automated archival/deletion. A confirmation\nrequest of the archival/deletion, when the time comes, could allow you to bump\nthe deadline to later, if you want. Procrastination would be opt-in, rather\nthan opt-out.\n\n(In the absence of all that, snoozing could be a partial solution.)\n\nAs for the convert to permanent action that I suggest for important non-urgent\n& transient notifications\u2014temporary bits of information that you don't want to\nlose\u2014we have a few partial solutions.\n\nIf it's a website you want to retain, you can bookmark it, but good luck\nkeeping those organized. There are specialized save-for-later apps like\nReadwise, Pocket and Omnivore, and they mostly focus on written content. There\nis Pinterest for images, but it's a nasty SEO-spammy walled garden. Nothing\nreally general.\n\nA few note-taking apps do have pretty good data ingestion systems allowing you\nto throw information in and easily categorize it. I'm thinking especially\nabout Evernote's excellent quick capture functionality, which provides first-\nclass input interfaces for text, emails, voice, pictures, and other formats.\n(Sadly the company is now nearly defunct because of bad management and\u2014among\nother things\u2014for being so rigid compared to newer options).\n\nI'm wishing modern tools like Obsidian and Logseq would take a lesson from the\nold guard here. That would turn them into powerful permanence wells, and their\nrich features make organizing and rediscovering things a breeze.\n\n### Urgency Flags\n\nThere is one last notification problem I hope future software infrastructure\nwill solve: there is no way to automate actions based on urgency.\n\nUnlike importance, urgency is a rather objective property of a message. It's\neither time-sensitive or it isn't. In principle, the producer of a\nnotification knows its true level of urgency, so what if the system allowed\nthem to flag it accordingly?\n\nThis would let the client automatically apply different strategies on a case-\nby-case basis. The OS or app could give you the option to mute only the non-\nurgent notifications, while letting the pressing messages through. You could\nhave advanced options that auto-snooze non-urgent items until the weekend, or\nsets deadlines for them based on certain criteria. Urgent items within certain\ncategories (e.g. news) could be made transient by default. A lot of\npossibilities would open up.\n\nOf course, certain actors would still have an incentive to fake urgency. But\nby incorporating urgency into protocol, we would have methods for punishing\nthe liars. At least for email, we already have mechanisms in place to track\nand impact the reputation of email senders: if they spam too much, they'll\neventually be sent to the spam box. Imagine having a second button alongside\n\"report spam\" saying \"this isn't urgent\". It could make for a softer version\nof spam control, adding granularity for the senders you don't necessarily want\nto block out altogether.\n\nEmail messages are among the notifications that would benefit a lot from\nhaving an urgency or expiration date provided by the sender. If it's wrong,\nyou can flag it and penalize the sender.\n\n## Notifications Are Hard\n\nNotifications are surprisingly hard to get right. This is how Slack does it:\n\nSlack's notification logic is complex and it's above-average in quality. I\nespecially love the ability to snooze messages. (Note, this chart is several\nyears old.)\n\nMore than once in this post I've dreamed out loud of OS-level solutions and\nnew universal protocols. Those things are both unlikely to happen any time\nsoon. At the end of the day, every program and every communication channel is\ndifferent, and it may be impossible to produce a full integration like that.\nStill, if this \"Urgency-Transience-Importance\" is of any use to clarify even\none product designer's\u2014or anyone else's\u2014ideas, it has done its job. \u25cf\n\nCover image:\n\nPhoto by Super Snapper, Unsplash\n\nAll content is licensed under\n\nCC BY-SA 4.0\n\n", "frontpage": false}
