{"aid": "40223980", "title": "Is the \"AI developer\"a threat to jobs \u2013 or a marketing stunt?", "url": "https://blog.pragmaticengineer.com/ai-developer-marketing-stunt/", "domain": "pragmaticengineer.com", "votes": 1, "user": "modmodmod", "posted_at": "2024-05-01 14:44:39", "comments": 0, "source_title": "Is the \u201cAI developer\u201da threat to jobs \u2013 or a marketing stunt?", "source_text": "Is the \u201cAI developer\u201da threat to jobs \u2013 or a marketing stunt? - The Pragmatic\nEngineer\n\n### Menu\n\nClose\n\n  * Home\n  * Newsletter\n  * My Books\n  * Reading List\n  * Popular Articles\n  * Ethics statement\n  * Sponsoring\n  * Investing\n  * Contact me\n  * About\n  * Now\n  * The Software Engineer's Guidebook\n  * Interview Preparation\n  * RSS Feed\n  * twitter\n  * youtube\n  * linkedin\n\nSubscribe\n\n  * Home\n  * Newsletter\n  * My Books\n  * Reading List\n  * Popular Articles\n  * Ethics statement\n  * Sponsoring\n  * Investing\n  * Contact me\n  * About\n  * Now\n  * The Software Engineer's Guidebook\n  * Interview Preparation\n  * RSS Feed\n  * twitter\n  * youtube\n  * linkedin\n\n# Is the \u201cAI developer\u201da threat to jobs \u2013 or a marketing stunt?\n\nThis article was published on 14 March 2024 in The Pragmatic Engineer, for\nsubscribers. I'm sharing this piece in public more than a month later, as it\nprovides important context and analysis for the AI dev tools space.\n\nSubscribe to The Pragmatic Engineer to stay up-to-date on what is happening\nwith software engineering, Big Tech, and startups. And to get timely analysis\nlike this into your inbox, early.\n\nThere\u2019s been a number of news stories about \u201cAI developers,\u201d recently.\n\nA first, smaller wave of these stories included Magic.dev raising $100M in\nfunding from Nat Friedman (CEO of GitHub from 2018-2021,) and Daniel Gross\n(cofounder of search engine Cue which Apple acquired in 2013,) to build a\n\u201csuperhuman software engineer.\u201d It seems they\u2019re aiming for something which\nperforms better than human software engineers, today:\n\nImage source: Daniel Gross on X\n\nIt\u2019s a very bold claim whose success would mean a direct replacement of\ndevelopers! Clearly, this would generate a handsome return for investors and\nfounders. Gross implies the company is eyeing more than $10B in revenue;\nalthough it\u2019s just a claim, and we saw no product or demo.\n\nThis week has brought a bigger wave of coverage, with startup Cognition Labs\nproducing a video demo about its product \u201cDevin,\u201d which it calls \u201cthe first AI\nsoftware engineer\u201d \u2013 just as they announced raising a $21M Series A funding.\nThe company says:\n\n> \u201cDevin is the new state-of-the-art on the SWE-Bench coding benchmark, has\n> successfully passed practical engineering interviews from leading AI\n> companies, and has even completed real jobs on Upwork.\n>\n> Devin is an autonomous agent that solves engineering tasks through the use\n> of its own shell, code editor, and web browser.\n>\n> When evaluated on the SWE-Bench benchmark, which asks an AI to resolve\n> GitHub issues found in real-world open-source projects, Devin correctly\n> resolves 13.86% of the issues unassisted, far exceeding the previous state-\n> of-the-art model performance of 1.96% unassisted and 4.80% assisted.\u201d\n\nTo back up these claims, the company shared videos of the tool in action, in\nwhich an agent runs into an error, adds print statements to debug the error,\ndetects the issue, fixes it, and commits it.\n\nDevin has dominated tech news for the past few days, with major media outlets\nrunning sensational headlines, including the usually reserved Bloomberg\u2019s,\nGold-Medalist Coders Build an AI That Can Do Their Job for Them. On top of the\npromise that Devin can do the job of software engineers, the Cognition\nfounding team boasts of having one 10 gold medals in international coding\ncompetitions \u2013 meaning the founders are excellent competitive programmers.\n\nI suspect the media campaign is overreaching, though. Press reports say Devin\nis ready to do the job of developers, but even Cognition AI admits that the\ntool only solved about 1 in 7 GitHub issues unassisted in tests. That\u2019s\nimpressive, but there\u2019s a very long way to go! You\u2019d expect junior engineers\nto tackle at least as many (if not more,) and for senior engineers to get\nalmost 7, unassisted.\n\nAlso, when I visited Cognition AI\u2019s website, I naively expected the AI\ndeveloper to have generated parts of the website, proving the thing works in\nproduction. But there is none of this.\n\nThe world\u2019s first \u201cAI developer\u201d did not touch its creator\u2019s website. Source:\nCognition\n\nSo far, all we have is video demos, and accounts of those with access to this\ntool. From the videos, it seems it\u2019s more of an advanced agent that can switch\nbetween certain tools. Still, at this point, Devin doesn\u2019t feel more than a\nheavily work-in-progress prototype.\n\nDevin is spreading a lot of fear about job security. Even though Devin is not\nreadily available to use, reactions to the possibility of a colleague that\u2019s\nan \u201cAI developer\u201d makes the potential impact of AI tools very clear. Cognition\nAI is positioning Devin as a possible replacement for an engineer, and more,\nand so is Magic.dev, which claims its aiming for a \u201csuperhuman software\nengineer.\"\n\nDevin\u2019s videos are potentially a source for concern, and Magic.dev is backed\nby the former CEO of GitHub, so there\u2019s grounds for concern that autonomous\nagents are coming which will do what a software engineer does today, and more,\nright?\n\nMy take is a little different. What if it\u2019s a well-choreographed show\nperformed out of necessity?\n\nWhat if AI dev tool startups have been backed into a corner by Microsoft,\nwhich has eaten their lunch? The interesting thing about Devin is that in its\ncurrent form it feels more like a coding assistant that can get some things\ndone. It makes mistakes, needs input, and gets stuck on 6/7 bugs on GitHub.\nIt\u2019s a helpful tool, always available, but not a replacement for a developer.\nIt\u2019s more a copilot.\n\nBut we already have a co-piloting AI tool; it\u2019s called GitHub Copilot!\nMicrosoft launched it 2.5 years ago, and it became the leading AI coding\nassistant almost overnight. Today, more than 1.3 million developers pay for it\n(!!) across 50,000 companies.\n\nAt $20/month, it\u2019s a price point that is very hard to compete with, especially\ngiven how expensive GPU infrastructure is, which needs training and fine-\ntuning for operating large language models.\n\nUsually, we see startups innovate with new tooling, and Big Tech then catches\nup and builds their own tools, or acquires some competitors and integrates\nthem. However, Microsoft was one of the first to launch an AI coding\nassistant, years ahead of most other startups. When we looked at GitHub\nCopilot alternatives, all were launched at least a year after GitHub Copilot\u2019s\n2021 launch except Tabnine, launched in 2019.\n\nAI dev tool startups need outlandish claims to grab attention. The \u201cAI coding\nbuddy\u201d space feels already saturated. For organizations hosting source code on\nGitHub, Copilot is a no-brainer. For companies using Sourcegraph for code\nsearch, Cody is the clear choice. Those using Replit for development, the\nReplit AI tool is the one to go with. The only major source control platforms\nthat don't have AI assistants yet are GitLab and Bitbucket, and this is surely\njust a matter of time.\n\nThis means, one of the few ways to launch an AI dev tools startup is to claim\nyou will fully replace software engineers. Anything less, and there\u2019s no\nreason why developers should swap their existing coding assistant, and open up\ntheir codebase for a brand new tool to crawl and contribute to.\n\nThe Cognition AI team smashed it on media attention; it feels like their\nlaunch garnered almost as much developer attention as ChatGPT\u2019s launch in\nNovember 2022. The company broke through to mainstream media \u2013 no small feat!\n\nSome articles about Cognition AI\u2019s product launch. It\u2019s rare for startups to\nget as much attention \u2013 which was likely the point. Source: Google News\n\nThe company surely has its waitlist full of companies with high expectations,\neager to try out this agent. Cognition AI will now need to deliver on a\npromise that has never been fulfilled but has been set as a goal, many times\nthrough tech history.\n\nThe good news is the claim \u201cyou will not need software engineers\u201d has been on\nrepeat since the 1960s. Ask any CEO what their company spends most money on,\nand their answer will likely include the engineering team. Software engineers\nare expensive, which means our profession pays well! Businesses pay what they\nhave to because they need to. If they could pay less, they would.\n\nIt\u2019s nothing new that software engineers are expensive and hard to recruit;\nthis has been the case since the dawn of computing. In 1959, the programming\nlanguage COBOL was designed by software engineer Grace Hopper. The stated goal\nof this language was to allow business people with no programming background\nto use it. From Wikipedia:\n\n> \u201cIn the late 1950s, computer users and manufacturers were becoming concerned\n> about the rising cost of programming. A 1959 survey had found that in any\n> data processing installation, the programming cost US$800,000 on average and\n> that translating programs to run on new hardware would cost $600,000. At a\n> time when new programming languages were proliferating, the same survey\n> suggested that if a common business-oriented language were used, conversion\n> would be far cheaper and faster.\u201d\n\nCOBOL should have been the answer to a rising cost of programming: it allowed\nanyone, with no programming experience, to write programs. The language was\nindeed friendly for business users, and was the most popular programming\nlanguage in the world for a short period in 1970. Here\u2019s what\u2019s \u201chello world\u201d\nlooks like in COBOL:\n\n> IDENTIFICATION DIVISION.\n>\n> PROGRAM-ID. HELLO.\n>\n> PROCEDURE DIVISION.\n>\n> DISPLAY \"Hello, world\".\n>\n> END PROGRAM HELLO.\n\nIn the end, COBOL didn\u2019t remove the need for developers: instead, it created\ndemand for COBOL developers. In an amusing twist, a few years ago, demand for\nCOBOL developers reportedly soared as there are still critical banking and\ninsurance systems using this now-ancient language.\n\nAnd COBOL was just one of many attempts. Efficient frameworks are continuously\ncreated so that fewer developers can build the same application; no-code tools\npromise to build software without the need of developers. And while all of\nthese initiatives partially succeed: we keep observing a need for software\ndevelopers.\n\nAI-assisted tools do what could be a much bigger leap, compared to a new\nprogramming language like COBOL. However, as we understand more about LLMs, we\nunderstand more of their limitations, and their best use cases. LLMs have a\ncore problem with hallucination, and coding is one of the few use cases of\nadding a second validation loop to test the modified code and eliminate this\nhallucination. We still know little about how LLMs perform over time on\nunfamiliar technologies, and they remain very smart \u201cprobability machines,\u201d\noperating based on weight matrices. We covered how ChatGPT works, under the\nhood.\n\nI have no illusions that developer software in 5 years won\u2019t look different to\ntoday because we\u2019ll have better tools to use. But a future of \u201cAI developers\u201d\ndoing most of the work? This is the necessary messaging that today\u2019s AI\ntooling startups need to repeat. If the future is AI coding buddies, it will\nmost likely be improved versions of GitHub Copilot, Sourcegraph Cody, tools\nfrom Jetbrains, GitLab, and others in the developer tooling space.\n\nThis was an excerpt from The Pulse #85. The full article covers these\nadditional topics:\n\n  * Industry pulse. Apple unbans Epic\u2019s developer account in just one day; The two, distinct types of layoffs happening across the industry; OpenAI\u2019s CTO unwilling to answer what videos their Sora video product was trained on; Reddit prepares to go public; and more.\n  * A trend of lower equity grants, with forward-heavy vesting? DoorDash is offering 40% lower equity grants \u2013 but by changing equity vesting to be forward-heavy, the first year\u2019s compensation remains unchanged. We will probably see more companies reaching for creative solutions to both reduce equity compensation but to also reward top performers more efficiently. And to not have to worry about the \u201cfour-year-cliff\u201d anymore.\n\nRead the full article here.\n\nSubscribe to my weekly newsletter to get articles like this in your inbox.\nIt's a pretty good read - and the #1 tech newsletter on Substack.\n\n#### The Software Engineer's Guidebook\n\nI wrote The Software Engineer's Guidebook. Here is what Tanya Reilly, senior\nprincipal engineer and author of The Staff Engineer's Path says about it:\n\n> \"From performance reviews to P95 latency, from team dynamics to testing,\n> Gergely demystifies all aspects of a software career. This book is well\n> named: it really does feel like the missing guidebook for the whole\n> industry.\"\n\nGet the book here.\n\n### Featured Pragmatic Engineer Jobs\n\n  * Director of Engineering at Synthesia. \u00a3180-250K. Remote (EU or UK).\n  * Senior Frontend Engineer at WellTheory. $130-150K + equity. Remote (Global).\n  * Senior Frontend Developer at ePilot. \u20ac70-100K. K\u00f6ln (Germany) or Remote (Germany).\n  * Senior Full Stack Engineer at ePilot. \u20ac70-100K. Remote (Germany).\n\nThe above jobs score at least 9/12 on The Pragmatic Engineer Test.\n\n#### Newsletter\n\nEnjoying this article? Subscribe to my newsletter to get issues like this in\nyour inbox. It's a good read and the #1 technology newsletter on Substack.\n\n#### Gergely Orosz\n\nLast updated 01 May 2024. Originally published 01 May 2024.\n\nWriting The Pragmatic Engineer Newsletter. Author of The Software Engineer's\nGuidebook. Previously at Uber, Microsoft, Skype, Skyscanner.\n\nAmsterdam, Netherlands\n\n#### Share this post\n\nTwitter Facebook\n\nby Gergely Orosz\n\n### Menu\n\nClose\n\n  * Home\n  * Newsletter\n  * My Books\n  * Reading List\n  * Popular Articles\n  * Ethics statement\n  * Sponsoring\n  * Investing\n  * Contact me\n  * About\n  * Now\n  * The Software Engineer's Guidebook\n  * Interview Preparation\n  * RSS Feed\n  * twitter\n  * youtube\n  * linkedin\n\nSubscribe\n\n  * Home\n  * Newsletter\n  * My Books\n  * Reading List\n  * Popular Articles\n  * Ethics statement\n  * Sponsoring\n  * Investing\n  * Contact me\n  * About\n  * Now\n  * The Software Engineer's Guidebook\n  * Interview Preparation\n  * RSS Feed\n  * twitter\n  * youtube\n  * linkedin\n\n  * Subscribe via email\n  * Subscribe in a reader\n\nThe Pragmatic Engineer \u00a9 2024\n\n## How does ChatGPT work? As explained by the ChatGPT team.\n\nFor those of us who have not spent the past few years building ChatGPT from\nthe ground up, how does it work? From Evan Morikawa, who leads the Applied\nengineering team at OpenAI...\n\n", "frontpage": false}
