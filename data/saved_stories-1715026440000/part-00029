{"aid": "40274392", "title": "What Developers Hate", "url": "https://www.infoworld.com/article/3715443/what-developers-hate.html", "domain": "infoworld.com", "votes": 1, "user": "gulced", "posted_at": "2024-05-06 13:26:35", "comments": 0, "source_title": "What developers hate", "source_text": "What developers hate | InfoWorld\n\nClose Ad\n\ninfoworld\n\nUNITED STATES\n\n  * United States\n  * United Kingdom\n\n  * App Dev\n  * Cloud\n  * Gen AI\n  * Machine Learning\n  * Analytics\n  * Newsletters\n  * White Papers/Webcasts\n\n\u00d7\n\nClose\n\n# What developers hate\n\n### Take a look at this unscientific survey to discover some ways to keep\ndevelopers happy. A few are even simple.\n\nBy Matt Asay\n\nContributor, InfoWorld\n\n| May 6, 2024 2:00 am PDT\n\nKaren Roach / Shutterstock\n\nNo one thinks software development is easy, but who would have thought it\ncould be hard in so many different ways? Evans Data estimates there are 26.9\nmillion software developers globally. Recently more than 100 of those\ndevelopers weighed in on Ali Spittel\u2019s question, \u201cWhat\u2019s the most difficult\npart of your job as a developer?\u201d I expected the answers to mostly coalesce\naround a few key themes, but the responses were highly varied. It\u2019s worth\ndigging into them to see how your company can improve life for your\ndevelopers.\n\n## Scope creep\n\nSometimes we love our developers too much. We rely on them (the new kingmakers\nand queenmakers) to innovate and to keep innovating. As Kyle Shevlin notes,\n\u201cThe constant threat of scope creep from product and design\u201d makes life\ndifficult for developers. This stems from a healthy confidence in developers\u2019\ntalents, but scope creep translates into bloated software, which is hard to\nmaintain, something Sofiene Salem highlights. Couple this with \u201cunrealistic\ndeadlines set by non-developers,\u201d as Brian Shimkus stresses, and you end up in\ndouble trouble.\n\nDevelopers also dislike \u201cmisalignment on the team in terms of what we actually\nshould be building and expected outcomes,\u201d as Danielle Heberling points out.\nOh, and guess what? As developers, you\u2019re always going to have \u201cconstant doubt\nof whether there is a better solution,\u201d because, of course, there is, as\nJelena Perfiljeva suggests. You just won\u2019t settle on it until much later. The\nkey, as Javier Gonz\u00e1lez argues, is to figure out \u201cwhen to stop the\nperfectionism infinite loop.\u201d Your code is never going to be perfect. Accept\nit and move on.\n\n#### [ Coding with AI: Tips and best practices from developers ]\n\n## The pace of learning\n\nFor every developer who has been coasting on his understanding of Cobol for\nthe past few decades, there\u2019s the reality of framework flux today. As Brandon\nTrabon calls out, \u201cKeeping up with the constant changes in languages and\nframeworks\u201d can be a serious challenge. As he continues, \u201cYou really have to\npick the ones you think will gain the most traction and start there.\u201d But\nthat\u2019s not enough. \u201cOf course, you need to be ready to pivot\u201d to something\nnew. Frameworks will often leave developers underutilizing a database or other\nsystem, but sometimes it\u2019s the only way for a developer to keep her head above\nwater with the pace of innovation. Even so, Trabon is right: Although\nframeworks help, they also change, and that change creates problems.\n\nRelated to this is the architecture of the application itself. According to\nMicha\u0142 Zakrzewski, \u201canticipate how the application will evolve to prepare the\nbest possible architecture, but don\u2019t overdo it at the outset.\u201d This is tough.\nFor example, as a developer you may need to prepare for scale, but not by\noverprovisioning to the extent you break the bank upfront.\n\n## \u201cIf only I could code more\u201d\n\n\u201cEverything that isn\u2019t coding\u201d makes software development hard, says Luke\nProsser. By some measures, a developer will spend just 5% of the time writing\ncode, with another 70% spent trying to understand the code or doing things\nthat only seem tangentially related to the code. As one commentator styles it,\nthis includes \u201ctrying to get all the details to start the coding process.\u201d\nAnother thorny issue: \u201ccross-team collaboration ... [especially] in larger\ncompanies,\u201d notes someone else. As much as we may want to focus on the ones\nand zeroes, software development is ultimately fueled by people, and, well,\npeople are hard.\n\nWhat about the common fear that AI will eliminate humans from software\ndevelopment? Well, AI is simply not going to replace people. Not now, not\never. So to Jessica Leigh and all the rest of you skilled software developers\nwho worry about \u201cwaking up every morning and having to convince myself I still\ncare about the work or this industry as gleeful managerial types predict how\nLLMs are going to make us and all other drivers of actual value obsolete,\u201d\nlet\u2019s end with this truth. As machines take on more of the grunt work of\nsoftware development, the truly thoughtful, innovative work will forever be\ndone by creative, wonderful developers like yourselves.\n\nNext read this:\n\n  * Why companies are leaving the cloud\n  * 5 easy ways to run an LLM locally\n  * Coding with AI: Tips and best practices from developers\n  * Meet Zig: The modern alternative to C\n  * What is generative AI? Artificial intelligence that creates\n  * The best open source software of 2023\n\nRelated:\n\n  * Software Development\n  * Developer\n  * Careers\n  * Development Libraries and Frameworks\n\nMatt Asay runs developer relations at MongoDB. The views expressed herein are\nMatt\u2019s and do not reflect those of his employer.\n\nFollow\n\nCopyright \u00a9 2024 IDG Communications, Inc.\n\nInfoWorld\n\nCopyright \u00a9 2024 IDG Communications, Inc.\n\nExplore the Foundry Network descend\n\n  * CIO\n  * Computerworld\n  * CSO Online\n  * InfoWorld\n  * Network World\n\n### InfoWorld wants to show you notifications\n\n#### You can turn off notifications at any time from your browser\n\n##### Powered by subscribers\n\n", "frontpage": false}
