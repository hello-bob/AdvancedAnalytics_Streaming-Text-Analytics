{"aid": "40175087", "title": "Show HN: React for Circuits", "url": "https://github.com/tscircuit/tscircuit/blob/main/README.md", "domain": "github.com/tscircuit", "votes": 6, "user": "seveibar", "posted_at": "2024-04-26 22:39:22", "comments": 0, "source_title": "tscircuit/README.md at main \u00b7 tscircuit/tscircuit", "source_text": "tscircuit/README.md at main \u00b7 tscircuit/tscircuit \u00b7 GitHub\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\ntscircuit / tscircuit Public\n\n  * Notifications\n  * Fork 0\n  * Star 11\n\n/\n\n# README.md\n\n## Latest commit\n\nseveibar\n\nUpdate README.md\n\nApr 26, 2024\n\nb06ebe0 \u00b7 Apr 26, 2024Apr 26, 2024\n\n## History\n\nHistory\n\n189 lines (130 loc) \u00b7 8.48 KB\n\n/\n\n# README.md\n\n## File metadata and controls\n\n189 lines (130 loc) \u00b7 8.48 KB\n\nRaw\n\n# \u23e3 tscircuit - React for Circuits\n\nDocs \u00b7 Website \u00b7 Twitter \u00b7 Campfire \u00b7 Quickstart \u00b7 Online Playground\n\nMake electronics using Typescript and React.\n\n    \n    \n    npm install -g tscircuit\n\ntscircuit is a library complemented by a registry, package manager, and\ncommand line tool that makes it easy to create, share, export and manufacture\nelectronic circuits. It uses React Fiber to render circuits into web pages.\n\n    \n    \n    const Circuit = () => ( <board width=\"50mm\" height=\"50mm\" center_x={0} center_y={0}> <MySubcomponent name=\"U1\" center={[0, 0]} footprint=\"sot236\" /> <resistor x={2} y={-0.5} name=\"R1\" resistance=\"10ohm\" footprint=\"0805\" pcb_x=\"4mm\" pcb_y=\"-1mm\" /> <ground x={3} y={1} name=\"GND\" /> <trace path={[\".U1 > .D0\", \".R1 > .left\"]} /> <trace path={[\".R1 > .right\", \".GND > .gnd\"]} /> </board> )\n\n## Getting Started\n\nYou can do everything you need to do with tscircuit using the tsci command\nline tool.\n\n    \n    \n    npm install -g tscircuit tsci dev\n\n> Open your browser to http://localhost:3020!\n\n## More Features!\n\n  * Preview PCBs & Schematics in your browser\n  * Use normal Typescript/React tooling\n  * Export Gerbers, Pick'n'Place and BOM for manufacturing\n  * Add registry packages with tsci add\n  * Publish subpackages to the registry with tsci publish\n  * Simplified, extensible auto-routing for schematics and PCBs\n\n## FAQ\n\n### Is tscircuit free?\n\ntscircuit is completely free and MIT-licensed open-source\n\n### How does this work?\n\ntscircuit uses the same thing that React Native and react-three-fiber use to\nrender to mobile or 3d to render PCBs and schematics (it's called React\nFiber!)\n\nYou can render schematics or PCBs in any React project like this:\n\n    \n    \n    import { Schematic } from \"@tscircuit/schematic-viewer\" export const MyApp = () => ( <div>Regular web react here!</div> <Schematic> <resistor name=\"R1\" resistance=\"10k\" /> </Schematic> )\n\ntscircuit has a bunch of extra tools and exports in the command line, so it's\na bit easier to use tsci dev to develop circuits (you can always publish and\nimport them later)\n\n### Is this ready for production?\n\nNo! Although I've ordered a fully assembled circuit (source code), this\nproject is still very very early!\n\n### How does the registry work?\n\nThe tscircuit registry fully implements the npm registry. When you run tsci\ninit a .npmrc file is created in your project so that any npm add or npm\ninstall for a package starting with @tsci/* will go to the tscircuit registry\ninstead of the npm registry.\n\n    \n    \n    # Example .npmrc # This line says \"any package from the org @tsci should use the tscircuit registry server @tsci:registry=https://registry-api.tscircuit.com/npm\n\n### Can I use a different registry?\n\nYes! You can use the same trick and modify the .npmrc file for your project.\nYou can run your own npm registry with verdaccio\n\n### Why are some things upside down?\n\nIf you see something upside down, it's because mid-April the Y Axis was\nflipped so that \"up\" would mean the Y value would increase for both schematics\nand PCBs. In web development, the Y axis is negative as you go up, but this\nprobably isn't a good choice an engineering tool so now the Y Axis is positive\nand some things are upside down until they're fixed.\n\n### Can I test this in my browser?\n\nYes! There is a playground tool!\n\n### Do I have to specify the position of every component?\n\nI'm working on autolayout functionality where you will hopefully only need to\ntweak things like the spacing. The goal of anything auto\n\n### Is the auto-routing good?\n\nThe auto-routing is very basic. You can adjust the paths by adding\npcb_route_hints to a <trace />. Over time, we'll get good, fast auto-routing\nalgorithms and also ways to \"bake & cache\" a route over a longer time period.\n\n### Can I export into other tools for routing?\n\nThis isn't currently possible but a major current objective. If you're\ninterested in writing a module that can convert tscircuit soup JSON into\nanother editor's format, reach out on our campfire!!\n\n### I found a bug or have an idea for a feature, what should I do?\n\nPlease create an issue!\n\n### How can I follow along?\n\n  * @seveibar is the main author, he tweets about tscircuit and does development livestreams\n  * @tscircuit for major tscircuit releases, features and discussions\n  * tscircuit discord and tscircuit campfire\n\n### Does this use AI?\n\nNo, but AI is pretty good at generating circuits! Try it with copilot!\n\n### What big features are coming?\n\n  * Type-safe traces\n  * Lots of ways to use hooks to do more complex, safe circuits\n  * Autolayout and autorouter improvements\n  * Layout and route \"baking\" for more complex routes/layouts\n  * Lots and lots of static analysis\n  * SPICE output!\n  * Export to other EDA tools\n  * Less bugs! A lot less bugs!\n\n## Development Sub-Projects / Organization\n\ntscircuit includes a lot of different independently-runnable sub-projects.\nHere's a quick guide to navigating all of the sub-projects:\n\n### Core Libraries\n\nProject| Description  \n---|---  \ntscircuit| The main package, packages up everything into a single version  \n@tscircuit/builder| A typescript-native library for building circuits (no\nReact). Converts typescript into \"the soup format\"  \n@tscircuit/cli| The tscircuit command line tool tsci and development\nenvironment  \n@tscircuit/schematic-viewer| The Schematic renderer  \n@tscircuit/pcb-viewer| The PCB renderer  \n@tscircuit/react-fiber| Bindings from builder to React, React types  \n@tscircuit/routing| Routing algorithms for schematic and PCB traces  \n@tscircuit/autolayout| Layout algorithms for schematics  \n  \n### Other Links\n\n  * tscircuit.com - The official tscircuit website\n  * Registry - The official tscircuit registry that hosts re-usable tscircuit components\n  * Community Campfire\n  * @seveibar - Twitter for author of tscircuit with dev sessions and upcoming features\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": true}
