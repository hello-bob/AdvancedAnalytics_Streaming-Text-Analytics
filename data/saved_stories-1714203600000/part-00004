{"aid": "40176238", "title": "React 19 Beta Thoughts", "url": "https://andrewhuth.substack.com/p/react-19-beta-thoughts", "domain": "andrewhuth.substack.com", "votes": 1, "user": "ahuth", "posted_at": "2024-04-27 01:23:36", "comments": 0, "source_title": "React 19 beta thoughts", "source_text": "React 19 beta thoughts - by Andrew Huth - Andrew's Substack\n\n# Andrew's Substack\n\nShare this post\n\n#### React 19 beta thoughts\n\nandrewhuth.substack.com\n\n#### Discover more from Andrew's Substack\n\nA newsletter about web technology and frontend software engineering.\n\nContinue reading\n\nSign in\n\n# React 19 beta thoughts\n\nAndrew Huth\n\nApr 27, 2024\n\nShare this post\n\n#### React 19 beta thoughts\n\nandrewhuth.substack.com\n\nShare\n\nBelieve it or not, it\u2019s been almost 2 years since the last React release\n(v18.2.0). The react team has obviously been up to a lot in the meantime, and\nyesterday the official beta for v19 was released!\n\nHere are the things that stood out to me from the React 19 beta announcement\n\n  * Actions\n\n  * Server components\n\n  * Server actions\n\n  * And more...\n\n###\n\nActions\n\nFrom the announcement:\n\n> A common use case in React apps is to perform a data mutation and then\n> update state in response.\n\nYou\u2019ve probably done this1. Make an async request to your backend and keep\nsome state to track when the request is pending/completed.\n\nMaking this a lot easier are actions and the associated useActionState hook.\n\nActions are transitions using an async function, which you\u2019ll pass to a form\nelement2\n\n    \n    \n    <form action={someAction}> <input name={name} /> <button type=\"submit\">Submit</button> </form>\n\nYou can create an action in a couple ways, but I\u2019m intrigued by the\naformentioned useActionState. It gives you pending state and error handling!\n\n    \n    \n    const [error, someAction, isPending] = useActionState( async (prevState, formData) => { // Access form data, do async stuff, // return errors, etc. }, )\n\nWhat I really like about this is\n\n  * There\u2019s a lot less state to manually manage\n\n  * It\u2019s via HTML form submission, the way the web is supposed to work3\n\nOh, and there\u2019s also a new useOptimistic hook. It works like useState, but the\nstate gets automatically rolled back if an action fails!\n\n###\n\nServer components\n\nServer components aren\u2019t included in client bundles. They run to produce some\nHTML, but only that HTML is shipped to users.\n\nThe parts of an app that are server components isn\u2019t part of the client-side\nReact app.\n\nHere\u2019s how the announcement put its:\n\n> Server Components are a new option that allows rendering components ahead of\n> time, before bundling, in an environment separate from your client\n> application or SSR server. This separate environment is the \u201cserver\u201d in\n> React Server Components. Server Components can run once at build time on\n> your CI server, or they can be run for each request using a web server.\n\nI hadn\u2019t actually considered running server components on CI before. It makes\nsense, though. Essentially Next.JS\u2019s static site generation.\n\nUsing server components requires bundler or framework integration (such as\nNext.JS or Remix). It\u2019s not something you\u2019d use in a traditional client app\n(such as create-react-app or Vite).\n\n###\n\nServer actions\n\nThis is probably the most magical part of React 19, and I don\u2019t totally\nunderstand how it works, yet.\n\nServer actions combine the last two items. They\u2019re only present on the server,\nbut somehow our client components can reference them and React (and a\nframework supporting them) will make a network request to it.\n\nHere\u2019s the example from React\u2019s server action docs:\n\n    \n    \n    function EmptyNote () { async function createNoteAction() { 'use server'; await db.notes.create(); } return <Button onClick={createNoteAction}/>; }\n\nNote the \u2018use server\u2019 directive in the action. The action won\u2019t be included in\nthe client bundle, but React still knows how to use it. Magic \ud83e\udd2f\n\n###\n\nOther stuff\n\nThere\u2019s plenty of other stuff, too. Check out\n\n  * HTML document metadata\n\n  * Ref is a prop\n\n  * The use hook\n\nAll in all, React 19 will be a huge update. And it\u2019s really interesting seeing\nmore from React about integrating with the server in a full-stack\narchitecture.\n\nUntil next time \u270c\ufe0f\n\nNeed help developing a web app or want chat about frontend dev? Check out\nhttps://landslide.software.\n\n1\n\nI sure have.\n\n2\n\nCustom components can take an action, as well, as long as they useTransition.\n\n3\n\nFits the Remix philosophy\n\n### Subscribe to Andrew's Substack\n\nBy Andrew Huth \u00b7 Launched 2 years ago\n\nA newsletter about web technology and frontend software engineering.\n\nShare this post\n\n#### React 19 beta thoughts\n\nandrewhuth.substack.com\n\nShare\n\nComments\n\nWriting good performance self reviews\n\nIt\u2019s the end of the year, and you know what that means... performance review\ntime! Let\u2019s talk about writing your self review. Understand how they\u2019re\nused...\n\nDec 16, 2022 \u2022\n\nAndrew Huth\n\n3\n\nShare this post\n\n#### Writing good performance self reviews\n\nandrewhuth.substack.com\n\n2\n\nA read through the original WorldWideWeb proposal\n\nI was browsing the internet the other day and came across a link to the first\nwebsite on the Web: http://info.cern.ch/hypertext/WWW/TheProject.html. Go...\n\nDec 13, 2023 \u2022\n\nAndrew Huth\n\nShare this post\n\n#### A read through the original WorldWideWeb proposal\n\nandrewhuth.substack.com\n\n3\n\nDon't hide things that didn't go perfectly\n\nEver had things at work that could\u2019ve gone better? Supposedly rock star vendor\ndidn\u2019t have the capability you thought... Ran into some technical...\n\nNov 18, 2022 \u2022\n\nAndrew Huth\n\n1\n\nShare this post\n\n#### Don't hide things that didn't go perfectly\n\nandrewhuth.substack.com\n\n1\n\nReady for more?\n\n\u00a9 2024 Andrew Huth\n\nPrivacy \u2219 Terms \u2219 Collection notice\n\nStart WritingGet the app\n\nSubstack is the home for great culture\n\nShare\n\n## Create your profile\n\n## Only paid subscribers can comment on this post\n\nAlready a paid subscriber? Sign in\n\n#### Check your email\n\nFor your security, we need to re-authenticate you.\n\nClick the link we sent to , or click here to sign in.\n\n", "frontpage": false}
