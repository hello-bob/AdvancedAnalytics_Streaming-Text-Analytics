{"aid": "40059892", "title": "OpenJS: \"XZ Utils Cyberattack Likely Not an Isolated Incident\"", "url": "https://socket.dev/blog/openjs-xz-utils-cyberattack-likely-not-an-isolated-incident", "domain": "socket.dev", "votes": 5, "user": "feross", "posted_at": "2024-04-17 02:46:06", "comments": 0, "source_title": "OpenJS: \u201cXZ Utils Cyberattack Likely Not an Isolated Incident\u201d - Socket", "source_text": "OpenJS: \u201cXZ Utils Cyberattack Likely Not an Isolated Incident\u201d - Socket\n\nSign inDemo\n\n# OpenJS: \u201cXZ Utils Cyberattack Likely Not an Isolated Incident\u201d\n\n## OpenJS is warning of social engineering takeovers targeting open source\nprojects after receiving a credible attempt on the foundation.\n\nSarah Gooding\n\nApril 17, 2024\n\nOpenJS is warning open source project maintainers to be vigilant against\nsocial engineering takeover attempts after receiving one targeting the\norganization.\n\n\u201cThe recent attempted XZ Utils backdoor (CVE-2024-3094) may not be an isolated\nincident as evidenced by a similar credible takeover attempt intercepted by\nthe OpenJS Foundation, home to JavaScript projects used by billions of\nwebsites worldwide,\u201d OpenJS Foundation Executive Director Robin Bender said in\na joint statement with the OpenSSF.\n\nThe credible takeover attempt involved a series of emails requesting OpenJS\ntake action to update one of its popular JavaScript projects to \u201caddress any\ncritical vulnerabilities,\u201d from various GitHub-associated email addresses\nwhere the author requested to be designated as a new maintainer. OpenJS noted\nthe similarities between this approach and the one used by \u201cJia Tan\u201d to add\nthe XZ/liblzma backdoor.\n\nThe foundation published an extensive list of tips for recognizing these types\nof threats and suspicious patterns, and steps to secure open source projects\nand critical infrastructure.\n\n## Open Source Security Needs a Systemic Overhaul#\n\nThe security industry is still rocked by the potential devastation posed by\nthe xz-utils backdoor incident, an attempt that was foiled by sheer luck after\nits unlikely discovery. This isn\u2019t a strategy for securing open source\nsoftware at scale. The ecosystem is living on borrowed time until the next\nincident, which may already be in progress.\n\nExperts who are thinking about the big picture want to shift away from these\nsporadic reactive measures towards a more realistic and proactive security\nstrategy. The community is slowly moving to think of OSS in terms of\ninfrastructure, which requires a sustained and systemic change that integrates\nsecurity as a foundational component. This is a difficult problem to solve.\n\nIn a discussion on Mastodon, US Airfare engineer Camdon Cady likened the\ncurrent challenges facing existing physical infrastructure to the security\nissues within the Linux ecosystem:\n\n> In the US, we recently had a ship hit a bridge, causing the bridge to\n> collapse. The technical fix (collision protection around the bridge pylons)\n> has been known for decades, and is widely implemented on new bridges.\n> Bumpers have not been backported to all existing bridges.\n\n> I'm wondering if perhaps the Linux ecosystem is actually a bunch of aging\n> infrastructure. If so, that fact might be obscured by seemingly healthy\n> contributions to the Linux kernel. There's a ton of other \"basic\n> infrastructure\" that gets shipped alongside the kernel, though: coreutils,\n> binutils, gcc, make, autotools, cmake, zlib, xz, etc etc etc.\n\nInformation security expert Kurt Seifried noted that although the OSS\ncommunity knew the Linux kernel and all the utilities surrounding it would be\nwidely used, \"we didn\u2019t think everybody\u2019s car and lightbulbs would be running\nit.\u201d OSS has become the invisible infrastructure powering every modern device\nand system, from household appliances to critical national infrastructure.\n\nA recent report drafted in collaboration with the Open Source Policy Network\nand a network of OSS developers and maintainers, contends that OSS, like\nphysical infrastructure, should be strengthened to be sustainable with\nwidespread use, to prevent it from collapsing under catastrophic security\nrisks. The report does not reflect a belief that OSS is inherently insecure,\nbut highlights its parallel with infrastructure that necessitates a government\nrole for the long-term health of the ecosystem.\n\n> When policy focuses only on terrible, potential outcomes, its ideas tend to\n> reflect that bias toward fear, but this need not be the framing for OSS.\n> Open source enables and solves much more than it imperils. Its security is\n> as much a guarantor of continued value to users large and small, from\n> individuals to national intelligence agencies, as it is a bulwark against\n> malicious intent.\n\n> While OSS has come back to attention as an issue of national policy in the\n> European Union (EU), and indeed become one for the first time in the United\n> States in some ways as a product of fear and calamity, opportunities run\n> much deeper. Infrastructure of such scale and magnitude is supported,\n> reinforced, and amplified\u2014not fixed in a brief whirlwind of activity\u2014much\n> like the consistent provisions of clean water, roads and bridges, and\n> healthy capital markets.\n\nIt\u2019s not surprising that the OpenJS foundation and the JavaScript ecosystem,\nwhich is used by over 95% of all websites, would be the next target of threat\nactors looking to be designated as maintainers on important projects. The\nunfortunate reality is that these kinds of malicious attempts get published to\npublic registries at an astonishing rate. Our team at Socket catches 100+\nsoftware supply chain attacks in npm, PyPI, and Go every week.\n\nSoftware engineer Andrew Nesbitt has been playing around with the concept of a\n\"blast radius\" for open source security advisories on Ecosyste.ms. He uses the\nCVSS score of a security advisory multiplied by the number of repositories\nthat depend upon that package to determine the \u201cblast radius.\u201d Looking at it\nthis way, Nesbitt concludes that a moderate vulnerability in a very popular\nlibrary has a potentially larger impact than a critical CVE in an unpopular\none.\n\nThis experiment on Ecosyste.ms highlights the deeply interconnected\nrelationship between open source packages and their dependencies, and how\nquickly security incidents can propagate throughout the ecosystem, affecting\nnumerous projects and applications even from a single point of failure.\n\nThe approach of treating OSS merely as a free resource, instead of a critical\nprotected asset, is proving inadequate in the face of increasingly\nsophisticated cyber threats across the rapid expansion of OSS. These analogies\nto traditional physical infrastructure are the seeds of a mandate for systemic\noverhaul.\n\nOpenJS is raising alarms about the threats that came across their desk, but\nthe broader challenge lies in identifying and mitigating the supply chain\nattacks that remain undetected. Securing the development process from the\nground up is where it starts. Developers should take this warning to heart and\nrigorously audit their existing packages to ensure they don\u2019t bring in\npotentially malicious dependencies or carelessly trust packages or maintainers\nthat have historically been safe.\n\nSubscribe to our newsletter\n\nGet notified when we publish new security blog posts!\n\n## Related posts\n\nBack to all posts\n\nCompany News\n\n### Connect with Socket at RSA and BSidesSF 2024\n\nCome meet the Socket team at BSidesSF and RSA! We're sponsoring several fun\nnetworking events and we would love to see you there.\n\nBy Sarah Gooding - Apr 15, 2024\n\nSecurity News\n\n### OSI to Lead Discussions on Navigating the Challenges of Doing Business\nwith Open Source\n\nOSI is starting a conversation aimed at removing the excuse of the SaaS\nloophole for companies navigating licensing and the complexities of doing\nbusiness with open source.\n\nBy Sarah Gooding - Apr 12, 2024\n\nProduct\n\n### Introducing Dependency Visualization: An Interactive Way to See\nDependencies at a Glance\n\nWe're introducing dependency visualization for reports - get a quick\nimpression of the state of your dependencies without getting lost in the\ndetails.\n\nBy Eli Insua - Apr 11, 2024\n\nProduct\n\n  * Package Alerts\n\n  * Integrations\n\n  * Docs\n\n  * Pricing\n\n  * FAQ\n\n  * Roadmap\n\nAbout\n\n  * About\n\n  * Love\n\n  * Blog\n\n  * Glossary\n\n  * Discord Community\n\n  * CareersHiring\n\n  * Send Feedback\n\n  * Contact Us\n\n  * System Status\n\nPackages\n\n  * npm Package Directory\n\n  * Explore npm Packages\n\n  * Go Package Directory\n\n  * Explore Go Packages\n\n  * Maven Package Directory\n\n  * Explore Maven Packages\n\n  * PyPi Package Directory\n\n  * Explore PyPi Packages\n\n  * Most Popular JS Packages\n\n  * Top JavaScript Maintainers\n\n  * Removed npm Packages\n\n  * Random npm Package\n\nStay in touch\n\nGet open source security insights delivered straight into your inbox.\n\n  * Terms\n  * Privacy\n  * Security\n\nMade with \u26a1\ufe0f by Socket Inc\n\n", "frontpage": true}
