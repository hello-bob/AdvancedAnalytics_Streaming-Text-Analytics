{"aid": "40283533", "title": "PennyLane: Python library for differentiable programming of quantum computers", "url": "https://github.com/PennyLaneAI/pennylane", "domain": "github.com/pennylaneai", "votes": 1, "user": "cl3misch", "posted_at": "2024-05-07 08:40:09", "comments": 0, "source_title": "GitHub - PennyLaneAI/pennylane: PennyLane is a cross-platform Python library for differentiable programming of quantum computers. Train a quantum computer the same way as a neural network.", "source_text": "GitHub - PennyLaneAI/pennylane: PennyLane is a cross-platform Python library\nfor differentiable programming of quantum computers. Train a quantum computer\nthe same way as a neural network.\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nPennyLaneAI / pennylane Public\n\n  * Notifications\n  * Fork 538\n  * Star 2.1k\n\nPennyLane is a cross-platform Python library for differentiable programming of\nquantum computers. Train a quantum computer the same way as a neural network.\n\npennylane.ai\n\n### License\n\nApache-2.0 license\n\n2.1k stars 538 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# PennyLaneAI/pennylane\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n133 Branches\n\n59 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nastralcaiUpdate legacy opmath tests to temporarily use the rc branch\n(#5653)May 6, 2024756dc62 \u00b7 May 6, 2024May 6, 2024\n\n## History\n\n4,142 Commits  \n  \n### .github\n\n|\n\n### .github\n\n| Update legacy opmath tests to temporarily use the rc branch (#5653)| May 6,\n2024  \n  \n### doc\n\n|\n\n### doc\n\n| Daily rc sync to master (#5650)| May 6, 2024  \n  \n### docker\n\n|\n\n### docker\n\n| fix requirements to make docker builds pass (#4810)| Nov 9, 2023  \n  \n### pennylane\n\n|\n\n### pennylane\n\n| Daily rc sync to master (#5650)| May 6, 2024  \n  \n### tests\n\n|\n\n### tests\n\n| Daily rc sync to master (#5650)| May 6, 2024  \n  \n### .coveragerc\n\n|\n\n### .coveragerc\n\n| Merge v0.31.1-rc0 branch into master (#4428)| Aug 2, 2023  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Additional measurement support for Clifford device (#4954)| Feb 14, 2024  \n  \n### .pre-commit-config.yaml\n\n|\n\n### .pre-commit-config.yaml\n\n| Introduce isort in make format and format.yml workflow (#5565)| Apr 30, 2024  \n  \n### .pylintrc\n\n|\n\n### .pylintrc\n\n| Rename retworkx to rustworkx (#3975)| Apr 10, 2023  \n  \n### .readthedocs.yml\n\n|\n\n### .readthedocs.yml\n\n| Drop python 3.8 & update Jax to 0.4.14 (#4453)| Aug 11, 2023  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| first commit of new interface| Aug 21, 2018  \n  \n### MANIFEST.in\n\n|\n\n### MANIFEST.in\n\n| Fix manifest in (#4903)| Nov 30, 2023  \n  \n### Makefile\n\n|\n\n### Makefile\n\n| Introduce isort in make format and format.yml workflow (#5565)| Apr 30, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| Drop python 3.8 & update Jax to 0.4.14 (#4453)| Aug 11, 2023  \n  \n### codecov.yml\n\n|\n\n### codecov.yml\n\n| Merge v0.31.1-rc0 branch into master (#4428)| Aug 2, 2023  \n  \n### example_config.toml\n\n|\n\n### example_config.toml\n\n| [SHOTS] Remove analytic attribute and replace by shots=None (#1079)| Mar 22,\n2021  \n  \n### pyproject.toml\n\n|\n\n### pyproject.toml\n\n| Fix the include pattern for black in pyproject.toml (#2647)| Jun 1, 2022  \n  \n### requirements-ci.txt\n\n|\n\n### requirements-ci.txt\n\n| Add min_entropy function to quantum information module (#3959)| Feb 2, 2024  \n  \n### requirements-dev.txt\n\n|\n\n### requirements-dev.txt\n\n| Introduce isort in make format and format.yml workflow (#5565)| Apr 30, 2024  \n  \n### requirements.txt\n\n|\n\n### requirements.txt\n\n| Remove QNodecollection from installation and dependencies page (#4857)| Jan\n30, 2024  \n  \n### setup.py\n\n|\n\n### setup.py\n\n| Pin numpy in setup.py to pre 2.0 (#5579)| Apr 26, 2024  \n  \n## Repository files navigation\n\nPennyLane is a cross-platform Python library for differentiable programming of\nquantum computers.\n\nTrain a quantum computer the same way as a neural network.\n\n## Key Features\n\n  * Machine learning on quantum hardware. Connect to quantum hardware using PyTorch, TensorFlow, JAX, Keras, or NumPy. Build rich and flexible hybrid quantum-classical models.\n\n  * Just in time compilation. Experimental support for just-in-time compilation. Compile your entire hybrid workflow, with support for advanced features such as adaptive circuits, real-time measurement feedback, and unbounded loops. See Catalyst for more details.\n\n  * Device-independent. Run the same quantum circuit on different quantum backends. Install plugins to access even more devices, including Strawberry Fields, Amazon Braket, IBM Q, Google Cirq, Rigetti Forest, Qulacs, Pasqal, Honeywell, and more.\n\n  * Follow the gradient. Hardware-friendly automatic differentiation of quantum circuits.\n\n  * Batteries included. Built-in tools for quantum machine learning, optimization, and quantum chemistry. Rapidly prototype using built-in quantum simulators with backpropagation support.\n\n## Installation\n\nPennyLane requires Python version 3.9 and above. Installation of PennyLane, as\nwell as all dependencies, can be done using pip:\n\n    \n    \n    python -m pip install pennylane\n\n## Docker support\n\nDocker support exists for building using CPU and GPU (Nvidia CUDA 11.1+)\nimages. See a more detailed description here.\n\n## Getting started\n\nFor an introduction to quantum machine learning, guides and resources are\navailable on PennyLane's quantum machine learning hub:\n\n  * What is quantum machine learning?\n  * QML tutorials and demos\n  * Frequently asked questions\n  * Key concepts of QML\n  * QML videos\n\nYou can also check out our documentation for quickstart guides to using\nPennyLane, and detailed developer guides on how to write your own PennyLane-\ncompatible quantum device.\n\n## Tutorials and demonstrations\n\nTake a deeper dive into quantum machine learning by exploring cutting-edge\nalgorithms on our demonstrations page.\n\nAll demonstrations are fully executable, and can be downloaded as Jupyter\nnotebooks and Python scripts.\n\nIf you would like to contribute your own demo, see our demo submission guide.\n\n## Videos\n\nSeeing is believing! Check out our videos to learn about PennyLane, quantum\ncomputing concepts, and more.\n\n## Contributing to PennyLane\n\nWe welcome contributions\u2014simply fork the PennyLane repository, and then make a\npull request containing your contribution. All contributors to PennyLane will\nbe listed as authors on the releases. All users who contribute significantly\nto the code (new plugins, new functionality, etc.) will be listed on the\nPennyLane arXiv paper.\n\nWe also encourage bug reports, suggestions for new features and enhancements,\nand even links to cool projects or applications built on PennyLane.\n\nSee our contributions page and our developer hub for more details.\n\n## Support\n\n  * Source Code: https://github.com/PennyLaneAI/pennylane\n  * Issue Tracker: https://github.com/PennyLaneAI/pennylane/issues\n\nIf you are having issues, please let us know by posting the issue on our\nGitHub issue tracker.\n\nWe also have a PennyLane discussion forum\u2014come join the community and chat\nwith the PennyLane team.\n\nNote that we are committed to providing a friendly, safe, and welcoming\nenvironment for all. Please read and respect the Code of Conduct.\n\n## Authors\n\nPennyLane is the work of many contributors.\n\nIf you are doing research using PennyLane, please cite our paper:\n\n> Ville Bergholm et al. PennyLane: Automatic differentiation of hybrid\n> quantum-classical computations. 2018. arXiv:1811.04968\n\n## License\n\nPennyLane is free and open source, released under the Apache License, Version\n2.0.\n\n## About\n\nPennyLane is a cross-platform Python library for differentiable programming of\nquantum computers. Train a quantum computer the same way as a neural network.\n\npennylane.ai\n\n### Topics\n\npython machine-learning deep-learning neural-network qml tensorflow\noptimization quantum differentiable-computing automatic-differentiation\npytorch autograd quantum-computing quantum-chemistry hacktoberfest quantum-\nmachine-learning qiskit jax cirq strawberryfields\n\n### Resources\n\nReadme\n\n### License\n\nApache-2.0 license\n\n### Code of conduct\n\nCode of conduct\n\nActivity\n\nCustom properties\n\n### Stars\n\n2.1k stars\n\n### Watchers\n\n44 watching\n\n### Forks\n\n538 forks\n\nReport repository\n\n## Releases 57\n\nRelease 0.36.0 Latest\n\nMay 6, 2024\n\n\\+ 56 releases\n\n## Used by 801\n\n\\+ 793\n\n## Contributors 171\n\n\\+ 157 contributors\n\n## Languages\n\n  * Python 100.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
