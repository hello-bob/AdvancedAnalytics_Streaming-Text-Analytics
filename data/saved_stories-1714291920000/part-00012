{"aid": "40183817", "title": "Microsoft at Work", "url": "https://computer.rip/2024-04-26-microsoft-at-work.html", "domain": "computer.rip", "votes": 3, "user": "kryster", "posted_at": "2024-04-27 21:39:53", "comments": 0, "source_title": "2024-04-26 microsoft at work", "source_text": "2024-04-26 microsoft at work\n\n    \n    \n    _____ _ _____ _____ _ | |___ _____ ___ _ _| |_ ___ ___ ___ | _ |___ ___ | __ |___ _| | | --| . | | . | | | _| -_| _|_ -| | | _| -_| | __ -| .'| . | |_____|___|_|_|_| _|___|_| |___|_| |___| |__|__|_| |___| |_____|__,|___| a newsletter by |_| j. b. crawford home archive subscribe rss\n\n# >>> 2024-04-26 microsoft at work (PDF)\n\nI haven't written anything for a bit. I'm not apologizing, because y'all don't\npay me enough to apologize, but I do feel a little bad. Part of it is just\nthat I've been busy, with work and travel and events. Part of it is that I've\nembarked on a couple of writing projects only to have them just Not Work Out.\nIt happens sometimes: I'll notice something interesting, spend an evening or\ntwo digging into it, but find that I just can't make a story out of it. There\nisn't enough information; it's not really that interesting; the original\nsource turned out to just be wrong. Well, this one is a bit of all three. Join\nme, if you will, on a journey to nowhere in particular.\n\nOne of the things I am interested in is embedded real-time operating systems.\nAnother thing I am interested in is Unified Communications. Yet another is\nfailed Microsoft research projects. So if you've ever heard of Microsoft At\nWork, you probably won't be surprised that it has repeatedly caught my eye.\nMost likely, you haven't heard of it. Few have; even the normal sources of\ninformation on these kinds of things appear to be inaccurate or at least\nconfused about the details.\n\nMicrosoft went to work in the summer of 1993, or at least that's when they\nannounced Microsoft At Work. This kind of terrible product naming was rampant\nin the mid-'90s, perhaps more from Microsoft than usual. MAW, as I and a few\nothers call it, was marketed with a healthy dose of software sales\nobfuscation. What was it, exactly? an Architecture, Microsoft said. It would\nenable all kinds of new applications. With MAW, one would be able to\nseamlessly access the wealth of information on their personal computers. Some\nreporters called it an Environment. Try this for a lede: \"Microsoft Corp.\nunveils integrated computer program.\"\n\nThe announcement included a demo that got a lot more to the point: a fax\nmachine that ran Windows.\n\nEven this was strangely obfuscated: enough newspaper reports described it as a\n\"fax like product\" that I think this verbiage was sincerely used in the\nannouncement. Today, we would refer to MAW as an effort towards \"smart\" office\nmachines, but in 1993 we hadn't quite learned that vocabulary yet. Microsoft\nmust have been worried that it would be dismissed as \"just a fax machine.\" It\ncouldn't be that, it had to be something more. It had to be a \"fax like\nproduct,\" built with \"Windows architecture.\"\n\nI am being a bit dismissive for effect. MAW was more ambitious than just\ninstalling Windows on a grape. The effort included a unified communications\nprotocol for the control of office machines, including printers, for which a\nwhole Microsoft stack was envisioned. This built on top of the Windows\nPrinting System, a difficult-to-search-for project that apparently predated\nMAW by a short time, enough so that Windows Printing System products were\nactually on the market when MAW was announced---MAW products were, we will\nlearn, very much not.\n\nWindows Printing System modules were sold for at least the HP LaserJet II and\nIII. If you did not experience them, these printers placed their actual\nrasterization logic onto a modular card that could be swapped out, usually to\nswitch between PCL or PostScript \"personalities.\" The PostScript module was\noffered mostly for MacOS compatibility, Apple having selected PostScript as a\ncommon printer control language. The Windows Printing System module took this\noperating system specialization a step further, using Windows' simple GDI\ngraphics protocol to draw output to the printer.\n\nI am actually a little unclear on whether or not the Windows Printing System\nlead directly to the cheap \"WinPrinters\" that are also associated with the\nidea of GDI-based printing. \"WinPrinters,\" so-called by analogy to WinModems,\nare entirely dependent on the host computer to perform rasterization. While\nextremely irritating from the perspective of software support, this was an\nimportant cost-savings measure in consumer printers. Executing a capable\nprinter control language was rather demanding; the AppleWriter famously had a\nfaster processor than the Macintosh computers it was a peripheral to. Printers\nwith independent rasterization, particularly the more complex PostScript, came\nat a substantial price premium to those that required the host to perform\nrasterization.\n\nWhile some details of reporting on the Windows Printing System make me worry\nthat it was in fact rasterizing on device (like the curiously specific limit\nof \"up to 79\" TrueType fonts), I'm fairly sure it was indeed a precursor to\nthe later inexpensive designs. Rather than a cost-savings measure, though,\nMicrosoft seems to have marketed it as a premium feature. Because of the\nWindows Printing System's higher level of integration with the operating\nsystem, it brought numerous new features, many of which we take for granted\ntoday. TrueType font support at all, for example, a cutting-edge feature in\n'93. Duplex control from the print dialog rather than the printer's own\ndisplay, and for that matter, the ability to see printer status messages (like\n\"PC LOAD LETTER\") on the computer at all.\n\nAnd at the end of the day, offloading rasterization from the printer had an\nadvantage: the Windows Printing System was faster than PCL or PostScript.\n\nEven if it did become the dominant printing method years later, the Windows\nPrinting System of the MAW era doesn't seem to have fared very well. Because\nit took the position of an add-on cartridge (like a font cartridge), it would\nhave been an added-cost option for printer buyers---an added cost of $132.99,\naccording to a period advertisement. The dearth of available documentation or\neven post-launch advertising for the Windows Printing System cartridge\nsuggests disappointing sales numbers.\n\nThe fortunes of Windows Printing Technology would turn a year later, though,\nas Lexmark introduced their WinWriter series: \"With the Microsoft Windows\nPrinting System Built In!\" Speaking of the Lexmark WinWriter series, this\nwhole printing thing is kind of a tangent. What about MAW? The Windows\nPrinting System, it seems, was not really a part of MAW. It was just generally\nrelated and available when MAW was announced, so it was rolled into the press\nconference. It is a bit ironic that the Lexmark WinWriter, truly the Printer\nfor Windows, was not a MAW device despite shipping well after MAW was\nannounced.\n\nSo, back to the course: MAW was not just Windows on a fax machine, not just\nthe Windows Printing System, but an integrated system of Windows on a fax\nmachine, the Windows Printing System, a generalized network protocol, and\napparently a page description language. This was all, as you can see, rather\ndocument-focused. MAW would allow Windows users to easily, seamlessly interact\nwith these common office machines, sending and receiving documents like it was\n1999.\n\nAnd later, it would do more: Microsoft was clear from the beginning that MAW\nhad a higher vision, one that is remarkably similar to the later concept of\nUnified Communications. Microsoft envisioned Windows on a phone, bringing desk\nphones into the same architecture, or environment, or whatever. Remember the\nphone part, it comes back.\n\nIn practice, MAW would do nothing. It was a complete and total failure. It\ntook two years for the first MAW office machine to reach the market, a Ricoh\nfax machine. Fortunately, a television commercial has been preserved, giving\nus a small window into the Windows on a Fax Machine experience. \"Microsoft's\nAt Work Still Loafing on the Job,\" is how the Washington Post put it in 1995.\n\nThey call it \"the first real step toward the paperless digital office,\" a nod\ntowards the promise of Microsoft's document-messaging vision, before noting\nthat virtually no products had shipped, everything was behind schedule, and\nMicrosoft had reorganized the At Work team out of existence. Microsoft At Work\nwas seldom spoken of again. Few products ever launched, those that did sold\npoorly (the Windows licensing fee imposed on them being one of several factors\ncontributing to noncompetitive price tags), and by the time Windows gained\nproper USB support few would remember it had ever happened.\n\nIn other words, a classic Microsoft story.\n\nBut I'm not here to chronicle Microsoft's foibles, there are other writers for\nthat. I'm here to chronicle their weird operating system projects. And that's\nwhat got me reading into MAW: the promise of not just one, but two weird\noperating system projects.\n\nRegard that promise with suspicion.\n\nWikipedia tells us that MAW included \"Microsoft At Work Operating System, a\nsmall RTOS to be embedded in devices.\" That's very interesting. I love a small\nRTOS to be embedded in devices! Tell us more.\n\nResearching this MAW embedded operating system turns out to be a challenge.\nYou see, it is not the better known of the operating systems produced by the\nMAW initiative. That would be WinPad, curiously not mentioned at all in the\nMAW Wikipedia article, but instead in the Windows CE article, as a precursor\nto CE. Windows CE gets a lot more affection than MAW, and so we know quite a\nbit more about WinPad. It was an early attempt at an operating system for a\ntouchscreen mobile device, one that, in classic Microsoft fashion, competed\ninternally with another project to build an operating system for a touchscreen\nmobile device (called Pegasus) and died out along with the rest of MAW.\n\nIt was based on 16-bit Windows 3.1, using a stripped-down UI layer that\nresembled Windows 95. Probably not coincidentally, there seems to have been an\neffort to port WinPad onto Windows 95, and fortunately developer releases of\nWinPad have been preserved. With some effort, you can get them running on top\nof appropriate Windows versions in an emulator.\n\nWinPad was envisioned as a core part of MAW, the key enabler of that paperless\noffice. With MAW and WinPad, you could synchronize documents, emails, and\nfaxes, everything you could ever want in 1995, onto your handheld device and\nthen carry it with you. WinPad also didn't work. Evidently the performance was\nlousy and it required entirely unrealistic battery capacities. Not a\nsurprising outcome when one ports a mid-'90s desktop operating system to a\ntablet. How charming! But not exactly my target. What about this RTOS?\n\nIf you dig into these things for too long, you start to question your life, or\nat least reality. References to this MAW embedded operating system are so\nsparse that I quickly started to wonder if it existed at all, or if it was\nsimply confused with WinPad. This MAW OS would run directly on the office\nmachines. Is it possible that it was, in fact, WinPad that ran on a fax\nmachine? Or at least that whatever ran on the fax machine was a direct\nprecursor to WinPad, an earlier new UI layer on top of 16-bit Windows?\n\nThe nagging thing that kept me on the hunt for this MAW embedded OS was, oddly\nenough, the Sega Saturn. A series of newspaper archives, many gathered by Mega\nDrive Shock, tell an interesting story. Microsoft, it seemed, had been\ncontracted to provide the operating system for the Sega Saturn. Well, this\nseems to have been a misconception, although clearly a period one. As the news\ncycle carried on, the scope of this Microsoft-Sega partnership (at first\ndenied by Microsoft!) was reduced to Microsoft providing some sort of firmware\nrelated to the Saturn's CD drive.\n\nThere is, though, a tantalizing detail. The Electronics Times reported that\n\"Microsoft looks set to port its Microsoft At Work operating system to\nHitachi\u2019s new SH series of microprocessors.\" The article explicitly linked the\nporting to the Saturn effort, but also mentioned that the MAW operating system\nwas being ported to Motorola 68000.\n\nDo you know what never ran on the Hitachi SH or Super-H architecture? 16-bit\nWindows.\n\nDo you know what did? Windows CE.\n\nIs it possible? Do you think? Is Windows CE a derivative of Windows for Fax\nMachines?\n\nI'm pretty sure the answer is no. A reader pointed me at John Murray's 1998\nbook Inside Windows CE, which provides a brief and presumably authoritative\nhistory of the platform. It specifically discusses Windows CE as a follow-on\nproject to the failed WinPad, which it describes as 16-bit Windows 3.1, and\ngoes on to say it \"was designed for office equipment such as copiers and fax\nmachines.\"\n\nIt is, of course, possible that the book is incorrect. But given the dearth of\nreferences to this MAW embedded RTOS, I think this is the more likely\nscenario:\n\nMAW devices like the Ricoh IFS77 ran 16-bit Windows 3.1 with a new GUI\nintended to appear more modern while reducing resource requirements. Some\nreporters at the time noted that Microsoft was cagey about the supported\narchitectures, I suspect they were waiting on ports to be completed. The fax\nmachine was probably x86, though, as there's little evidence MAW actually ran\non other architectures.\n\nThis operating system was extended for the WinPad project, and efforts were\nmade to port it to architectures more common in the embedded devices of the\ntime like SH and 68000. Microsoft may have reached some level of completion on\nthat project and sold it to Sega for the Saturn's complicated storage\ncontroller, but it's also possible that the connection between the Saturn and\nMAW is mistaken and the software Microsoft delivered to Sega was a simple,\nfrom-scratch effort. The strange arc of media reporting on the Microsoft-Sega\nrelationship offers the tantalizing possibility that Microsoft was intended to\ndeliver a complete OS for the Saturn but had to pare it back as a result of\nproblems with porting WinPad, but it seems more likely it just results from an\novereager electronics industry press and the Sega NDA that a Microsoft\nspokesperson admitted to being subject to.\n\nMAW failed to win the market, and WinPad failed to win a BillG review. The\nproject was canceled. From the ashes of WinPad and the similarly failed\nPegasus, some of the same people started work on a brand new project, Pulsar,\nwhich would become Windows CE.\n\nMAW didn't survive the '90s.\n\nWell, some things are like that. I still got 240 lines out of it.\n\n    \n    \n    sincerely, j. b. crawford me@computer.rip Discuss this, complain, etc: #computer.rip:waffle.tech on Matrix Me, elsewhere: Mastodon, Cohost, Pixelfed, YouTube This website is begrudgingly generated by the use of software. Letters to the editor are welcome via facsimile to +1 (505) 926-5492 or mail to PO Box 26924, Albuquerque, NM 87125.\n\n", "frontpage": true}
