{"aid": "40206024", "title": "Burning the SSO Boogeyman", "url": "https://typesense.org/blog/thoughts-on-sso/", "domain": "typesense.org", "votes": 1, "user": "jabo", "posted_at": "2024-04-30 00:38:18", "comments": 0, "source_title": "Burning the SSO Boogeyman", "source_text": "Burning the SSO Boogeyman | Typesense\n\nHome \u00bb Posts\n\n# Burning the SSO Boogeyman\n\nApril 26, 2024 \u00b7 4 min \u00b7 Jason Bosco\n\nOver the years, I\u2019ve repeatedly heard things like:\n\n> \u201cSSO is a complicated beast\u201d\n\n> \u201cImplementing SSO requires so much manual effort with each customer\u201d\n\nSo when we started getting a trickle of users asking for SSO in Typesense\nCloud, I put it off for the longest time, dreading the painful implementation.\n\nWe soon reached a critical mass of potential users asking for SSO and a few\neven saying it\u2019s a show-stopper.\n\nOh well.\n\nSo off I went to learn all about SSO, half expecting to be forced to signup\nfor some paid auth provider and sadly having to pass on the costs of SSO to\nusers & embarassingly end up on the SSO wall of shame.\n\n##### The Learning Curve#\n\nBased on the initial set of users\u2019 asks, I decided to experiment with\nMicrosoft Azure AD (now called Entra) and Okta - signed up for a sandbox dev\naccount and went through the SSO setup process to learn what the end-user\nexperience would look like.\n\nThe first thing I noticed is that they both use SAML (Security Assertion\nMarkup Language) as the SSO protocol, yet they use slightly different\nterminology to refer to the same concepts. It took me a couple of days of\nreading to understand what all the different terms meant.\n\nWe use Ruby on Rails for Typesense Cloud\u2019s web console, along with Devise and\nOmniAuth for authentication. Thankfully, I found a SAML strategy gem for\nOmniAuth. However, the gem seems to have been written with the assumption that\nyou\u2019re integrating an internal tool with your own SSO platform.\n\nWhat we needed was the \u201cplatform-ized\u201d version of that - the ability for users\nto dynamically integrate our platform with any SAML-based SSO identity\nprovider, at application runtime.\n\nThis was the most complicated part of the whole endeavor. Took about a week\n(Week 2) of going down the wrong path with a quick prototype, but that was\nvery enlightening.\n\nThen it just clicked - all the pieces finally came together and made sense.\n\nBy the end of week 3, I had a working version of SAML-based SSO login for\nTypesense Cloud with my sandbox accounts.\n\nWeek 4 & 5 involved building the UI to make it self-service for users.\n\nWeek 6 involved writing detailed docs.\n\n##### The Doubt#\n\n> \u201cWhy are so many folks complaining about SSO\u2019s implementation complexity?\u201d\n\nAround week 5, I started to question if I\u2019m missing something big in the\nimplementation, which would have otherwise blown up the complexity.\n\nSo I started looking up other open source products that have implemented SAML-\nbased auth. I found GitLab\u2019s Rails codebase and verified that really this is\nall that\u2019s needed.\n\nI told myself that may be once we launched the feature, we might get flooded\nwith one-off support requests to do something custom for each user. And may be\nthat\u2019s what I\u2019m missing.\n\n> \u201cWe\u2019ll soon find out... I guess.\u201d\n\n##### The Launch#\n\nWe launched SSO quietly without making a big splash, and just let users set it\nup themselves following our docs.\n\nMore surprise and disbelief.\n\nUsers started using the feature themselves, and the vast majority of users\nhave been able to integrate Typesense Cloud with their SSO platform, without\nany additional guidance.\n\nWe\u2019ve only had a few users who have reached out to support asking for what\nvalues to plug from their SSO platform into Typesense Cloud (since those\nplatforms referred to the same SAML concepts slightly differently). As we\nencountered each nuance, we documented it religiously for future users.\n\nAnd our most recent SSO user had this to say:\n\n> Our team setting up SSO said the docs are AMAZING\n\nMusic to my ears!\n\n##### The Conclusion#\n\nIt feels like I\u2019ve come out of a reality-distortion field when it comes SSO,\nafter hearing years of FUD around this topic. Many companies even claim that\nthe complexity and ongoing support costs are the reason they charge an arm and\na leg for SSO.\n\nI\u2019m here to call BS on this.\n\nI\u2019ve now learnt from personal experience that implementing SAML-based SSO is\nnot that hard. You can build the integration in a way that makes it self-\nservice for users without additional support overhead.\n\nCharging extra for SSO now feels like charging extra for storing passwords\nhashed and salted in the DB - both are table stakes for security, and\nshouldn\u2019t cost extra.\n\nNow, to be fair, may be supporting multiple SSO protocols like Shibboleth,\nOIDC, etc in addition to SAML is more complex... I\u2019m yet to find out.\n\nBut hey, there\u2019s always a gem for that.\n\nThat\u2019s the nice thing about using a web framework with a mature ecosystem like\nRails. You can stand on the shoulders of giants and write an article like this\nabout how easy everything is!\n\n\u00a9 2015-2024 Typesense\n\n", "frontpage": false}
