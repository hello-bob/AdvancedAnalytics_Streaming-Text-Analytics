{"aid": "40234767", "title": "Beyond Jupyter: Software Design Principles for Machine Learning Applications", "url": "https://transferlab.ai/trainings/beyond-jupyter/", "domain": "transferlab.ai", "votes": 1, "user": "anon373839", "posted_at": "2024-05-02 11:02:10", "comments": 0, "source_title": "Beyond Jupyter | TransferLab \u2014 appliedAI Institute", "source_text": "Beyond Jupyter | TransferLab \u2014 appliedAI Institute\n\n##### Search results\n\nBeyond Jupyter\n\nDownload\n\nSee more trainings\n\nUpcoming events\n\nBeyond Jupyter is a collection of self-study materials on software design,\nwith a specific focus on machine learning applications, which demonstrates how\nsound software design can accelerate both development and experimentation.\n\nThe software being developed in machine learning contexts often remains at\nfairly low levels of abstraction and fails to satisfy well-established\nstandards in software design and software engineering. One could argue that\ndevelopment environments such as Jupyter even actively encourage unstructured\ndesign; and we thus deem it necessary to abandon the respective software\ndevelopment patterns and to metaphorically go \u201cbeyond Jupyter\u201d.\n\nThe goal of the course material is for practitioners to\n\nunderstand how a principled software design approach supports every aspect of\na machine learning project, accelerating both development & experimentation.\n\nIt is a common misconception that good design slows down development, while,\nin fact, the opposite is true. We showcase the limitations of (unstructured)\nprocedural code and explain how principled design approaches can drastically\nincrease development speed while simultaneously improving the quality of the\ncode along multiple dimensions. We advocate object-oriented design principles,\nwhich naturally encourage modularity and map well to real-world concepts in\nthe application domain, be they concrete or abstract. Our overarching goal is\nto foster\n\n  * maintainability\n  * efficiency\n  * generality, and\n  * reproducibility.\n\n# Content\n\nFind our content on GitHub, which covers the following modules:\n\n  1. Object-Oriented Programming: Essentials\n\nThis module explains the core principles of object-oriented programming (OOP),\nwhich lay the foundation for subsequent modules.\n\n  2. Guiding Principles\n\nThis module puts forth our set of guiding principles for software development\nin machine learning applications. These principles can critically inform\ndesign decisions during development.\n\n  3. Spotify Song Popularity Prediction: A Refactoring Journey\n\nThis module addresses the full journey from a notebook implemented in Jupyter\nto a highly structured solution that is vastly more flexible, easy to maintain\nand that strongly facilitates experimentation as well as deployment for\nproduction use. We transform the implementation step by step, clearly\nexplaining the benefits achieved and naming the relevant principles being\nimplemented along the way.\n\n  4. Anti-Patterns\n\nWhile the rest of the course material focuses on demonstrating positive design\npatterns, this module collects a number of common anti-patterns.\n\n\u00a9 Copyright 2024 appliedAI Institute for Europe gGmbH Supported by KI-Stiftung\nHeilbronn gGmbH Imprint \u2014 Privacy policy\n\n", "frontpage": false}
