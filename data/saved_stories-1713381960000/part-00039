{"aid": "40063368", "title": "Redis Is Forked", "url": "https://newsletter.vickiboykis.com/archive/redis-is-forked/", "domain": "vickiboykis.com", "votes": 1, "user": "todsacerdoti", "posted_at": "2024-04-17 12:00:33", "comments": 0, "source_title": "Redis is forked", "source_text": "Redis is forked \u2022 Buttondown\n\nNormcore Tech\n\nApril 16, 2024\n\n# Redis is forked\n\nHey friends. I need to do a better job keeping this newsletter up to date\ninstead of posting random links on five million social platforms, each of\nwhich now have three users each.\n\nSince my last email, I've written:\n\n  * A long post on GGUF\n\n  * A short post on perception in groups of humans\n\n  * Shared some of my work on LLM evals\n\n  * And shared that I was keynoting at PyCon Italia\n\nDo people prefer getting these in one-offs as separate emails? A bunch all at\nonce? Are long technical posts as emails okay? Let me know. Still figuring out\nwhat works best in this New Media Landscape. Anyway, on to what I posted on\nthe blog today, about Redis.\n\nRedis is forked\n\nI, like many developers who have worked on high-scale, low-latency web\nservices over the last fifteen years, have an intimate relationship with\nRedis. At any new job, when you ask where the data is, and someone points you\nto a server address with port 6379, you know you will meet an good, reliable\nfriend there.\n\nWhen you shell into the redis box or container or pod, you know what you\u2019re\ngoing to find. When you run redis-cli, and it, immediately, presents you with\nthe >, you know you\u2019re ready to work. And, when it returns PONG to your ping,\nyou are filled with a sense of ritualistic completion and assurance that it is\nas ready to read your code as you are to write it.\n\nI have been running ping now across countless Redis installs, across web\nservices written in PHP, in Go, Java, in Python, (unfortunately) Scala, across\nindustries, across space and time, across multiple products that use and have\nused Redis as cache by default.\n\nI, as a cynical Eastern European, hate almost everything in software. But I\nlove Redis with a loyalty that I reserve for close friends and family and the\nfirst true day of spring, because Redis is software made for me, the\ndeveloper.\n\nEverything about Redis is meant to empower, to clarify, to show, where\nabstractions need to be shown, and neatly tuck them away where they don\u2019t. It\nis made to work, to handle my throughput and stay out of the way.\n\nEven the documentation is written for developers who want to learn more, not\nto obscure or to sell.\n\nI used it at work, and I used it as my vector search engine in Viberary, where\nit worked brilliantly and with extremely low latency out of the box. In a\nworld full of junk, bloated, and obfuscated software, Redis just works. Or, as\nthe best software developers I know would say, it is elegant.\n\nUnfortunately, my Redis doesn\u2019t make money. While I was working on Viberary, I\nremarked to friends that Redis was a better vector store for probably 80% of\nuse-cases than actual vector databases, and that it was a shame that the Redis\nSearch module wasn\u2019t well-known. Of course, in the heat of the generative AI\nlandscape, the monkey\u2019s paw curled, the over-leveraged business decided they\nneeded to actually make money, and they changed the license, ostensibly so\nthat AWS and other large-scale cloud vendors couldn\u2019t sell it as a product\noffering.\n\nIn a pattern that has previously happened for Elasticsearch and Terraform, and\none that was extremely predictable, Redis is now forked at least three\ndifferent ways - the original Redis, now no longer under BSD, Valkey, under\nBSD and led by previous contributors to Redis from AWS and other companies,\nand Redict, under GPL, led by an open-source coalition. Both of these licenses\nallow commercial reuse.\n\nThe old Redis was for developers. The new Redis is for enterprise sales, and\nfor generative AI. It\u2019s true that it\u2019s not yet entirely clear what all of this\nmeans for the future of Redis the software. Some say the licensing changes\nwon\u2019t impact much if you\u2019re not a large-scale Redis reseller. Because it\u2019s\ntrue that the license changes were all legal and all parties acted in\naccordance with both what\u2019s acceptable and what the market dictates to sustain\nthe software. And yet at the same time, projects that depend on Redis are\nwithholding updates or migrating.\n\nBut the problem is not only that the license changed suddenly, without\nwarning, it\u2019s the messaging behind the change, and the message is, even though\nthere is extremely active community development, Redis is no longer in and of\nthe community. We are no longer being consulted.\n\nAs for the forks, there is no clear direction yet either. Valkey is on GitHub\nand already extremely active, yet there is already a debate about what OSS\nmeans in the context of the fork. Redict is entirely open but has opened\ncontributions on Codeberg, where they are far from GitHub\u2019s AI training data\ncollection, but also miss out on the network effect for contribution in the\nGitHub social network, the friction of which can\u2019t be underestimated.\n\nAll of this is very sad, because it\u2019s not clear which path forward makes sense\nin this new landscape for me as a builder if I want to now use Redis in a new\nproject, particularly since neither of the new projects support modules like\nRedis Search yet. (Or if they do, it\u2019s not clear to me whether it\u2019s directly\ndrop-in compatible and what the licensing issues are there.) It seems like the\nnew, corporate Redis is no longer for me or my personal projects, which is\nironic given that my interests lie squarely in the vector search and\ngenerative AI spaces. It\u2019s also not clear if I wanted to contribute, which one\nI should give my time and energy into. So, it seems like I\u2019ll be staying on\nthe Redis available before this commit for the time being, until the dust\nsettles.\n\nGood things don\u2019t scale, except in the case of Redis, where all it does scale\nin O(1) time, but doesn\u2019t align with the realities of markets in software.\n\nFortunately, in redis/valkey/redict codebases, one thing that is still a\nconstant is that whenever there is a ping, you can always expect a quiet,\nresounding pong, and in that regard, with the current energy around open-\nsource, particularly in the ML space, I\u2019m optimistic.\n\nDon't miss what's next. Subscribe to Normcore Tech:\n\nSubscribe\n\nwebsite\n\nFind Normcore Tech elsewhere: website\n\nBrought to you by Buttondown, the easiest way to start and grow your\nnewsletter.\n\n", "frontpage": false}
