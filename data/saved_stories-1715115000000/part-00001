{"aid": "40286187", "title": "The Quintessential Linux Benchmark", "url": "http://kinetic.org/bogo-mips.html", "domain": "kinetic.org", "votes": 2, "user": "nullindividual", "posted_at": "2024-05-07 14:48:15", "comments": 0, "source_title": "Kinetic Processing", "source_text": "Kinetic Processing\n\nThe Quintessential Linux Benchmark\n\n    \n    \n    -------------------------------------------------------------- This article first appeared in Linux Journal in January, 1996. --------------------------------------------------------------\n\nHow to (Ab)use BogoMips When Linux boots, it displays a ``BogoMips'' number.\nWhat does that mean? Is the number displayed correct? What use is the\ninformation? This quintessential part of Linux is demystified in this article.\n\nby Wim van Dorst\n\nSome device drivers in the Linux kernel need timing delays. Either they need a\nvery short delay, or the delay must be very accurately determined. A simple\nnon-busy loop cannot do this. Therefore, Linus Torvalds added a calibration in\nthe boot procedure to predetermine how often a specific busy-loop algorithm\ncan be calculated in one second. This predetermined value, called\nloops_per_second, is used in the device drivers to delay for precisely\nmeasured times.\n\nFor fun, Linus also added a print statement presenting this predetermined\nvalue (divided by 500,000) as BogoMips. Linus apparently loves it when\nmillions of Linux users are gazing at their computer, baffled by these bogus\nMIPS. Note that BogoMips have nothing to do with the million instructions per\nsecond that the name suggests; that is why they are bogus.\n\nThe only serious reason for paying attention to the BogoMips presented on\nbooting Linux is to see whether it is in the proper range for the particular\nprocessor, its clock frequency, and the potentially present cache. 486 systems\nare especially prone to faulty setups of RAM caching, turbo-buttons, and such\nthings.\n\nWhich Value to Expect\n\nPeople continuously ask on Usenet: ``I have an XYZ CPU running at clock MHz.\nHow many BogoMips should it do?'' The answer can be calculated from the\nfollowing table:\n\n    \n    \n    Intel/AMD 386SX clock * 0.14 (1 0.01) Intel/AMD 386DX clock * 0.18 (1 0.01) Cyrix/IBM 486 clock * 0.33 (1 0.04) Intel/AMD 486 clock * 0.50 (1 0.01) Pentium clock * 0.40 (1 0.01) 680x0 (insufficient data) PowerPC clock * 0.77 (1 0.02) Mips (insufficient data) Alpha clock * 0.99 (1 0.01)\n\nFrom the above calculation we see several important points. First of all, the\nIntel and AMD 486 CPUs are not showing the same BogoMips as Motorola, PowerPC,\nMips, and Alpha processors are similar to the Intel type processors\ncalculations. Because the non-busy loop algorithm is coded in Assembler,\nhowever, they cannot be identical. It clearly shows that comparison of\nBogoMips between CPUs is really bogus, even between two different Intel type\nCPUs.\n\nLast but not least, you see an allowed variation in the multiplication factor\nof about 0.01. The BogoMips calculation loop is ``quantizised'' (Linus's\nterm), so it is likely that you will get exactly the same number all the time.\nYet, if the speed is just on the edge, small variations, such as different\nlengths for interrupts, will cause your machine's BogoMips to vary.\n\nThe Most Frequently Asked Question\n\n``When I boot Linux I get the message:\n\nCalibrating delay loop.. ok - 23.96 BogoMips failed\n\nWhere or why has the calibration delay loop failed?''\n\nThe obvious answer is that it didn't fail. If it had failed the text would\nhave been:\n\nCalibrating delay loop.. failed\n\nWhat likely did fail was a driver for some gadget which may not be in the\nmachine. The point is that just after calculating the BogoMips, all device\ndrivers are initialized: first the SCSI devices, then Net devices, etc. Any\nfailure in these initializations is duly reported. The AHA152x drive is noted\nfor such failures. Other effects of failing drivers (and not of failing\nBogoMips calculations) are systems crashes, long waits, and complete system\nlock-ups.\n\nSince Linux 1.2, many error messages have improved, so upgrade to at least\nthat version to find out which particular driver is failing.\n\nStandalone BogoMips Program\n\nFor people without Linux systems, or for those people who do not want to\nreboot their system time and again, a stand-alone program for calculating\nBogoMips is available in the standard archives (e.g., on sunsite.unc.edu in\n/pub/Linux/system/Status/bogo-1.2.tar.gz). On Linux, by default, it runs the\nsame code that is used in the Linux kernel while booting, but runs as a user\nprogram. Note that due to system load, values calculated with the stand-alone\nprogram may be lower than expected for the CPU you are running, and lower than\nreported during boot. For the non-Linux systems, a portable C version is\navailable that may run on any system that supports an ANSI C compiler and\nlibrary.\n\nComplete Reference Table: BogoMips Mini-HOWTO\n\nThe BogoMips mini-HOWTO gives a full table of reported BogoMips for various\nsystems. More than 250 BogoMips references as reported on Usenet, or sent\ndirectly by e-mail to the maintainer, are listed with information about CPU\ntype, clock speed, BogoMips, and the name and e-mail address of the reporter.\nFor example, the lowest and highest BogoMips reported in the current version\nof The BogoMips Mini-HOWTO are:\n\nThe Lowest: H. Peter Anwin pa@nwu.edu 386SX/16 387 nocache 0.57 BogoMips The\nHighest: David Mosberger-Tang davidm@cs.arizona.edu Alpha 21064A/275 273.37\nBogoMips\n\nIn the BogoMips mini-HOWTO, values that do and do not comply with the\naforementioned BogoMips calculation methods are listed. The non-complying\ngroup is named ``Oddly or Faultily configured'' because non-compliance does\nnot necessarily mean that the system is faultily configured.\n\nBenchmarking\n\nThe BogoMips may be used to see whether your system is faster than mine. Of\ncourse this is completely wrong, unreliable, ill-founded, and utterly useless,\nbut all benchmarks suffer from this problem, so why not use it? This inherent\nstupidity has never before stopped people from using benchmarks, has it? [Note\nfor the humor-challenged: no angry letters to the editor will be accepted on\nthis point.---ED]\n\nIsolde van Dorst is the beautiful daughter of the author. She is just over one\nyear old, and is now playing around in the garden, walking over that still\nunfamiliar, ticklish stuff: grass. She can be reached by e-mail at\nisolde@clifton.hobby.nl.\n\n", "frontpage": false}
