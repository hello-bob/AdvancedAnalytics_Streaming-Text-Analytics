{"aid": "40154601", "title": "Pg_tier: Postgres Extension to enable data tiering to AWS S3", "url": "https://github.com/tembo-io/pg_tier", "domain": "github.com/tembo-io", "votes": 1, "user": "samaysharma", "posted_at": "2024-04-25 07:37:42", "comments": 0, "source_title": "GitHub - tembo-io/pg_tier: Postgres Extension written in Rust, to enable data tiering to AWS S3", "source_text": "GitHub - tembo-io/pg_tier: Postgres Extension written in Rust, to enable data\ntiering to AWS S3\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\ntembo-io / pg_tier Public\n\n  * Notifications\n  * Fork 0\n  * Star 24\n\nPostgres Extension written in Rust, to enable data tiering to AWS S3\n\n### License\n\nApache-2.0 license\n\n24 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# tembo-io/pg_tier\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n3 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nshhnwzMerge pull request #7 from tembo-io/SPAE-144Apr 24, 202415c7c13 \u00b7 Apr\n24, 2024Apr 24, 2024\n\n## History\n\n29 Commits  \n  \n### .github\n\n|\n\n### .github\n\n| no arm| Apr 17, 2024  \n  \n### images/tier-pg\n\n|\n\n### images/tier-pg\n\n| update build| Apr 17, 2024  \n  \n### sql\n\n|\n\n### sql\n\n| SPAE-144, Fix for schema bug and return bool instead of bucket count| Apr\n24, 2024  \n  \n### src\n\n|\n\n### src\n\n| SPAE-144, Fix for schema bug and return bool instead of bucket count| Apr\n24, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| build each commit| Apr 17, 2024  \n  \n### Cargo.lock\n\n|\n\n### Cargo.lock\n\n| Added docker file| Apr 17, 2024  \n  \n### Cargo.toml\n\n|\n\n### Cargo.toml\n\n| Added docker file| Apr 17, 2024  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Initial commit| Mar 7, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| Update README.md| Apr 24, 2024  \n  \n### Trunk.toml\n\n|\n\n### Trunk.toml\n\n| Added docker file| Apr 17, 2024  \n  \n### docker-compose.yml\n\n|\n\n### docker-compose.yml\n\n| Added docker file| Apr 17, 2024  \n  \n### pg_tier.control\n\n|\n\n### pg_tier.control\n\n| pg_tier is here| Apr 12, 2024  \n  \n## Repository files navigation\n\n# pg_tier\n\nA Postgres extension to tier data to external storage\n\n## Beta Disclaimer\n\nThe features, functionality, and behavior of pg_tier are subject to change\nwithout notice. Updates and revisions may be released periodically as we work\ntowards a stable version.\n\npg_tier may contain bugs, errors or other concurrency releated issues. It's\nnot advised to use in production use-cases. We encourage you to test your use\ncases in the non-production environment. If you encounter any bugs, errors, or\nother issues, please report them.\n\nYour reports will help us improve the extension for the final release.\n\nBy proceeding with installation and use, you acknowledge that you have read,\nunderstood, and agree to the terms of this disclaimer.\n\n## Overview\n\nIn today's data-driven landscape, managing vast amounts of information\nefficiently is paramount. Data has a lifecycle, right from the creation to\ndeletion it goes through many stages e.g. when data is new it has high\naccessibility therefore it will be cached in-memory, we can consider this as\nhot data stage. Once the data gets older it will move to cold data stage then\nto archival stage or purge stage. Data access pattern, cost and resource\nconstraints are some major factors that govern lifecyle of data.\n\nThis extension provides strategic solution to manage data that has lower\naccess frequency, lower performance requirement and lower storage cost. It\naligns with the concept of data lifecycle management, ensuring that data is\nstored cost-effectively while remaining accessible when needed.\n\n## Installation\n\n### Run with docker\n\nStart the container\n\n    \n    \n    docker run -d -e POSTGRES_PASSWORD=postgres -p 5432:5432 --name pg-tier quay.io/tembo/tier-pg:latest\n\nThen connect with psql\n\n    \n    \n    psql postgres://postgres:postgres@localhost:5432/postgres\n\n### Load the extension\n\n    \n    \n    CREATE EXTENSION pg_tier CASCADE\n\n## Usage\n\n### Setup Credential\n\n    \n    \n    select tier.set_tier_credentials('my-storage-bucket','AWS_ACCESS_KEY', 'AWS_SECRET_KEY','AWS_REGION');\n\n### Create a table\n\n    \n    \n    create table people ( name text not null, age numeric not null );\n\n### Insert some data\n\n    \n    \n    insert into people values ('Alice', 34), ('Bob', 45), ('Charlie', 56);\n\n### Enable tiered storage on the table\n\nInitializes remote storage (S3) for the table.\n\n    \n    \n    select tier.create_tier_table('people');\n\n### Tiering Data\n\nMoves the local table into remote storage (S3).\n\n    \n    \n    select tier.execute_tiering('people');\n\n### Query the remote table\n\n    \n    \n    select * from people;\n    \n    \n    name | age ---------+----- Alice | 34 Bob | 45 Charlie | 56\n\n### Table becomes foreign table with remote storage\n\n    \n    \n    postgres=# \\d people Foreign table \"public.people\" Column | Type | Collation | Nullable | Default | FDW options --------+---------+-----------+----------+---------+-------------- name | text | | not null | | (key 'true') age | numeric | | not null | | (key 'true') Server: pg_tier_s3_srv FDW options: (dirname 's3://my-storage-bucket/public_people/')\n    \n    \n    postgres=# explain analyze select * from people; QUERY PLAN --------------------------------------------------------------------------------------------------------- Foreign Scan on people (cost=0.00..0.09 rows=9 width=64) (actual time=126.438..126.444 rows=9 loops=1) Reader: Single File Row groups: 1 Planning Time: 440.560 ms Execution Time: 172.527 ms (5 rows)\n\n## About\n\nPostgres Extension written in Rust, to enable data tiering to AWS S3\n\n### Resources\n\nReadme\n\n### License\n\nApache-2.0 license\n\nActivity\n\nCustom properties\n\n### Stars\n\n24 stars\n\n### Watchers\n\n4 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\n3 tags\n\n## Packages 0\n\nNo packages published\n\n## Contributors 3\n\n  * shhnwz Mohammed Shahnawaz\n  * ChuckHend Adam Hendel\n  * ryw Ry Walker\n\n## Languages\n\n  * PLpgSQL 61.6%\n  * Rust 26.9%\n  * Dockerfile 11.5%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
