{"aid": "40286131", "title": "Show HN: Meemaw \u2013 Deploy an MPC wallet for your users in a few lines of code", "url": "https://github.com/getmeemaw/meemaw", "domain": "github.com/getmeemaw", "votes": 1, "user": "marceaul", "posted_at": "2024-05-07 14:44:54", "comments": 0, "source_title": "GitHub - getmeemaw/meemaw: Trustless and Grandma-friendly Wallet as a Service", "source_text": "GitHub - getmeemaw/meemaw: Trustless and Grandma-friendly Wallet as a Service\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\ngetmeemaw / meemaw Public\n\n  * Notifications\n  * Fork 3\n  * Star 8\n\nTrustless and Grandma-friendly Wallet as a Service\n\ngetmeemaw.com\n\n### License\n\nAGPL-3.0 license\n\n8 stars 3 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# getmeemaw/meemaw\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n1 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nmarceaulAdd DiscordMay 7, 2024a3b8228 \u00b7 May 7, 2024May 7, 2024\n\n## History\n\n26 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| Update release.yml| Apr 26, 2024  \n  \n### client\n\n|\n\n### client\n\n| Update Tsslib checksum| May 2, 2024  \n  \n### docs\n\n|\n\n### docs\n\n| Update docs for iOS SDK install| May 2, 2024  \n  \n### server\n\n|\n\n### server\n\n| Cover 403 error from Supabase| May 2, 2024  \n  \n### test/integration\n\n|\n\n### test/integration\n\n| Comments| Apr 29, 2024  \n  \n### utils\n\n|\n\n### utils\n\n| Remove unused logs| May 2, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| iOS SDK name change| May 2, 2024  \n  \n### .goreleaser.yml\n\n|\n\n### .goreleaser.yml\n\n| Initial commit| Apr 26, 2024  \n  \n### CODE_OF_CONDUCT\n\n|\n\n### CODE_OF_CONDUCT\n\n| Initial commit| Apr 26, 2024  \n  \n### CTA.md\n\n|\n\n### CTA.md\n\n| Initial commit| Apr 26, 2024  \n  \n### Dockerfile\n\n|\n\n### Dockerfile\n\n| Initial commit| Apr 26, 2024  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Initial commit| Apr 26, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| Add Discord| May 7, 2024  \n  \n### docker-compose.yml\n\n|\n\n### docker-compose.yml\n\n| Initial commit| Apr 26, 2024  \n  \n### go.mod\n\n|\n\n### go.mod\n\n| Initial commit| Apr 26, 2024  \n  \n### licenses.md\n\n|\n\n### licenses.md\n\n| Update licenses.md| May 6, 2024  \n  \n### modd.conf\n\n|\n\n### modd.conf\n\n| Use go generate to build wasm| May 2, 2024  \n  \n## Repository files navigation\n\n# Meemaw\n\n### Trustless and Grandma-friendly Wallet as a Service\n\nDeploy a trustless wallet for each of your users, in a few lines of code \ud83d\ude80\n\n  * Join us on Discord\n  * Get started\n\nhttps://getmeemaw.com\n\n    \n    \n    - Meemaw is still under heavy development, we would not advise you to use it in production just yet.\n\n# Table of Contents\n\n  * Introduction\n  * Features\n  * Getting Started\n\n    * Web\n    * iOS\n  * Documentation\n  * Contribute\n  * License\n\n# Introduction\n\nOnboarding users on Web3 projects is a pain. You mostly have a choice between\n3 options:\n\n  * letting your users fully manage their wallet with a terrible UX \ud83e\udd2e\n  * trusting another company with the private keys of your users \ud83d\ude28\n  * taking the burden on yourself and assume the risk of full custody \ud83e\udd2f\n\nNot any more. We are building solutions to make it easier and more secure for\ndevelopers to onboard new people to Web3, at scale.\n\nRight now, Meemaw allows you to deploy a trustless MPC-TSS wallet for each of\nyour users. It only takes a few lines of code, even your Grandma would want to\nuse it. It's also way less risky for you than trusting another company or\nholding the whole wallets yourself, as your server never sees the private\nkeys.\n\n# Features\n\nAvailable right now:\n\n  * Trustless: Meemaw wallets are MPC-TSS (Multi-Party Computation with Threshold Signature Scheme) wallets. They are non-custodial and zero-knowledge: the private keys of your users never appear on your servers so they don't need to trust you with their assets.\n  * Easy: You can easily deploy Meemaw with Docker. You can then use the client SDKs to easily integrate it in a few lines of code. It's easy to offer an amazing web2-like experience to your users.\n  * Web & iOS: It's super easy to integrate Meemaw in your Web & iOS apps. Just use the appropriate SDK and you're good to go. Note that we are planning to add support for Android and cross-platform frameworks as well.\n  * Integrates with your Auth: Meemaw is built so that you can easily integrate with your own Auth provider. We are also continuously adding one-click integrations for more and more third-party Auth providers.\n  * Battle-tested technologies: Meemaw is NOT innovating on the actual technology (TSS and others). Instead, it aims at bringing together established and production-ready technologies to form a coherent experience while reducing risk.\n\nExciting things we're looking forward to:\n\n  * Android & Cross-platform frameworks: If you're using Android or cross-platform frameworks, we plan to be able to cover your needs. Meemaw will be compatible with Web, iOS, Android, React Native, Flutter and Kotlin Multiplatform.\n  * Multi-devices: Most MPC-TSS Wallet providers only allow your users to access their wallet from one device. The plan is to allow your users to securely add new devices that are also able to access the wallet and its assets.\n  * Biometrics & Passkeys: Depending on platforms and applications, you will be able to encrypt and protect client shares with biometrics and/or passkeys. We want to reach state of the art security on all aspects.\n  * Cloud offering: You can easily self-host Meemaw with a few clicks, and soon you will be able to trust us to host it for you and make your life easier and safer. We will also offer Entreprise services and additional features for ambitious projects.\n  * Account abstraction: People often oppose MPC wallets with account abstractions, but they are complementary! We will combine them so you can abstract gas payment from your users, innovate on UX and add one more layer of protection, for example.\n\nWe're super excited \u2600\ufe0f\n\n# Getting Started\n\nIf you want to start using Meemaw, you should check the getting started\nsection of our docs. You will find a complete example including deployment of\nthe server and integration of the client SDK. It's really accessible for any\ndev, seriously, you should check it for yourself!\n\nHowever, you deserve a sneak peak right here :\n\n### Web\n\nHere is a simple example using the Meemaw SDK in JS to create a wallet and\nsign a transaction. Web3.js is used to send the transaction.\n\n    \n    \n    import meemaw import web3 // Create or recover a wallet for this user const meemaw = new Meemaw('meemaw-url'); const wallet = await meemaw.GetWallet(jwt); // will recover the wallet if exists for the user or create a new one // Instantiate Web3 const web3 = new Web3(new Web3.providers.HttpProvider('rpc-url')); // Craft the transaction (adapt to your needs) var raw = { 'to': '0x809ccc37d2dd55a8e8fa58fc51d101c6b22425a8', 'value': 10000000000000, 'nonce': 1, 'gasLimit': 21000, 'gasPrice': 10, }; // Sign the transaction const rawTransaction = await wallet.SignEthTransaction(raw, chainId); // Send the signed transaction const txReceipt = await web3.eth.sendSignedTransaction(rawTransaction); console.log(\"Look at my fabulous transaction:\", txReceipt);\n\n### iOS\n\nHere is a simple example using the Meemaw SDK in Swift to create a wallet and\nsign a transaction. Web3.swift from the Argent team is used to send the\ntransaction.\n\n    \n    \n    import meemaw import web3 // Create or recover a wallet for this user let meemaw = Meemaw(server: \"meemaw-url\") let wallet = try await meemaw.GetWallet(auth: jwt) // will recover the wallet if exists for the user or create a new one // Instantiate Web3 guard let clientUrl = URL(string: \"rpc-url\") else { return } let client = EthereumHttpClient(url: clientUrl) // Craft the transaction (adapt to your needs) let transaction = EthereumTransaction( from: wallet.From(), to: \"0x809ccc37d2dd55a8e8fa58fc51d101c6b22425a8\", value: 10000000000000, data: Data(), nonce: 1, gasPrice: 10, gasLimit: 21000, chainId: 1 ) // Sign and send the transaction with wallet let txHash = try await client.eth_sendRawTransaction(transaction, withAccount: wallet) print(\"Look at my fabulous transaction: \\(txHash)\")\n\n# Documentation\n\nWant to know how it works in more details or want to start using Meemaw in\nyour projects?\n\nCheck our docs here. \ud83d\ude80\n\n# Contribute\n\nIf you care about Web3 and want to participate in its future, you should join\nus! Contributions are welcome and greatly appreciated. If you want to help, we\nactually have a list of things you can start doing right now \ud83d\ude0a For ideas,\ncontribution guidelines and more, see our docs.\n\n# License\n\nMost of Meemaw is under the AGPLv3 license. The client SDKs are under the\nApache 2.0 license. You can find more info on how we intend those licenses\nhere.\n\n## About\n\nTrustless and Grandma-friendly Wallet as a Service\n\ngetmeemaw.com\n\n### Topics\n\njavascript swift golang ios finance cryptography crypto self-hosted\ncryptocurrency mpc wallet web3 tss web3js\n\n### Resources\n\nReadme\n\n### License\n\nAGPL-3.0 license\n\n### Code of conduct\n\nCode of conduct\n\nActivity\n\nCustom properties\n\n### Stars\n\n8 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n3 forks\n\nReport repository\n\n## Releases 1\n\nv0.1.1 Latest\n\nApr 26, 2024\n\n## Packages 1\n\n  * meemaw\n\n## Languages\n\n  * Go 76.9%\n  * JavaScript 15.2%\n  * Swift 7.5%\n  * Dockerfile 0.4%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
