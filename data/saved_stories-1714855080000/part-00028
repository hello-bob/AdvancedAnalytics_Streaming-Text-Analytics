{"aid": "40257572", "title": "JetBrains AI Assistant", "url": "https://blog.jetbrains.com/dotnet/2024/04/30/jet-brains-ai-assistant-in-resharper/", "domain": "jetbrains.com", "votes": 2, "user": "DeathArrow", "posted_at": "2024-05-04 13:37:45", "comments": 0, "source_title": "Embrace AI-Driven Productivity in .NET with JetBrains AI Assistant in ReSharper | The .NET Tools Blog", "source_text": "Embrace AI-Driven Productivity in .NET with JetBrains AI Assistant in ReSharper | The .NET Tools Blog\n\nBlog\n\nSkip to content\n\n  * Blogs by Topic\n  * Search\n\nBurger menu icon\n\n## The .NET Tools Blog\n\nEssential productivity kit for .NET and game developers\n\nFollow\n\n  * Follow:\n  * Guide Guide\n  * RSS RSS\n\nGet Tools\n\n.NET Tools How-To's ReSharper Platform\n\n# Embrace AI-Driven Productivity in .NET with JetBrains AI Assistant in\nReSharper\n\nSasha Ivanova\n\nApril 30, 2024\n\nAs developers, we\u2019re constantly on the lookout for tools that can make our\ncoding lives easier and push the boundaries of what\u2019s possible. JetBrains has\nstepped up to this challenge yet again with the introduction of AI Assistant \u2013\nan AI-powered add-on that challenges conventional approaches to coding and the\nway developers engage with their IDEs.\n\nIn this blog post, we\u2019ll go over the features of AI Assistant in ReSharper and\nexplore how these can be a game-changer in your .NET development.\n\n## How AI Assistant supercharges ReSharper\n\nAI Assistant boosts ReSharper\u2019s already impressive code analysis and\nrefactoring capabilities by injecting an extra layer of intelligence. It\nprovides recommendations that extend beyond syntax, focusing on a deeper\nunderstanding of code semantics. This might include smarter variable naming,\nmore efficient code extraction methods, or architectural improvements \u2013 all\noptimized for the .NET framework.\n\nReSharper is widely recognized as a powerful productivity booster for Visual\nStudio, and AI Assistant extends these capabilities even further. It not only\naccelerates code completion and delivers context-aware code generation but\nalso automates unit testing and writes XML documentation. Simply put, AI\nAssistant transforms ReSharper into an even better coding companion, one that\nhandles routine and complex tasks to significantly dial up your productivity.\n\n## Key Features of AI Assistant\n\n### Context-aware smart chat\n\nThe AI Chat is your first and primary point of contact with AI Assistant. The\nAI Chat will greet you on the first launch of AI Assistant and stay on-call,\nready to be of service whenever you use the Alt + Enter shortcut.\n\nUnlike standard chat tools that might offer basic information retrieval or\nscripted responses, AI Chat in ReSharper is deeply integrated and understands\nthe context of your development environment. Think of it as your on-demand\ncoding buddy, ready to dive into the complexities of your solution and\nuntangle the threads.\n\nCode snippets generated through your conversations with the AI will not be\ngeneric code snippets; they\u2019ll be tailored to fit the specific requirements\nand context of your project. With just a few clicks, you can insert a snippet\nfrom the AI Chat into an existing file. The resulting code will meld perfectly\nwith the rest of your work, maintaining the formatting conventions and\nadhering to project constraints.\n\nThe chat also offers the flexibility to create a custom library of prompts.\nThis library is a repository of frequently used queries, streamlining AI\nAssistant\u2019s ability to address common patterns or issues specific to your\nprojects. You can even turn your most used prompts into actionable items in\nthe AI Assistant context menu, streamlining your chat interactions even\nfurther.\n\n### Multiline code completion\n\nOne of the immediate benefits of AI Assistant is its sophisticated code\ncompletion capabilities. Traditional code completion typically suggests the\nnext logical token, focusing on completing individual methods, properties, or\nvariable names based on syntax. In contrast, the multiline code completion\nprovided by AI Assistant can generate several lines of code at once,\neffectively constructing complete blocks of functionality based on the context\nof your work.\n\nWhile traditional code completion tools rely on static analysis, AI Assistant\nin ReSharper uses machine learning models trained on vast code datasets. This\nallows it to understand context better and provide suggestions that are not\nonly syntactically correct but also semantically appropriate.\n\nSo, whether you\u2019re working on a complex algorithm or crafting a\nstraightforward method, AI Assistant will help you get there with fewer\nkeystrokes.\n\n### Finding issues in the codebase\n\nAI Assistant in ReSharper can actually help you preemptively catch any\npotential problems before they turn into runtime errors. To scan your code for\npotential issues, simply place your cursor at a method declaration, and from\nthe AI Assistant context menu, select Find issues in. Like a diligent code\ndetective, the AI will scrutinize the method, listing any potential issues\ndirectly in a new chat window.\n\nGIF\n\nBut it won\u2019t stop there. AI Assistant will also offer actionable solutions,\nmaking it easier for you to address problems right as they are found.\n\n### AI-powered refactoring\n\nRefactoring is a critical part of software development and is essential to\nmaintaining code cleanliness and efficiency. AI Assistant\u2019s Refactor this\ncontext action inside ReSharper elevates refactoring to a new level by\nsuggesting improvements and alternatives that might not be immediately\nobvious.\n\nGIF\n\nAI Assistant\u2019s understanding of code extends beyond the local scope,\nconsidering the entire project\u2019s architecture. This holistic view ensures that\nsuggested changes are comprehensive and do not introduce new issues elsewhere\nin the codebase. That means you spend less time debugging and more time\nfocusing on adding value.\n\n### Automated unit test generation\n\nAI Assistant can also enhance the testing phase of your development thanks to\nits ability to automate unit test creation for your .NET applications. That\u2019s\nright \u2013 AI-powered tooling inside ReSharper can generate both the test\nskeletons and the test logic.\n\nBy analyzing the functions and methods within your code, AI Assistant can\nproduce well-structured unit tests that cover a wide range of input scenarios\nand edge cases \u2013 a time-saver for developers who want to maintain high code\nquality and reliability without manually writing exhaustive tests.\n\n### Code explanation and documentation\n\nDeciphering the mechanics of code and its purpose can often be as daunting as\nwriting the code itself. The Explain with AI context action in AI Assistant is\ndesigned to address this by allowing developers to query specific parts of the\ncode directly. This not only demystifies complex logic or new patterns but\nessentially serves as an on-demand mentor right within your IDE. It\u2019s a game-\nchanger for those deep dives into the why and how of your code, turning\nperplexity into clarity.\n\nBut there\u2019s more to it than just understanding code. Documentation, while\ncritical, often takes a backseat during fast-paced development cycles. Here\u2019s\nwhere AI Assistant shines again by automating the generation of concise, clear\nXML documentation for your methods and classes with the Write XML\ndocumentation context action. This feature ensures that everyone stays on the\nsame page, particularly in large teams, where getting up to speed quickly on\nnew or complex code is crucial.\n\n## Conclusion\n\nAs we wrap up this exploration of AI Assistant\u2019s capabilities within\nReSharper, we hope that it\u2019s now clear that this tool brings a thoughtful\nsuite of enhancements to the .NET development experience.\n\nFrom multiline code completion to unit test generation, code explanation, and\nrefactoring \u2013 AI Assistant handles various tasks that can free up your time to\nfocus on more interesting problems. It\u2019s not just about speeding up your work;\nit\u2019s about making it better and more enjoyable.\n\nSo, give it a try and see how AI Assistant can support your development tasks.\nIt might just become another valuable tool in your toolkit!\n\nAI Assistant JetBrains AI ReSharper\n\n  * Share\n  * Facebook\n  * Twitter\n  * Linkedin\n\nPrev post Developers save up to 8 hours per week with JetBrains AI Assistant\n\n#### Subscribe to a monthly digest curated from the .NET Tools blog:\n\nThanks, we've got you!\n\n  1. How AI Assistant supercharges ReSharper\n  2. Key Features of AI Assistant\n\n    1. Context-aware smart chat\n    2. Multiline code completion\n    3. Finding issues in the codebase\n    4. AI-powered refactoring\n    5. Automated unit test generation\n    6. Code explanation and documentation\n  3. Conclusion\n\n## Discover more\n\n#### JetBrains .NET Days Online 2024 \u2013 Call for Speakers\n\nOn September 25 and 26, 2024, we're hosting a free, live, virtual event where\ncommunity speakers cover topics they are passionate about: JetBrains .NET Days\nOnline! Talk topics could be C#, F#, .NET in general, performance,\nrefactoring, open source projects, frameworks like MAUI and Blazor, and m...\n\nMaarten Balliauw May 2, 2024\n\n0\n\n#### Help us by sharing your experience with .NET dev tooling\n\nAt JetBrains, we would love to better understand how you do .NET development\nand what tools you use to code more productively. Please help us by completing\nthis 10-minute survey: As a \u201cthank you\u201d for your time, you\u2019ll have a chance to\nwin one of five $50 Amazon Gift Cards or a one-year All Prod...\n\nAlexandra Kolesova May 1, 2024\n\n2\n\n#### The First Set of Bug Fixes for ReSharper and Rider 2024.1 Are Here!\n\nHello everyone, The ReSharper and Rider 2024.1.1 bug-fix updates have just\nbeen released! If you haven\u2019t upgraded to the 2024.1 versions of our products,\nwe highly recommend that you check out these two blog posts: ReSharper 2024.1:\nImproved handling of collections, collection expressions, an...\n\nSasha Ivanova April 17, 2024\n\n0\n\n#### Exploring Collections & DataTables\n\nIn Rider 2024.1, we're shipping a highly requested feature: collection\nvisualizers. Our very own Evgeny Terekhin has taken on the task of integrating\nDataGrip's infrastructure to visualize data in the debugger. This makes it\neasier for .NET developers to inspect collections like List<T> and Di...\n\nMatthias Koch April 15, 2024\n\n4\n\n  * Privacy & Security\n  * Terms of Use\n  * Legal\n  * Genuine tools\n\n  * Twitter\n  * Facebook\n  * Linkedin\n  * Instagram\n  * Youtube\n  * RSS\n  * Tiktok\n\nMerchandise store iconMerchandise store\n\nCopyright \u00a9 2000 JetBrains s.r.o.\n\n", "frontpage": false}
