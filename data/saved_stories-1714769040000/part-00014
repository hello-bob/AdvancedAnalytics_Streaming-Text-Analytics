{"aid": "40247604", "title": "DNS traffic can leak outside the VPN tunnel on Android", "url": "https://mullvad.net/en/blog/dns-traffic-can-leak-outside-the-vpn-tunnel-on-android", "domain": "mullvad.net", "votes": 101, "user": "ementally", "posted_at": "2024-05-03 13:46:41", "comments": 35, "source_title": "DNS traffic can leak outside the VPN tunnel on Android", "source_text": "DNS traffic can leak outside the VPN tunnel on Android | Mullvad VPN\n\nSkip to main content\n\nChecking connection...\n\n# DNS traffic can leak outside the VPN tunnel on Android\n\nMay 3, 2024 Privacy App\n\nWe were recently made aware of multiple potential DNS leaks on Android. They\nstem from bugs in Android itself, and only affect certain apps.\n\nOn Monday 22 of April we became aware of a user report on Reddit of a DNS\nleak. The report detailed how the user managed to leak DNS queries when\ndisabling and enabling VPN while having \u201cBlock connections without VPN\u201d on. We\nimmediately started an internal investigation that could confirm the issue.\nThe investigation also led to more findings of scenarios that can cause DNS\nleaks on Android.\n\n### Findings\n\nIdentified scenarios where the Android OS can leak DNS traffic:\n\n  * If a VPN is active without any DNS server configured.\n  * For a short period of time while a VPN app is re-configuring the tunnel or is being force stopped/crashes.\n\nThe leaks seem to be limited to direct calls to the C function getaddrinfo.\nApps that use this way to resolve domain names cause leaks in the scenarios\nlisted above. We have not found any leaks from apps that only use Android\nAPI:s such as DnsResolver. The Chrome browser is an example of an app that can\nuse getaddrinfo directly.\n\nThe above applies regardless of whether Always-on VPN and Block connections\nwithout VPN is enabled or not, which is not expected OS behavior and should\ntherefore be fixed upstream in the OS.\n\nWe\u2019ve been able to confirm that these leaks occur in multiple versions of\nAndroid, including the latest version (Android 14).\n\n### Improvements\n\nOur app currently does not set any DNS server in its blocking state. When our\napp fails to set up a tunnel in a way that is not recoverable, it enters the\nblocking state. In this state it stops traffic from leaving the device.\nHowever, it does not set any DNS server in this state, and as a result the\nabove described DNS leaks can happen. We will work around the OS bug by\nsetting a bogus DNS server for now. You can expect a release with this fix\nsoon.\n\nThe leak during tunnel reconnects is harder for us to mitigate in our app. We\nare still looking for solutions. We can potentially minimize the amount of\ntimes a tunnel re-configuration happens, but we currently don\u2019t think this\nleak can be fully prevented.\n\nIt should be made clear that these workarounds should not be needed in any VPN\napp. Nor is it wrong for an app to use getaddrinfo to resolve domain names.\nInstead, these issues should be addressed in the OS in order to protect all\nAndroid users regardless of which apps they use.\n\nWe have reported the issues and suggested improvements to Google and hope that\nthey will address this quickly.\n\n### Steps to reproduce\n\nThe following steps reproduce the second scenario above, where a VPN user\nchanges the tunnel configuration, e.g. switching to another server or changing\nDNS server.\n\nHere we use the WireGuard app since it has become a reference Android VPN\nimplementation. It should be noted that the leaks can probably be reproduced\nwith any other Android VPN app also. We use Chrome to trigger the leaks since\nit is one of the apps we have confirmed uses getaddrinfo.\n\n  1. Download spam_get_requests.html\n  2. Install the WireGuard app & Chrome\n  3. Import wg1.conf, wg2.conf into WireGuard\n  4. Enable the wg1 tunnel in the WireGuard app and allow the VPN permission\n  5. In Android VPN Settings enable \u201cAlways-on VPN\u201d & \u201cBlock connections without VPN\u201d for WireGuard\n  6. Start capturing data on your router by using e.g tcpdump $ tcpdump -i <INTERFACE> host <IP of android device>\n  7. Split the screen to show both WireGuard & Chrome side by side\n  8. Open spam_get_requests.html with Chrome & press \u201cStart\u201d\n  9. Toggle back and fourth between wg1 and wg2 in the WireGuard app until you see the leaks in the next step.\n  10. Observe DNS traffic similar to this on the router:\n    \n        11:50:27.816359 IP Pixel-Tablet.lan.53353 > OpenWrt.lan.53: 11200+ A? 307lf5rgn6-19282-11-50-27-519z.mullvad.test.lan. (65) 11:50:27.816359 IP Pixel-Tablet.lan.48267 > OpenWrt.lan.53: 44347+ A? 307lf5rgn6-19284-11-50-27-579z.mullvad.test.lan. (65) 11:50:27.816396 IP Pixel-Tablet.lan.16747 > OpenWrt.lan.53: 44584+ A? 307lf5rgn6-19289-11-50-27-729z.mullvad.test. (61) 11:50:27.816458 IP OpenWrt.lan.53 > Pixel-Tablet.lan.53353: 11200 NXDomain 0/0/0 (65) 11:50:27.816476 IP Pixel-Tablet.lan.45727 > OpenWrt.lan.53: 40503+ A? 307lf5rgn6-19290-11-50-27-759z.mullvad.test. (61) 11:50:27.816542 IP OpenWrt.lan.53 > Pixel-Tablet.lan.48267: 44347 NXDomain 0/0/0 (65) 11:50:27.816588 IP Pixel-Tablet.lan.43821 > OpenWrt.lan.53: 36295+ A? 307lf5rgn6-19291-11-50-27-789z.mullvad.test. (61) 11:50:27.816625 IP OpenWrt.lan.53 > Pixel-Tablet.lan.16747: 44584 NXDomain 0/0/0 (61)\n\nSince \u201cBlock connections without VPN\u201d was active, nothing except encrypted\nWireGuard traffic should have left the device, but here we see plaintext DNS\nleaving the device.\n\n### Conclusions and recommendations\n\nDNS leaks may have serious privacy implications for users, and can be used to\nderive users' approximate location or find out what websites and services a\nuser uses.\n\nThese finding also shows once again that \u201cBlock connections without VPN\u201d does\nnot live up to its name (or documentation) and that it has multiple flaws.\nApps may still leak DNS traffic during the conditions mentioned above, and as\npreviously reported it still leaks connection check traffic.\n\nDepending on your threat model this might mean that you should avoid using\nAndroid altogether for anything sensitive, or employ other mitigations to\nprevent the leaks. We aim to partially mitigate these problems in our app, so\nmake sure to keep the app up-to-date.\n\n## Mullvad\n\n## Policies\n\n## Address\n\nMullvad VPN AB\n\nBox 53049\n\n400 14 Gothenburg\n\nSweden\n\nsupport@mullvadvpn.net\n\n  * GPG key\n  * Onion service\n\n## Follow us\n\n## Language\n\n  * \u0627\u0644\u0639\u0631\u0628\u064a\u0651\u0629\n  * Dansk\n  * Deutsch\n  * English\n  * Espa\u00f1ol\n  * \u0641\u0627\u0631\u0633\u06cc\n  * Suomi\n  * Fran\u00e7ais\n  * Italiano\n  * \u65e5\u672c\u8a9e\n  * \ud55c\uad6d\uc5b4\n  * Nederlands\n  * Norsk\n  * Polski\n  * Portugu\u00eas\n  * \u0420\u0443\u0441\u0441\u043a\u0438\u0439\n  * Svenska\n  * \u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\n  * T\u00fcrk\u00e7e\n  * \u7b80\u4f53\u4e2d\u6587\n  * \u7e41\u9ad4\u4e2d\u6587\n\n", "frontpage": true}
