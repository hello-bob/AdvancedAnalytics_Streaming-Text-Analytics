{"aid": "40091021", "title": "Update on the Collaboration with Google and the Forge", "url": "https://godotengine.org/article/update-on-google-forge-2024/", "domain": "godotengine.org", "votes": 2, "user": "piebro", "posted_at": "2024-04-19 19:27:07", "comments": 0, "source_title": "Update on the Collaboration with Google and The Forge", "source_text": "Update on the Collaboration with Google and The Forge\n\n# Update on the Collaboration with Google and The Forge\n\nBy: Clay John\n\n19 April 2024\n\nNews\n\nOur collaboration with Google and The Forge has achieved its original goal of\nimproving performance in the Vulkan backend and enhancing our Vulkan API\nusage. The work started in mid-November and I have to say, the last few months\nwent by very fast. Overall, I am happy to report that we finished everything\nthat had been planned for this collaboration.\n\nMost of the work is targeted at improving the Vulkan backend and will benefit\nall platforms that use Vulkan. The list of improvements is too long to list\nhere, but some highlights are:\n\n  * Usage of Unified Memory Architecture (UMA) buffers when available\n  * Add Android Thermal API support\n  * Replace large push constants with dynamic uniform buffers\n  * Optimize descriptor sets and descriptor set batching\n  * Optimize swapchain operations\n  * Integrate Swappy frame pacing from the Google AGDK\n\nDuring the project, we tested two different 3D scenes using a Google Pixel 7\nand a Samsung S23. Depending on the project and device, we see a consistent\n10% - 20% reduction in GPU frame times. Since mobile devices are currently\nheavily GPU bottlenecked in 3D scenes this translates directly into a 10%-20%\nframe time improvement!\n\nThis collaboration covered more than just performance, it also covered\nintegrating tools like Android Thermal API which can be used to monitor and\nrespond to changes in the thermal state of the device. Importantly, this\nallows you to automatically scale down quality to maintain a high framerate\nand cool temperature. Stay tuned for more documentation.\n\nThe work was developed in a private fork of Godot that was kept up to date\nwith our main branch as the work progressed. The final work product can be\naccessed in this PR. We won\u2019t merge this PR as-is, instead we will break it\ninto smaller pieces that can more easily be tested and used to identify\npotential regressions. Expect this process to take a few months and be split\nbetween the 4.3 and 4.4 releases.\n\nIf you have a mobile game in development, we would like to hear your feedback\nand see what kind of impact this makes on your game.\n\nWe very much appreciate the support of Google and The Forge for this effort\nand we look forward to seeing our developers take advantage of Vulkan with\nGodot!\n\n\u00a9 2007-2024 Juan Linietsky, Ariel Manzur and contributors. Hosted by the Godot\nFoundation. Website source code on GitHub.\n\n  * Get Godot\n  * Download\n  * Web Editor\n  * Public Relations\n  * Blog\n  * Communities and Events\n  * Press Kit\n\n  * About Godot\n  * Features\n  * Showcase\n  * Education\n  * License\n  * Code of Conduct\n  * Privacy Policy\n  * Donate\n\n  * Project Team\n  * Governance\n  * Teams\n  * Extra Resources\n  * Asset Library\n  * Documentation\n  * Code Repository\n\n#### Contact us\n\n", "frontpage": false}
