{"aid": "40209271", "title": "Valueless CTO: High Salary, No Return", "url": "https://vadimkravcenko.com/shorts/cto-value-high-salary-no-return/", "domain": "vadimkravcenko.com", "votes": 1, "user": "bndr", "posted_at": "2024-04-30 10:22:24", "comments": 0, "source_title": "Valueless CTO: High Salary, No Return", "source_text": "Valueless CTO: High Salary, No Return\n\nVadim Kravcenko\n\n\ud83d\udd25 Newsletter\n\n\ud83d\udd25 Roast my Resume\n\n# Valueless CTO: High Salary, No Return\n\n30 April 2024 \u00b7 Updated 30 April 2024\n\ncareer development growth management newsletter startups\n\n## Table of Contents\n\nSo, I\u2019ve been called a bad CTO a few times, and people even told me they\nwouldn\u2019t work for me even if I were the last CTO on earth. Quite a statement,\nright? Thank god that\u2019s just Reddit talking, and I usually don\u2019t expect any\ngood comments whenever I get traffic from Reddit. But this whole hate made me\nthink.\n\nWhat\u2019s the value of a CTO? Can a CTO be worthless to a company? While everyone\nloves to read HN Stories about the rockstar CTOs who perform magic while\nprogramming in all the languages at once, that doesn\u2019t represent the real\nworld. I\u2019ve talked with companies that fired their CTO because they\u2019ve gotten\nway too comfortable and haven\u2019t done much in terms of moving the company\nforward. So, do you ever wonder what happens to a company if the CTO doesn\u2019t\nreally know what they\u2019re doing?\n\nI thought long and hard about what kind of CTOs are worthless to startups; I\nwas mostly thinking about what I should and shouldn\u2019t be doing for the board\nto vote me out. I ended up with four main archetypes and their missing value\nthat I want to go deeper into:\n\n  1. Non-technical CTO \u2014 missing value is expertise.\n  2. Invisible / Absent CTO \u2014 missing value is role model.\n  3. Misaligned CTO \u2014 missing value is shared goal.\n  4. Asshole CTO \u2014 missing value is people skills.\n\nAs you can see, there\u2019s always some value that is missing from each of these;\nwe\u2019re taking a fully functioning, average CTO and subtracting a quality from\nthem and trying to figure out what goes wrong and how long we can wing it.\n\n    \n    \n    \u2705 Here\u2019s my statement: a CTO makes sense to the company then, and only then when they possess all 4 of the qualities listed above, and if any of those are missing, the company will go downhill; the question is just how fast.\n\nYou might counter, \u201cI know plenty of companies that thrive with bad CTOs that\nbring no value.\u201d But, my friend, they\u2019re thriving despite the CTO. Can you\nimagine how much better they would do if they had a good one? Also, maybe that\nstatement holds true in the short term, but the cracks will begin to show over\ntime, just wait.\n\nThe bigger the company, the slower the downfall, but the smaller the company,\nthe more visible the CTO\u2019s negative impact is. If they're out of their depth,\neveryone feels it, especially other software developers.\n\nIf you\u2019re reading this, don't be the CTO who's just another suit. Be the CTO\nwho knows their stuff and isn\u2019t afraid to lead, learn, and be the most\nvaluable CTO ever, even if it\u2019s just for this company.\n\nLet\u2019s dive in.\n\n## Non-Technical CTO\n\nI have a big issue where non-technical people lead technical companies. I\nagree that if you\u2019re a Fortune 500, you\u2019re big enough not to care if you have\ntechnical leadership. But I think they should care; I believe it is essential.\nHaving someone who knows how the engine runs, how the factories work, or, in\nour case, how a digital SaaS works is a tremendous value proposition for a\nCTO.\n\nImagine a CTO who cannot articulate how the software works in layman\u2019s terms\nfor the board of directors. Such a leader might excel in managerial skills or\nbusiness development, but without technical expertise, they are often unable\nto contribute effectively to the discussion. What\u2019s the point of a CTO if they\nhave the same knowledge as the other 5 Board Members with an MBA? This\nknowledge/understanding gap can lead to strategic technology misalignment that\nwill eventually bleed to every level of your organization.\n\nI\u2019d also like to state that there are numerous pitfalls to having a non-\ntechnical CTO. For starters, they will struggle to gain the respect of their\nengineering teams. Software developers expect leadership to at least\nunderstand on some high level the complex technical challenges they face\ndaily. When the CTO lacks this ability, it can lead to dissatisfaction and\nerosion of trust within tech teams. I wouldn't trust my CTO if they don't know\nthe ins and out of the product that we're building, would you?\n\nMoreover, a CTO who is out of touch with the latest technology may make\ndecisions that compromise the company. We have enough CEOs who are super\nexcited about all the LLMs they\u2019re going to integrate into all the processes;\nsomeone needs to step up and say that\u2019s bullshit, articulate the known\nlimitations, and why that idea is not going to work. There needs to be a\nbalance between what the CEO envisions and what CTO says is doable at the\nmoment, for that we need the technical expertise to judge if the technology is\nfeasible or not.\n\nA Non-Technical CTO brings no value in terms of choosing technologies.\nMoreover, they have negative value, they will select inappropriate\ntechnologies because they do not fully understand the associated options or\nrisks. I have seen some startups suffer due to this issue. One case involved a\npromising tech company that aligned much of its strategy around leveraging a\nsingle vendor that sounded cool and had a great Landing Page. No due diligence\nwas performed, nor an in-depth evaluation. The result was a costly overhaul of\ntheir systems when that vendor went out of business a year later. Totally CTOs\nfault.\n\n    \n    \n    \u2705 Especially if you\u2019re a startup or a scale-up \u2014 having a non-technical CTO is shooting yourself in the foot. What will they be talking about during investor/client meetings? Reiterating the same points that the CEO has said?\n\nThe value that CTOs bring with their expertise is enormous. If you take that\naway, you have another CEO \u2014 they can lead, inspire, and motivate people \u2014 but\nthey\u2019re not a good technical sparring partner to bounce ideas off, nor can\nthey understand the engineering teams that work for them.\n\nMy advice, and a highly subjective opinion, is to always ensure that the role\nof the CTO is filled by someone who not only understands the tech stack in-\ndepth but can also adapt to future technology trends. Sadly, just having an\nMBA is not enough, and having great people skills is also not enough.\n\n## Invisible / Absent CTO\n\nThis one is relevant only for companies with < 300 engineers. After that\nnumber, the CTO becomes invisible, not because they\u2019re not involved but\nbecause they\u2019re busy in other areas that are not visible specifically to you.\n\nThe Absentee Syndrome occurs when a Chief Technology Officer lacks the role\nmodel value. Because they lack this characteristic, they disengage from daily\noperations and the direct development process.\n\nI have a strong opinion about this as well. A CTO should be more than just a\nfigurehead; they should be a driving force and role model within the company.\nWhen a CTO steps back from the operational aspects of their role, it often\nleads to poor morale among the engineering team. Engineers tend to perform\nbest when they feel leadership sees and understands their work. A CTO\ndisconnected from what the tech team is doing fails to provide this\nvalidation. And fails to be a good role model.\n\nSimilar situation with Absent CTO.\n\nA few examples of an absentee CTO \u2014 are missed meetings, late arrivals, no\npraise, infinitely postponed meetings, promises that always get pushed back,\nand not even talking with the engineers. This distance can foster an\nenvironment where technical teams feel unsupported and undirected.\n\nTeams look to their leaders for more than direction \u2014 they seek inspiration\nand recognition. A CTO who is not actively involved in the projects can\ninadvertently send a message that the work they\u2019re doing, often boring and not\nfulfilling, is unimportant. Moreover, when a CTO is detached,\nmiscommunications become more frequent, and people start to replicate this\nbehavior \u2014 others begin to be late, become disengaged, and postpone things. It\ncan lead to a spiral that\u2019s hard to get out of.\n\nNow, contrast this with the benefits of a hands-on CTO or at least someone\nactively participating as a role model for the company. This leader sets the\nvision and rolls up their sleeves to help achieve it. They are seen working\nalongside their team, troubleshooting problems, and brainstorming new ideas.\nThey might not be solving the same coding problems as the engineers, but they\nare solving their own for the benefit of the whole company, and they are seen\nside by side with engineers. Their presence can be incredibly motivating and\ncan foster a sense of teamwork and purpose.\n\nA hands-on approach allows you, as a CTO, to spot issues quickly and intervene\nearlier, especially in startups with highly limited resources.\n\n    \n    \n    \u2705 From my experience, startups with engaged CTOs tend to experience smoother project executions and better overall morale. One of your values as a CTO is to be a good role model, be present amongst your team members, and maybe solve completely different problems, but be visible that you\u2019re moving the needle forward alongside others.\n\nReflect on this as you continue to shape your leadership style and consider\nyour startup\u2019s long-term health and success.\n\n## Misaligned CTO\n\nHaving deep trust and disagreements with your CEO are good things. Healthy\ndebate is the foundation of good decisions and something you should strive\nfor. It\u2019s even better if there are multiple shareholders/founders, not just\nthe two of you.\n\nIn my case, I have two partners, and we run our holding company and the\ndevelopment agency in consensus, and we vote on any significant decision. We\nhave an agreement that whatever we decide, we trust each other. Two members\nvote for one thing, and the third (if he\u2019s against the decision) trusts the\nother two that it\u2019s right.\n\nIt\u2019s all great when multiple people are involved, not just a single CEO who\ndecides that they want to move in a completely different direction than what\nyou wanted, and it stops resonating with you. As you remember, the primary\nrole of a CTO involves overseeing the development and operational technology\nas well as driving the company\u2019s technological vision. You must ensure that\nevery tech initiative supports the broader vision. The question is, how do you\nsupport it if it goes against your ideals and feels wrong?\n\n    \n    \n    \u2705 There\u2019s a saying: The fish rots from the head. If you stop supporting the company\u2019s vision, it will drip down into your decisions and how you talk about it, and it will compromise everything you touch. As a CTO, you might start pushing for other initiatives, openly opposing the CEO. At this point, it becomes dangerous for the company.\n\nIn a situation where the company ideals change, or the company wants to pursue\na direction that I\u2019m not comfortable with, there are two ways I would act:\n\n  1. Trust the CEO and try to see it through their eyes (and hopefully see results eventually). Adapt your opinion.\n  2. Leave. This is the simplest solution, the goals are no longer aligned with your, and you shouldn't invest resources in something you don't wholeheartedly believe in.\n\nIf you stay, it\u2019s your responsibility to ensure that your non-beliefs do not\nimpact the culture/environment. I encourage you to cultivate a deep dialogue\nwith other C-suite members to ensure that decisions are made with a clear\nunderstanding of how they impact the company and the future.\n\n## Asshole CTO\n\nI first wanted to call this \u201cInadequate CTO,\u201d but then I figured there\u2019s\nnothing inadequate about being an asshole; it\u2019s a personality trait that\nfocuses exclusively on the person\u2019s inability to work with others.\n\nLet\u2019s look at a CTO who\u2019s a genius at coding. Their value is extreme\nexpertise, but there\u2019s a catch: sadly, they don\u2019t have much people skills.\n\nYou can see this very often, even on Hackernews, stories about people leaving\nthe company because the CTO is an asshole. It\u2019s not a new thing. I think this\nis one of the oldest issues in tech leadership \u2014 people being asshole\ngeniuses. There's quite a few that come to mind, the most prominent of those \u2014\nLinus Torvalds and Steve Jobs. Are they geniuses yes? Is it enough to be\ngreat? In their case yes, on average no.\n\nCTO Spectrum from Genius to Non-Technical\n\nI\u2019d like to remind you that a single person can only do so much. They become\nsick, and they take vacations. You need to cultivate teams, teams, teams.\nCultivate supportive environments that nurture great coders AS PART OF A TEAM.\nBeing technically proficient is just one part of the job; equally important\nare people skills, communication skills, articulation skills, writing skills,\nand the ability to translate complex into simple without sounding\ncondescending.\n\n    \n    \n    \u2705 A CTO with inadequate skills or poor people management capabilities can have a disastrous effect on the team. You might think assholes attract other assholes, but no, that doesn\u2019t work like that. Skilled professionals, a.k.a brilliant snowflake developers, typically seek environments where they feel supported and valued. Surprise, huh?\n\nRemember, a CTO\u2019s impact goes beyond code. They can be writing code with their\neyes closed directly in Assembly, for all you care, but it\u2019s irrelevant. They\nare crucial in shaping the culture. They risk alienating the whole team if\nthey lack empathy, communication skills, or the ability to handle\ninterpersonal dynamics gracefully. Especially in smaller companies, a CTO who\ncan't or won't mentor their team is failing a crucial part of their role.\n\nYour values as a CTO should be about building up people while fully\nunderstanding the technology. Your time is limited. You cannot be cloned. So\nnurturing people who you can delegate to is your number one job when you\u2019re\ngrowing.\n\nIn the first section, we discussed a CTO who doesn\u2019t have any technical\nknowledge, which leads to a disaster. Now we\u2019re on the other end of the\nspectrum \u2014 pure technical genius but no empathy or understanding of\nleadership. The truth is in between. Strive to be the CTO who not only excels\nin technology but also in building a happy, productive, and cohesive team.\nThat\u2019s the kind of leadership that genuinely drives a company forward.\n\n## Conclusion\n\nThe absence of a competent CTO, or the presence of one lacking the necessary\nqualities, can render them worthless to a startup or scale-up. I hope it\u2019s\nevident that the value of a CTO extends far beyond a single quality; you need\nto have them all. You\u2019re basically acting as a bridge between the product, the\ntechnical team, and the business, combining all of these elements in yourself.\n\nAs a closing thought, I pose a direct and potentially controversial question:\nAs a CTO or VP of Engineering, are you a liability or a positive influence on\nyour company? Are you driving change or merely reacting to it?\n\nOther Newsletter Issues:\n\n  * Developer Mental Health\n  * Healthy Code Reviews\n  * 10x Engineers\n  * Software Development Estimations\n\n### Reactions\n\nHot! The last couple of years I've been writing about CTO / Tech lead job.\nI've compiled all my knowledge into a printable PDF. I called it \"256 Pages of\nNo Bullshit Guide for CTOs\". So if you're interested, take a look.\n\nHot! If you're a software engineer looking for a job, I started a Roast my\nResume service, where I record a personalized video of me \"roasting\" your CV,\nwhich basically means taking a hard look at your resume as a CTO and\ncommenting on all the good and the bad parts.\n\nNew! \ud83d\ude80 15% OFF for HackerNews Visitors for No Bullshit Guide for CTOs. Give it\na click if you like.\n\nCancel\n\n  * 1\\. Preface\n  * 2\\. Non-Technical CTO\n  * 3\\. Invisible / Absent CTO\n  * 4\\. Misaligned CTO\n  * 5\\. Asshole CTO\n  * 6\\. Conclusion\n\n#### Popular Issues\n\n  * \ud83d\udd52 Rules of Thumb for Software Development Estimations\n\n  * \ud83d\udcdc Contracts you should never sign\n\n  * \ud83e\udd77 Things they didn\u2019t teach you about Software Engineering\n\n  * \ud83e\udd39\u2642\ufe0f Habits of great software engineers\n\n  * \ud83e\udd2b Falsehoods Junior Developers believe about becoming Senior\n\n  * \ud83c\udfad Managing difficult software engineers\n\nNew!\ud83d\udd75\ufe0f\u2642\ufe0f Roast My Resume Hot!\ud83e\udd16 No-Bullshit CTO Guide \ud83d\udd25 Watch Youtube \ud83d\udcda\nDeveloper Q&A\n\n89+ people joined this week\n\n### Get insights from a CTO into your inbox every two weeks.\n\nYou've probably read a few of my articles already, that's the kind of content\nyou should expect in the newsletter. I share my thoughts as a CTO. Some of the\ntopics that I like writing about: building SaaS products, growing teams,\nscaling technology and in general being a good founder and a decent person.\n\nNo spam, unsubscribe at any time\n\n## Developer Q&A Latest\n\n  * How much a CTO makes and where can I find CTO Jobs?\n  * How to become a CTO?\n  * How can you tell if you\u2019re a good developer?\n  * I\u2019m finishing university, scared about future career prospects\n  * I have a very poor work-life balance. How can I escape the grind?\n  * What is your unethical CS career\u2019s advice?\n  * My coworker rewrote all my code, what should I do?\n  * How do you know when to use which programming language?\n\n## Popular Issues\n\n  * \ud83d\udd52 Rules of Thumb for Software Development Estimations\n  * \ud83d\udcdc Contracts you should never sign\n  * \ud83e\udd77 Things they didn\u2019t teach you about Software Engineering\n  * \ud83e\udd39\u2642\ufe0f Habits of great software engineers\n  * \ud83e\udd2b Falsehoods Junior Developers believe about becoming Senior\n  * \ud83c\udfad Managing difficult software engineers\n  * \ud83d\udce2 The silent majority\n  * \ud83d\udcda Healthy Documentation\n  * \ud83d\udd10 Security at Startup\n\n## Interesting\n\n  * Efficient meetings with engineers\n  * Technical Interview Scams\n  * Build vs Buy\n  * Process Debt\n  * How to manage technical debt\n  * Startup Infrastructure\n  * Software Postmortems\n  * Building SaaS Community\n  * How to build an MVP\n  * Build Remote Teams\n\n## Popular Tags\n\n  * Engineering Growth\n  * Management Tips\n  * Development\n  * Startups\n\n## Work with me\n\n  * CTO-as-a-Service\n  * Fractional CTO\n  * Consulting\n\n\u00a9 2024 Vadim Kravcenko. Built with \u2665 in Zurich. All opinions are my own. I use\nPlausible to track certain anonymous events. Some links are affiliate links\nwhere I earn a commission. Contact me at hi@vadimkravcenko.com\n\n", "frontpage": false}
