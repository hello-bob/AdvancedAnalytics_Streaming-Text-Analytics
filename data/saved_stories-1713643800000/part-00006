{"aid": "40096912", "title": "Read the Docs Like a Book", "url": "https://aaronfrancis.com/2023/read-the-docs-like-a-book", "domain": "aaronfrancis.com", "votes": 1, "user": "eprout", "posted_at": "2024-04-20 12:35:44", "comments": 0, "source_title": "Read the docs like a book", "source_text": "Read the docs like a book - Aaron Francis\n\n# Read the docs like a book\n\nNovember 13, 2023\n\n> I thought when I worked at bigger tech companies it would be different. You\n> are legit top 1% if you RTFM - @Ryan_Magoon\n\nOne of my long-held beliefs is that the easiest thing you can do to advance\nyour career is to sit down with the documentation for your favorite tool and\nread it straight through. Front to back, cover to cover, like a book.\n\nYouTube is great.\n\nCourses are great.\n\nBlog posts are great.\n\nBut all of those serve a fundamentally different purpose than reading the docs\nstraight through.\n\nReading the docs increases the efficacy of all the things listed above. It's\nfundamentally different, and it's a force multiplier.\n\nYou may think that there's no way you could remember everything in the docs\nanyway, so why bother? The point of reading the docs straight through isn't\nactually for you to remember everything, so you can free yourself from that\npressure!\n\nIn my experience, reading the docs provides two primary benefits:\n\n  * it establishes a mental map of the territory\n  * it primes your subconscious\n\n## Establishing a mental map\n\nA common rebuttal to reading the docs is that it's easier and more efficient\nto just look up issues when you have them.\n\nLooking up solutions as you have problems is great! This only works for\nspecific, discrete problems, though. Usually that means problems with error\nmessages attached or problems in the shape of \"How do I do [x] thing in [y]\nframework?\"\n\nThose are the problems you know you have.\n\nThere is another set of problems that you don't even know you have. This is\nwhat reading the docs solves for.\n\nThere are features that you didn't know about.\n\nYou're reinventing things that are built-in to the language or the tool.\n\nSome optimizations are freely available to you that you never knew existed.\n\nAs you read the docs, your mind generates a map, populating it with signposts.\n\nYou may learn that MySQL has robust support for JSON documents, including\nindexing, by reading the docs. That's great, but you don't need to remember\nhow JSON indexing works! All you need to remember is the vaguest notion that\nMySQL has some sort of JSON support. The next time you encounter a JSON-\nperformance-in-MySQL-shaped problem, you'll think, \"hey... I read something\nabout this. Lemme look that up again.\"\n\nThat's the desired outcome. Just that!\n\nWhen you have a race condition in your Laravel app, part of your brain will\nlight up and whisper \"atomic locks.\" Then, you can return to the documentation\nwith a discrete problem in mind and dive deep into the details.\n\n### Diving into the details\n\nWhen diving into the details, you'll go deeper much more quickly, because of\nyour broad base of understanding. Having breadth allows you to draw\nconnections and make inferences across the entire body of the project.\n\nThe parts of the docs that don't directly apply to what you're doing now\nmerely populate the mental map, which will be helpful later. However, there\nare parts of the docs that do apply to what you're doing right now!\n\nWhen you get to a section of the docs that relates to your current scope of\nwork, your brain will draw that part of the map in intricate detail because\nyou're already primed with context. You'll get so much more value out of that\nsection because you're already familiar with the terrain, and now you're\nfilling in all the little details.\n\n### ChatGPT has the answer\n\nBut, unfortunately, you still need to know what the question is.\n\nIf you are unaware of a topic's existence, how will you coax it out of GPT?\nThe unknown unknowns still present a problem! You don't know what you don't\nknow.\n\nOnce you know the universe of topics, you can use GPT to go deeper on\nspecifics. (Whether that's a good idea or not is a topic for another blog\npost. I think it mostly is!)\n\nThe map is essential, but there's a secondary, underrated benefit of reading\nthe docs straight through, and it has to do with how your brain processes\ninformation.\n\n## Priming your subconscious\n\nThe reticular activating system (RAS) is a network of neurons in the brain\nstem that filters out noise from information. It's the reason you can hear\nyour name clearly when it's spoken softly in a noisy room. Your name is\nimportant information, so your brain is attuned to it.\n\nHave you ever learned a new word, and then suddenly, it seems like that word\npops up everywhere for the next week? That's the RAS! The word was previously\nnoise, totally filtered out. Now it's signal, because you just learned it. It\nhas meaning now.\n\nHave you ever gotten a new car, let's say it's a Jeep, and then noticed that\nsomehow every car in the world is a Jeep? Of course, the number of Jeeps\ndidn't change. You just didn't care. Your brain is being pummeled with makes\nand models of vehicles all day, every day, so it just filters them out. But\nwhen you get a Jeep, it becomes important signal for a little while.\n\nReading the docs absolutely fills up your brain with new signal. Maybe you\ndon't understand all the details, but that's fine! Your brain is now tuned in\nto a whole new universe of information that was previously whizzing by you,\nundetected.\n\nWhen you're scrolling Twitter and see a tip or trick you may have previously\nmissed, your brain wakes up and says, \"Hey! Those words look familiar! I've\nseen words like that before!\"\n\nIf you asked me to scroll Medical Twitter or Law Twitter for an entire day and\ngive you my takeaways, I'm not confident I'd come up with anything. My brain\nsimply has no context for the stuff they're tweeting. It all looks like noise\nto me. There's no bucket, no slot for the information to go, so it falls\nstraight through.\n\nReading the docs gives your brain new context, new buckets to catch\ninformation. It strings the first strands of a web to catch knowledge that was\nout there all along, flying right by you.\n\nEverything becomes more profitable! Podcasts, blog posts, conversations with\ncoworkers, Hacker News comments, courses, YouTube, error messages. There are\nmore chances that something you read or hear is going to stick to one of the\nstrands.\n\nReading the docs prepares your brain to catch more details later.\n\n## How to read the docs\n\nI prefer to read them on paper. I got two chapters of the MySQL docs printed\nand bound and read through them.\n\nThe medium is up to you, but reading them with zero pressure to remember\nanything is the key. Your brain will do the hard work. If you put too much\npressure on yourself to memorize everything, you likely won't even start.\n\nI like to read through them and highlight anything that makes me go, \"huh,\nneat!\" and then just keep moving. If there are big sections that get super\nboring, I'll start skimming.\n\nRead them in one sitting, or don't. Read a few pages for a few minutes each\nday, and you'll soon be the most knowledgeable person on your team, maybe in\nyour whole company.\n\nReputable books can stand in for cases where the docs are literally thousands\nof pages. I've read several good books on MySQL and then printed two of the\nmore important chapters from the docs (data types and optimizations). Even\nthose two chapters were several hundred pages. I flipped every page but did\nnot read every word on every page! The more of the actual documentation you\ncan read, the better.\n\n## Reading the docs is selfish\n\nI can tweet and blog all I want about how reading the documentation is good,\nand still, vanishingly few people will read the docs. Many of the replies to\nmy original tweet were \"I don't have time\" or \"I don't get paid to read the\ndocs.\"\n\nI totally get it. My wife and I have two-year-old twins and twins that are due\nin one week. Time is precious.\n\nMy response is simple: reading the docs is purely a self-interested pursuit,\nand I can always find time to do things that make my life better.\n\nI want to do my job better and faster. I want to get promoted. I want to get\npaid more. I want to get hired. I want to make better content. I want people\nto think of me as an expert. I want the deep satisfaction of mastery.\n\nI want to get ahead, so I read the docs. Most people won't. But that's what\nmakes relative advantages work!\n\nSome people will do it, but most people won't.\n\n## As a YouTube video\n\nIf you'd like to watch this on video, I made it into a YouTube video!\n\n## Other people's stories\n\nHere is a short list of people echoing the sentiment in response to my\noriginal tweet. I found some of them fascinating. Hope you enjoy them.\n\n> reading the docs front-to-back is not about memorizing or even remembering\n> what\u2019s in the docs. it\u2019s about setting up a bunch of neural tripwires to\n> make you think, \u201cwait, I feel like I\u2019ve seen a way to deal with this before\u201d\n> when you hit a problem - @jlengstorf\n\n> I worked with a guy who was so damn good at uncommon things, like shell\n> scripting. Finally asked him how he got so good at that: \"I read the bash\n> manpages front to back every three months.\" Inspired me to go deep on the\n> SNMP RFCs (I ran a NOC at the time), which paid dividends - @mike_julian\n\n> Studying the source makes you more creative. You can make your own\n> connections and insights as to how to use the information. Starting from\n> tutorials limits you to someone else\u2019s creative limit. - @jdnoc\n\n> Specs, too. A specification is just \"the docs\" for a language or protocol.\n> Just read it straight through. It's an investment that pays dividends for a\n> very long time. - @izs\n\n> Because there\u2019s little things that then stick in your mind because they\n> apply to your specific use case. But if you weren\u2019t looking for it, you\n> wouldn\u2019t find it. So I\u2019m all in on team read all the docs - @JackEllis\n\n> My general advice is when you start a new thing, read the docs through. Then\n> start. You\u2019ll forget 75+% of it but the high level remains and you know it\n> exists so you can go find it when it matters. - @cameronolivier\n\n> My company asked me to create a training and merit course for the framework\n> we use heavily. Step 1 was RTFM. They are even really well maintained docs!\n> Only 2 of us ever completed the course.\n>\n> I got poached to another company as an expert in that framework so...\n> @ub3rh4xor\n\n> Reading docs front to back is often boring af, but most of the time the\n> invested effort pays off very shortly. That's my experience too, after\n> 30+yrs - @onetom\n\nOn this page\n\nEstablishing a mental mapDiving into the detailsChatGPT has the answerPriming\nyour subconsciousHow to read the docsReading the docs is selfishAs a YouTube\nvideoOther people's stories\n\nMore articles\n\nDo literally anything Laravel's saftey mechanisms Is COUNT(*) slow in MySQL?\nInertia server side rendering on Laravel Vapor Finish your projects\n\nThanks for reading! My name is Aaron and I write, make videos make videos make\nvideos , and generally try really hard try really hard try really hard .\n\nIf you ever have any questions or want to chat, I'm always on Twitter. on\nTwitter. on Twitter.\n\nYou can find me on YouTube on my personal channel personal channel personal\nchannel or my behind the scenes channel. behind the scenes channel. behind the\nscenes channel.\n\nIf you love podcasts, I got you covered. You can listen to me on Mostly\nTechnical Mostly Technical Mostly Technical .\n\n### Not enough emails?\n\n## Join my newsletter\n\nI'll send you some more. Not too many. Anytime I post a new article, or make a\nnew video, or do something else I think you might like. No spam, obviously.\n\nHandwriting robot\n\nCopyright 2013 - 2024, Aaron Francis.\n\nThe good parts of this site were designed by Hugo Hugo Hugo .\n\nThe bad parts were made up by Aaron.\n\n", "frontpage": false}
