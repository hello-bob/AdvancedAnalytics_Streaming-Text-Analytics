{"aid": "40275463", "title": "Farside: A smart redirecting gateway for various front end services", "url": "https://github.com/benbusby/farside", "domain": "github.com/benbusby", "votes": 2, "user": "i13e", "posted_at": "2024-05-06 14:58:45", "comments": 0, "source_title": "GitHub - benbusby/farside: A smart redirecting gateway for various frontend services", "source_text": "GitHub - benbusby/farside: A smart redirecting gateway for various frontend\nservices\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nbenbusby / farside Public\n\n  * Notifications\n  * Fork 45\n  * Star 649\n\nA smart redirecting gateway for various frontend services\n\nfarside.link\n\n### License\n\nMIT license\n\n649 stars 45 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# benbusby/farside\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n2 Branches\n\n5 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\ngithub-actions[bot][CI] Auto update instancesMay 6, 20241744cbe \u00b7 May 6,\n2024May 6, 2024\n\n## History\n\n937 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| Add support for Tent (#171)| Apr 19, 2024  \n  \n### config\n\n|\n\n### config\n\n| Remove Redis dep, replace w/ native Elixir lib| Oct 31, 2022  \n  \n### img\n\n|\n\n### img\n\n| Convert logo to SVG| Nov 13, 2021  \n  \n### lib\n\n|\n\n### lib\n\n| Include content type header on home page| Mar 6, 2024  \n  \n### test\n\n|\n\n### test\n\n| Skip nitter in tests| Apr 19, 2024  \n  \n### tools\n\n|\n\n### tools\n\n| Remove instance API urls when testing for cf proxy| Jul 11, 2023  \n  \n### .formatter.exs\n\n|\n\n### .formatter.exs\n\n| Setup basic Plug.Router framework for serving requests| Oct 23, 2021  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Remove Redis dep, replace w/ native Elixir lib| Oct 31, 2022  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Initial commit| Oct 21, 2021  \n  \n### README.md\n\n|\n\n### README.md\n\n| Fix Scribe repo URL in readme [skip ci]| Mar 6, 2024  \n  \n### index.eex\n\n|\n\n### index.eex\n\n| Add dark theme| Dec 20, 2023  \n  \n### mix.exs\n\n|\n\n### mix.exs\n\n| Extract remote ip from X-Forwarded-For| Jan 9, 2024  \n  \n### mix.lock\n\n|\n\n### mix.lock\n\n| Extract remote ip from X-Forwarded-For| Jan 9, 2024  \n  \n### route.eex\n\n|\n\n### route.eex\n\n| Include query params for all /_/ prefixed links| Jun 13, 2022  \n  \n### services-full.json\n\n|\n\n### services-full.json\n\n| [CI] Auto update instances| May 6, 2024  \n  \n### services.json\n\n|\n\n### services.json\n\n| [CI] Auto update instances| May 6, 2024  \n  \n## Repository files navigation\n\nSourceHut| GitHub  \n---|---  \n  \nContents\n\n  1. About\n  2. Demo\n  3. How It Works\n  4. Cloudflare\n  5. Development\n\n    1. Compiling\n    2. Environment Variables\n\n## About\n\nA redirecting service for FOSS alternative frontends.\n\nFarside provides links that automatically redirect to working instances of\nprivacy-oriented alternative frontends, such as Nitter, Libreddit, etc. This\nallows for users to have more reliable access to the available public\ninstances for a particular service, while also helping to distribute traffic\nmore evenly across all instances and avoid performance bottlenecks and rate-\nlimiting.\n\nFarside also integrates smoothly with basic redirector extensions in most\nbrowsers. For a simple example setup, refer to the wiki.\n\n## Demo\n\nFarside's links work with the following structure:\nfarside.link/<service>/<path>\n\nFor example:\n\nService| Page| Farside Link  \n---|---|---  \nLibreddit| /r/popular| https://farside.link/libreddit/r/popular  \nTeddit| /r/popular| https://farside.link/teddit/r/popular  \nNitter| User Profile| https://farside.link/nitter/josevalim  \nInvidious| Home Page| https://farside.link/invidious  \nPiped| Video Page| https://farside.link/piped/watch?v=eBGIQ7ZuuiU  \nWhoogle| Search \"Elixir\"|\nhttps://farside.link/whoogle/search?q=elixir&lang_interface=en  \nSearX| Search \"Redis\"| https://farside.link/searx/search?q=redis  \nSearXNG| Search \"EFF\"| https://farside.link/searxng/search?q=EFF  \nSimplyTranslate| Translate \"hola\"|\nhttps://farside.link/simplytranslate/?engine=google&text=hola  \nLingva| Translate \"bonjour\"| https://farside.link/lingva/auto/en/bonjour  \nRimgo| View photo album| https://farside.link/rimgo/a/H8M4rcp  \nScribe| View Medium post| https://farside.link/scribe/@ftrain/big-data-small-\neffort-b62607a43a8c  \n  \n^Note: This table doesn't include all available services. For a complete list\nof supported frontends, see: https://farside.link\n\nFarside also accepts URLs to \"parent\" services, and will redirect to an\nappropriate front end service, for example:\n\n  * https://farside.link/https://www.youtube.com/watch?v=dQw4w9WgXcQ will redirect to a Piped or Invidious instance\n  * https://farside.link/reddit.com/r/popular will redirect to a Libreddit or Teddit instance\n  * etc.\n\n## How It Works\n\nThe app runs with an internally scheduled cron task that queries all instances\nfor services defined in services.json every 5 minutes. For each instance, as\nlong as the instance takes <5 seconds to respond and returns a successful\nresponse code, the instance is added to a list of available instances for that\nparticular service. If not, it is discarded until the next update period.\n\nFarside's routing is very minimal, with only the following routes:\n\n  * /\n\n    * The app home page, displaying all live instances for every service\n  * /:service/*glob\n\n    * The main endpoint for redirecting a user to a working instance of a particular service with the specified path\n    * Ex: /libreddit/r/popular would navigate to <libreddit instance URL>/r/popular\n\n      * If the service provided is actually a URL to a \"parent\" service (i.e. \"youtube.com\" instead of \"piped\" or \"invidious\"), Farside will determine the correct frontend to use for the specified URL.\n    * Note that a path is not required. /libreddit for example will still redirect the user to a working libreddit instance\n  * /_/:service/*glob\n\n    * Achieves the same redirect as the main /:service/*glob endpoint, but preserves a short landing page in the browser's history to allow quickly jumping between instances by navigating back.\n    * Ex: /_/nitter -> nitter instance A -> (navigate back one page) -> nitter instance B -> ...\n    * Note: Uses Javascript to preserve the page in history\n\nWhen a service is requested with the /:service/... endpoint, Farside requests\nthe list of working instances from the db and returns a random one from the\nlist and adds that instance as a new entry in the db to remove from subsequent\nrequests for that service. For example:\n\nA user navigates to /nitter and is redirected to nitter.net. The next user to\nrequest /nitter will be guaranteed to not be directed to nitter.net, and will\ninstead be redirected to a separate (random) working instance. That instance\nwill now take the place of nitter.net as the \"reserved\" instance, and\nnitter.net will be returned to the list of available Nitter instances.\n\nThis \"reserving\" of previously chosen instances is performed in an attempt to\nensure better distribution of traffic to available instances for each service.\n\nFarside also has built-in IP ratelimiting for all requests, enforcing only one\nrequest per second per IP.\n\n## Regarding Cloudflare\n\nInstances for each supported service that are deployed behind Cloudflare are\nnot included when using farside.link. If you would like to also access\ninstances that use Cloudflare (in addition to instances that do not), you can\neither use cf.farside.link instead, or deploy your own instance of Farside and\nset FARSIDE_SERVICES_JSON=services-full.json when running.\n\nIf you do decide to use cf.farside.link or use the full instance list provided\nby services-full.json, please be aware that Cloudflare takes steps to block\nsite visitors using Tor (and some VPNs), and that their mission to centralize\nthe entire web behind their service ultimately goes against what Farside is\ntrying to solve. Use at your own discretion.\n\n## Development\n\n  * Install elixir\n  * (on Debian systems) Install erlang-dev\n\nTo run Farside without compiling, you can perform the following steps:\n\n  * Install dependencies: mix deps.get\n  * Initialize db contents: FARSIDE_CRON=0 mix run -e Farside.Instances.sync\n  * Run Farside: mix run --no-halt\n\n    * Uses localhost:4001\n\n### Compiling\n\nYou can create a standalone Farside app using the steps below. In the example,\nthe Farside executable is copied to /usr/local/bin, but can be moved to any\npreferred destination. Note that the executable still depends on the C runtime\nof the machine it is built on, so if you want a more portable binary, you\nshould build Farside on a system with older library versions.\n\n    \n    \n    MIX_ENV=cli && mix deps.get && mix release cp _build/cli/rel/bakeware/farside /usr/local/bin sudo chmod +x /usr/local/bin/farside farside\n\n### Environment Variables\n\nName| Purpose  \n---|---  \nFARSIDE_TEST| If enabled, bypasses the instance availability check and adds\nall instances to the pool.  \nFARSIDE_PORT| The port to run Farside on (default: `4001`)  \nFARSIDE_DATA_DIR| The path to the directory to use for storing instance data\n(default: `/tmp`)  \nFARSIDE_SERVICES_JSON| The JSON file to use for selecting instances (default:\n`services.json`)  \nFARSIDE_CRON| Set to 0 to deactivate the scheduled instance availability check\n(default on).  \n  \n## About\n\nA smart redirecting gateway for various frontend services\n\nfarside.link\n\n### Topics\n\nprivacy elixir redirect\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n649 stars\n\n### Watchers\n\n8 watching\n\n### Forks\n\n45 forks\n\nReport repository\n\n## Releases 5\n\nv0.2.2 Latest\n\nFeb 5, 2024\n\n\\+ 4 releases\n\n## Contributors 27\n\n\\+ 13 contributors\n\n## Languages\n\n  * Elixir 89.7%\n  * HTML 5.7%\n  * Shell 4.6%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
