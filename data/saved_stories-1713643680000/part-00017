{"aid": "40096770", "title": "Boring by Default (2020)", "url": "https://justmarkup.com/notes/2020-01-14-boring-by-default/", "domain": "justmarkup.com", "votes": 1, "user": "tie-in", "posted_at": "2024-04-20 12:12:01", "comments": 0, "source_title": "Boring by default", "source_text": "Boring by default\n\nSkip to main content\n\n# Boring by default\n\nJanuary 14, 2020\n\nWhen starting a new web project one often reaches for new cutting-edge\ntechnologies to be up-to-date. However, why not start with the basics first\nand add stuff on top if you really need it. Boring by default.\n\n> I really like new and cutting-edge technology, but lately, I feel more and\n> more that we're just over-engineering everything... \ud83d\ude22\n>\n> I spent the last hour solving problems that I wouldn't have had with a\n> \"traditional stack\", static HTML and some hand-written JavaScript.\n>\n> \u2014 Stefan Judis (@stefanjudis) January 5, 2020\n\nAs Stefan and many others, I also often see and experience over-engineered\nsites regularly. Let's see why starting with a traditional, or boring stack\nmay not be the worst idea.\n\n## Start with the basics #\n\nWhen starting a new website all you need to build it is a computer, an editor\nand a browser to view it. Yes, that's all \u2013 no need for a build script or task\nrunners or for installing something via npm. Yet, nowadays we tend to over-\ncomplicate all of this. The arguments for this are that it makes it so much\neasier to build a site using all this tools, another is that you will clearly\nneed all of this once several people work on the project and/or the project is\ngetting large.\n\nThese are all valid points, but to you really need this all from the\nbeginning? What if you abandon the project (like the millions of half-finished\nside-projects out there), or find that a static HTML page is all you need.\n\n## Maintenance #\n\nEver needed to change \"just a small thing\" on an old page you build years ago?\nI recently had the pleasure and the simple task of changing some colors in CSS\nlead to a whole day of me wrangling with old deprecated Grunt tasks and trying\nto get the build task running.\n\nThe same will happen to you as well some day, everybody used Grunt back then\nand almost nobody does today, the same will probably also happen to Babel or\nother tools \u2013 at least you would have to get an old version running which\nisn't supported anymore at the time you want to change some CSS in 2025.\n\nThat's why starting with HTML, CSS and JavaScript without the need to ever\ncompile anything on your local machine is a good idea. Changing some colors on\nsuch a page would indeed only take minutes and not a whole day.\n\n## It depends #\n\nThat said, if your whole team is really into React or Vue or\nAnotherFrameworkDevelopedRightNow and you know for sure that using these tools\nis the perfect choice for you. Use that. But, don't tell others they also have\nto and that this is the only way to build things \u2013 it all depends.\n\nYour job as an developer is to decide, to decide what tools to use, to decide\nwhat frameworks to use, to decide what to prioritize, to decide what is the\nbest way to maintain a project \u2013 a lot of questions only your team is able to\nanswer.\n\nAgain, it all depends.\n\n## Conclusion #\n\nNever feel ashamed to start with a traditional (boring) stack \u2013 you may be the\none launching a great project, while others still set up there build scripts.\n\nBe boring by default and enhance on the way.\n\nBack to top\n\nCopyright \u00a9 Michael Scharnagl 2024. All rights reserved. Mastodon | Buy me a coffee | Legal | Privacy Policy\n\n", "frontpage": false}
