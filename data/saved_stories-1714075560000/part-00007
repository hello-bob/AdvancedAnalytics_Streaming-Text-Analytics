{"aid": "40155394", "title": "Some misconceptions about GPL infectiousness", "url": "https://getparthenon.com/blog/some-misconceptions-about-gpl-infectiousness/", "domain": "getparthenon.com", "votes": 1, "user": "that_guy_iain", "posted_at": "2024-04-25 09:44:31", "comments": 0, "source_title": "Some misconceptions about GPL infectiousness", "source_text": "Some misconceptions about GPL infectiousness | Parthenon The Symfony SaaS Boilerplate\n\nSkip to main content\n\n# Some misconceptions about GPL infectiousness\n\nApril 25, 2024 \u00b7 3 min read\n\nIain Cambridge\n\nSoftware Architect\n\nI recently announced that Parthenon is now open source under the GPLv3 license\nfor the main library and the MIT license for the skeleton application. And\nthere was some feedback that I should use LGPL instead since the skeleton app\nis MIT so people can redistribute it and relicense it. I chose GPL because it\nwas the most restrictive popular open-source library. While I want people to\nrelicense their business logic in any way they want, I don't want them to be\nable to relicense Parthenon to anything other than GPL-compatible licenses.\n\n## I Am Not A Lawyer\n\nFirstly, I'm not a lawyer therefore what I say should not be taken as legal\nadvice or anything similar. And if a lawyer comes along and says I'm wrong\nabout things I'll be willing to change things. But I'm not going to change my\nmind when fellow armchair lawyers say I'm wrong without proof.\n\n## Why Not LGPL?\n\nI think that LGPL was created to solve problems in compiled languages and not\ninterpreted languages. LGPL is about allowing standalone executables to use\ndynamically linked libraries and only having GPL apply to the library and not\nthe executable. There is no executable with an interpreted language.\n\nOracle vs Google in the Java API case was found 6-2 at the Supreme Court that\nthe use of the API of a library falls within fair use. And within interpreted\nlanguages, your use of a library within your code and application is pretty\nmuch just using its API no copyright claim can be made on it by others. While\nthis was just one country, it's extremely unlikely anyone is going to try the\nsame legal case in another country due to the cost and the fact Oracle lost.\nIt was always a flimsy claim.\n\n## Distribution\n\nAnd in today's development landscape, we use dependency management tools such\nas Composer. So if you were to create an application from the Parthenon\nskeleton such as BillaBear, you generally don't distribute the actual\nlibraries you use. Instead, you distribute your code with a list of\nrequirements that the user needs to fetch and provide an easy way to do so.\n\nIf you're creating docker images of your application then the fact you rely on\nthe fact that any library that is GPL gives you the right to distribute an\nunmodified copy of that library.\n\n## Consider It Freemium\n\nIf GPL is really that big of an issue, then it is entirely possible for you to\nreach out and buy a different license. There is a way to use a free version\nbut it has a bunch of strings attached. However, I'm completely open to\nremoving those strings for a price.\n\n## SaaS Start Up Guide\n\nA little plug, a fortnightly newsletter that is written by experts in Finance,\nLaw, and Tech that focuses on starting a SaaS company. So if you're thinking\nof creating a side project that earns you some money, you can check it out at\nhttps://saasstartupguide.substack.com/. (Substack so safe from spam)\n\nTags:\n\n  * opinion\n\n  * I Am Not A Lawyer\n  * Why Not LGPL?\n  * Distribution\n  * Consider It Freemium\n  * SaaS Start Up Guide\n\nDocs\n\n  * Skeleton Application\n  * User Module\n  * Athena Module\n  * Payments Module\n\nDocs\n\n  * Invoice Module\n  * Notification Module\n  * Funnel Module\n  * Health Module\n  * Common Module\n  * A/B Testing Module\n\nProjects On GitHub\n\n  * Parthenon Bundle\n  * Skeleton Application\n  * Vue Menu Library\n\nMore\n\n  * Blog\n  * GitHub\n  * Twitter\n\nCopyright \u00a9 2024 Iain Cambridge\n\n", "frontpage": false}
