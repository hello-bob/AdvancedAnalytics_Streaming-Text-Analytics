{"aid": "40063147", "title": "AI is teaching my nine year daughter old to code", "url": "https://www.baugues.com/emma-code/", "domain": "baugues.com", "votes": 1, "user": "gregorymichael", "posted_at": "2024-04-17 11:38:03", "comments": 0, "source_title": "AI is teaching my nine year old to code", "source_text": "AI is teaching my nine year old to code\n\nGreg Baugues\n\nApr 16, 2024 4 min read\n\n# AI is teaching my nine year old to code\n\nAI is teaching a new generation of coders\n\nMy daughter started writing Python this weekend. I cannot overstate how much\ndifferent it is to learn to code today thanks to this new crop of AI tools\nthat's come on the scene over the last year.\n\nYears ago I wrote a post about how I learned to code on the TRS-80, and\nlamented that my introduction to coding in 1986 was so much more accessible\nthan what kids have today.\n\nToday Emma and I are are using Cursor, \"The AI-first code editor.\" It's a fork\nof VS Code that adds a bunch of different AI-assisted features which\ndrastically reduce the friction and frustration that are historically inherent\nin coding, and increase the instant gratification that's critical to\ndeveloping a love for digital building.\n\nHere's a quick example: no syntax errors. My friend Rob Spectre says of\nprogramming that, \"the distance between feeling like an idiot or genius is one\ncharacter wide.\" Many novice developers get pushed away by the sheer amount of\nhead-banging-against-the wall that occurs when you lack the\nintuition/experience to get the characters to line up juuuuuust right. Every\ndeveloper has a \"lost an hour hunting for the missing semicolon\" story.\n\nFancy autocomplete, syntax highlighting and extensions like error lens catch\n95% of the silly errors before you run your code.\n\nEmma and I are building with the Claude API.\n\nIt's funny, she's actually spent a lot of time using the web-based versions of\nChatGPT and Claude. Specifically, she's using them to help her write a book,\nwhich now clocks in at ~180 pages. The app we're building lets her chat with\none of the characters \u2013 Lillis \u2013 from her book and go on adventures together\nthrough the world she's created.\n\nWhen we set out to build this app, I instinctively reached for OpenAI APIs\nbecause that's what I've used the most, and she quickly said, \"No, I want to\nuse Claude.\"\n\n\"Oh... GPT-4's not good enough for you anymore?\"\n\n\"It's not that I think Claude is better, but that it's better for this job.\"\n\nI swell with pride that my nine year old daughter already has opinions on LLM\nAPIs.\n\nLLM APIs are the highest juice-to-squeeze ratio you'll ever find in coding.\nIt's an absolutely magical first-time-coding experience. The first time I ever\nwrote code, back in 1986, I got back \"HELLO WORLD\" \u2013 and that was enough to\nhook me for life. Emma's getting back a passably human conversation with a\ncharacter crafted from her imagination.\n\nWe actually played with this idea a year ago, but back then she was looking\nover my shoulder, watching me write code on my machine. This time, Emma's\nhands were typing on Emma's computer. (I did setup the virtual environment and\nAPI keys). I sit next to her and tell her what to type, and fancy autocomplete\ntakes care of all the spellings, indentations, punctuation, etc. Within ten\nminutes, we had our app running in the terminal.\n\nThe app was simple: a while loop takes an an input() from the user, feeds it\nto Claude, prints the result, and repeats. It's basically the Hello World with\nChatCompletion which I documented on this blog over a year ago, but with\nClaude swapped in for OpenAI. It's about 20 lines of code.\n\nThis worked really well, but the conversation started over every time the\nprogram stopped. Lillis had no memory. I tell Emma to ask chat how she can\nsave the messages. It gives her a few sentences of strategy, and writes a few\nlines to save and load the messages to a JSON file.\n\nBoom, she just learned about file handling.\n\nNow the Python script is working, but she wants to make her app prettier than\ntyping in a terminal. Streamlit seems like the right choice to quickly move an\nLLM app to a web-based interface, but I haven't used it before, so I struggle\nfor five minutes trying to steer from over her shoulder.\n\nThen I give up and say, \"just ask chat to change your app into a streamlit\napp.\"\n\nHer Streamlit app runs on the first try.\n\nWe've now gone from Hello World in the terminal to a well-styled web app with\npersistent memory in under an hour. And my hands haven't touched the keyboard.\n\nMy wife, Rachel, walks by. Emma beams, \"Mom, look, I made this. I MADE IT!\"\n\nI have no words to describe the sense of accomplishment and possibility on her\nface, but if you're reading this, you probably have felt it yourself. She just\ndiscovered a new superpower that she didn't have an hour ago. The world looks\ndifferent now.\n\nOf course, as soon as that app ran for the first time, Emma came up with a\npunchlist of ways to improve it. \"Okay... I don't want it to say 'Chat with\nAI' at the top...\", etc. Unfortunately, it's time to put her younger sister to\nbed, so I tell Emma, \"I'll be back in a bit, just ask chat the questions you'd\nask me.\"\n\nTwenty minutes later, I exit the dark room, and find Emma waiting for me at\nthe door.\n\n\"DAD! I changed the font! I got it to work! It took six tries.\"\n\nThen, trying to come up with the words to express this experience that she's\nhad for the first time, of struggling and iterating to finally get it to work,\n\"... it's not that I enjoyed doing it six times, but the feeling I got after\nit worked was.... AMAZING!\"\n\nThere has never been a better time to learn how to code.\n\n### Published by:\n\nShare Tweet\n\nGreg Baugues \u00a9 2024\n\n", "frontpage": false}
