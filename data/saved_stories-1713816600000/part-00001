{"aid": "40112793", "title": "Frawk: An efficient Awk-like programming language", "url": "https://github.com/ezrosent/frawk", "domain": "github.com/ezrosent", "votes": 1, "user": "thunderbong", "posted_at": "2024-04-22 09:55:31", "comments": 0, "source_title": "GitHub - ezrosent/frawk: an efficient awk-like language", "source_text": "GitHub - ezrosent/frawk: an efficient awk-like language\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nezrosent / frawk Public\n\n  * Notifications\n  * Fork 30\n  * Star 1.2k\n\nan efficient awk-like language\n\n### License\n\n1.2k stars 30 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# ezrosent/frawk\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n10 Branches\n\n2 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nezrosentAdd note to READMEFeb 13, 2024c428c5f \u00b7 Feb 13, 2024Feb 13, 2024\n\n## History\n\n682 Commits  \n  \n### .cargo\n\n|\n\n### .cargo\n\n| simplify panics for generated code| Feb 16, 2021  \n  \n### info\n\n|\n\n### info\n\n| Remove leading space before 3 in example (#109)| Feb 13, 2024  \n  \n### src\n\n|\n\n### src\n\n| Pass correct register type to 'Push'| Dec 10, 2023  \n  \n### tests\n\n|\n\n### tests\n\n| Fix typos (#94)| Dec 26, 2022  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Check Cargo.lock in and clean up .gitignore| Oct 6, 2021  \n  \n### Cargo.lock\n\n|\n\n### Cargo.lock\n\n| regenerate Cargo.lock| Jul 26, 2023  \n  \n### Cargo.toml\n\n|\n\n### Cargo.toml\n\n| Pass correct register type to 'Push'| Dec 10, 2023  \n  \n### LICENSE-APACHE\n\n|\n\n### LICENSE-APACHE\n\n| Add copyright to Apache2| May 26, 2020  \n  \n### LICENSE-MIT\n\n|\n\n### LICENSE-MIT\n\n| Add MIT license| May 26, 2020  \n  \n### README.md\n\n|\n\n### README.md\n\n| Add note to README| Feb 13, 2024  \n  \n### build.rs\n\n|\n\n### build.rs\n\n| Added new parsing submodule.| Feb 15, 2020  \n  \n## Repository files navigation\n\n# frawk\n\nNote (2024, ezrosent@) While the policy on bugs and feature requests remains\nunchanged I've had much less time over the last 1-2 years to devote to bug\nfixes and feature requests for frawk. Other awks are more actively maintained,\nand CSV support is now a much more common feature in awk compared to when this\nproject started; I'll update this notice if frawk's status changes.\n\nfrawk is a small programming language for writing short programs processing\ntextual data. To a first approximation, it is an implementation of the AWK\nlanguage; many common Awk programs produce equivalent output when passed to\nfrawk. You might be interested in frawk if you want your scripts to handle\nescaped CSV/TSV like standard Awk fields, or if you want your scripts to\nexecute faster.\n\nThe info subdirectory has more in-depth information on frawk:\n\n  * Overview: what frawk is all about, how it differs from Awk.\n  * Types: A quick gloss on frawk's approach to types and type inference.\n  * Parallelism: An overview of frawk's parallelism support.\n  * Benchmarks: A sense of the relative performance of frawk and other tools when processing large CSV or TSV files.\n  * Builtin Functions Reference: A list of builtin functions implemented by frawk, including some that are new when compared with Awk.\n\nfrawk is dual-licensed under MIT or Apache 2.0.\n\n## Installation\n\nNote: frawk uses some nightly-only Rust features by default. Build without the\nunstable feature to build on stable.\n\nYou will need to install Rust. If you have not updated rust in a while, run\nrustup update nightly (or rustup update if building using stable). If you\nwould like to use the LLVM backend, you will need an installation of LLVM 12\non your machine:\n\n  * See this site for installation instructions on some debian-based Linux distros. See also the comments on this issue for docker files that can be used to build a binary on Ubuntu.\n  * On Arch pacman -Sy llvm llvm-libs and a C compiler (e.g. clang) are sufficient as of September 2020.\n  * brew install llvm@12 or similar seem to work on Mac OS.\n\nDepending on where your package manager puts these libraries, you may need to\npoint LLVM_SYS_120_PREFIX at the llvm library installation (e.g.\n/usr/lib/llvm-12 on Linux or /usr/local/opt/llvm@12 on Mac OS when installing\nllvm@12 via Homebrew).\n\n### Building Without LLVM\n\nWhile the LLVM backend is recommended, it is possible to build frawk only with\nsupport for the Cranelift-based JIT and its bytecode interpreter. To do this,\nbuild without the llvm_backend feature. The Cranelift backend provides\ncomparable performance to LLVM for smaller scripts, but LLVM's optimizations\ncan sometimes deliver a substantial performance boost over Cranelift (see the\nbenchmarks document for some examples of this).\n\n### Building Using Stable\n\nfrawk currently requires a nightly compiler by default. To compile frawk using\nstable, compile without the unstable feature. Using rustup default nightly, or\nsome other method to run a nightly compiler release is otherwise required to\nbuild frawk.\n\n### Building a Binary\n\nWith those prerequisites, cloning this repository and a cargo build --release\nor cargo [+nightly] install --path <frawk repo path> will produce a binary\nthat you can add to your PATH if you so choose:\n\n    \n    \n    $ cd <frawk repo path> # With LLVM $ cargo +nightly install --path . # Without LLVM, but with other recommended defaults $ cargo +nightly install --path . --no-default-features --features use_jemalloc,allow_avx2,unstable\n\nfrawk is now on crates.io, so running cargo +nightly install frawk with the\ndesired features should also work.\n\nWhile there are no deliberate unix-isms in frawk, I have not tested it on\nWindows. frawk does appear to build on Windows with default features disabled;\nsee comments on this issue for more information.\n\n## Bugs and Feature Requests\n\nfrawk has bugs, and many rough edges. If you notice a bug in frawk, filing an\nissue with an explanation of how to reproduce the error would be very helpful.\nThere are no guarantees on response time or latency for a fix. No one works on\nfrawk full-time. The same policy holds for feature requests.\n\n## About\n\nan efficient awk-like language\n\n### Resources\n\nReadme\n\n### License\n\nActivity\n\n### Stars\n\n1.2k stars\n\n### Watchers\n\n14 watching\n\n### Forks\n\n30 forks\n\nReport repository\n\n## Releases 2\n\nv0.4.7 Latest\n\nJan 2, 2023\n\n\\+ 1 release\n\n## Packages 0\n\nNo packages published\n\n## Contributors 10\n\n## Languages\n\n  * Rust 99.0%\n  * Other 1.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
