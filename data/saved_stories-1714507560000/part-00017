{"aid": "40208800", "title": "Show HN: Roast my SQLite encryption at-rest", "url": "https://github.com/ncruces/go-sqlite3/tree/main/vfs/adiantum", "domain": "github.com/ncruces", "votes": 2, "user": "ncruces", "posted_at": "2024-04-30 09:12:27", "comments": 0, "source_title": "go-sqlite3/vfs/adiantum at main \u00b7 ncruces/go-sqlite3", "source_text": "go-sqlite3/vfs/adiantum at main \u00b7 ncruces/go-sqlite3 \u00b7 GitHub\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nncruces / go-sqlite3 Public\n\n  * Notifications\n  * Fork 7\n  * Star 271\n\n/\n\n# adiantum\n\n/\n\n## Directory actions\n\n## More options\n\n## Directory actions\n\n## More options\n\n## Latest commit\n\nncruces\n\nMultiple fixes.\n\nApr 30, 2024\n\nbeba988 \u00b7 Apr 30, 2024Apr 30, 2024\n\n## History\n\nHistory\n\n/\n\n# adiantum\n\n/\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n### parent directory\n\n..  \n  \n### README.md\n\n|\n\n### README.md\n\n| Remove cache (side-channel for shared keys).| Apr 23, 2024  \n  \n### adiantum.go\n\n|\n\n### adiantum.go\n\n| Remove cache (side-channel for shared keys).| Apr 23, 2024  \n  \n### api.go\n\n|\n\n### api.go\n\n| Documentation.| Apr 27, 2024  \n  \n### hbsh.go\n\n|\n\n### hbsh.go\n\n| Multiple fixes.| Apr 30, 2024  \n  \n## README.md\n\n# Go \"adiantum\" SQLite VFS\n\nThis package wraps an SQLite VFS to offer encryption at rest.\n\nWarning\n\nThis work was not certified by a cryptographer. If you need vetted encryption,\nyou should purchase the SQLite Encryption Extension, and either wrap it, or\nseek assistance wrapping it.\n\nThe \"adiantum\" VFS wraps the default SQLite VFS using the Adiantum tweakable\nand length-preserving encryption. In general, any HBSH construction can be\nused to wrap any VFS.\n\nThe default Adiantum construction uses XChaCha12 for its stream cipher, AES\nfor its block cipher, and NH and Poly1305 for hashing. Additionally, we use\nArgon2id to derive 256-bit keys from plain text.\n\nThe VFS encrypts all files except super journals: they never contain database\ndata, only filenames, and padding them to the block size is problematic.\nTemporary files are encrypted with random keys, as they may contain database\ndata. To avoid the overhead of encrypting temporary files, keep them in\nmemory:\n\n    \n    \n    PRAGMA temp_store = memory;\n\nImportant\n\nAdiantum is typically used for disk encryption. The standard threat model for\ndisk encryption considers an adversary that can read multiple snapshots of a\ndisk. The only security property that disk encryption (and this package)\nprovides is that all information such an adversary can obtain is whether the\ndata in a sector has (or has not) changed over time.\n\nCaution\n\nThis package does not claim protect databases against forgery. Any encryption\nscheme that allows constant-time block updates can't prevent individual blocks\nfrom being reverted to former versions of themselves, so block-level\nauthentication is of limited value.\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
