{"aid": "40152487", "title": "Inside Super Nintendo Cartridges", "url": "https://fabiensanglard.net/snes_carts/", "domain": "fabiensanglard.net", "votes": 1, "user": "gaws", "posted_at": "2024-04-25 02:03:31", "comments": 0, "source_title": "Inside the Super Nintendo cartridges", "source_text": "Inside the Super Nintendo cartridges\n\nFABIEN SANGLARD'S WEBSITE\n\nABOUT CONTACT RSS $$$\n\nApril 21, 2024\n\nInside the Super Nintendo cartridges\n\nOne of the remarkable characteristics of the Super Nintendo was the ability\nfor game cartridges (cart) to pack more than instructions and assets into ROM\nchips. If we open and look at the PCBs, we can find inside things like the CIC\ncopy protection chip, SRAM, and even \"enhancement processors\".\n\nCIC\n\nThe copy-protection mechanism of the SNES is something I already dig into in\nmy 10NES article. It works by having two chips talking in lockstep. One chip\nis in the console, the other in the cart. If the console CIC sees something it\ndoes not like, it resets every processor.\n\nNot every SNES cart has a CIC. Unsanctioned games such as \"Super 3D Noah's\nArk\" don't have one. To play the game, one needs to first insert the game in\nthe console and then plug an official cartridge on top. The CIC bus lines are\nforwarded from Noah's towards the official game's CIC!\n\nROM: instructions & assets\n\nI was unable to find a list of all SNES games with their ROM size. So I made\nmy own (the ROM usage is a (bad) estimate based on the zipped ROM size which\nremoves most of the zero padding^[1]). That is 3,378 titles (across\nUSA/Japan/Europe) presented in the chart below.\n\nGames ROM size used to be expressed in bits instead of bytes. Zelda III, for\nexample, was not advertised as 706,107 bytes but the size of its ROM in bits,\n(1,048,576 * 8) 8Mb. The largest game ever released was Star Ocean (48Mb)\nwhile a masterpiece such as Super Mario World used a single (524,288 * 8) 4Mb\nROM (but roughly fit in 346,330 bytes).\n\nIf you don't want to click on the .csv, here are the most noteworthy games\n(feel free to scream me an email if your favorite game is not in the list).\n\nGame| Zone| Mb| Estimated ROM usage (bytes)  \n---|---|---|---  \nStar Ocean| Japan| 48| 5,305,704  \nTales of Phantasia| Japan| 48| 4,597,214  \nStreet Fighter Alpha 2| USA| 32| 3,656,898  \nStreet Fighter Zero 2| USA| 32| 3,664,837  \nChrono Trigger| USA| 32| 3,082,289  \nSuper Street Fighter II| USA| 32| 2,831,690  \nDonkey Kong Country| USA| 32| 2,580,703  \nSuper Metroid| USA| 16| 1,571,143  \nSecret of Mana| USA| 16| 1,346,021  \nStreet Fighter II| USA| 16| 1,322,550  \nSuper Mario World 2 - Yoshi's Island| USA| 16| 1,287,021  \nMega Max X2| USA| 8| 1,005,245  \nAladdin| USA| 8| 828,576  \nTeenage Mutant Ninja Turtles IV| USA| 8| 808,998  \nContra III - The Alien Wars| USA| 8| 753,444  \nLegend of Zelda, The - A Link to the Past| USA| 8| 706,107  \nStar Fox| USA| 8| 622,583  \nSuper Mario Kart| USA| 4| 354,207  \nSuper Mario World| USA| 4| 346,330  \nF-Zero| USA| 4| 290,893  \n  \nSRAM\n\nSome titles offered the ability to save progress. This was done by having a\nSRAM chip powered by a battery. The SRAM went into low-power mode when the\nconsole was turned off to reduce the drain.\n\nSource (snescentral.com). Zelda III PCB\n\nIn this Zelda III PCB above, we find the CIC (D413A) mentioned previously in\nU4. In U1, 0x80000 = 524,288 bytes of ROM. In U2, a LH5268AF-10TLL, 64 Kbits\n(8 KiB) of SRAM. In U3 the MAD-1 chip is a Memory Address Decoder which\narbitrates access to the ROM/RAM^[2]^[3].\n\nEnhancement processors\n\nThe most famous enhancement processor is the Super FX (a.k.a \"MARIO\", a.k.a\n\"GSU-1\") which was used for Starfox in 1993. But EC chips were used prior to\nthis date.\n\nA complete list of Enhanced SNES games is available on wikipedia and\nsnescentral.com. In total, 13 ECs powered 72 games.\n\nEnhancement processors: SA-1\n\nThe \"Super Accelerator 1\" is the MVP of the Enhancement Chips. Included in 34\ncarts^[4], it is a 65C816 CPU (the same as the one in the SNES) but running 4x\nfaster at 10.74 MHz. It also features 2KiB of SRAM and an integrated CIC^[5].\n\nSource (snescentral.com). Super Mario RPG PCB\n\nAbove, a Mario RPG PCB. Notice the absence of CIC chip (since the SA-1 has\none), a ROM chip in U1 containing the game instructions and assets, a SRAM\nchip in U2 (with an integrated decoder which void the needs for a MAD-1), and\nthe SA-1 in U3.\n\nNotice there is no oscillator since the SA-1 uses the System Master clock line\nfrom the cart port and halves it internally. The result is a 21.4772700 MHz /\n2 = 10.74 MHz frequency.\n\nHow does it work?\n\nWe can find the full description in the SNES Developer Documentation Volume\nII^[6]. Upon startup, the SA-1 is in \"stop\" state. The SNES CPU creates a\nReset Vector and resumes the SA-1. The initial SA-1 Instruction Pointer is\nretrieved from that dedicated Reset Vector.\n\nThe SA-1 has three modes of operations named Accelerator, Parallel Processing,\nand Mixed Processing. In the most powerful configuration, it makes the overall\nsystem five times more capable.\n\n> The SA-1 CPU and the Super NES CPU operate simultaneously, which results in\n> five times greater performance of the Super Accelerator System (SAS) over\n> the current Super NES.\n>\n> \\- Super Nintendo Developer Manual Book II^[7]\n\nThanks to the improved processing, the SNES is able to animate and detect\ncollisions on all 128 sprites available in the PPU. The horsepower also\nallowed to transform sprites on the fly (rotate/scale them) and write them\nback into the PPU VRAM. The dramatic improvements were demonstrated in a\nNintendo SA-1 demo cart^[8].\n\nSA-1 enthusiasts further demonstrated the performance difference. The video\nbelow compares execution of sort algorithms using a LoRom (the cheapest cart\nto manufacture), a HiRom (a cart with faster ROM resulting in fewer wait-state\ninserted when the CPU accesses the bus), and a SA-1.\n\nThe SA-1 has also been used by the retro-gaming community to improve the game-\nplay of past games suffering slowdown. Amazing projects such as Eliminating\nslowdown in Super Mario World, Gradius III slowdown removal (took three months\nof work^[9]) and Contra III slowdown removal^[10] are works of beauty. Even\nSuper Mario World^[11] got the treatment (I can't remember slowdowns but I was\nonly twelve back then).\n\nSuper R-Type (SNES) - Original x SA-1 Comparison.\n\nContra III (SNES) - Original x SA-1 Comparison.\n\nGradius III - SNES Original x SA-1 Comparison^[12].\n\nGradius III (SNES) - Original x SA-1 Comparison.\n\nThe process of converting a title to SA-1 seems fairly involved, requiring in\nparticular to remap RAM/ROM accesses. This is puzzling since the documentation\nof the SA-1 states that \"The SNES and the SA-1 uses the same memory\nmapping\"^[13]. If you know why, please shot me an email.\n\nEfforts to automatize the remapping and sa1-ize more SNES games were underway\nas recently as 2019 via the SA-1 Collection Project^[14].\n\nEnhancement processors: CX4\n\nThe CX4 is Capcom's baby powering both Mega Man X2 and Mega Man X3. It is\ncapable of 3-D wire-frame rendering and numerous math operations along with\nscaling and rotating sprites into the VRAM^[15]. You can find examples in MMX2\nintro or in MMX2 boss fights.\n\n> Most associate it with wire-frame effects but it most definitely is not used\n> for just that. It provides sprite functions, wire-frame effects, Propulsion,\n> Vector. triangle, trigonometric functions and result tables and coordinate\n> transform functions.\n>\n> In MMX2 and MMX3, it handles all sprites, so it's literally used throughout\n> the entire game. This basically allows for more sprites on-screen than the\n> SNES would otherwise allow without flicker. I think this is how some of the\n> large bosses like the intro bosses are done.\n>\n> \\- Source^[16]\n\nSource (snescentral.com). Mega Man X2 PCB\n\nAbove, the Mega Man X2 PCB. Notice the copy protection CIC in U4, 8M (8 Mbis =\n1MiB) ROM containing game instructions and assets in U1, more ROM in U2, and\nthe CX4 in U3.\n\nNotice the 20Mhz oscillator in X1 since the CX4 does not use the console\nMaster Clock.\n\nEnhancement processors: CS-DD1\n\nThe DD1 is a sprite decompression chip, able to feed picture processing unit\nVRAM directly (and a little bit more^[17]). It was used in two games, Star\nOcean and Street Fighter Alpha 2.\n\nThe DD1 was rumored to be responsible for Street Fighter Alpha 2 blank before\na round started. The reason was detailed by Modern Vintage Gamer^[18]. It\nturned out the problem was transferring sound samples to the DSP RAM.\n\nSource (snescentral.com). Street Fighter Alpha 2 PCB\n\nThe simplest PCB we will look at today, Street Fighter Alpha 2 ships with a\nlot of ROM in U1 (4 MiB) and the DD1 to decompress assets on the fly. Notice\nhow there is no CIC so it is integrated into the DD1.\n\nEnhancement processors: DSP-1\n\nThe series of DSP chips supports nineteen titles. The DSP-1 accounts for\nsixteen of them, in particular classics like Super Mario Kart and\nPilotwings^[19]\n\nThe name is poorly chosen since DSP stands for Digital Signal Processor but\nthey do not operate on a continuous signal like most DSPs.\n\nThe chip is extensively documented in the Super Nintendo Developer Manual Book\nII^[20]. In these pages, we learn that it works in blocking mode (the CPU does\nnothing while the DSP operates).\n\n> The Super NES CPU waits while DSP1 processes data, before sending the next\n> data.\n>\n> \\- Developer Manual^[21]\n\nThe DSP offers instructions such as fast 16-bit multiplication, inverse,\nsin/cos projection, vector size, rotation and so on which were obviously\nparamount to program the HDMA and update the 3D view in Mode 7^[22].\n\nSource (snescentral.com). Super Mario Kart PCB\n\nAbove, a packed Mario Kart PCB which leverages every component we learned\nabout so far. There is an external CIC in U5, a ROM in U1, SRAM to save games\nin U3, and finally a MAD-1 address decoder for ROM/RAM addressing in U4. Of\ncourse to allow savegame to survive console power off, we find a battery in\nthe upper left.\n\nLike the CX4, the DSP does not use the Master Clock from the cart line.\nInstead it requires an oscillator (found here in X1). The resulting frequency\nis 8 MHz.\n\nDSP-1 powered game Pilot Wings was \"improved\" when enthusiasts found out the\ngame used texture at much higher resolution than Mode 7 could display. bsnes\nwas modified to give Mode 7 an HD resolution for the result below.\n\nThere were three versions of the DSP-1 named DSP-1, DSP-1a, and DSP-1b. While\nintroducing bug fixing and improving the process, the chip behavior was\nslightly altered which resulted in planes in Pilot Wings demo crashing into\nthe ground (as unveiled by Foone^[23]).\n\nEnhancement processors: DSP-2\n\nUsed in a single game (Dungeon Master) to convert the Atari ST routines. It\nseems that it was mostly to help scaling sprites as seen here.\n\nEnhancement processors: DSP-3\n\nUsed in a single game (SD Gundam GX).\n\nEnhancement processors: DSP-4\n\nUsed in two games (Top Gear 3000 and The Planet's Champ TG 3000).\n\nEnhancement processors: OBC-1\n\nThe OBC-1 was used in a single game Metal Combat: Falcon's by Revenge\nIntelligent Systems. It was rumored to be used to manipulate sprites. However\nthis is debated on nesdev.org.\n\n> It's essentially a very, very simplistic save RAM mapper. It helps build OAM\n> (sprite) tables in RAM (without the need for bit manipulation), that are\n> then DMA'ed into OAM memory.\n>\n> Honestly, it seems like a serious waste of an engineering effort. It should\n> be a weekend project for an experienced programmer to remove the need for\n> the chip entirely. [...]\n>\n> I think the biggest justification for it was the anti-piracy benefits.\n>\n> \\- Near^[24]\n\nSource (snescentral.com). Metal Combat: Falcon's Revenge PCB\n\nIn Metal Combat's PCB we find the OBC1 in U4. There is a CIC in U6, an address\ndecoder MAD-1 in U5, the game assets ROM are in U1 and U2, the 8KiB SRAM to\nsave games is in U3, and finally the battery to power the SRAM is in the upper\nleft.\n\nEnhancement processors: S-RTC\n\nS-RTC is a chip to keep track of real-clock time used in a single title,\nDaikaijuu Monogatari II. It is unclear why Hudson Soft developers needed to\nkeep track of real-time. Perhaps to display it to players?\n\nSource (snescentral.com). Daikaijuu Monogatari II PCB\n\nCIC in U6, S-RTC in U5, MAD-1 in U4, Lots of ROM in U1 and U2, 8 KiB SRAM for\nsavegames in U3, and the battery to power it in the upper left.\n\nEnhancement processors: SPC7110\n\nA data decompression chip by Epson, used in three games: Tengai Makyou Zero,\nMomotaro Dentetsu Happy, and Super Power League 4 which also has real-time\nclock capability.\n\nSource (snescentral.com). Tengai Makyou Zero PCB\n\nA novelty above is the R1513 in U5 which protects the SRAM from voltage spikes\nwhen the power is turned on and off. The SRAM is actually in U3 (8KiB), the\nCIC (F411B) is in U7, two huge ROM are in U1 and U2. Finally, the SPC7110 is\nin u4.\n\nEnhancement processor: ST-010\n\nThe ST series of chips from SETA Corporation were reportedly aimed at\nimproving game AI. The ST-010 was used in a single game (Exhaust Heat 2 - F1\nDriver he no Kiseki)^[25]\n\nSource (snescentral.com). \"Exhaust Heat 2\" PCB\n\nThe CIC (D411A) is in U4. We find the ROM in U1, the ST010 is in U2, notice\nthe X1 22Mhz oscillator to clock it. Finally, a novelty is the 74LS139 in U4\nwhich is like a MAD-1 address decoder.\n\nEnhancement processor: ST-011\n\nAlso used in a single game, Hayazashi Nidan: Morita Shougi^[26]\n\nEnhancement processor: ST-018\n\nUsed only in Hayazashi Nidan Morita Shougi 2. It seems to be an ARM CPU with\ninternal ROM containing its instructions^[27].\n\nEnhancement processors: Super GFX-GSU1\n\nThe GSU-1 was used in five games (Star Fox, Stunt Race FX, Vortex, Dirt Racer,\nand Dirt Trax FX. Of all the Enhancement chips, it is the most documented with\nwikis, tutorials^[28] and the Super Nintendo Developer Manual Book II^[29].\n\nClocked at 10.74 MHz (master clock 21.47 MHz, halved internally), it is able\nto run without starving the SNES CPU thanks to an internal 512 byte\ninstruction cache^[30]. After it is done working on its task, it can interrupt\nthe console's CPU (C-CPU).\n\nWhile the SNES PPU1/PPU2 are tilemap/sprite oriented, the Super-GFX excels at\nrendering pixels and rasterizing polygons. It usually renders into a\nframebuffer located on the cart. The content of the framebuffer is transferred\nto the VRAM during VSYNC^[31].\n\nSource (snescentral.com). Star Fox PCB\n\nIn the PCB above, we see the GSU-1 (the M.A.R.I.O, Mathematical, Argonaut,\nRotation, Input/Output) chip in U3, a CIC in U5, 74LS139 (the equivalent of a\nMAD-1) in U4, the game code and assets in the U1 ROM. The odity is that we\nfind SRAM in U2 ....but no battery to power it when the console is turned off.\nThat is because the (256/8 = 32 KiB) SRAM is \"partially dedicated for SuperFX\nframebuffer storage\"^[32].\n\nLike the SA-1, the SNES community is investing time in the GSU-1 via projects\nsuch as the Project Super FX^[33] to improve past titles as much as possible.\n\nEnhancement processors: Super GFX-GSU2\n\nThe GSU-2 is a GSU-1 running at full speed, a.k.a 21.47 MHz. It was used in\nthree games Super Mario World 2: Yoshi's Island, DOOM, and Winter Gold.\n\nThe power gain from not having its clock halved is demonstrated by (once\nagain) enthusiasts who swapped the GSU-1 for a GSU-2 on a Star Fox cart.\n\nThe author of DOOM for SNES, Randy Linden, did not have access to any\ndocumentation about the GSU chip or even DOOM source code. He reverse\nengineered all of it^[34]. Randy did a superb job since this is the only\nconsole port able to use the PC levels (other consoles had to simplify the\ngeometry).\n\nSource (snescentral.com). Super Mario World 2: Yoshi's Island PCB\n\nSuper Mario World 2 uses the GSU-2 mostly for sprite scaling and stretching\n(sprites are manipulated and written back into the PPU VRAM^[35]). See for\nexample, Yohshi's Island rolling boulder sequence.\n\nThis PCB has a battery so the SRAM is used for both hosting the framebuffer\nand save game state. Oddly, we find an X1 oscillator which should not have\nbeen necessary since the GSU-2 could have used the Master Clock. Could it be a\nvoltage issues^[36]\n\nOf course the SNES community has tinkered with GSU-2 titles. DOOM, the most\npolygons heavy title, was overclocked to 32Mhz which increased the framerate\nfrom 10-11 to 14-15 fps^[37].\n\nEnhancement processors vs Emulator community\n\nIf EC greatly improved the player experience and reduced the cost for\npublishers, they would become a thorn in the side of emulator authors in later\nyears. Some games, relying on peculiar ECs, were only properly emulated in\n2012^[38]!\n\nIn the early days, games such as SF2 Alpha were \"emulated\" by requiring pre-\ndecompressed sprites \"graphic packs\" since the internals of the DD1 were\nunknown.\n\nGreat effort went into reverse engineering. Some of the chips had hard-coded\nfunctions requiring de-capping. Some (like the ARM based ones) had internal\nROM storing their instructions. These require emulators to be provided a BIOS\nfile^[39]).\n\nEven as of 2020, the emulation of some of the most obscure chips has still not\nbeen completed^[40].\n\nReferences\n\n^| [ 1]| Estimating based on zip size was a bad idea. A better way would be to\nunzip, and count zero byte padding at the end of the file. I will update asap.  \n---|---|---  \n^| [ 2]| The SNES Cartridge, Briefly Explained  \n^| [ 3]| MAD-1 pins  \n^| [ 4]| List of games using the SA-1 chip  \n^| [ 5]| SA-1 (wikipedia)  \n^| [ 6]| Super Nintendo Developer Manual Book II: SA-1  \n^| [ 7]| Super Nintendo Developer Manual Book II: SA-1 1.1.2  \n^| [ 8]| The SA-1 Demo cartridge has been dumped  \n^| [ 9]| The SA-1 Collection Project  \n^| [10]| Contra III Slowdown Removal  \n^| [11]| Eliminating slowdown in Super Mario World  \n^| [12]| 28 years later, hacker fixes rampant slowdown on SNES\u2018 Gradius III  \n^| [13]| Super Nintendo Developer Manual Book II: SA-1 1.1.4  \n^| [14]| The SA-1 Collection Project  \n^| [15]| Capcom Cx4 - Hitachi HG51B169  \n^| [16]| How does Capcom's CX4 chip compare to the Super FX chip?  \n^| [17]| CS-DD1  \n^| [18]| A closer look at Street Fighter Alpha 2 on the Super Nintendo  \n^| [19]| Games that use DSP1 / 1A / 1B  \n^| [20]| Super Nintendo Developer Manual Book II: DPS-1  \n^| [21]| DSP1 DR Register  \n^| [22]| DSP-1 command summary  \n^| [23]| Today's weird discovery  \n^| [24]| metal combat chip (OBC-1) question  \n^| [25]| ST010  \n^| [26]| ST011  \n^| [27]| It appears I was able to dump the ST-0018 program ROM  \n^| [28]| Super NES Programming/Super FX tutorial  \n^| [29]| Super Nintendo Developer Manual Book II: Super-FX  \n^| [30]| SNES GSU-1 Theory of Operation  \n^| [31]| Super FX FAQ  \n^| [32]| Star Fox SHVC-1C0N5S-01 information page  \n^| [33]| It's time to push SNES to the limits  \n^| [34]| Game Engine Black Book: DOOM  \n^| [35]| Could the Super FX 1 Chip Scale sprites?  \n^| [36]| SuperFX GSU-1/GSU-2 pinout  \n^| [37]| Doom SNES 32MHz overclock  \n^| [38]| It appears I was able to dump the ST-0018 program ROM  \n^| [39]| Why does the 'Mesen-S' SNES emulator require a separate DSP ROM  \n^| [40]| Mesen-S - SNES Emulator, SPC-7110 emulation  \n  \n*\n\n", "frontpage": false}
