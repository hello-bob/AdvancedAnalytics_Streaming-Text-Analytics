{"aid": "40091543", "title": "Other Attempts to Take over Open Source Projects", "url": "https://www.schneier.com/blog/archives/2024/04/other-attempts-to-take-over-open-source-projects.html", "domain": "schneier.com", "votes": 1, "user": "cratermoon", "posted_at": "2024-04-19 20:23:55", "comments": 0, "source_title": "Other Attempts to Take Over Open Source Projects - Schneier on Security", "source_text": "Other Attempts to Take Over Open Source Projects - Schneier on Security\n\n# Schneier on Security\n\n### Search\n\nPowered by DuckDuckGo\n\n### Subscribe\n\nHomeBlog\n\n## Other Attempts to Take Over Open Source Projects\n\nAfter the XZ Utils discovery, people have been examining other open-source\nprojects. Surprising no one, the incident is not unique:\n\n> The OpenJS Foundation Cross Project Council received a suspicious series of\n> emails with similar messages, bearing different names and overlapping\n> GitHub-associated emails. These emails implored OpenJS to take action to\n> update one of its popular JavaScript projects to \u201caddress any critical\n> vulnerabilities,\u201d yet cited no specifics. The email author(s) wanted OpenJS\n> to designate them as a new maintainer of the project despite having little\n> prior involvement. This approach bears strong resemblance to the manner in\n> which \u201cJia Tan\u201d positioned themselves in the XZ/liblzma backdoor.\n>\n> [...]\n>\n> The OpenJS team also recognized a similar suspicious pattern in two other\n> popular JavaScript projects not hosted by its Foundation, and immediately\n> flagged the potential security concerns to respective OpenJS leaders, and\n> the Cybersecurity and Infrastructure Security Agency (CISA) within the\n> United States Department of Homeland Security (DHS).\n\nThe article includes a list of suspicious patterns, and another list of\nsecurity best practices.\n\nTags: backdoors, open source, social engineering\n\nPosted on April 18, 2024 at 7:06 AM \u2022 9 Comments\n\n  * Two clicks for more privacy: The Facebook Like button will be enabled once you click here. No data is loaded from Facebook until you enable the button. Click the [i] button for more information.\n\nnot connected to Facebook\n\n  * Two clicks for more privacy: The Tweet button will be enabled once you click here. No data is loaded from Twitter until you enable the button. Click the [i] button for more information.\n\nnot connected to Twitter\n\n  * If you click to activate the share buttons, data will be loaded from a third party, allowing them to track your visit to schneier.com. For more details click the [i] button.\n\n### Comments\n\nWinter \u2022 April 18, 2024 7:59 AM\n\nOpenJS could to be the wrong target as there seem to be several developers\nwith visibility involved.\n\nI am more concerned about 1/2 overworked developer projects that are mainly in\nmaintenance mode. These are the developers who do not have the time and\nresources to do everything \u201cright\u201d, following the OpenSSF guidelines. It is\nthese overextended projects that might be tempted to welcome \u201cnew blood\u201d to\nhelp them out in a perceived \u201csecurity emergency\u201d.\n\nXZ was a textbook exemplar of such a target. The fact that the person(s)\nbehind Jian Tan had already been working with the lead developer for a year or\nmore would make it even more difficult to recognize the game plan.\n\necho \u2022 April 18, 2024 9:23 AM\n\nGiven I\u2019m the only person who to the best of my knowledge has ever linked to\nor discussed the multi-domain security model, and maybe 3-4 lines at most on\nanything were related to this were mention in previous topics this week I\u2019ll\nsit this one out. I\u2019m too busy reading other material to even glance the\narticle.\n\nDoubtless everyone is going to prove me wrong by pulling a 180 and displaying\nlots of sage knowing looks and outpourings of empathy for people they were\npreviously slagging off and trampling over!\n\nMark Wolfgang \u2022 April 18, 2024 10:26 AM\n\nIf the XZ compromise was indeed a nation state with a long time horizon, then\nthere\u2019s little doubt they would run parallel ops to compromise several open\nsource projects.\n\nSmall, obscure projects with one or two devs. Inactive projects etc.\n\nImagine an open source project lead who started his project as a hobby.\nProject became popular and his library became included in other projects.\nProject founder/dec gets their dream job based on the credibility of his hobby\nproject and now has no time to maintain. In comes helpful volunteer dev who\ncontributes significantly to the project over a year or two. Project founder\neventually empowers volunteer to essentially take over project.\n\nClive Robinson \u2022 April 18, 2024 11:47 AM\n\n@ Mark Wolfgang, ALL,\n\nRe : Dangers of a journey gone past it\u2019s destination.\n\n> \u201cProject founder/dec gets their dream job based on the credibility of his\n> hobby project and now has no time to maintain.\u201d\n\nThe problems usually start before then...\n\nImagine a bus ride where after they have got on the bus, the passengers decide\nthey want the bus to go where they want. Not where the journey is scheduled to\ngo.\n\nChaos ensures and the bus zig zags across the map, no passenger is happy and\nthe buss driver is going mad trying to make them happy.\n\nTo many Open Source Software projects are like this. A project like a bus can\nnot be where the users who are just demanding passengers want it to be.\n\nYou will note that successful projects are ones where the driver sticks to the\nroute and schedule, and the passengers can get on and off at any time. The\npassengers can \u201cwalk or wait\u201d if maybe they think a better bus will come\nalong...\n\nOtherwise they are \u201cOn for the ride\u201d and can sit there and keep quite.\n\nIf a passenger does not want to \u201cwalk or wait\u201d, then the expensive options\nstart with \u201cpay for\u201d say a hire car, or chauffeur service, or even buy a\nvehicle and pay a driver may be the only options available. But they almost\nnever want to pay...\n\nThus we get the idea of the \u201cproject tyrant\u201d or \u201cbenign dictator\u201d as \u201cthe\nglorious leader\u201d.\n\nBut it never lasts there is always someone who comes along and claims every\none should be \u201cequals\u201d only some think they are \u201cmore equal than others\u201d\nbecause they demand demand, don\u2019t give credit and think every one should\npraise them etc etc.\n\nSo the project goes \u201cover the side of a cliff\u201d or similar as the driver\ndecides enough of the madness they are getting off one way or another.\n\nAs for those thinking they are \u201cmore equal than others\u201d, all to often they\nhave no skills or other attributes of use to offer.\n\nSo the project becomes orphaned or abandoned, and like children in times past\nvulnerable to abuse in all sorts of ways or effectively die of neglect.\n\nAndrew Duane \u2022 April 18, 2024 12:09 PM\n\nDon\u2019t forget the much simpler version of this (that almost worked), where\nsomeone hid a \u201cuid = 0\u201d instead of \u201cuid == 0\u201d inside a hugely complicated if\nstatement on an open system call flag check in Linux, hoping no one would\nnotice. Almost no one did, but someone spotted it right before (right after?)\nthe commit.\n\nIt would have given someone who knew the right combination of flags to give to\nopen to set their uid to 0.\n\nClive Robinson \u2022 April 18, 2024 12:52 PM\n\n@ Bruce, ALL,\n\nRe : It\u2019s not a supply chain.\n\nWe\u2019ve sort of fallen into a trap in our thinking in the ICT Industry and it\nkeeps reoccurring multiple times every year.\n\nThat is for \u201cconvenience\u201d we take a term from the \u201ctangible physical world\u201d,\nand reuse the term in the \u201cintangible information world\u201d.\n\nIt rarely actually fits comfortably and we bring across assumptions we really\nshould not.\n\nAs I noted in earlier \u201cXZ Utils\u201d discussions,\n\n\u201cIt\u2019s not a supply chain attack\u201d\n\nBecause it\u2019s not actually a \u201csupply chain\u201d in the traditional sense and the\nattack does not happen there.\n\nIn the traditional sense \u201cfinished items in the warehouse\u201d were the start of\nthe \u201csupply chain\u201d which finished with the customers signiture for the item at\ntheir \u201cgoods inwards\u201d \u201clanding dock\u201d. Thus original NSA \u201csupply chain attacks\u201d\nreally were done in the \u201ctangible physical world\u201d \u201csupply chain\u201d by\n\u201cimplants\u201d. Boxes were grabbed at transport nodes, taken to secure / secret\npremises and unsealed, cases taken out opened, sub-assemblies inserted, cases\nclosed, put back in original boxes, artfully resealed and put back in the\nsupply chain at the same transport node...\u201d.\n\nThe nature of modern FOSS and similar is more like a manufacturing purchase\nfrom a \u201cBill of Materials\u201d to be manufactured / assembled into a \u201cfinished\nitem\u201d effectively at the \u201ccustomer premises\u201d.\n\nThe attack actually does not happen in \u201cthe supply chain\u201d but starts before it\nwith the construction of parts for the BOM and finishes inside the customer\npremises after the item is assembled / constructed from the BOM listed parts.\n\nThe BOM is not a \u201csupply chain\u201d but a \u201csupplier parts list\u201d. The reality is\nit\u2019s just a part of a \u201cmanufacturing supply tree\u201d.\n\nThat is hundreds of component parts are sourced from many places and they get\nconstructed into many sub assemblies, that are in turn sourced from many\nplaces to form larger sub-assembles, sub-systems or final systems. This mass\nof supply chains through multiple assembly points kind of looks like the roots\nof a tree.\n\nHence \u201csupply-tree\u201d. Two important things to note,\n\n1, Sub-assemblies are \u201cindependent\u201d 2, Independent sub assemblies can and do\nhave shared standard components.\n\nThis turns the \u201ctree\u201d root idea into more of a \u201cfunnel-web\u201d.\n\nThose that have seen real funnel-webs know they can be monstrous in size and\nthe \u201cpoisonous spider\u201d can be anywhere in the web just waiting.\n\ncybershow \u2022 April 19, 2024 4:21 AM\n\nI agree with you Clive; interception and tampering/meddling with goods in\ntransit is not quite the same as interference with the precursors of\nmanufacture. It seems more akin to exerting subtle influence on bill of\nmaterials, perhaps just on choices, like choosing a weaker cipher. It is\ncloser to infiltration.\n\nSo I somewhat misused the term here\n\nA comment from another forum was to the effect \u201cPlease don\u2019t call us FOSS\ndevelopers your \u2018supply chain\u2019. Nobody pays us, and we are not assets in your\ncommercial game\u201d\n\nThis rings true and further weakens \u201csupply chain\u201d as the proper description.\nI used an analogy that the companies using FOSS dependencies are foraging,\ngathering or harvesting foods from common land. Beware that someone poisons\nthe apple while still on the tree.\n\nAs Bruce\u2019s post confirms about my concern for developer vulnerability, there\u2019s\nan enormous psychological attack surface out there for all kinds of mischief.\n\nBob Paddock \u2022 April 19, 2024 8:45 AM\n\n@Andrew Duane \u201csomeone hid a \u2018uid = 0\u2019 instead of \u2018uid == 0\u2032\u201d\n\nThat is why constants belong on the left:\n\n\u20180 == uid\u2019\n\nThe error is immediately caught because something can not be assigned to a\nconstant.\n\nI\u2019ve gotten many nonsensical answers for reasons against that simple security\nprecaution in coding. Alas some languages do object to it. The most common\nones don\u2019t.\n\njoanne h \u2022 April 19, 2024 11:21 AM\n\n@Bob Paddock, I agree that the \u201cconstants on the left\u201d style is good, but\ndevelopers of software projects often object to \u201cstylistic\u201d patches\u2014which\nmakes it more of a political problem than a technical one.\n\nAlso, the trick doesn\u2019t work when comparing two variables. What if they\u2019d\nwanted to compare \u2018uid\u2019 and \u2018root_uid\u2019? (While that example may seem\ncontrived, user namespaces do complicate the idea of root always being user\n0.) Some help from our tools could be useful\u2014for example, a compiler switch\nthat makes assignment expressions return void results.\n\nSubscribe to comments on this entry\n\n## Leave a comment Cancel reply\n\n\u2190 Using AI-Generated Legislative Amendments as a Delaying Technique Friday\nSquid Blogging: Squid Trackers \u2192\n\nSidebar photo of Bruce Schneier by Joe MacInnis.\n\nPowered by WordPress Hosted by Pressable\n\n### About Bruce Schneier\n\nI am a public-interest technologist, working at the intersection of security,\ntechnology, and people. I've been writing about security issues on my blog\nsince 2004, and in my monthly newsletter since 1998. I'm a fellow and lecturer\nat Harvard's Kennedy School, a board member of EFF, and the Chief of Security\nArchitecture at Inrupt, Inc. This personal website expresses the opinions of\nnone of those organizations.\n\n### Related Entries\n\n  * Backdoor in XZ Utils That Almost Happened\n  * XZ Utils Backdoor\n  * Details of a Phone Scam\n  * European Court of Human Rights Rejects Encryption Backdoors\n  * New iPhone Exploit Uses Four Zero-Days\n\n### Featured Essays\n\n  * The Value of Encryption\n  * Data Is a Toxic Asset, So Why Not Throw It Out?\n  * How the NSA Threatens National Security\n  * Terrorists May Use Google Earth, But Fear Is No Reason to Ban It\n  * In Praise of Security Theater\n  * Refuse to be Terrorized\n  * The Eternal Value of Privacy\n  * Terrorists Don't Do Movie Plots\n\nMore Essays\n\n### Blog Archives\n\n  * Archive by Month\n  * 100 Latest Comments\n\n#### Blog Tags\n\n  * 3d printers\n  * 9/11\n  * A Hacker's Mind\n  * Aaron Swartz\n  * academic\n  * academic papers\n  * accountability\n  * ACLU\n  * activism\n  * Adobe\n  * advanced persistent threats\n  * adware\n  * AES\n  * Afghanistan\n  * air marshals\n  * air travel\n  * airgaps\n  * al Qaeda\n  * alarms\n  * algorithms\n  * alibis\n  * Amazon\n  * Android\n  * anonymity\n  * Anonymous\n  * antivirus\n  * Apache\n  * Apple\n  * Applied Cryptography\n  * artificial intelligence\n\nMore Tags\n\n### Latest Book\n\nMore Books\n\n", "frontpage": false}
